Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3049/j3049_2.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3049_2.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3 - 0.124585 seconds
Cgl0002I 5 variables fixed
Cgl0003I 94 fixed, 0 tightened bounds, 24 strengthened rows, 2 substitutions
Cgl0003I 41 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 4 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 342 rows, 818 columns (818 integer (817 of which binary)) and 9579 elements
Coin3009W Conflict graph built in 0.118 seconds, density: 1.722%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 818 objects (818 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 65 integers unsatisfied sum - 18.5557
Cbc0038I Pass   1: suminf.   13.16422 (57) obj. 3.70833 iterations 128
Cbc0038I Pass   2: suminf.   11.85784 (57) obj. 3.74074 iterations 25
Cbc0038I Pass   3: suminf.   11.63056 (62) obj. 3.91718 iterations 12
Cbc0038I Pass   4: suminf.   10.01501 (48) obj. 6 iterations 58
Cbc0038I Pass   5: suminf.    9.14311 (43) obj. 6 iterations 41
Cbc0038I Pass   6: suminf.    8.85437 (42) obj. 6 iterations 19
Cbc0038I Pass   7: suminf.    7.41157 (43) obj. 6 iterations 17
Cbc0038I Pass   8: suminf.    7.25369 (40) obj. 6 iterations 13
Cbc0038I Pass   9: suminf.    8.81129 (40) obj. 6 iterations 55
Cbc0038I Pass  10: suminf.    7.61176 (40) obj. 6 iterations 63
Cbc0038I Pass  11: suminf.   25.78027 (78) obj. 5 iterations 160
Cbc0038I Pass  12: suminf.   16.97033 (62) obj. 5 iterations 149
Cbc0038I Pass  13: suminf.   12.16391 (56) obj. 6 iterations 86
Cbc0038I Pass  14: suminf.   12.00823 (59) obj. 6 iterations 33
Cbc0038I Pass  15: suminf.   11.97143 (55) obj. 6 iterations 19
Cbc0038I Pass  16: suminf.   10.53272 (46) obj. 6 iterations 118
Cbc0038I Pass  17: suminf.    8.56752 (45) obj. 6 iterations 62
Cbc0038I Pass  18: suminf.    9.67272 (43) obj. 6 iterations 108
Cbc0038I Pass  19: suminf.    7.88854 (46) obj. 6 iterations 87
Cbc0038I Pass  20: suminf.    7.68100 (41) obj. 6 iterations 65
Cbc0038I Pass  21: suminf.    7.61395 (41) obj. 6 iterations 36
Cbc0038I Pass  22: suminf.    7.49511 (35) obj. 6 iterations 102
Cbc0038I Pass  23: suminf.    6.61032 (24) obj. 6 iterations 64
Cbc0038I Pass  24: suminf.    6.61032 (24) obj. 6 iterations 2
Cbc0038I Pass  25: suminf.    6.87169 (30) obj. 6 iterations 90
Cbc0038I Pass  26: suminf.    6.61310 (26) obj. 6 iterations 76
Cbc0038I Pass  27: suminf.    6.52976 (26) obj. 6 iterations 4
Cbc0038I Pass  28: suminf.    7.08148 (29) obj. 6 iterations 77
Cbc0038I Pass  29: suminf.    6.79472 (27) obj. 6 iterations 51
Cbc0038I Pass  30: suminf.    6.70556 (25) obj. 6 iterations 7
Cbc0038I Pass  31: suminf.    7.03472 (26) obj. 6 iterations 79
Cbc0038I Pass  32: suminf.    6.84444 (25) obj. 6 iterations 62
Cbc0038I Pass  33: suminf.    7.14815 (28) obj. 6 iterations 78
Cbc0038I Pass  34: suminf.    6.81944 (31) obj. 6 iterations 54
Cbc0038I Pass  35: suminf.    6.69630 (33) obj. 6 iterations 26
Cbc0038I Pass  36: suminf.    7.22515 (31) obj. 6 iterations 87
Cbc0038I Pass  37: suminf.    6.71825 (26) obj. 6 iterations 72
Cbc0038I Pass  38: suminf.    6.48214 (27) obj. 6 iterations 6
Cbc0038I Pass  39: suminf.    7.16212 (35) obj. 6 iterations 70
Cbc0038I Pass  40: suminf.    6.95000 (27) obj. 6 iterations 60
Cbc0038I Pass  41: suminf.    6.50952 (29) obj. 6 iterations 5
Cbc0038I Pass  42: suminf.    6.49012 (28) obj. 6 iterations 16
Cbc0038I Pass  43: suminf.    6.49012 (28) obj. 6 iterations 9
Cbc0038I Pass  44: suminf.    7.18333 (28) obj. 6 iterations 64
Cbc0038I Pass  45: suminf.    6.88333 (26) obj. 6 iterations 62
Cbc0038I Pass  46: suminf.    7.49602 (36) obj. 6 iterations 89
Cbc0038I Pass  47: suminf.    7.01689 (31) obj. 6 iterations 61
Cbc0038I Pass  48: suminf.    7.01295 (31) obj. 6 iterations 14
Cbc0038I Pass  49: suminf.    7.65408 (33) obj. 6 iterations 81
Cbc0038I Pass  50: suminf.    7.00000 (29) obj. 6 iterations 66
Cbc0038I Pass  51: suminf.    6.88889 (28) obj. 6 iterations 15
Cbc0038I Pass  52: suminf.    6.88889 (28) obj. 6 iterations 8
Cbc0038I Pass  53: suminf.   17.99861 (64) obj. 6 iterations 164
Cbc0038I Pass  54: suminf.    8.74055 (43) obj. 6 iterations 130
Cbc0038I Pass  55: suminf.    8.73475 (43) obj. 6 iterations 45
Cbc0038I Pass  56: suminf.    7.45000 (26) obj. 6 iterations 106
Cbc0038I Pass  57: suminf.    6.95000 (27) obj. 6 iterations 26
Cbc0038I Pass  58: suminf.    6.61667 (24) obj. 6 iterations 26
Cbc0038I Pass  59: suminf.    7.29676 (26) obj. 6 iterations 76
Cbc0038I Pass  60: suminf.    6.93056 (27) obj. 6 iterations 54
Cbc0038I Pass  61: suminf.    6.91270 (25) obj. 6 iterations 75
Cbc0038I Pass  62: suminf.    6.91270 (25) obj. 6 iterations 21
Cbc0038I Pass  63: suminf.    6.71944 (30) obj. 6 iterations 73
Cbc0038I Pass  64: suminf.    6.16667 (22) obj. 6 iterations 34
Cbc0038I Pass  65: suminf.    6.16667 (22) obj. 6 iterations 11
Cbc0038I Pass  66: suminf.    7.30556 (25) obj. 6 iterations 40
Cbc0038I Pass  67: suminf.    7.05556 (27) obj. 6 iterations 29
Cbc0038I Pass  68: suminf.    7.05556 (27) obj. 6 iterations 10
Cbc0038I Pass  69: suminf.    6.72222 (24) obj. 6 iterations 13
Cbc0038I Pass  70: suminf.    7.78704 (26) obj. 6 iterations 72
Cbc0038I Pass  71: suminf.    7.50000 (27) obj. 6 iterations 60
Cbc0038I Pass  72: suminf.    6.50000 (26) obj. 6 iterations 16
Cbc0038I Pass  73: suminf.    6.65624 (33) obj. 6 iterations 80
Cbc0038I Pass  74: suminf.    5.91270 (21) obj. 6 iterations 50
Cbc0038I Pass  75: suminf.    5.91270 (21) obj. 6 iterations 13
Cbc0038I Pass  76: suminf.    6.19156 (22) obj. 6 iterations 71
Cbc0038I Pass  77: suminf.    5.88655 (22) obj. 6 iterations 20
Cbc0038I Pass  78: suminf.    5.88655 (22) obj. 6 iterations 13
Cbc0038I Pass  79: suminf.    6.71825 (22) obj. 6 iterations 70
Cbc0038I Pass  80: suminf.    6.10878 (22) obj. 6 iterations 48
Cbc0038I Pass  81: suminf.    6.10878 (22) obj. 6 iterations 16
Cbc0038I Pass  82: suminf.    6.20889 (26) obj. 6 iterations 51
Cbc0038I Pass  83: suminf.    5.88655 (21) obj. 6 iterations 38
Cbc0038I Pass  84: suminf.    5.88655 (21) obj. 6 iterations 13
Cbc0038I Pass  85: suminf.    6.71825 (23) obj. 6 iterations 88
Cbc0038I Pass  86: suminf.    6.10878 (23) obj. 6 iterations 41
Cbc0038I Pass  87: suminf.    6.10878 (23) obj. 6 iterations 20
Cbc0038I Pass  88: suminf.    6.20889 (27) obj. 6 iterations 53
Cbc0038I Pass  89: suminf.    5.88655 (22) obj. 6 iterations 38
Cbc0038I Pass  90: suminf.    5.88655 (22) obj. 6 iterations 9
Cbc0038I Pass  91: suminf.    6.71825 (22) obj. 6 iterations 75
Cbc0038I Pass  92: suminf.    6.10878 (22) obj. 6 iterations 49
Cbc0038I Pass  93: suminf.    6.10878 (22) obj. 6 iterations 18
Cbc0038I Pass  94: suminf.    6.32143 (20) obj. 6 iterations 63
Cbc0038I Pass  95: suminf.    5.88655 (21) obj. 6 iterations 41
Cbc0038I Pass  96: suminf.    5.88655 (21) obj. 6 iterations 12
Cbc0038I Pass  97: suminf.    6.71825 (23) obj. 6 iterations 66
Cbc0038I Pass  98: suminf.    6.10878 (23) obj. 6 iterations 45
Cbc0038I Pass  99: suminf.    6.10878 (23) obj. 6 iterations 18
Cbc0038I Pass 100: suminf.   14.41713 (58) obj. 5 iterations 174
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 521 integers at bound fixed and 0 continuous
Cbc0038I Full problem 342 rows 818 columns, reduced to 242 rows 260 columns
Cbc0038I Mini branch and bound did not improve solution (4.14 seconds)
Cbc0038I After 4.14 seconds - Feasibility pump exiting - took 0.98 seconds
Cbc0031I 65 added rows had average density of 22.738462
Cbc0013I At root node, 65 cuts changed objective from 3 to 4 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 251 row cuts average 5.6 elements, 28 column cuts (65 active)  in 0.703 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 309.5 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 52 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 330 row cuts average 9.4 elements, 0 column cuts (0 active)  in 4.196 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 78 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 84 row cuts average 53.2 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 240 row cuts average 158.1 elements, 0 column cuts (0 active)  in 0.394 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 118 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 4 (11.24 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 4 (12.72 seconds)
Cbc0010I After 4 nodes, 1 on tree, 1e+50 best solution, best possible 5 (13.90 seconds)
Cbc0010I After 5 nodes, 2 on tree, 1e+50 best solution, best possible 5 (15.13 seconds)
Cbc0010I After 7 nodes, 2 on tree, 1e+50 best solution, best possible 5 (16.81 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 5 (17.96 seconds)
Cbc0010I After 11 nodes, 1 on tree, 1e+50 best solution, best possible 5 (19.03 seconds)
Cbc0010I After 12 nodes, 1 on tree, 1e+50 best solution, best possible 6 (20.17 seconds)
Cbc0010I After 13 nodes, 2 on tree, 1e+50 best solution, best possible 6 (21.62 seconds)
Cbc0010I After 14 nodes, 3 on tree, 1e+50 best solution, best possible 6 (22.92 seconds)
Cbc0010I After 15 nodes, 4 on tree, 1e+50 best solution, best possible 6 (24.70 seconds)
Cbc0010I After 16 nodes, 4 on tree, 1e+50 best solution, best possible 6 (25.52 seconds)
Cbc0010I After 18 nodes, 3 on tree, 1e+50 best solution, best possible 6 (26.64 seconds)
Cbc0010I After 21 nodes, 2 on tree, 1e+50 best solution, best possible 6 (28.08 seconds)
Cbc0010I After 24 nodes, 1 on tree, 1e+50 best solution, best possible 6 (30.00 seconds)
Cbc0010I After 26 nodes, 1 on tree, 1e+50 best solution, best possible 6 (31.39 seconds)
Cbc0010I After 27 nodes, 2 on tree, 1e+50 best solution, best possible 6 (32.09 seconds)
Cbc0016I Integer solution of 6 found by strong branching after 12614 iterations and 30 nodes (32.70 seconds)
Cbc0001I Search completed - best objective 6, took 12614 iterations and 30 nodes (32.70 seconds)
Cbc0032I Strong branching done 624 times (18866 iterations), fathomed 3 nodes and fixed 23 variables
Cbc0035I Maximum depth 7, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3 to 4
Probing was tried 48 times and created 1015 cuts of which 37 were active after adding rounds of cuts (1.18139 seconds)
Gomory was tried 48 times and created 74 cuts of which 0 were active after adding rounds of cuts (0.394055 seconds)
Knapsack was tried 48 times and created 133 cuts of which 0 were active after adding rounds of cuts (0.431614 seconds)
liftKnapsack was tried 48 times and created 1371 cuts of which 0 were active after adding rounds of cuts (17.74 seconds)
Clique was tried 48 times and created 334 cuts of which 0 were active after adding rounds of cuts (0.098313 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.106474 seconds)
MixedIntegerRounding2 was tried 48 times and created 299 cuts of which 0 were active after adding rounds of cuts (0.204197 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002787 seconds)
TwoMirCuts was tried 48 times and created 448 cuts of which 0 were active after adding rounds of cuts (0.538155 seconds)
ZeroHalf was tried 48 times and created 390 cuts of which 0 were active after adding rounds of cuts (0.430132 seconds)

Result - Optimal solution found
Objective value:                6
Enumerated nodes:               30
Total iterations:               12614
Time (CPU seconds):             32.753
Time (Wallclock seconds):       32.7519
Total time (CPU seconds):       32.7691   (Wallclock seconds):       32.7691
