Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3040/j3040_1.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3040_1.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 9 - 0.213197 seconds
Cgl0003I 2 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 313 rows, 1255 columns (1255 integer (1254 of which binary)) and 21045 elements
Coin3009W Conflict graph built in 0.095 seconds, density: 0.944%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1255 objects (1255 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 71 integers unsatisfied sum - 21.8756
Cbc0038I Pass   1: suminf.    8.63836 (36) obj. 11 iterations 202
Cbc0038I Pass   2: suminf.    8.39237 (35) obj. 11 iterations 41
Cbc0038I Pass   3: suminf.    8.28992 (32) obj. 11 iterations 95
Cbc0038I Pass   4: suminf.    7.32155 (30) obj. 11 iterations 44
Cbc0038I Pass   5: suminf.    7.21425 (31) obj. 11 iterations 15
Cbc0038I Pass   6: suminf.    7.21425 (31) obj. 11 iterations 10
Cbc0038I Pass   7: suminf.    7.41881 (31) obj. 11 iterations 57
Cbc0038I Pass   8: suminf.    5.91214 (27) obj. 11 iterations 41
Cbc0038I Pass   9: suminf.    5.19785 (26) obj. 11 iterations 9
Cbc0038I Pass  10: suminf.    5.19785 (26) obj. 11 iterations 2
Cbc0038I Pass  11: suminf.   10.01107 (27) obj. 11 iterations 108
Cbc0038I Pass  12: suminf.    9.13256 (26) obj. 11 iterations 45
Cbc0038I Pass  13: suminf.    9.01622 (26) obj. 11 iterations 31
Cbc0038I Pass  14: suminf.    8.81622 (25) obj. 11 iterations 13
Cbc0038I Pass  15: suminf.    8.81622 (25) obj. 11 iterations 1
Cbc0038I Pass  16: suminf.    7.60664 (26) obj. 11 iterations 57
Cbc0038I Pass  17: suminf.    7.56164 (26) obj. 11 iterations 23
Cbc0038I Pass  18: suminf.    7.75017 (25) obj. 11 iterations 36
Cbc0038I Pass  19: suminf.    7.58519 (25) obj. 11 iterations 21
Cbc0038I Pass  20: suminf.    9.74335 (25) obj. 11 iterations 77
Cbc0038I Pass  21: suminf.    9.39487 (24) obj. 11 iterations 32
Cbc0038I Pass  22: suminf.    9.39487 (24) obj. 11 iterations 1
Cbc0038I Pass  23: suminf.    8.45484 (25) obj. 11 iterations 51
Cbc0038I Pass  24: suminf.    8.41719 (25) obj. 11 iterations 9
Cbc0038I Pass  25: suminf.    8.17363 (25) obj. 11 iterations 4
Cbc0038I Pass  26: suminf.    8.17363 (25) obj. 11 iterations 1
Cbc0038I Pass  27: suminf.    9.50817 (26) obj. 11 iterations 62
Cbc0038I Pass  28: suminf.    9.25204 (25) obj. 11 iterations 55
Cbc0038I Pass  29: suminf.    8.64736 (25) obj. 11 iterations 69
Cbc0038I Pass  30: suminf.    8.43524 (27) obj. 11 iterations 31
Cbc0038I Pass  31: suminf.    8.41719 (25) obj. 11 iterations 51
Cbc0038I Pass  32: suminf.    8.25052 (24) obj. 11 iterations 25
Cbc0038I Pass  33: suminf.    8.25052 (24) obj. 11 iterations 1
Cbc0038I Pass  34: suminf.    9.45430 (26) obj. 11 iterations 69
Cbc0038I Pass  35: suminf.    9.25204 (25) obj. 11 iterations 56
Cbc0038I Pass  36: suminf.    8.10081 (25) obj. 11 iterations 33
Cbc0038I Pass  37: suminf.    8.09371 (25) obj. 11 iterations 19
Cbc0038I Pass  38: suminf.    8.09371 (25) obj. 11 iterations 5
Cbc0038I Pass  39: suminf.    8.35017 (26) obj. 11 iterations 49
Cbc0038I Pass  40: suminf.    7.91968 (26) obj. 11 iterations 34
Cbc0038I Pass  41: suminf.    7.91968 (26) obj. 11 iterations 1
Cbc0038I Pass  42: suminf.    8.12465 (26) obj. 11 iterations 34
Cbc0038I Pass  43: suminf.    8.03631 (26) obj. 11 iterations 17
Cbc0038I Pass  44: suminf.    7.82506 (26) obj. 11 iterations 8
Cbc0038I Pass  45: suminf.    7.82506 (26) obj. 11 iterations 1
Cbc0038I Pass  46: suminf.    9.73265 (27) obj. 11 iterations 79
Cbc0038I Pass  47: suminf.    9.67748 (25) obj. 11 iterations 17
Cbc0038I Pass  48: suminf.    9.51081 (24) obj. 11 iterations 16
Cbc0038I Pass  49: suminf.    9.26081 (24) obj. 11 iterations 9
Cbc0038I Pass  50: suminf.    9.18022 (25) obj. 11 iterations 15
Cbc0038I Pass  51: suminf.    8.27672 (26) obj. 11 iterations 42
Cbc0038I Pass  52: suminf.    7.39577 (24) obj. 11 iterations 30
Cbc0038I Pass  53: suminf.    7.39577 (24) obj. 11 iterations 9
Cbc0038I Pass  54: suminf.    7.57703 (25) obj. 11 iterations 55
Cbc0038I Pass  55: suminf.    7.47185 (25) obj. 11 iterations 14
Cbc0038I Pass  56: suminf.    7.26431 (25) obj. 11 iterations 8
Cbc0038I Pass  57: suminf.    7.26431 (25) obj. 11 iterations 1
Cbc0038I Pass  58: suminf.    8.63310 (23) obj. 11 iterations 53
Cbc0038I Pass  59: suminf.    8.56646 (23) obj. 11 iterations 20
Cbc0038I Pass  60: suminf.    8.33837 (23) obj. 11 iterations 4
Cbc0038I Pass  61: suminf.    8.33837 (23) obj. 11 iterations 1
Cbc0038I Pass  62: suminf.    8.03313 (24) obj. 11 iterations 28
Cbc0038I Pass  63: suminf.    7.86646 (23) obj. 11 iterations 24
Cbc0038I Pass  64: suminf.    7.86646 (23) obj. 11 iterations 1
Cbc0038I Pass  65: suminf.    9.37649 (23) obj. 11 iterations 51
Cbc0038I Pass  66: suminf.    8.49226 (24) obj. 11 iterations 46
Cbc0038I Pass  67: suminf.    8.43848 (23) obj. 11 iterations 24
Cbc0038I Pass  68: suminf.    7.90919 (23) obj. 11 iterations 35
Cbc0038I Pass  69: suminf.    7.81348 (23) obj. 11 iterations 39
Cbc0038I Pass  70: suminf.    8.10787 (23) obj. 11 iterations 48
Cbc0038I Pass  71: suminf.    7.75938 (22) obj. 11 iterations 32
Cbc0038I Pass  72: suminf.    7.75938 (22) obj. 11 iterations 1
Cbc0038I Pass  73: suminf.    8.76781 (24) obj. 11 iterations 59
Cbc0038I Pass  74: suminf.    8.18501 (23) obj. 11 iterations 26
Cbc0038I Pass  75: suminf.    7.85922 (24) obj. 11 iterations 23
Cbc0038I Pass  76: suminf.    7.69255 (23) obj. 11 iterations 24
Cbc0038I Pass  77: suminf.    7.69255 (23) obj. 11 iterations 1
Cbc0038I Pass  78: suminf.    8.38658 (24) obj. 11 iterations 46
Cbc0038I Pass  79: suminf.    7.34109 (23) obj. 11 iterations 48
Cbc0038I Pass  80: suminf.    7.28514 (23) obj. 11 iterations 2
Cbc0038I Pass  81: suminf.    6.81345 (23) obj. 11 iterations 52
Cbc0038I Pass  82: suminf.    6.32366 (22) obj. 11 iterations 30
Cbc0038I Pass  83: suminf.    6.32366 (22) obj. 11 iterations 1
Cbc0038I Pass  84: suminf.    9.24663 (25) obj. 11 iterations 65
Cbc0038I Pass  85: suminf.    9.19146 (23) obj. 11 iterations 15
Cbc0038I Pass  86: suminf.    9.02480 (22) obj. 11 iterations 14
Cbc0038I Pass  87: suminf.    9.02480 (22) obj. 11 iterations 1
Cbc0038I Pass  88: suminf.    8.05449 (23) obj. 11 iterations 55
Cbc0038I Pass  89: suminf.    7.39069 (22) obj. 11 iterations 27
Cbc0038I Pass  90: suminf.    6.50973 (20) obj. 11 iterations 24
Cbc0038I Pass  91: suminf.    6.50973 (20) obj. 11 iterations 13
Cbc0038I Pass  92: suminf.    7.48174 (22) obj. 11 iterations 48
Cbc0038I Pass  93: suminf.    7.46398 (22) obj. 11 iterations 14
Cbc0038I Pass  94: suminf.    6.74969 (21) obj. 11 iterations 11
Cbc0038I Pass  95: suminf.    6.74969 (21) obj. 11 iterations 10
Cbc0038I Pass  96: suminf.    8.83808 (21) obj. 11 iterations 50
Cbc0038I Pass  97: suminf.    7.94198 (20) obj. 11 iterations 30
Cbc0038I Pass  98: suminf.    7.94198 (20) obj. 11 iterations 6
Cbc0038I Pass  99: suminf.    7.90803 (21) obj. 11 iterations 15
Cbc0038I Pass 100: suminf.   11.91170 (42) obj. 10 iterations 135
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1094 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.77 seconds)
Cbc0038I After 2.77 seconds - Feasibility pump exiting - took 0.86 seconds
Cbc0031I 48 added rows had average density of 69.625
Cbc0013I At root node, 48 cuts changed objective from 9 to 10 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 255 row cuts average 15.6 elements, 70 column cuts (70 active)  in 1.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 45 row cuts average 621.3 elements, 0 column cuts (0 active)  in 0.475 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 29.9 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 171 row cuts average 34.9 elements, 0 column cuts (0 active)  in 17.872 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 201 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 187 row cuts average 129.3 elements, 0 column cuts (0 active)  in 0.265 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 119 row cuts average 106.6 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 10 (24.77 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 10 (29.21 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 10 (31.68 seconds)
Cbc0010I After 3 nodes, 3 on tree, 1e+50 best solution, best possible 10 (32.97 seconds)
Cbc0010I After 6 nodes, 1 on tree, 1e+50 best solution, best possible 11 (37.72 seconds)
Cbc0010I After 7 nodes, 2 on tree, 1e+50 best solution, best possible 11 (47.29 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 11 (54.76 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 11 (62.38 seconds)
Cbc0010I After 10 nodes, 5 on tree, 1e+50 best solution, best possible 11 (69.88 seconds)
Cbc0010I After 11 nodes, 6 on tree, 1e+50 best solution, best possible 11 (72.68 seconds)
Cbc0010I After 12 nodes, 7 on tree, 1e+50 best solution, best possible 11 (74.14 seconds)
Cbc0010I After 15 nodes, 7 on tree, 1e+50 best solution, best possible 11 (75.55 seconds)
Cbc0010I After 18 nodes, 6 on tree, 1e+50 best solution, best possible 11 (76.98 seconds)
Cbc0010I After 20 nodes, 5 on tree, 1e+50 best solution, best possible 11 (81.06 seconds)
Cbc0010I After 21 nodes, 6 on tree, 1e+50 best solution, best possible 11 (84.08 seconds)
Cbc0010I After 23 nodes, 7 on tree, 1e+50 best solution, best possible 11 (85.56 seconds)
Cbc0010I After 27 nodes, 6 on tree, 1e+50 best solution, best possible 11 (88.34 seconds)
Cbc0010I After 30 nodes, 5 on tree, 1e+50 best solution, best possible 11 (91.82 seconds)
Cbc0010I After 31 nodes, 5 on tree, 1e+50 best solution, best possible 11 (93.87 seconds)
Cbc0010I After 33 nodes, 4 on tree, 1e+50 best solution, best possible 11 (100.87 seconds)
Cbc0010I After 34 nodes, 4 on tree, 1e+50 best solution, best possible 11 (102.92 seconds)
Cbc0010I After 36 nodes, 3 on tree, 1e+50 best solution, best possible 11 (106.48 seconds)
Cbc0010I After 37 nodes, 4 on tree, 1e+50 best solution, best possible 11 (108.37 seconds)
Cbc0010I After 38 nodes, 5 on tree, 1e+50 best solution, best possible 11 (109.11 seconds)
Cbc0010I After 39 nodes, 6 on tree, 1e+50 best solution, best possible 11 (112.25 seconds)
Cbc0010I After 40 nodes, 6 on tree, 1e+50 best solution, best possible 11 (112.98 seconds)
Cbc0010I After 41 nodes, 7 on tree, 1e+50 best solution, best possible 11 (115.00 seconds)
Cbc0010I After 43 nodes, 7 on tree, 1e+50 best solution, best possible 11 (116.31 seconds)
Cbc0010I After 44 nodes, 8 on tree, 1e+50 best solution, best possible 11 (117.46 seconds)
Cbc0010I After 46 nodes, 8 on tree, 1e+50 best solution, best possible 11 (118.29 seconds)
Cbc0010I After 48 nodes, 8 on tree, 1e+50 best solution, best possible 11 (119.67 seconds)
Cbc0010I After 50 nodes, 7 on tree, 1e+50 best solution, best possible 11 (120.45 seconds)
Cbc0010I After 51 nodes, 8 on tree, 1e+50 best solution, best possible 11 (124.32 seconds)
Cbc0010I After 53 nodes, 8 on tree, 1e+50 best solution, best possible 11 (125.25 seconds)
Cbc0010I After 55 nodes, 8 on tree, 1e+50 best solution, best possible 11 (130.03 seconds)
Cbc0010I After 57 nodes, 8 on tree, 1e+50 best solution, best possible 11 (133.63 seconds)
Cbc0010I After 58 nodes, 9 on tree, 1e+50 best solution, best possible 11 (136.72 seconds)
Cbc0010I After 59 nodes, 9 on tree, 1e+50 best solution, best possible 11 (137.48 seconds)
Cbc0010I After 60 nodes, 10 on tree, 1e+50 best solution, best possible 11 (139.31 seconds)
Cbc0010I After 62 nodes, 10 on tree, 1e+50 best solution, best possible 11 (142.82 seconds)
Cbc0010I After 66 nodes, 10 on tree, 1e+50 best solution, best possible 11 (147.12 seconds)
Cbc0004I Integer solution of 11 found after 17254 iterations and 69 nodes (147.68 seconds)
Cbc0001I Search completed - best objective 11, took 17254 iterations and 69 nodes (147.68 seconds)
Cbc0032I Strong branching done 350 times (3259 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 14, 0 variables fixed on reduced cost
Cuts at root node changed objective from 9 to 10
Probing was tried 70 times and created 1003 cuts of which 0 were active after adding rounds of cuts (1.43668 seconds)
Gomory was tried 10 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.474975 seconds)
Knapsack was tried 69 times and created 49 cuts of which 0 were active after adding rounds of cuts (0.592552 seconds)
liftKnapsack was tried 69 times and created 1006 cuts of which 0 were active after adding rounds of cuts (133.268 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010828 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.056951 seconds)
MixedIntegerRounding2 was tried 69 times and created 749 cuts of which 0 were active after adding rounds of cuts (0.583281 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005978 seconds)
TwoMirCuts was tried 69 times and created 347 cuts of which 0 were active after adding rounds of cuts (0.497082 seconds)
ZeroHalf was tried 69 times and created 447 cuts of which 0 were active after adding rounds of cuts (0.560739 seconds)

Result - Optimal solution found
Objective value:                11
Enumerated nodes:               69
Total iterations:               17254
Time (CPU seconds):             147.655
Time (Wallclock seconds):       147.75
Total time (CPU seconds):       147.696   (Wallclock seconds):       147.793
