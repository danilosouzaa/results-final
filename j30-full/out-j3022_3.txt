Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3022/j3022_3.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3022_3.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.55271e-15 - 0.056739 seconds
Cgl0002I 24 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 203 rows, 398 columns (398 integer (395 of which binary)) and 6401 elements
Coin3009W Conflict graph built in 0.012 seconds, density: 1.700%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 398 objects (398 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.29188
Cbc0038I Pass   1: suminf.    4.80213 (23) obj. 0 iterations 109
Cbc0038I Pass   2: suminf.    4.44907 (25) obj. 0 iterations 44
Cbc0038I Pass   3: suminf.    6.44265 (21) obj. 0 iterations 44
Cbc0038I Pass   4: suminf.    3.45000 (17) obj. 0 iterations 48
Cbc0038I Pass   5: suminf.    2.84508 (25) obj. 0 iterations 42
Cbc0038I Pass   6: suminf.    5.60411 (22) obj. 0 iterations 94
Cbc0038I Pass   7: suminf.    3.60098 (18) obj. 0 iterations 63
Cbc0038I Pass   8: suminf.    3.58333 (12) obj. 0 iterations 55
Cbc0038I Pass   9: suminf.    3.52083 (12) obj. 0 iterations 20
Cbc0038I Pass  10: suminf.    4.31667 (14) obj. 0 iterations 51
Cbc0038I Pass  11: suminf.    3.72000 (12) obj. 0 iterations 36
Cbc0038I Pass  12: suminf.    3.72000 (12) obj. 0 iterations 14
Cbc0038I Pass  13: suminf.    4.80000 (12) obj. 0 iterations 52
Cbc0038I Pass  14: suminf.    3.53333 (15) obj. 0 iterations 28
Cbc0038I Pass  15: suminf.    3.27333 (14) obj. 0 iterations 12
Cbc0038I Pass  16: suminf.    4.40000 (13) obj. 0 iterations 82
Cbc0038I Pass  17: suminf.    3.72000 (12) obj. 0 iterations 32
Cbc0038I Pass  18: suminf.    3.72000 (12) obj. 0 iterations 15
Cbc0038I Pass  19: suminf.    3.72000 (12) obj. 0 iterations 14
Cbc0038I Pass  20: suminf.    7.54856 (29) obj. 0 iterations 88
Cbc0038I Pass  21: suminf.    3.34894 (18) obj. 0 iterations 109
Cbc0038I Pass  22: suminf.    3.26964 (16) obj. 0 iterations 19
Cbc0038I Pass  23: suminf.    4.51177 (19) obj. 0 iterations 61
Cbc0038I Pass  24: suminf.    3.70025 (17) obj. 0 iterations 39
Cbc0038I Pass  25: suminf.    2.42472 (16) obj. 0 iterations 22
Cbc0038I Pass  26: suminf.    5.33597 (23) obj. 0 iterations 90
Cbc0038I Pass  27: suminf.    3.50740 (24) obj. 0 iterations 52
Cbc0038I Pass  28: suminf.    2.71182 (22) obj. 0 iterations 35
Cbc0038I Pass  29: suminf.    5.52913 (21) obj. 0 iterations 67
Cbc0038I Pass  30: suminf.    3.70274 (20) obj. 0 iterations 42
Cbc0038I Pass  31: suminf.    3.22983 (18) obj. 0 iterations 22
Cbc0038I Pass  32: suminf.    4.35417 (19) obj. 0 iterations 73
Cbc0038I Pass  33: suminf.    3.23796 (15) obj. 0 iterations 38
Cbc0038I Pass  34: suminf.    6.30278 (23) obj. 0 iterations 54
Cbc0038I Pass  35: suminf.    3.81036 (23) obj. 0 iterations 62
Cbc0038I Pass  36: suminf.    8.84981 (31) obj. 0.205154 iterations 69
Cbc0038I Pass  37: suminf.    5.67558 (26) obj. 0 iterations 33
Cbc0038I Pass  38: suminf.    4.24712 (23) obj. 0 iterations 13
Cbc0038I Pass  39: suminf.    4.20020 (23) obj. 0 iterations 22
Cbc0038I Pass  40: suminf.    6.69420 (26) obj. 0.363636 iterations 87
Cbc0038I Pass  41: suminf.    4.88143 (19) obj. 0.16 iterations 47
Cbc0038I Pass  42: suminf.    5.31576 (18) obj. 1 iterations 53
Cbc0038I Pass  43: suminf.    3.31425 (19) obj. 1 iterations 31
Cbc0038I Pass  44: suminf.    3.13686 (16) obj. 1 iterations 15
Cbc0038I Pass  45: suminf.    6.01397 (23) obj. 1 iterations 68
Cbc0038I Pass  46: suminf.    3.98990 (18) obj. 1 iterations 42
Cbc0038I Pass  47: suminf.    3.85952 (17) obj. 1 iterations 16
Cbc0038I Pass  48: suminf.    3.98714 (14) obj. 1 iterations 77
Cbc0038I Pass  49: suminf.    2.41882 (13) obj. 1 iterations 51
Cbc0038I Pass  50: suminf.    2.16882 (13) obj. 1 iterations 15
Cbc0038I Pass  51: suminf.    3.41453 (12) obj. 1 iterations 90
Cbc0038I Pass  52: suminf.    2.31687 (14) obj. 1 iterations 34
Cbc0038I Pass  53: suminf.    1.25000 (7) obj. 1 iterations 39
Cbc0038I Pass  54: suminf.    2.93304 (11) obj. 1 iterations 49
Cbc0038I Pass  55: suminf.    2.50000 (9) obj. 1 iterations 31
Cbc0038I Pass  56: suminf.    1.82143 (8) obj. 1 iterations 26
Cbc0038I Pass  57: suminf.    5.00000 (13) obj. 1 iterations 45
Cbc0038I Pass  58: suminf.    4.25000 (13) obj. 1 iterations 13
Cbc0038I Pass  59: suminf.    3.82143 (13) obj. 1 iterations 9
Cbc0038I Pass  60: suminf.    3.67857 (14) obj. 1 iterations 9
Cbc0038I Pass  61: suminf.    2.93878 (12) obj. 1 iterations 58
Cbc0038I Pass  62: suminf.    2.93878 (11) obj. 1 iterations 1
Cbc0038I Pass  63: suminf.    3.25000 (10) obj. 1 iterations 69
Cbc0038I Pass  64: suminf.    2.40000 (9) obj. 1 iterations 24
Cbc0038I Pass  65: suminf.    2.04000 (10) obj. 1 iterations 13
Cbc0038I Pass  66: suminf.    1.65000 (9) obj. 1 iterations 15
Cbc0038I Pass  67: suminf.    2.25000 (8) obj. 1 iterations 48
Cbc0038I Pass  68: suminf.    2.25000 (7) obj. 1 iterations 15
Cbc0038I Pass  69: suminf.    1.00000 (4) obj. 1 iterations 47
Cbc0038I Pass  70: suminf.    1.00000 (5) obj. 1 iterations 21
Cbc0038I Pass  71: suminf.    2.50000 (7) obj. 1 iterations 40
Cbc0038I Pass  72: suminf.    2.50000 (8) obj. 1 iterations 23
Cbc0038I Pass  73: suminf.    1.59286 (10) obj. 1 iterations 26
Cbc0038I Pass  74: suminf.    1.25000 (7) obj. 1 iterations 15
Cbc0038I Pass  75: suminf.    2.25000 (8) obj. 1 iterations 51
Cbc0038I Pass  76: suminf.    1.75000 (6) obj. 1 iterations 34
Cbc0038I Pass  77: suminf.    9.03201 (31) obj. 1 iterations 87
Cbc0038I Pass  78: suminf.    3.35957 (15) obj. 1 iterations 75
Cbc0038I Pass  79: suminf.    2.28167 (20) obj. 1 iterations 33
Cbc0038I Pass  80: suminf.    8.21717 (29) obj. 1 iterations 73
Cbc0038I Pass  81: suminf.    5.39258 (23) obj. 1 iterations 63
Cbc0038I Pass  82: suminf.    5.03185 (24) obj. 1 iterations 19
Cbc0038I Pass  83: suminf.    3.97427 (18) obj. 1 iterations 29
Cbc0038I Pass  84: suminf.    2.66045 (14) obj. 1 iterations 26
Cbc0038I Pass  85: suminf.    5.24420 (21) obj. 1 iterations 60
Cbc0038I Pass  86: suminf.    3.90246 (21) obj. 1 iterations 33
Cbc0038I Pass  87: suminf.    3.83140 (20) obj. 1 iterations 10
Cbc0038I Pass  88: suminf.    4.57857 (14) obj. 1 iterations 67
Cbc0038I Pass  89: suminf.    3.63822 (14) obj. 1 iterations 34
Cbc0038I Pass  90: suminf.    3.58307 (13) obj. 1 iterations 42
Cbc0038I Pass  91: suminf.    2.89898 (12) obj. 1 iterations 32
Cbc0038I Pass  92: suminf.    2.41045 (11) obj. 1 iterations 19
Cbc0038I Pass  93: suminf.    5.48125 (17) obj. 1 iterations 51
Cbc0038I Pass  94: suminf.    3.25898 (19) obj. 1 iterations 50
Cbc0038I Pass  95: suminf.    4.53077 (15) obj. 1 iterations 63
Cbc0038I Pass  96: suminf.    2.89898 (12) obj. 1 iterations 59
Cbc0038I Pass  97: suminf.    2.41045 (11) obj. 1 iterations 13
Cbc0038I Pass  98: suminf.    3.74063 (15) obj. 1 iterations 44
Cbc0038I Pass  99: suminf.    3.04167 (17) obj. 1 iterations 18
Cbc0038I Pass 100: suminf.    7.58459 (28) obj. 0 iterations 78
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 203 rows 398 columns, reduced to 124 rows 140 columns
Cbc0038I Mini branch and bound did not improve solution (1.89 seconds)
Cbc0038I Full problem 204 rows 398 columns, reduced to 203 rows 398 columns - too large
Cbc0038I After 1.96 seconds - Feasibility pump exiting - took 1.28 seconds
Cbc0031I 44 added rows had average density of 95.886364
Cbc0013I At root node, 44 cuts changed objective from 0 to 1 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 647 row cuts average 10.6 elements, 0 column cuts (0 active)  in 2.998 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1665 row cuts average 390.3 elements, 0 column cuts (0 active)  in 4.155 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.446 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 538 row cuts average 11.6 elements, 0 column cuts (0 active)  in 214.370 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 263 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.384 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.203 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 348 row cuts average 187.3 elements, 0 column cuts (0 active)  in 0.553 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 282 row cuts average 90.9 elements, 0 column cuts (0 active)  in 0.559 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (232.09 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (241.94 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (250.76 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (255.38 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (257.87 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (262.46 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (263.93 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1 (265.67 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 1 (266.46 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible 1 (267.21 seconds)
Cbc0010I After 19 nodes, 15 on tree, 1e+50 best solution, best possible 1 (267.91 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 8040 iterations and 21 nodes (268.09 seconds)
Cbc0001I Search completed - best objective 1, took 8040 iterations and 21 nodes (268.09 seconds)
Cbc0032I Strong branching done 532 times (16116 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 17, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 134 times and created 805 cuts of which 0 were active after adding rounds of cuts (3.10329 seconds)
Gomory was tried 134 times and created 1665 cuts of which 0 were active after adding rounds of cuts (4.21661 seconds)
Knapsack was tried 134 times and created 40 cuts of which 0 were active after adding rounds of cuts (0.582681 seconds)
liftKnapsack was tried 134 times and created 840 cuts of which 0 were active after adding rounds of cuts (247.618 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044714 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.151709 seconds)
MixedIntegerRounding2 was tried 134 times and created 339 cuts of which 0 were active after adding rounds of cuts (0.475548 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.202912 seconds)
TwoMirCuts was tried 134 times and created 403 cuts of which 0 were active after adding rounds of cuts (0.669528 seconds)
ZeroHalf was tried 134 times and created 398 cuts of which 0 were active after adding rounds of cuts (0.667201 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               21
Total iterations:               8040
Time (CPU seconds):             268.009
Time (Wallclock seconds):       268.192
Total time (CPU seconds):       268.018   (Wallclock seconds):       268.203
