Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3054/j3054_9.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3054_9.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.046718 seconds
Cgl0002I 22 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 228 rows, 392 columns (392 integer (392 of which binary)) and 5517 elements
Coin3009W Conflict graph built in 0.005 seconds, density: 1.366%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 392 objects (392 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 48 integers unsatisfied sum - 14.9743
Cbc0038I Pass   1: suminf.    7.50139 (38) obj. 0 iterations 57
Cbc0038I Pass   2: suminf.    6.93848 (35) obj. 0 iterations 15
Cbc0038I Pass   3: suminf.    8.12087 (30) obj. 0 iterations 48
Cbc0038I Pass   4: suminf.    3.32259 (16) obj. 0 iterations 33
Cbc0038I Pass   5: suminf.    2.97926 (14) obj. 0 iterations 4
Cbc0038I Pass   6: suminf.    3.69602 (17) obj. 0 iterations 50
Cbc0038I Pass   7: suminf.    3.09901 (20) obj. 0 iterations 24
Cbc0038I Pass   8: suminf.    3.05556 (12) obj. 0 iterations 39
Cbc0038I Pass   9: suminf.    2.45819 (13) obj. 0 iterations 19
Cbc0038I Pass  10: suminf.    3.61905 (13) obj. 0 iterations 50
Cbc0038I Pass  11: suminf.    3.35802 (13) obj. 0 iterations 20
Cbc0038I Pass  12: suminf.    3.41296 (14) obj. 0 iterations 51
Cbc0038I Pass  13: suminf.    2.66296 (11) obj. 0 iterations 30
Cbc0038I Pass  14: suminf.    3.22222 (11) obj. 0 iterations 30
Cbc0038I Pass  15: suminf.    2.84021 (14) obj. 0 iterations 21
Cbc0038I Pass  16: suminf.    3.30556 (12) obj. 0 iterations 50
Cbc0038I Pass  17: suminf.    2.84405 (13) obj. 0 iterations 18
Cbc0038I Pass  18: suminf.    2.44133 (13) obj. 0 iterations 8
Cbc0038I Pass  19: suminf.    2.51460 (12) obj. 0 iterations 47
Cbc0038I Pass  20: suminf.    1.82963 (11) obj. 0 iterations 20
Cbc0038I Pass  21: suminf.    1.56214 (10) obj. 0 iterations 15
Cbc0038I Pass  22: suminf.    3.25926 (12) obj. 0 iterations 48
Cbc0038I Pass  23: suminf.    3.25926 (12) obj. 0 iterations 1
Cbc0038I Pass  24: suminf.    2.73426 (15) obj. 0 iterations 49
Cbc0038I Pass  25: suminf.    2.44486 (15) obj. 0 iterations 9
Cbc0038I Pass  26: suminf.    3.31131 (11) obj. 0 iterations 58
Cbc0038I Pass  27: suminf.    2.86027 (8) obj. 0 iterations 15
Cbc0038I Pass  28: suminf.    2.06214 (12) obj. 0 iterations 15
Cbc0038I Pass  29: suminf.    3.00988 (12) obj. 0 iterations 53
Cbc0038I Pass  30: suminf.    2.84021 (14) obj. 0 iterations 15
Cbc0038I Pass  31: suminf.    3.30556 (13) obj. 0 iterations 52
Cbc0038I Pass  32: suminf.    2.84405 (13) obj. 0 iterations 18
Cbc0038I Pass  33: suminf.    2.44133 (13) obj. 0 iterations 6
Cbc0038I Pass  34: suminf.    2.23333 (10) obj. 0 iterations 31
Cbc0038I Pass  35: suminf.    2.05556 (10) obj. 0 iterations 10
Cbc0038I Pass  36: suminf.    3.07055 (12) obj. 0 iterations 41
Cbc0038I Pass  37: suminf.    2.84021 (14) obj. 0 iterations 11
Cbc0038I Pass  38: suminf.    2.06214 (10) obj. 0 iterations 37
Cbc0038I Pass  39: suminf.   12.69588 (45) obj. 0 iterations 85
Cbc0038I Pass  40: suminf.    7.22118 (32) obj. 0 iterations 56
Cbc0038I Pass  41: suminf.    4.30667 (18) obj. 0 iterations 81
Cbc0038I Pass  42: suminf.    3.34667 (16) obj. 0 iterations 55
Cbc0038I Pass  43: suminf.    3.21102 (16) obj. 0 iterations 19
Cbc0038I Pass  44: suminf.    4.08222 (12) obj. 0 iterations 48
Cbc0038I Pass  45: suminf.    3.26667 (11) obj. 0 iterations 33
Cbc0038I Pass  46: suminf.    3.17859 (12) obj. 0 iterations 45
Cbc0038I Pass  47: suminf.    3.04639 (11) obj. 0 iterations 32
Cbc0038I Pass  48: suminf.    2.56049 (10) obj. 0 iterations 15
Cbc0038I Pass  49: suminf.    2.16667 (10) obj. 0 iterations 6
Cbc0038I Pass  50: suminf.    3.18261 (11) obj. 0 iterations 53
Cbc0038I Pass  51: suminf.    3.13333 (11) obj. 0 iterations 23
Cbc0038I Pass  52: suminf.    3.06667 (12) obj. 0 iterations 45
Cbc0038I Pass  53: suminf.    1.61905 (8) obj. 0 iterations 34
Cbc0038I Pass  54: suminf.    1.61905 (8) obj. 0 iterations 1
Cbc0038I Pass  55: suminf.    1.76296 (7) obj. 0 iterations 58
Cbc0038I Pass  56: suminf.    1.76190 (7) obj. 0 iterations 16
Cbc0038I Pass  57: suminf.    2.37513 (8) obj. 0 iterations 44
Cbc0038I Pass  58: suminf.    1.88571 (8) obj. 0 iterations 27
Cbc0038I Pass  59: suminf.    1.76296 (7) obj. 0 iterations 36
Cbc0038I Pass  60: suminf.    4.12874 (26) obj. 0 iterations 66
Cbc0038I Pass  61: suminf.    2.13086 (7) obj. 0 iterations 44
Cbc0038I Pass  62: suminf.    2.13086 (7) obj. 0 iterations 11
Cbc0038I Pass  63: suminf.    1.80000 (6) obj. 0 iterations 39
Cbc0038I Pass  64: suminf.    1.60000 (5) obj. 0 iterations 21
Cbc0038I Pass  65: suminf.    1.26667 (4) obj. 0 iterations 27
Cbc0038I Pass  66: suminf.    1.42500 (4) obj. 0 iterations 24
Cbc0038I Pass  67: suminf.    5.96099 (31) obj. 0 iterations 73
Cbc0038I Pass  68: suminf.    3.71880 (16) obj. 0 iterations 53
Cbc0038I Pass  69: suminf.    5.50427 (25) obj. 0 iterations 59
Cbc0038I Pass  70: suminf.    4.68722 (24) obj. 0 iterations 17
Cbc0038I Pass  71: suminf.    4.30028 (24) obj. 0 iterations 4
Cbc0038I Pass  72: suminf.    2.23333 (9) obj. 0 iterations 41
Cbc0038I Pass  73: suminf.    1.80000 (9) obj. 0 iterations 16
Cbc0038I Pass  74: suminf.    2.83333 (10) obj. 0 iterations 40
Cbc0038I Pass  75: suminf.    2.71000 (9) obj. 0 iterations 8
Cbc0038I Pass  76: suminf.    2.71000 (9) obj. 0 iterations 2
Cbc0038I Pass  77: suminf.    2.46667 (10) obj. 0 iterations 29
Cbc0038I Pass  78: suminf.    2.34370 (10) obj. 0 iterations 19
Cbc0038I Pass  79: suminf.    3.44541 (13) obj. 0 iterations 37
Cbc0038I Pass  80: suminf.    2.45333 (10) obj. 0 iterations 29
Cbc0038I Pass  81: suminf.    5.35927 (20) obj. 0 iterations 72
Cbc0038I Pass  82: suminf.    3.91979 (19) obj. 0 iterations 48
Cbc0038I Pass  83: suminf.    3.89877 (13) obj. 0 iterations 38
Cbc0038I Pass  84: suminf.    3.60000 (13) obj. 0 iterations 28
Cbc0038I Pass  85: suminf.    3.40000 (12) obj. 0 iterations 17
Cbc0038I Pass  86: suminf.    2.55556 (9) obj. 0 iterations 55
Cbc0038I Pass  87: suminf.    2.06667 (9) obj. 0 iterations 23
Cbc0038I Pass  88: suminf.    3.44407 (14) obj. 0 iterations 50
Cbc0038I Pass  89: suminf.    3.02222 (13) obj. 0 iterations 26
Cbc0038I Pass  90: suminf.    3.26667 (12) obj. 0 iterations 34
Cbc0038I Pass  91: suminf.    2.70396 (13) obj. 0 iterations 19
Cbc0038I Pass  92: suminf.    2.66667 (11) obj. 0 iterations 8
Cbc0038I Pass  93: suminf.    3.72340 (12) obj. 0 iterations 38
Cbc0038I Pass  94: suminf.    3.22222 (13) obj. 0 iterations 31
Cbc0038I Pass  95: suminf.    3.22222 (16) obj. 0 iterations 12
Cbc0038I Pass  96: suminf.    3.57143 (13) obj. 0 iterations 20
Cbc0038I Pass  97: suminf.    2.82222 (13) obj. 0 iterations 24
Cbc0038I Pass  98: suminf.    4.24438 (15) obj. 0 iterations 24
Cbc0038I Pass  99: suminf.    2.70396 (13) obj. 0 iterations 28
Cbc0038I Pass 100: suminf.    6.04386 (33) obj. 0 iterations 85
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 229 integers at bound fixed and 0 continuous
Cbc0038I Full problem 228 rows 392 columns, reduced to 146 rows 139 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.87 seconds)
Cbc0038I Full problem 229 rows 392 columns, reduced to 229 rows 392 columns - too large
Cbc0038I After 1.92 seconds - Feasibility pump exiting - took 1.27 seconds
Cbc0031I 60 added rows had average density of 53.266667
Cbc0013I At root node, 60 cuts changed objective from 0 to 0 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 183 row cuts average 8.5 elements, 0 column cuts (0 active)  in 2.648 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2541 row cuts average 390.5 elements, 0 column cuts (0 active)  in 4.034 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.635 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 1176 row cuts average 10.9 elements, 0 column cuts (0 active)  in 151.971 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.353 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 115 row cuts average 35.6 elements, 0 column cuts (0 active)  in 0.416 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 276 row cuts average 206.1 elements, 0 column cuts (0 active)  in 0.438 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 197 row cuts average 80.3 elements, 0 column cuts (0 active)  in 0.558 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (169.23 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 0 (170.02 seconds)
Cbc0010I After 19 nodes, 11 on tree, 1e+50 best solution, best possible 0 (170.76 seconds)
Cbc0010I After 35 nodes, 11 on tree, 1e+50 best solution, best possible 0 (171.49 seconds)
Cbc0010I After 53 nodes, 13 on tree, 1e+50 best solution, best possible 0 (172.22 seconds)
Cbc0010I After 93 nodes, 16 on tree, 1e+50 best solution, best possible 0 (172.94 seconds)
Cbc0010I After 142 nodes, 19 on tree, 1e+50 best solution, best possible 0 (173.64 seconds)
Cbc0010I After 181 nodes, 21 on tree, 1e+50 best solution, best possible 0 (174.35 seconds)
Cbc0010I After 219 nodes, 21 on tree, 1e+50 best solution, best possible 0 (175.05 seconds)
Cbc0010I After 270 nodes, 22 on tree, 1e+50 best solution, best possible 0 (175.77 seconds)
Cbc0010I After 319 nodes, 22 on tree, 1e+50 best solution, best possible 0 (176.48 seconds)
Cbc0010I After 369 nodes, 24 on tree, 1e+50 best solution, best possible 0 (177.19 seconds)
Cbc0010I After 412 nodes, 24 on tree, 1e+50 best solution, best possible 0 (177.89 seconds)
Cbc0010I After 465 nodes, 18 on tree, 1e+50 best solution, best possible 0 (178.60 seconds)
Cbc0010I After 513 nodes, 13 on tree, 1e+50 best solution, best possible 0 (179.32 seconds)
Cbc0010I After 561 nodes, 12 on tree, 1e+50 best solution, best possible 0 (180.03 seconds)
Cbc0010I After 599 nodes, 6 on tree, 1e+50 best solution, best possible 0 (180.74 seconds)
Cbc0010I After 636 nodes, 12 on tree, 1e+50 best solution, best possible 0 (181.46 seconds)
Cbc0010I After 673 nodes, 6 on tree, 1e+50 best solution, best possible 0 (182.19 seconds)
Cbc0010I After 700 nodes, 5 on tree, 1e+50 best solution, best possible 0 (182.94 seconds)
Cbc0010I After 721 nodes, 4 on tree, 1e+50 best solution, best possible 0 (183.68 seconds)
Cbc0010I After 753 nodes, 17 on tree, 1e+50 best solution, best possible 0 (184.38 seconds)
Cbc0010I After 798 nodes, 22 on tree, 1e+50 best solution, best possible 0 (185.10 seconds)
Cbc0010I After 831 nodes, 25 on tree, 1e+50 best solution, best possible 0 (185.84 seconds)
Cbc0010I After 861 nodes, 30 on tree, 1e+50 best solution, best possible 0 (186.57 seconds)
Cbc0010I After 897 nodes, 34 on tree, 1e+50 best solution, best possible 0 (187.27 seconds)
Cbc0010I After 941 nodes, 36 on tree, 1e+50 best solution, best possible 0 (187.97 seconds)
Cbc0010I After 984 nodes, 35 on tree, 1e+50 best solution, best possible 0 (188.70 seconds)
Cbc0010I After 1014 nodes, 49 on tree, 1e+50 best solution, best possible 0 (189.40 seconds)
Cbc0010I After 1059 nodes, 44 on tree, 1e+50 best solution, best possible 0 (190.10 seconds)
Cbc0010I After 1095 nodes, 37 on tree, 1e+50 best solution, best possible 0 (190.81 seconds)
Cbc0010I After 1138 nodes, 49 on tree, 1e+50 best solution, best possible 0 (191.52 seconds)
Cbc0010I After 1181 nodes, 45 on tree, 1e+50 best solution, best possible 0 (192.22 seconds)
Cbc0010I After 1240 nodes, 45 on tree, 1e+50 best solution, best possible 0 (192.93 seconds)
Cbc0010I After 1310 nodes, 51 on tree, 1e+50 best solution, best possible 0 (193.64 seconds)
Cbc0010I After 1356 nodes, 41 on tree, 1e+50 best solution, best possible 0 (194.36 seconds)
Cbc0010I After 1405 nodes, 52 on tree, 1e+50 best solution, best possible 0 (195.07 seconds)
Cbc0010I After 1450 nodes, 41 on tree, 1e+50 best solution, best possible 0 (195.77 seconds)
Cbc0010I After 1500 nodes, 46 on tree, 1e+50 best solution, best possible 0 (196.47 seconds)
Cbc0010I After 1553 nodes, 36 on tree, 1e+50 best solution, best possible 0 (197.18 seconds)
Cbc0010I After 1613 nodes, 40 on tree, 1e+50 best solution, best possible 0 (197.88 seconds)
Cbc0010I After 1654 nodes, 37 on tree, 1e+50 best solution, best possible 0 (198.59 seconds)
Cbc0010I After 1709 nodes, 33 on tree, 1e+50 best solution, best possible 0 (199.29 seconds)
Cbc0010I After 1755 nodes, 39 on tree, 1e+50 best solution, best possible 0 (200.01 seconds)
Cbc0010I After 1801 nodes, 42 on tree, 1e+50 best solution, best possible 0 (200.74 seconds)
Cbc0010I After 1842 nodes, 34 on tree, 1e+50 best solution, best possible 0 (201.48 seconds)
Cbc0010I After 1873 nodes, 44 on tree, 1e+50 best solution, best possible 0 (202.18 seconds)
Cbc0010I After 1909 nodes, 35 on tree, 1e+50 best solution, best possible 0 (202.88 seconds)
Cbc0010I After 1945 nodes, 32 on tree, 1e+50 best solution, best possible 0 (203.62 seconds)
Cbc0010I After 1997 nodes, 32 on tree, 1e+50 best solution, best possible 0 (204.33 seconds)
Cbc0010I After 2040 nodes, 34 on tree, 1e+50 best solution, best possible 0 (205.04 seconds)
Cbc0010I After 2080 nodes, 24 on tree, 1e+50 best solution, best possible 0 (205.75 seconds)
Cbc0010I After 2121 nodes, 27 on tree, 1e+50 best solution, best possible 0 (206.46 seconds)
Cbc0010I After 2151 nodes, 32 on tree, 1e+50 best solution, best possible 0 (207.17 seconds)
Cbc0010I After 2184 nodes, 29 on tree, 1e+50 best solution, best possible 0 (207.89 seconds)
Cbc0010I After 2212 nodes, 28 on tree, 1e+50 best solution, best possible 0 (208.60 seconds)
Cbc0010I After 2245 nodes, 26 on tree, 1e+50 best solution, best possible 0 (209.30 seconds)
Cbc0010I After 2279 nodes, 21 on tree, 1e+50 best solution, best possible 0 (210.00 seconds)
Cbc0010I After 2323 nodes, 26 on tree, 1e+50 best solution, best possible 0 (210.71 seconds)
Cbc0010I After 2370 nodes, 23 on tree, 1e+50 best solution, best possible 0 (211.44 seconds)
Cbc0010I After 2411 nodes, 25 on tree, 1e+50 best solution, best possible 0 (212.16 seconds)
Cbc0010I After 2447 nodes, 17 on tree, 1e+50 best solution, best possible 0 (212.87 seconds)
Cbc0010I After 2487 nodes, 12 on tree, 1e+50 best solution, best possible 0 (213.57 seconds)
Cbc0010I After 2521 nodes, 11 on tree, 1e+50 best solution, best possible 0 (214.29 seconds)
Cbc0010I After 2562 nodes, 10 on tree, 1e+50 best solution, best possible 0 (215.03 seconds)
Cbc0010I After 2616 nodes, 14 on tree, 1e+50 best solution, best possible 0 (215.75 seconds)
Cbc0010I After 2651 nodes, 8 on tree, 1e+50 best solution, best possible 0 (216.45 seconds)
Cbc0010I After 2686 nodes, 5 on tree, 1e+50 best solution, best possible 0 (217.18 seconds)
Cbc0010I After 2726 nodes, 37 on tree, 1e+50 best solution, best possible 0 (217.88 seconds)
Cbc0010I After 2782 nodes, 39 on tree, 1e+50 best solution, best possible 0 (218.59 seconds)
Cbc0010I After 2834 nodes, 29 on tree, 1e+50 best solution, best possible 0 (219.30 seconds)
Cbc0010I After 2882 nodes, 35 on tree, 1e+50 best solution, best possible 0 (220.03 seconds)
Cbc0010I After 2946 nodes, 38 on tree, 1e+50 best solution, best possible 0 (220.73 seconds)
Cbc0010I After 3011 nodes, 38 on tree, 1e+50 best solution, best possible 0 (221.43 seconds)
Cbc0010I After 3047 nodes, 36 on tree, 1e+50 best solution, best possible 0 (222.14 seconds)
Cbc0010I After 3098 nodes, 42 on tree, 1e+50 best solution, best possible 0 (222.84 seconds)
Cbc0010I After 3145 nodes, 30 on tree, 1e+50 best solution, best possible 0 (223.56 seconds)
Cbc0010I After 3192 nodes, 33 on tree, 1e+50 best solution, best possible 0 (224.27 seconds)
Cbc0010I After 3242 nodes, 37 on tree, 1e+50 best solution, best possible 0 (224.98 seconds)
Cbc0010I After 3286 nodes, 36 on tree, 1e+50 best solution, best possible 0 (225.68 seconds)
Cbc0010I After 3328 nodes, 32 on tree, 1e+50 best solution, best possible 0 (226.40 seconds)
Cbc0010I After 3381 nodes, 33 on tree, 1e+50 best solution, best possible 0 (227.10 seconds)
Cbc0010I After 3441 nodes, 31 on tree, 1e+50 best solution, best possible 0 (227.81 seconds)
Cbc0004I Integer solution of 0 found after 222596 iterations and 3483 nodes (228.42 seconds)
Cbc0001I Search completed - best objective 0, took 222596 iterations and 3483 nodes (228.42 seconds)
Cbc0032I Strong branching done 8452 times (181429 iterations), fathomed 261 nodes and fixed 574 variables
Cbc0035I Maximum depth 57, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 100 times and created 183 cuts of which 0 were active after adding rounds of cuts (2.64838 seconds)
Gomory was tried 100 times and created 2541 cuts of which 0 were active after adding rounds of cuts (4.03402 seconds)
Knapsack was tried 100 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.635444 seconds)
liftKnapsack was tried 100 times and created 1176 cuts of which 0 were active after adding rounds of cuts (151.971 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.070088 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.352631 seconds)
MixedIntegerRounding2 was tried 100 times and created 115 cuts of which 0 were active after adding rounds of cuts (0.416442 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.02053 seconds)
TwoMirCuts was tried 100 times and created 276 cuts of which 0 were active after adding rounds of cuts (0.438283 seconds)
ZeroHalf was tried 100 times and created 197 cuts of which 0 were active after adding rounds of cuts (0.557913 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               3483
Total iterations:               222596
Time (CPU seconds):             228.426
Time (Wallclock seconds):       228.563
Total time (CPU seconds):       228.435   (Wallclock seconds):       228.599
