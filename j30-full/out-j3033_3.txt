Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3033/j3033_3.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3033_3.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 12.6631 - 1.0689 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 350 rows, 1771 columns (1771 integer (1770 of which binary)) and 21746 elements
Coin3009W Conflict graph built in 0.549 seconds, density: 1.180%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1771 objects (1771 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 116 integers unsatisfied sum - 24.7651
Cbc0038I Pass   1: suminf.   17.13238 (82) obj. 14 iterations 281
Cbc0038I Pass   2: suminf.   12.57960 (79) obj. 14.5875 iterations 207
Cbc0038I Pass   3: suminf.   12.36154 (75) obj. 14.6303 iterations 40
Cbc0038I Pass   4: suminf.    9.91305 (54) obj. 16 iterations 236
Cbc0038I Pass   5: suminf.    8.69066 (53) obj. 16 iterations 57
Cbc0038I Pass   6: suminf.    8.37899 (52) obj. 16 iterations 23
Cbc0038I Pass   7: suminf.    8.19198 (51) obj. 16 iterations 2
Cbc0038I Pass   8: suminf.   11.39289 (52) obj. 16 iterations 157
Cbc0038I Pass   9: suminf.    9.91380 (53) obj. 16 iterations 86
Cbc0038I Pass  10: suminf.    9.55001 (53) obj. 16 iterations 46
Cbc0038I Pass  11: suminf.    9.38077 (54) obj. 16 iterations 34
Cbc0038I Pass  12: suminf.    8.77207 (52) obj. 16 iterations 110
Cbc0038I Pass  13: suminf.    8.16145 (53) obj. 16 iterations 63
Cbc0038I Pass  14: suminf.   10.03083 (50) obj. 16 iterations 142
Cbc0038I Pass  15: suminf.    8.53697 (49) obj. 16 iterations 114
Cbc0038I Pass  16: suminf.    8.40277 (51) obj. 16 iterations 18
Cbc0038I Pass  17: suminf.   11.01267 (55) obj. 16 iterations 151
Cbc0038I Pass  18: suminf.    8.39998 (54) obj. 16 iterations 137
Cbc0038I Pass  19: suminf.    9.39429 (52) obj. 16 iterations 139
Cbc0038I Pass  20: suminf.    8.93637 (55) obj. 16 iterations 100
Cbc0038I Pass  21: suminf.    8.90295 (53) obj. 16 iterations 134
Cbc0038I Pass  22: suminf.    8.39900 (55) obj. 16 iterations 60
Cbc0038I Pass  23: suminf.    8.71470 (48) obj. 16 iterations 121
Cbc0038I Pass  24: suminf.    7.97133 (52) obj. 16 iterations 76
Cbc0038I Pass  25: suminf.   11.16197 (50) obj. 16 iterations 162
Cbc0038I Pass  26: suminf.    9.19007 (54) obj. 16 iterations 118
Cbc0038I Pass  27: suminf.    8.90077 (54) obj. 16 iterations 44
Cbc0038I Pass  28: suminf.    8.50264 (47) obj. 16 iterations 121
Cbc0038I Pass  29: suminf.    8.11366 (47) obj. 16 iterations 27
Cbc0038I Pass  30: suminf.    9.82114 (47) obj. 16 iterations 128
Cbc0038I Pass  31: suminf.    8.40901 (53) obj. 16 iterations 65
Cbc0038I Pass  32: suminf.    8.37965 (52) obj. 16 iterations 27
Cbc0038I Pass  33: suminf.   10.23049 (44) obj. 16 iterations 156
Cbc0038I Pass  34: suminf.    9.09655 (48) obj. 16 iterations 89
Cbc0038I Pass  35: suminf.    8.82278 (52) obj. 16 iterations 44
Cbc0038I Pass  36: suminf.    8.81199 (50) obj. 16 iterations 83
Cbc0038I Pass  37: suminf.    8.69016 (55) obj. 16 iterations 39
Cbc0038I Pass  38: suminf.    8.51262 (54) obj. 16 iterations 33
Cbc0038I Pass  39: suminf.    9.35332 (50) obj. 16 iterations 121
Cbc0038I Pass  40: suminf.    8.51525 (50) obj. 16 iterations 60
Cbc0038I Pass  41: suminf.    8.22740 (51) obj. 16 iterations 15
Cbc0038I Pass  42: suminf.    7.77759 (50) obj. 16 iterations 7
Cbc0038I Pass  43: suminf.    7.70107 (45) obj. 16 iterations 26
Cbc0038I Pass  44: suminf.    9.61368 (53) obj. 16 iterations 151
Cbc0038I Pass  45: suminf.    8.41125 (54) obj. 16 iterations 85
Cbc0038I Pass  46: suminf.    8.23792 (48) obj. 16 iterations 125
Cbc0038I Pass  47: suminf.    7.98718 (47) obj. 16 iterations 39
Cbc0038I Pass  48: suminf.   10.05952 (46) obj. 16 iterations 179
Cbc0038I Pass  49: suminf.    8.70112 (51) obj. 16 iterations 112
Cbc0038I Pass  50: suminf.    8.52363 (51) obj. 16 iterations 27
Cbc0038I Pass  51: suminf.    9.96884 (49) obj. 16 iterations 147
Cbc0038I Pass  52: suminf.    8.76775 (50) obj. 16 iterations 146
Cbc0038I Pass  53: suminf.    9.89801 (50) obj. 16 iterations 92
Cbc0038I Pass  54: suminf.    7.86374 (50) obj. 16 iterations 83
Cbc0038I Pass  55: suminf.    9.53308 (46) obj. 16 iterations 179
Cbc0038I Pass  56: suminf.    7.15770 (42) obj. 16 iterations 81
Cbc0038I Pass  57: suminf.    6.99105 (44) obj. 16 iterations 17
Cbc0038I Pass  58: suminf.    7.15805 (43) obj. 16 iterations 102
Cbc0038I Pass  59: suminf.    6.68267 (47) obj. 16 iterations 52
Cbc0038I Pass  60: suminf.   10.33757 (48) obj. 16 iterations 192
Cbc0038I Pass  61: suminf.    7.45145 (44) obj. 16 iterations 119
Cbc0038I Pass  62: suminf.    7.38170 (48) obj. 16 iterations 21
Cbc0038I Pass  63: suminf.    8.05170 (45) obj. 16 iterations 112
Cbc0038I Pass  64: suminf.    7.10903 (49) obj. 16 iterations 77
Cbc0038I Pass  65: suminf.    7.98729 (41) obj. 16 iterations 161
Cbc0038I Pass  66: suminf.    7.04444 (46) obj. 16 iterations 86
Cbc0038I Pass  67: suminf.   12.19516 (61) obj. 16 iterations 159
Cbc0038I Pass  68: suminf.    8.81509 (47) obj. 16 iterations 178
Cbc0038I Pass  69: suminf.    8.61413 (54) obj. 16 iterations 88
Cbc0038I Pass  70: suminf.    8.67720 (48) obj. 16 iterations 249
Cbc0038I Pass  71: suminf.    8.16673 (44) obj. 16 iterations 106
Cbc0038I Pass  72: suminf.    7.97643 (45) obj. 16 iterations 21
Cbc0038I Pass  73: suminf.   10.45061 (49) obj. 16 iterations 186
Cbc0038I Pass  74: suminf.    9.55918 (44) obj. 16 iterations 64
Cbc0038I Pass  75: suminf.    8.97081 (46) obj. 16 iterations 17
Cbc0038I Pass  76: suminf.    9.52215 (43) obj. 16 iterations 119
Cbc0038I Pass  77: suminf.    8.59504 (43) obj. 16 iterations 62
Cbc0038I Pass  78: suminf.    8.34692 (42) obj. 16 iterations 39
Cbc0038I Pass  79: suminf.    8.16303 (43) obj. 16 iterations 148
Cbc0038I Pass  80: suminf.    7.72290 (51) obj. 16 iterations 67
Cbc0038I Pass  81: suminf.    8.53747 (38) obj. 16 iterations 155
Cbc0038I Pass  82: suminf.    7.25487 (39) obj. 16 iterations 79
Cbc0038I Pass  83: suminf.    7.13012 (47) obj. 16 iterations 41
Cbc0038I Pass  84: suminf.    8.01243 (48) obj. 16 iterations 83
Cbc0038I Pass  85: suminf.    7.52194 (51) obj. 16 iterations 47
Cbc0038I Pass  86: suminf.   10.39750 (45) obj. 16 iterations 192
Cbc0038I Pass  87: suminf.    8.06862 (46) obj. 16 iterations 100
Cbc0038I Pass  88: suminf.    7.54769 (48) obj. 16 iterations 36
Cbc0038I Pass  89: suminf.    7.47077 (48) obj. 16 iterations 1
Cbc0038I Pass  90: suminf.    8.65140 (38) obj. 16 iterations 92
Cbc0038I Pass  91: suminf.    7.85837 (44) obj. 16 iterations 59
Cbc0038I Pass  92: suminf.    9.22720 (41) obj. 16 iterations 129
Cbc0038I Pass  93: suminf.    7.44588 (44) obj. 16 iterations 100
Cbc0038I Pass  94: suminf.    7.42692 (45) obj. 16 iterations 7
Cbc0038I Pass  95: suminf.    7.49961 (50) obj. 16 iterations 56
Cbc0038I Pass  96: suminf.    7.29770 (49) obj. 16 iterations 16
Cbc0038I Pass  97: suminf.   10.74510 (44) obj. 16 iterations 170
Cbc0038I Pass  98: suminf.    8.09923 (44) obj. 16 iterations 123
Cbc0038I Pass  99: suminf.    7.99592 (49) obj. 16 iterations 34
Cbc0038I Pass 100: suminf.   16.72619 (74) obj. 16 iterations 229
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1412 integers at bound fixed and 0 continuous
Cbc0038I Full problem 350 rows 1771 columns, reduced to 247 rows 338 columns
Cbc0038I Mini branch and bound did not improve solution (6.78 seconds)
Cbc0038I After 6.78 seconds - Feasibility pump exiting - took 2.27 seconds
Cbc0031I 197 added rows had average density of 76.928934
Cbc0013I At root node, 197 cuts changed objective from 12.663083 to 13.315101 in 43 passes
Cbc0014I Cut generator 0 (Probing) - 948 row cuts average 19.9 elements, 0 column cuts (16 active)  in 10.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 145.0 elements, 0 column cuts (0 active)  in 3.536 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.402 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 888 row cuts average 18.1 elements, 0 column cuts (0 active)  in 112.998 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 114 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.272 seconds - new frequency is 1
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.197 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 813 row cuts average 95.4 elements, 0 column cuts (0 active)  in 0.837 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 159 row cuts average 96.4 elements, 0 column cuts (0 active)  in 0.483 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 170 row cuts average 114.1 elements, 0 column cuts (0 active)  in 1.690 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 14 (158.43 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 14 (163.32 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 14 (168.76 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 14 (175.70 seconds)
Cbc0010I After 4 nodes, 4 on tree, 1e+50 best solution, best possible 14 (180.47 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 14 (186.20 seconds)
Cbc0010I After 7 nodes, 4 on tree, 1e+50 best solution, best possible 14 (193.64 seconds)
Cbc0010I After 8 nodes, 4 on tree, 1e+50 best solution, best possible 14 (197.13 seconds)
Cbc0010I After 11 nodes, 1 on tree, 1e+50 best solution, best possible 14 (200.31 seconds)
Cbc0010I After 12 nodes, 1 on tree, 1e+50 best solution, best possible 15 (206.08 seconds)
Cbc0010I After 13 nodes, 2 on tree, 1e+50 best solution, best possible 15 (208.72 seconds)
Cbc0010I After 14 nodes, 3 on tree, 1e+50 best solution, best possible 15 (213.15 seconds)
Cbc0010I After 15 nodes, 4 on tree, 1e+50 best solution, best possible 15 (218.01 seconds)
Cbc0010I After 16 nodes, 5 on tree, 1e+50 best solution, best possible 15 (222.32 seconds)
Cbc0010I After 17 nodes, 6 on tree, 1e+50 best solution, best possible 15 (225.42 seconds)
Cbc0010I After 21 nodes, 8 on tree, 1e+50 best solution, best possible 15 (226.15 seconds)
Cbc0010I After 25 nodes, 9 on tree, 1e+50 best solution, best possible 15 (228.59 seconds)
Cbc0010I After 30 nodes, 8 on tree, 1e+50 best solution, best possible 15 (229.45 seconds)
Cbc0010I After 32 nodes, 7 on tree, 1e+50 best solution, best possible 15 (231.59 seconds)
Cbc0010I After 38 nodes, 10 on tree, 1e+50 best solution, best possible 15 (235.49 seconds)
Cbc0010I After 39 nodes, 10 on tree, 1e+50 best solution, best possible 15 (237.56 seconds)
Cbc0010I After 45 nodes, 12 on tree, 1e+50 best solution, best possible 15 (238.28 seconds)
Cbc0010I After 48 nodes, 10 on tree, 1e+50 best solution, best possible 15 (239.85 seconds)
Cbc0010I After 50 nodes, 10 on tree, 1e+50 best solution, best possible 15 (241.59 seconds)
Cbc0010I After 53 nodes, 8 on tree, 1e+50 best solution, best possible 15 (242.63 seconds)
Cbc0010I After 58 nodes, 9 on tree, 1e+50 best solution, best possible 15 (243.34 seconds)
Cbc0010I After 60 nodes, 8 on tree, 1e+50 best solution, best possible 15 (244.76 seconds)
Cbc0010I After 65 nodes, 10 on tree, 1e+50 best solution, best possible 15 (248.12 seconds)
Cbc0010I After 70 nodes, 7 on tree, 1e+50 best solution, best possible 15 (250.91 seconds)
Cbc0010I After 77 nodes, 10 on tree, 1e+50 best solution, best possible 15 (252.64 seconds)
Cbc0010I After 80 nodes, 9 on tree, 1e+50 best solution, best possible 15 (253.41 seconds)
Cbc0010I After 89 nodes, 5 on tree, 1e+50 best solution, best possible 15 (254.29 seconds)
Cbc0010I After 90 nodes, 5 on tree, 1e+50 best solution, best possible 15 (255.94 seconds)
Cbc0010I After 94 nodes, 5 on tree, 1e+50 best solution, best possible 15 (256.71 seconds)
Cbc0010I After 97 nodes, 8 on tree, 1e+50 best solution, best possible 15 (258.96 seconds)
Cbc0010I After 104 nodes, 9 on tree, 1e+50 best solution, best possible 15 (259.72 seconds)
Cbc0010I After 106 nodes, 9 on tree, 1e+50 best solution, best possible 15 (260.92 seconds)
Cbc0010I After 114 nodes, 10 on tree, 1e+50 best solution, best possible 15 (261.78 seconds)
Cbc0010I After 118 nodes, 10 on tree, 1e+50 best solution, best possible 15 (263.12 seconds)
Cbc0010I After 124 nodes, 8 on tree, 1e+50 best solution, best possible 15 (263.88 seconds)
Cbc0010I After 126 nodes, 10 on tree, 1e+50 best solution, best possible 15 (264.78 seconds)
Cbc0010I After 135 nodes, 6 on tree, 1e+50 best solution, best possible 15 (265.53 seconds)
Cbc0010I After 139 nodes, 4 on tree, 1e+50 best solution, best possible 15 (271.19 seconds)
Cbc0010I After 141 nodes, 4 on tree, 1e+50 best solution, best possible 15 (274.96 seconds)
Cbc0010I After 146 nodes, 8 on tree, 1e+50 best solution, best possible 15 (275.79 seconds)
Cbc0010I After 147 nodes, 8 on tree, 1e+50 best solution, best possible 15 (277.87 seconds)
Cbc0010I After 153 nodes, 8 on tree, 1e+50 best solution, best possible 15 (278.64 seconds)
Cbc0010I After 156 nodes, 9 on tree, 1e+50 best solution, best possible 15 (281.19 seconds)
Cbc0010I After 163 nodes, 11 on tree, 1e+50 best solution, best possible 15 (283.11 seconds)
Cbc0010I After 169 nodes, 8 on tree, 1e+50 best solution, best possible 15 (286.14 seconds)
Cbc0010I After 171 nodes, 6 on tree, 1e+50 best solution, best possible 15 (287.14 seconds)
Cbc0010I After 174 nodes, 5 on tree, 1e+50 best solution, best possible 15 (287.92 seconds)
Cbc0010I After 179 nodes, 8 on tree, 1e+50 best solution, best possible 15 (291.43 seconds)
Cbc0010I After 184 nodes, 6 on tree, 1e+50 best solution, best possible 15 (292.22 seconds)
Cbc0010I After 187 nodes, 7 on tree, 1e+50 best solution, best possible 15 (295.55 seconds)
Cbc0010I After 195 nodes, 8 on tree, 1e+50 best solution, best possible 15 (298.12 seconds)
Cbc0010I After 196 nodes, 8 on tree, 1e+50 best solution, best possible 15 (301.76 seconds)
Cbc0010I After 202 nodes, 9 on tree, 1e+50 best solution, best possible 15 (302.57 seconds)
Cbc0010I After 205 nodes, 8 on tree, 1e+50 best solution, best possible 15 (304.95 seconds)
Cbc0010I After 208 nodes, 7 on tree, 1e+50 best solution, best possible 15 (307.75 seconds)
Cbc0010I After 213 nodes, 6 on tree, 1e+50 best solution, best possible 15 (308.51 seconds)
Cbc0010I After 218 nodes, 6 on tree, 1e+50 best solution, best possible 15 (309.61 seconds)
Cbc0010I After 219 nodes, 5 on tree, 1e+50 best solution, best possible 15 (313.35 seconds)
Cbc0010I After 224 nodes, 1 on tree, 1e+50 best solution, best possible 16 (316.50 seconds)
Cbc0010I After 225 nodes, 2 on tree, 1e+50 best solution, best possible 16 (320.09 seconds)
Cbc0010I After 226 nodes, 3 on tree, 1e+50 best solution, best possible 16 (324.51 seconds)
Cbc0010I After 227 nodes, 4 on tree, 1e+50 best solution, best possible 16 (328.51 seconds)
Cbc0010I After 229 nodes, 4 on tree, 1e+50 best solution, best possible 16 (331.31 seconds)
Cbc0010I After 235 nodes, 8 on tree, 1e+50 best solution, best possible 16 (332.99 seconds)
Cbc0010I After 238 nodes, 7 on tree, 1e+50 best solution, best possible 16 (334.06 seconds)
Cbc0010I After 244 nodes, 9 on tree, 1e+50 best solution, best possible 16 (334.82 seconds)
Cbc0010I After 250 nodes, 7 on tree, 1e+50 best solution, best possible 16 (335.66 seconds)
Cbc0010I After 252 nodes, 9 on tree, 1e+50 best solution, best possible 16 (336.96 seconds)
Cbc0010I After 261 nodes, 10 on tree, 1e+50 best solution, best possible 16 (339.05 seconds)
Cbc0010I After 262 nodes, 11 on tree, 1e+50 best solution, best possible 16 (340.46 seconds)
Cbc0010I After 271 nodes, 8 on tree, 1e+50 best solution, best possible 16 (343.08 seconds)
Cbc0010I After 278 nodes, 11 on tree, 1e+50 best solution, best possible 16 (343.83 seconds)
Cbc0010I After 279 nodes, 10 on tree, 1e+50 best solution, best possible 16 (344.82 seconds)
Cbc0010I After 281 nodes, 10 on tree, 1e+50 best solution, best possible 16 (346.06 seconds)
Cbc0010I After 286 nodes, 6 on tree, 1e+50 best solution, best possible 16 (346.91 seconds)
Cbc0010I After 291 nodes, 6 on tree, 1e+50 best solution, best possible 16 (348.46 seconds)
Cbc0010I After 292 nodes, 6 on tree, 1e+50 best solution, best possible 16 (350.73 seconds)
Cbc0010I After 294 nodes, 8 on tree, 1e+50 best solution, best possible 16 (351.61 seconds)
Cbc0010I After 303 nodes, 10 on tree, 1e+50 best solution, best possible 16 (352.81 seconds)
Cbc0010I After 309 nodes, 15 on tree, 1e+50 best solution, best possible 16 (353.94 seconds)
Cbc0010I After 318 nodes, 19 on tree, 1e+50 best solution, best possible 16 (354.94 seconds)
Cbc0010I After 322 nodes, 18 on tree, 1e+50 best solution, best possible 16 (355.68 seconds)
Cbc0010I After 328 nodes, 17 on tree, 1e+50 best solution, best possible 16 (356.71 seconds)
Cbc0010I After 341 nodes, 11 on tree, 1e+50 best solution, best possible 16 (357.47 seconds)
Cbc0010I After 345 nodes, 12 on tree, 1e+50 best solution, best possible 16 (358.20 seconds)
Cbc0010I After 356 nodes, 13 on tree, 1e+50 best solution, best possible 16 (359.19 seconds)
Cbc0010I After 364 nodes, 11 on tree, 1e+50 best solution, best possible 16 (360.70 seconds)
Cbc0010I After 365 nodes, 11 on tree, 1e+50 best solution, best possible 16 (363.34 seconds)
Cbc0010I After 376 nodes, 10 on tree, 1e+50 best solution, best possible 16 (364.08 seconds)
Cbc0010I After 382 nodes, 12 on tree, 1e+50 best solution, best possible 16 (365.31 seconds)
Cbc0010I After 385 nodes, 11 on tree, 1e+50 best solution, best possible 16 (366.97 seconds)
Cbc0010I After 393 nodes, 8 on tree, 1e+50 best solution, best possible 16 (367.68 seconds)
Cbc0010I After 402 nodes, 10 on tree, 1e+50 best solution, best possible 16 (370.31 seconds)
Cbc0010I After 407 nodes, 8 on tree, 1e+50 best solution, best possible 16 (372.48 seconds)
Cbc0010I After 414 nodes, 11 on tree, 1e+50 best solution, best possible 16 (374.06 seconds)
Cbc0010I After 424 nodes, 13 on tree, 1e+50 best solution, best possible 16 (374.77 seconds)
Cbc0010I After 429 nodes, 13 on tree, 1e+50 best solution, best possible 16 (376.55 seconds)
Cbc0010I After 438 nodes, 14 on tree, 1e+50 best solution, best possible 16 (377.26 seconds)
Cbc0010I After 447 nodes, 13 on tree, 1e+50 best solution, best possible 16 (378.01 seconds)
Cbc0010I After 451 nodes, 15 on tree, 1e+50 best solution, best possible 16 (378.95 seconds)
Cbc0010I After 459 nodes, 13 on tree, 1e+50 best solution, best possible 16 (380.11 seconds)
Cbc0010I After 469 nodes, 12 on tree, 1e+50 best solution, best possible 16 (381.44 seconds)
Cbc0010I After 472 nodes, 13 on tree, 1e+50 best solution, best possible 16 (382.46 seconds)
Cbc0010I After 478 nodes, 14 on tree, 1e+50 best solution, best possible 16 (383.33 seconds)
Cbc0004I Integer solution of 16 found after 165269 iterations and 484 nodes (383.71 seconds)
Cbc0001I Search completed - best objective 16, took 165269 iterations and 484 nodes (383.72 seconds)
Cbc0032I Strong branching done 1634 times (15392 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 28, 0 variables fixed on reduced cost
Cuts at root node changed objective from 12.6631 to 14
Probing was tried 144 times and created 1910 cuts of which 16 were active after adding rounds of cuts (11.5121 seconds)
Gomory was tried 43 times and created 3 cuts of which 0 were active after adding rounds of cuts (3.5358 seconds)
Knapsack was tried 143 times and created 65 cuts of which 0 were active after adding rounds of cuts (1.26669 seconds)
liftKnapsack was tried 143 times and created 4822 cuts of which 0 were active after adding rounds of cuts (259.178 seconds)
Clique was tried 143 times and created 469 cuts of which 0 were active after adding rounds of cuts (0.562949 seconds)
OddWheel was tried 43 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.19707 seconds)
MixedIntegerRounding2 was tried 143 times and created 2344 cuts of which 0 were active after adding rounds of cuts (2.14957 seconds)
FlowCover was tried 43 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.030522 seconds)
TwoMirCuts was tried 143 times and created 595 cuts of which 0 were active after adding rounds of cuts (1.03146 seconds)
ZeroHalf was tried 143 times and created 1254 cuts of which 0 were active after adding rounds of cuts (3.68289 seconds)

Result - Optimal solution found
Objective value:                16
Enumerated nodes:               484
Total iterations:               165269
Time (CPU seconds):             364.895
Time (Wallclock seconds):       383.809
Total time (CPU seconds):       364.946   (Wallclock seconds):       383.847
