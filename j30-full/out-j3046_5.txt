Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3046/j3046_5.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3046_5.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.112217 seconds
Cgl0002I 19 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 260 rows, 668 columns (668 integer (663 of which binary)) and 10463 elements
Coin3009W Conflict graph built in 0.036 seconds, density: 1.513%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 668 objects (668 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 42 integers unsatisfied sum - 12.0401
Cbc0038I Pass   1: suminf.    9.78760 (49) obj. 0 iterations 81
Cbc0038I Pass   2: suminf.    9.77001 (48) obj. 0 iterations 16
Cbc0038I Pass   3: suminf.    9.77001 (48) obj. 0 iterations 1
Cbc0038I Pass   4: suminf.   11.35442 (51) obj. 1 iterations 146
Cbc0038I Pass   5: suminf.    6.87669 (33) obj. 1 iterations 104
Cbc0038I Pass   6: suminf.    6.81768 (32) obj. 1 iterations 15
Cbc0038I Pass   7: suminf.    8.25413 (30) obj. 1 iterations 76
Cbc0038I Pass   8: suminf.    6.61894 (27) obj. 1 iterations 64
Cbc0038I Pass   9: suminf.    6.51338 (27) obj. 1 iterations 22
Cbc0038I Pass  10: suminf.    6.74910 (26) obj. 1 iterations 63
Cbc0038I Pass  11: suminf.    5.92269 (25) obj. 1 iterations 20
Cbc0038I Pass  12: suminf.    5.49259 (30) obj. 1 iterations 9
Cbc0038I Pass  13: suminf.   11.48030 (38) obj. 1 iterations 94
Cbc0038I Pass  14: suminf.    8.92421 (35) obj. 1 iterations 49
Cbc0038I Pass  15: suminf.    7.92884 (30) obj. 1 iterations 17
Cbc0038I Pass  16: suminf.    7.15175 (28) obj. 1 iterations 62
Cbc0038I Pass  17: suminf.    6.46521 (33) obj. 1 iterations 53
Cbc0038I Pass  18: suminf.    6.35761 (36) obj. 1 iterations 13
Cbc0038I Pass  19: suminf.    6.93393 (25) obj. 1 iterations 53
Cbc0038I Pass  20: suminf.    6.62455 (25) obj. 1 iterations 5
Cbc0038I Pass  21: suminf.    7.41800 (25) obj. 1 iterations 54
Cbc0038I Pass  22: suminf.    6.83021 (31) obj. 1 iterations 33
Cbc0038I Pass  23: suminf.    7.59433 (25) obj. 1 iterations 51
Cbc0038I Pass  24: suminf.    6.58823 (30) obj. 1 iterations 56
Cbc0038I Pass  25: suminf.    6.46315 (28) obj. 1 iterations 26
Cbc0038I Pass  26: suminf.    5.92199 (30) obj. 1 iterations 30
Cbc0038I Pass  27: suminf.    7.15794 (25) obj. 1 iterations 43
Cbc0038I Pass  28: suminf.    6.37273 (23) obj. 1 iterations 54
Cbc0038I Pass  29: suminf.    6.22074 (28) obj. 1 iterations 29
Cbc0038I Pass  30: suminf.    9.18778 (30) obj. 1 iterations 55
Cbc0038I Pass  31: suminf.    6.95821 (22) obj. 1 iterations 86
Cbc0038I Pass  32: suminf.    6.55239 (24) obj. 1 iterations 21
Cbc0038I Pass  33: suminf.    8.26450 (26) obj. 1 iterations 89
Cbc0038I Pass  34: suminf.    6.91875 (25) obj. 1 iterations 46
Cbc0038I Pass  35: suminf.    6.39470 (23) obj. 1 iterations 42
Cbc0038I Pass  36: suminf.    6.25779 (23) obj. 1 iterations 10
Cbc0038I Pass  37: suminf.    6.18968 (27) obj. 1 iterations 11
Cbc0038I Pass  38: suminf.    5.93665 (23) obj. 1 iterations 67
Cbc0038I Pass  39: suminf.    5.93665 (23) obj. 1 iterations 6
Cbc0038I Pass  40: suminf.    7.91061 (24) obj. 1 iterations 66
Cbc0038I Pass  41: suminf.    7.06136 (23) obj. 1 iterations 39
Cbc0038I Pass  42: suminf.    7.00303 (23) obj. 1 iterations 11
Cbc0038I Pass  43: suminf.    7.55618 (22) obj. 1 iterations 84
Cbc0038I Pass  44: suminf.    6.24106 (26) obj. 1 iterations 30
Cbc0038I Pass  45: suminf.    5.59861 (25) obj. 1 iterations 46
Cbc0038I Pass  46: suminf.    5.74412 (23) obj. 1 iterations 68
Cbc0038I Pass  47: suminf.    5.09274 (28) obj. 1 iterations 39
Cbc0038I Pass  48: suminf.    7.52790 (25) obj. 1 iterations 58
Cbc0038I Pass  49: suminf.    5.98582 (25) obj. 1 iterations 57
Cbc0038I Pass  50: suminf.    9.57656 (27) obj. 1 iterations 69
Cbc0038I Pass  51: suminf.    7.76818 (23) obj. 1 iterations 38
Cbc0038I Pass  52: suminf.    6.09740 (28) obj. 1 iterations 33
Cbc0038I Pass  53: suminf.   10.29047 (32) obj. 1 iterations 105
Cbc0038I Pass  54: suminf.    8.41759 (33) obj. 1 iterations 30
Cbc0038I Pass  55: suminf.    4.57304 (26) obj. 1 iterations 74
Cbc0038I Pass  56: suminf.    3.93804 (23) obj. 1 iterations 30
Cbc0038I Pass  57: suminf.    6.18095 (23) obj. 1 iterations 37
Cbc0038I Pass  58: suminf.    5.70209 (20) obj. 1 iterations 35
Cbc0038I Pass  59: suminf.    4.94319 (17) obj. 1 iterations 33
Cbc0038I Pass  60: suminf.    4.63716 (22) obj. 1 iterations 10
Cbc0038I Pass  61: suminf.    5.58540 (28) obj. 1 iterations 76
Cbc0038I Pass  62: suminf.    3.46431 (16) obj. 1 iterations 95
Cbc0038I Pass  63: suminf.    3.32151 (18) obj. 1 iterations 36
Cbc0038I Pass  64: suminf.    4.11577 (16) obj. 1 iterations 51
Cbc0038I Pass  65: suminf.    3.79038 (16) obj. 1 iterations 12
Cbc0038I Pass  66: suminf.    3.71923 (14) obj. 1 iterations 26
Cbc0038I Pass  67: suminf.    3.38326 (16) obj. 1 iterations 30
Cbc0038I Pass  68: suminf.    4.93704 (24) obj. 1 iterations 56
Cbc0038I Pass  69: suminf.    4.41574 (21) obj. 1 iterations 21
Cbc0038I Pass  70: suminf.    4.53493 (19) obj. 1 iterations 60
Cbc0038I Pass  71: suminf.    3.99048 (16) obj. 1 iterations 7
Cbc0038I Pass  72: suminf.    3.79038 (16) obj. 1 iterations 16
Cbc0038I Pass  73: suminf.    5.14506 (19) obj. 1 iterations 81
Cbc0038I Pass  74: suminf.    4.35537 (22) obj. 1 iterations 40
Cbc0038I Pass  75: suminf.    3.85591 (21) obj. 1 iterations 68
Cbc0038I Pass  76: suminf.    3.10399 (16) obj. 1 iterations 26
Cbc0038I Pass  77: suminf.    3.08744 (15) obj. 1 iterations 11
Cbc0038I Pass  78: suminf.    4.35646 (17) obj. 1 iterations 53
Cbc0038I Pass  79: suminf.    2.99363 (19) obj. 1 iterations 52
Cbc0038I Pass  80: suminf.    4.02570 (16) obj. 1 iterations 57
Cbc0038I Pass  81: suminf.    3.32151 (18) obj. 1 iterations 43
Cbc0038I Pass  82: suminf.    6.10256 (21) obj. 1 iterations 56
Cbc0038I Pass  83: suminf.    5.88271 (19) obj. 1 iterations 36
Cbc0038I Pass  84: suminf.    5.12381 (16) obj. 1 iterations 36
Cbc0038I Pass  85: suminf.    4.83397 (18) obj. 1 iterations 13
Cbc0038I Pass  86: suminf.    3.98621 (18) obj. 1 iterations 18
Cbc0038I Pass  87: suminf.    3.38326 (16) obj. 1 iterations 47
Cbc0038I Pass  88: suminf.    5.64196 (20) obj. 1 iterations 50
Cbc0038I Pass  89: suminf.    4.63716 (22) obj. 1 iterations 50
Cbc0038I Pass  90: suminf.    4.63716 (22) obj. 1 iterations 1
Cbc0038I Pass  91: suminf.    3.85591 (21) obj. 1 iterations 81
Cbc0038I Pass  92: suminf.    3.10399 (16) obj. 1 iterations 32
Cbc0038I Pass  93: suminf.    3.08744 (15) obj. 1 iterations 11
Cbc0038I Pass  94: suminf.    3.86352 (18) obj. 1 iterations 68
Cbc0038I Pass  95: suminf.    2.69545 (16) obj. 1 iterations 80
Cbc0038I Pass  96: suminf.    4.31995 (17) obj. 1 iterations 82
Cbc0038I Pass  97: suminf.    3.27770 (15) obj. 1 iterations 31
Cbc0038I Pass  98: suminf.    5.55000 (22) obj. 1 iterations 67
Cbc0038I Pass  99: suminf.    3.85504 (16) obj. 1 iterations 75
Cbc0038I Pass 100: suminf.    7.67353 (33) obj. 1 iterations 97
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 498 integers at bound fixed and 0 continuous
Cbc0038I Full problem 260 rows 668 columns, reduced to 158 rows 142 columns
Cbc0038I Mini branch and bound did not improve solution (2.15 seconds)
Cbc0038I Full problem 261 rows 668 columns, reduced to 260 rows 668 columns - too large
Cbc0038I After 2.25 seconds - Feasibility pump exiting - took 0.95 seconds
Cbc0031I 32 added rows had average density of 55.75
Cbc0013I At root node, 32 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 139 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.450 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 176 row cuts average 562.5 elements, 0 column cuts (0 active)  in 0.376 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 153 row cuts average 15.0 elements, 0 column cuts (0 active)  in 21.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 77 row cuts average 52.2 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 84 row cuts average 126.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 123 row cuts average 95.7 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (25.75 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 0 (30.42 seconds)
Cbc0010I After 3 nodes, 1 on tree, 1e+50 best solution, best possible 0 (31.67 seconds)
Cbc0010I After 4 nodes, 1 on tree, 1e+50 best solution, best possible 1 (35.83 seconds)
Cbc0010I After 5 nodes, 2 on tree, 1e+50 best solution, best possible 1 (41.52 seconds)
Cbc0010I After 6 nodes, 3 on tree, 1e+50 best solution, best possible 1 (43.91 seconds)
Cbc0010I After 7 nodes, 4 on tree, 1e+50 best solution, best possible 1 (48.54 seconds)
Cbc0010I After 8 nodes, 5 on tree, 1e+50 best solution, best possible 1 (52.45 seconds)
Cbc0010I After 9 nodes, 6 on tree, 1e+50 best solution, best possible 1 (54.56 seconds)
Cbc0010I After 14 nodes, 9 on tree, 1e+50 best solution, best possible 1 (55.35 seconds)
Cbc0010I After 21 nodes, 11 on tree, 1e+50 best solution, best possible 1 (56.75 seconds)
Cbc0010I After 24 nodes, 12 on tree, 1e+50 best solution, best possible 1 (60.30 seconds)
Cbc0010I After 25 nodes, 12 on tree, 1e+50 best solution, best possible 1 (62.34 seconds)
Cbc0010I After 38 nodes, 12 on tree, 1e+50 best solution, best possible 1 (64.94 seconds)
Cbc0010I After 51 nodes, 14 on tree, 1e+50 best solution, best possible 1 (65.67 seconds)
Cbc0010I After 67 nodes, 16 on tree, 1e+50 best solution, best possible 1 (66.73 seconds)
Cbc0010I After 81 nodes, 15 on tree, 1e+50 best solution, best possible 1 (67.67 seconds)
Cbc0010I After 97 nodes, 17 on tree, 1e+50 best solution, best possible 1 (68.39 seconds)
Cbc0010I After 115 nodes, 15 on tree, 1e+50 best solution, best possible 1 (69.68 seconds)
Cbc0010I After 119 nodes, 13 on tree, 1e+50 best solution, best possible 1 (70.84 seconds)
Cbc0010I After 131 nodes, 12 on tree, 1e+50 best solution, best possible 1 (71.82 seconds)
Cbc0010I After 141 nodes, 13 on tree, 1e+50 best solution, best possible 1 (73.26 seconds)
Cbc0010I After 143 nodes, 12 on tree, 1e+50 best solution, best possible 1 (74.58 seconds)
Cbc0010I After 160 nodes, 14 on tree, 1e+50 best solution, best possible 1 (75.52 seconds)
Cbc0010I After 192 nodes, 12 on tree, 1e+50 best solution, best possible 1 (76.24 seconds)
Cbc0010I After 194 nodes, 12 on tree, 1e+50 best solution, best possible 1 (77.32 seconds)
Cbc0010I After 209 nodes, 8 on tree, 1e+50 best solution, best possible 1 (78.26 seconds)
Cbc0010I After 215 nodes, 9 on tree, 1e+50 best solution, best possible 1 (81.24 seconds)
Cbc0010I After 216 nodes, 9 on tree, 1e+50 best solution, best possible 1 (82.06 seconds)
Cbc0010I After 232 nodes, 16 on tree, 1e+50 best solution, best possible 1 (82.77 seconds)
Cbc0010I After 245 nodes, 17 on tree, 1e+50 best solution, best possible 1 (84.72 seconds)
Cbc0010I After 253 nodes, 11 on tree, 1e+50 best solution, best possible 1 (85.43 seconds)
Cbc0010I After 258 nodes, 11 on tree, 1e+50 best solution, best possible 1 (89.76 seconds)
Cbc0010I After 270 nodes, 13 on tree, 1e+50 best solution, best possible 1 (90.60 seconds)
Cbc0010I After 275 nodes, 10 on tree, 1e+50 best solution, best possible 1 (93.94 seconds)
Cbc0010I After 293 nodes, 12 on tree, 1e+50 best solution, best possible 1 (96.76 seconds)
Cbc0010I After 294 nodes, 12 on tree, 1e+50 best solution, best possible 1 (99.38 seconds)
Cbc0010I After 304 nodes, 14 on tree, 1e+50 best solution, best possible 1 (100.88 seconds)
Cbc0010I After 306 nodes, 13 on tree, 1e+50 best solution, best possible 1 (102.35 seconds)
Cbc0010I After 324 nodes, 10 on tree, 1e+50 best solution, best possible 1 (103.88 seconds)
Cbc0010I After 325 nodes, 9 on tree, 1e+50 best solution, best possible 1 (104.74 seconds)
Cbc0010I After 330 nodes, 10 on tree, 1e+50 best solution, best possible 1 (107.72 seconds)
Cbc0010I After 331 nodes, 9 on tree, 1e+50 best solution, best possible 1 (108.95 seconds)
Cbc0010I After 339 nodes, 8 on tree, 1e+50 best solution, best possible 1 (110.70 seconds)
Cbc0010I After 340 nodes, 7 on tree, 1e+50 best solution, best possible 1 (113.29 seconds)
Cbc0010I After 345 nodes, 6 on tree, 1e+50 best solution, best possible 1 (113.99 seconds)
Cbc0010I After 351 nodes, 11 on tree, 1e+50 best solution, best possible 1 (115.37 seconds)
Cbc0010I After 355 nodes, 10 on tree, 1e+50 best solution, best possible 1 (117.11 seconds)
Cbc0010I After 366 nodes, 9 on tree, 1e+50 best solution, best possible 1 (119.73 seconds)
Cbc0010I After 372 nodes, 12 on tree, 1e+50 best solution, best possible 1 (121.94 seconds)
Cbc0010I After 373 nodes, 11 on tree, 1e+50 best solution, best possible 1 (124.33 seconds)
Cbc0010I After 375 nodes, 11 on tree, 1e+50 best solution, best possible 1 (125.45 seconds)
Cbc0010I After 381 nodes, 9 on tree, 1e+50 best solution, best possible 1 (127.50 seconds)
Cbc0010I After 382 nodes, 8 on tree, 1e+50 best solution, best possible 1 (128.27 seconds)
Cbc0010I After 384 nodes, 9 on tree, 1e+50 best solution, best possible 1 (131.28 seconds)
Cbc0010I After 391 nodes, 12 on tree, 1e+50 best solution, best possible 1 (132.31 seconds)
Cbc0010I After 399 nodes, 11 on tree, 1e+50 best solution, best possible 1 (133.09 seconds)
Cbc0010I After 417 nodes, 8 on tree, 1e+50 best solution, best possible 1 (133.87 seconds)
Cbc0010I After 418 nodes, 8 on tree, 1e+50 best solution, best possible 1 (135.62 seconds)
Cbc0010I After 422 nodes, 5 on tree, 1e+50 best solution, best possible 1 (137.90 seconds)
Cbc0010I After 427 nodes, 10 on tree, 1e+50 best solution, best possible 1 (139.73 seconds)
Cbc0010I After 432 nodes, 10 on tree, 1e+50 best solution, best possible 1 (140.66 seconds)
Cbc0010I After 439 nodes, 13 on tree, 1e+50 best solution, best possible 1 (141.53 seconds)
Cbc0010I After 449 nodes, 11 on tree, 1e+50 best solution, best possible 1 (142.99 seconds)
Cbc0010I After 459 nodes, 12 on tree, 1e+50 best solution, best possible 1 (144.14 seconds)
Cbc0010I After 469 nodes, 11 on tree, 1e+50 best solution, best possible 1 (146.64 seconds)
Cbc0010I After 474 nodes, 10 on tree, 1e+50 best solution, best possible 1 (147.95 seconds)
Cbc0010I After 483 nodes, 12 on tree, 1e+50 best solution, best possible 1 (148.65 seconds)
Cbc0010I After 496 nodes, 10 on tree, 1e+50 best solution, best possible 1 (149.63 seconds)
Cbc0010I After 510 nodes, 9 on tree, 1e+50 best solution, best possible 1 (151.28 seconds)
Cbc0010I After 518 nodes, 11 on tree, 1e+50 best solution, best possible 1 (152.01 seconds)
Cbc0010I After 535 nodes, 8 on tree, 1e+50 best solution, best possible 1 (155.23 seconds)
Cbc0010I After 543 nodes, 9 on tree, 1e+50 best solution, best possible 1 (156.15 seconds)
Cbc0010I After 548 nodes, 9 on tree, 1e+50 best solution, best possible 1 (158.44 seconds)
Cbc0010I After 562 nodes, 7 on tree, 1e+50 best solution, best possible 1 (160.89 seconds)
Cbc0010I After 564 nodes, 7 on tree, 1e+50 best solution, best possible 1 (162.47 seconds)
Cbc0010I After 577 nodes, 14 on tree, 1e+50 best solution, best possible 1 (163.26 seconds)
Cbc0010I After 607 nodes, 18 on tree, 1e+50 best solution, best possible 1 (163.97 seconds)
Cbc0010I After 644 nodes, 17 on tree, 1e+50 best solution, best possible 1 (164.67 seconds)
Cbc0010I After 660 nodes, 11 on tree, 1e+50 best solution, best possible 1 (165.50 seconds)
Cbc0010I After 699 nodes, 14 on tree, 1e+50 best solution, best possible 1 (166.34 seconds)
Cbc0010I After 715 nodes, 14 on tree, 1e+50 best solution, best possible 1 (167.13 seconds)
Cbc0010I After 729 nodes, 15 on tree, 1e+50 best solution, best possible 1 (167.91 seconds)
Cbc0010I After 761 nodes, 19 on tree, 1e+50 best solution, best possible 1 (168.66 seconds)
Cbc0004I Integer solution of 1 found after 60853 iterations and 764 nodes (168.70 seconds)
Cbc0001I Search completed - best objective 1, took 60853 iterations and 764 nodes (168.70 seconds)
Cbc0032I Strong branching done 2430 times (61046 iterations), fathomed 20 nodes and fixed 36 variables
Cbc0035I Maximum depth 30, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 136 times and created 655 cuts of which 0 were active after adding rounds of cuts (0.763072 seconds)
Gomory was tried 134 times and created 180 cuts of which 0 were active after adding rounds of cuts (0.625317 seconds)
Knapsack was tried 134 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.749196 seconds)
liftKnapsack was tried 134 times and created 2454 cuts of which 0 were active after adding rounds of cuts (139.467 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007092 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036143 seconds)
MixedIntegerRounding2 was tried 134 times and created 594 cuts of which 0 were active after adding rounds of cuts (0.468137 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.0058 seconds)
TwoMirCuts was tried 10 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.096764 seconds)
ZeroHalf was tried 10 times and created 123 cuts of which 0 were active after adding rounds of cuts (0.067007 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               764
Total iterations:               60853
Time (CPU seconds):             167.676
Time (Wallclock seconds):       168.743
Total time (CPU seconds):       167.697   (Wallclock seconds):       168.759
