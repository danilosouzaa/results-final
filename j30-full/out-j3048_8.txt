Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3048/j3048_8.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3048_8.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 4.25531 - 0.11316 seconds
Cgl0002I 3 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 300 rows, 635 columns (635 integer (634 of which binary)) and 9440 elements
Coin3009W Conflict graph built in 0.008 seconds, density: 0.857%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 635 objects (635 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 83 integers unsatisfied sum - 21.8181
Cbc0038I Pass   1: suminf.   10.37249 (40) obj. 5 iterations 92
Cbc0038I Pass   2: suminf.    8.74167 (40) obj. 5 iterations 24
Cbc0038I Pass   3: suminf.    7.61250 (40) obj. 5 iterations 5
Cbc0038I Pass   4: suminf.    7.61250 (40) obj. 5 iterations 1
Cbc0038I Pass   5: suminf.   10.00823 (41) obj. 5 iterations 41
Cbc0038I Pass   6: suminf.    8.60026 (41) obj. 5 iterations 24
Cbc0038I Pass   7: suminf.    9.77472 (42) obj. 5 iterations 41
Cbc0038I Pass   8: suminf.    9.78591 (42) obj. 5 iterations 21
Cbc0038I Pass   9: suminf.    9.29233 (40) obj. 5 iterations 47
Cbc0038I Pass  10: suminf.    8.32500 (40) obj. 5 iterations 20
Cbc0038I Pass  11: suminf.    7.61250 (40) obj. 5 iterations 4
Cbc0038I Pass  12: suminf.    7.61250 (40) obj. 5 iterations 1
Cbc0038I Pass  13: suminf.    9.14312 (41) obj. 5 iterations 34
Cbc0038I Pass  14: suminf.    9.14312 (41) obj. 5 iterations 14
Cbc0038I Pass  15: suminf.   10.74603 (41) obj. 5 iterations 51
Cbc0038I Pass  16: suminf.    8.29167 (39) obj. 5 iterations 59
Cbc0038I Pass  17: suminf.    7.88704 (40) obj. 5 iterations 12
Cbc0038I Pass  18: suminf.    9.28023 (40) obj. 5 iterations 59
Cbc0038I Pass  19: suminf.    7.88704 (40) obj. 5 iterations 28
Cbc0038I Pass  20: suminf.   17.86199 (68) obj. 5.34363 iterations 107
Cbc0038I Pass  21: suminf.   12.36658 (45) obj. 5.19006 iterations 53
Cbc0038I Pass  22: suminf.   12.25360 (45) obj. 5.19006 iterations 4
Cbc0038I Pass  23: suminf.   11.84795 (52) obj. 5.05367 iterations 50
Cbc0038I Pass  24: suminf.   10.35238 (50) obj. 5.08413 iterations 33
Cbc0038I Pass  25: suminf.    9.05373 (42) obj. 5 iterations 52
Cbc0038I Pass  26: suminf.    8.02024 (41) obj. 5 iterations 28
Cbc0038I Pass  27: suminf.   10.73429 (40) obj. 5 iterations 64
Cbc0038I Pass  28: suminf.    6.95833 (37) obj. 5 iterations 43
Cbc0038I Pass  29: suminf.    6.84583 (37) obj. 5 iterations 2
Cbc0038I Pass  30: suminf.   10.03189 (46) obj. 5.03351 iterations 64
Cbc0038I Pass  31: suminf.    8.80873 (39) obj. 5 iterations 39
Cbc0038I Pass  32: suminf.    8.17917 (37) obj. 5 iterations 19
Cbc0038I Pass  33: suminf.    8.03490 (39) obj. 5 iterations 13
Cbc0038I Pass  34: suminf.    7.30298 (37) obj. 5 iterations 10
Cbc0038I Pass  35: suminf.    8.80873 (39) obj. 5 iterations 25
Cbc0038I Pass  36: suminf.   16.35964 (70) obj. 5.01367 iterations 79
Cbc0038I Pass  37: suminf.   11.38180 (49) obj. 5.25 iterations 64
Cbc0038I Pass  38: suminf.   10.22485 (52) obj. 5.04643 iterations 22
Cbc0038I Pass  39: suminf.    3.78163 (20) obj. 6 iterations 85
Cbc0038I Pass  40: suminf.    3.78163 (20) obj. 6 iterations 4
Cbc0038I Pass  41: suminf.    5.72987 (24) obj. 6 iterations 33
Cbc0038I Pass  42: suminf.    4.28163 (20) obj. 6 iterations 32
Cbc0038I Pass  43: suminf.   12.09212 (44) obj. 6 iterations 77
Cbc0038I Pass  44: suminf.    4.88485 (30) obj. 6 iterations 63
Cbc0038I Pass  45: suminf.    4.24803 (25) obj. 6 iterations 18
Cbc0038I Pass  46: suminf.    6.21219 (26) obj. 6 iterations 55
Cbc0038I Pass  47: suminf.    5.85437 (26) obj. 6 iterations 4
Cbc0038I Pass  48: suminf.    5.85437 (26) obj. 6 iterations 4
Cbc0038I Pass  49: suminf.   12.07488 (45) obj. 6 iterations 104
Cbc0038I Pass  50: suminf.    5.06962 (34) obj. 6 iterations 60
Cbc0038I Pass  51: suminf.    3.73175 (14) obj. 6 iterations 16
Cbc0038I Pass  52: suminf.    4.81032 (17) obj. 6 iterations 59
Cbc0038I Pass  53: suminf.    3.72460 (14) obj. 6 iterations 13
Cbc0038I Pass  54: suminf.    4.37460 (15) obj. 6 iterations 14
Cbc0038I Pass  55: suminf.    3.92460 (14) obj. 6 iterations 15
Cbc0038I Pass  56: suminf.    3.92460 (16) obj. 6 iterations 10
Cbc0038I Pass  57: suminf.    5.56693 (17) obj. 6 iterations 32
Cbc0038I Pass  58: suminf.    3.72460 (14) obj. 6 iterations 26
Cbc0038I Pass  59: suminf.    5.82619 (18) obj. 6 iterations 29
Cbc0038I Pass  60: suminf.    3.92460 (14) obj. 6 iterations 24
Cbc0038I Pass  61: suminf.    3.92460 (16) obj. 6 iterations 10
Cbc0038I Pass  62: suminf.    4.58942 (18) obj. 6 iterations 15
Cbc0038I Pass  63: suminf.    8.27778 (37) obj. 6 iterations 112
Cbc0038I Pass  64: suminf.    2.65608 (19) obj. 6 iterations 86
Cbc0038I Pass  65: suminf.    6.12063 (20) obj. 6 iterations 57
Cbc0038I Pass  66: suminf.    5.14740 (25) obj. 6 iterations 39
Cbc0038I Pass  67: suminf.    4.46989 (16) obj. 6 iterations 79
Cbc0038I Pass  68: suminf.    3.31419 (18) obj. 6 iterations 58
Cbc0038I Pass  69: suminf.    3.09206 (14) obj. 6 iterations 49
Cbc0038I Pass  70: suminf.    1.75926 (7) obj. 6 iterations 52
Cbc0038I Pass  71: suminf.    1.77778 (4) obj. 6 iterations 58
Cbc0038I Pass  72: suminf.    1.77778 (4) obj. 6 iterations 2
Cbc0038I Pass  73: suminf.    1.88889 (4) obj. 6 iterations 10
Cbc0038I Pass  74: suminf.    1.88889 (6) obj. 6 iterations 14
Cbc0038I Pass  75: suminf.    1.77778 (4) obj. 6 iterations 13
Cbc0038I Pass  76: suminf.   10.14895 (42) obj. 6 iterations 88
Cbc0038I Pass  77: suminf.    4.65556 (16) obj. 6 iterations 83
Cbc0038I Pass  78: suminf.    4.94286 (17) obj. 6 iterations 84
Cbc0038I Pass  79: suminf.    4.14153 (15) obj. 6 iterations 11
Cbc0038I Pass  80: suminf.    3.93056 (11) obj. 6 iterations 60
Cbc0038I Pass  81: suminf.    3.16667 (10) obj. 6 iterations 22
Cbc0038I Pass  82: suminf.    3.86111 (10) obj. 6 iterations 21
Cbc0038I Pass  83: suminf.    3.16667 (10) obj. 6 iterations 12
Cbc0038I Pass  84: suminf.    3.86111 (10) obj. 6 iterations 26
Cbc0038I Pass  85: suminf.   14.76114 (57) obj. 6 iterations 92
Cbc0038I Pass  86: suminf.   10.07362 (42) obj. 6 iterations 72
Cbc0038I Pass  87: suminf.    7.34167 (26) obj. 6 iterations 26
Cbc0038I Pass  88: suminf.    6.09048 (20) obj. 6 iterations 50
Cbc0038I Pass  89: suminf.    5.72143 (21) obj. 6 iterations 24
Cbc0038I Pass  90: suminf.    3.63889 (13) obj. 6 iterations 27
Cbc0038I Pass  91: suminf.    2.59127 (10) obj. 6 iterations 14
Cbc0038I Pass  92: suminf.    3.54365 (10) obj. 6 iterations 21
Cbc0038I Pass  93: suminf.   21.90841 (74) obj. 5.57124 iterations 127
Cbc0038I Pass  94: suminf.   11.68228 (50) obj. 6 iterations 74
Cbc0038I Pass  95: suminf.    9.91660 (42) obj. 6 iterations 27
Cbc0038I Pass  96: suminf.    6.08871 (25) obj. 6 iterations 47
Cbc0038I Pass  97: suminf.    8.37698 (27) obj. 6 iterations 65
Cbc0038I Pass  98: suminf.    4.80556 (21) obj. 6 iterations 16
Cbc0038I Pass  99: suminf.    6.00170 (20) obj. 6 iterations 28
Cbc0038I Pass 100: suminf.   10.25370 (42) obj. 6 iterations 95
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 335 integers at bound fixed and 0 continuous
Cbc0038I Full problem 300 rows 635 columns, reduced to 240 rows 275 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.00 seconds)
Cbc0038I After 2.00 seconds - Feasibility pump exiting - took 0.99 seconds
Cbc0031I 48 added rows had average density of 41.708333
Cbc0013I At root node, 48 cuts changed objective from 4.2553053 to 6 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 229 row cuts average 7.9 elements, 7 column cuts (22 active)  in 0.389 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 92 row cuts average 415.3 elements, 0 column cuts (0 active)  in 0.325 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 126 row cuts average 18.2 elements, 0 column cuts (0 active)  in 8.985 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 149 row cuts average 39.3 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 337 row cuts average 198.9 elements, 0 column cuts (0 active)  in 0.496 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 119 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 6 (14.61 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 6 (16.76 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 6 (19.01 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 6 (20.22 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 6 (21.73 seconds)
Cbc0016I Integer solution of 6 found by strong branching after 3594 iterations and 8 nodes (22.56 seconds)
Cbc0001I Search completed - best objective 6, took 3594 iterations and 8 nodes (22.57 seconds)
Cbc0032I Strong branching done 396 times (10404 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 7, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.25531 to 6
Probing was tried 23 times and created 301 cuts of which 15 were active after adding rounds of cuts (0.449782 seconds)
Gomory was tried 23 times and created 92 cuts of which 0 were active after adding rounds of cuts (0.353299 seconds)
Knapsack was tried 23 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.224364 seconds)
liftKnapsack was tried 23 times and created 193 cuts of which 0 were active after adding rounds of cuts (15.1364 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012129 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.059092 seconds)
MixedIntegerRounding2 was tried 23 times and created 187 cuts of which 0 were active after adding rounds of cuts (0.094843 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003039 seconds)
TwoMirCuts was tried 23 times and created 356 cuts of which 0 were active after adding rounds of cuts (0.54144 seconds)
ZeroHalf was tried 23 times and created 160 cuts of which 0 were active after adding rounds of cuts (0.145107 seconds)

Result - Optimal solution found
Objective value:                6
Enumerated nodes:               8
Total iterations:               3594
Time (CPU seconds):             22.6131
Time (Wallclock seconds):       22.6115
Total time (CPU seconds):       22.6389   (Wallclock seconds):       22.638
