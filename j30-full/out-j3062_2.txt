Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3062/j3062_2.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3062_2.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is -3.55271e-15 - 0.10049 seconds
Cgl0002I 16 variables fixed
Cgl0003I 21 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 26 fixed, 0 tightened bounds, 2 strengthened rows, 5 substitutions
Cgl0003I 11 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 269 rows, 597 columns (597 integer (595 of which binary)) and 8369 elements
Coin3009W Conflict graph built in 0.028 seconds, density: 1.566%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 597 objects (597 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 58 integers unsatisfied sum - 12.9544
Cbc0038I Pass   1: suminf.    7.63159 (42) obj. 0 iterations 128
Cbc0038I Pass   2: suminf.    6.48841 (46) obj. -1.35003e-12 iterations 67
Cbc0038I Pass   3: suminf.    5.75910 (48) obj. 0.0226882 iterations 66
Cbc0038I Pass   4: suminf.    5.73144 (48) obj. 0.022893 iterations 13
Cbc0038I Pass   5: suminf.    7.71232 (53) obj. 0.000965949 iterations 78
Cbc0038I Pass   6: suminf.    6.40446 (50) obj. 0.00419703 iterations 58
Cbc0038I Pass   7: suminf.    8.70897 (41) obj. -2.88658e-15 iterations 76
Cbc0038I Pass   8: suminf.    7.38646 (46) obj. 0.00605279 iterations 58
Cbc0038I Pass   9: suminf.    6.09587 (48) obj. 0.00569914 iterations 72
Cbc0038I Pass  10: suminf.    6.25714 (32) obj. 0 iterations 120
Cbc0038I Pass  11: suminf.    6.23810 (32) obj. 0 iterations 19
Cbc0038I Pass  12: suminf.    6.21945 (36) obj. -1.11022e-15 iterations 69
Cbc0038I Pass  13: suminf.    5.42029 (40) obj. 0.0136612 iterations 70
Cbc0038I Pass  14: suminf.    4.88819 (35) obj. 0 iterations 47
Cbc0038I Pass  15: suminf.    7.50616 (40) obj. 1.22125e-15 iterations 101
Cbc0038I Pass  16: suminf.    5.07913 (34) obj. 0.0909091 iterations 98
Cbc0038I Pass  17: suminf.    4.39874 (33) obj. 0.0909091 iterations 15
Cbc0038I Pass  18: suminf.    8.44988 (41) obj. 1 iterations 101
Cbc0038I Pass  19: suminf.    7.21986 (31) obj. 1 iterations 33
Cbc0038I Pass  20: suminf.    7.20894 (29) obj. 1 iterations 24
Cbc0038I Pass  21: suminf.    6.60008 (28) obj. 1 iterations 90
Cbc0038I Pass  22: suminf.    5.16337 (23) obj. 1 iterations 19
Cbc0038I Pass  23: suminf.    4.89670 (23) obj. 1 iterations 23
Cbc0038I Pass  24: suminf.    5.38075 (37) obj. 1 iterations 124
Cbc0038I Pass  25: suminf.    4.05808 (25) obj. 1 iterations 47
Cbc0038I Pass  26: suminf.    3.94275 (25) obj. 1 iterations 30
Cbc0038I Pass  27: suminf.    6.04830 (28) obj. 1 iterations 105
Cbc0038I Pass  28: suminf.    4.05173 (22) obj. 1 iterations 95
Cbc0038I Pass  29: suminf.    3.71324 (24) obj. 1 iterations 31
Cbc0038I Pass  30: suminf.    4.82628 (26) obj. 1 iterations 93
Cbc0038I Pass  31: suminf.    4.28264 (25) obj. 1 iterations 33
Cbc0038I Pass  32: suminf.    5.69975 (31) obj. 1 iterations 51
Cbc0038I Pass  33: suminf.    4.88065 (27) obj. 1 iterations 26
Cbc0038I Pass  34: suminf.    3.83865 (30) obj. 1 iterations 39
Cbc0038I Pass  35: suminf.    6.27166 (28) obj. 1 iterations 70
Cbc0038I Pass  36: suminf.    5.33609 (26) obj. 1 iterations 31
Cbc0038I Pass  37: suminf.    4.61708 (28) obj. 1 iterations 49
Cbc0038I Pass  38: suminf.    4.58497 (27) obj. 1 iterations 78
Cbc0038I Pass  39: suminf.    3.94116 (25) obj. 1 iterations 31
Cbc0038I Pass  40: suminf.    4.72791 (27) obj. 1 iterations 30
Cbc0038I Pass  41: suminf.    3.90995 (25) obj. 1 iterations 20
Cbc0038I Pass  42: suminf.    3.87443 (26) obj. 1 iterations 17
Cbc0038I Pass  43: suminf.    5.73913 (36) obj. 1 iterations 66
Cbc0038I Pass  44: suminf.    4.14912 (29) obj. 1 iterations 46
Cbc0038I Pass  45: suminf.    4.06306 (28) obj. 1 iterations 33
Cbc0038I Pass  46: suminf.    5.49704 (30) obj. 1 iterations 73
Cbc0038I Pass  47: suminf.    4.78673 (33) obj. 1 iterations 61
Cbc0038I Pass  48: suminf.    4.67338 (29) obj. 1 iterations 15
Cbc0038I Pass  49: suminf.    4.58500 (26) obj. 1 iterations 14
Cbc0038I Pass  50: suminf.    6.01425 (28) obj. 1 iterations 81
Cbc0038I Pass  51: suminf.    5.17223 (37) obj. 1 iterations 56
Cbc0038I Pass  52: suminf.    5.53024 (26) obj. 1 iterations 73
Cbc0038I Pass  53: suminf.    4.49759 (22) obj. 1 iterations 33
Cbc0038I Pass  54: suminf.    4.49626 (23) obj. 1 iterations 18
Cbc0038I Pass  55: suminf.    4.98571 (17) obj. 1 iterations 51
Cbc0038I Pass  56: suminf.    4.33571 (21) obj. 1 iterations 39
Cbc0038I Pass  57: suminf.    4.62011 (25) obj. 1 iterations 28
Cbc0038I Pass  58: suminf.    4.11029 (19) obj. 1 iterations 20
Cbc0038I Pass  59: suminf.    4.10354 (22) obj. 1 iterations 11
Cbc0038I Pass  60: suminf.    3.82502 (23) obj. 1 iterations 6
Cbc0038I Pass  61: suminf.    5.24907 (21) obj. 1 iterations 38
Cbc0038I Pass  62: suminf.    4.84537 (21) obj. 1 iterations 19
Cbc0038I Pass  63: suminf.    4.42955 (21) obj. 1 iterations 17
Cbc0038I Pass  64: suminf.    4.85562 (24) obj. 1 iterations 64
Cbc0038I Pass  65: suminf.    3.70254 (19) obj. 1 iterations 45
Cbc0038I Pass  66: suminf.    4.73818 (20) obj. 1 iterations 91
Cbc0038I Pass  67: suminf.    4.30742 (19) obj. 1 iterations 26
Cbc0038I Pass  68: suminf.    5.48985 (23) obj. 1 iterations 85
Cbc0038I Pass  69: suminf.    5.15180 (25) obj. 1 iterations 31
Cbc0038I Pass  70: suminf.    4.65409 (18) obj. 1 iterations 78
Cbc0038I Pass  71: suminf.    4.35909 (20) obj. 1 iterations 66
Cbc0038I Pass  72: suminf.    3.71842 (17) obj. 1 iterations 76
Cbc0038I Pass  73: suminf.    3.51016 (18) obj. 1 iterations 32
Cbc0038I Pass  74: suminf.    4.58466 (19) obj. 1 iterations 61
Cbc0038I Pass  75: suminf.    2.73333 (13) obj. 1 iterations 52
Cbc0038I Pass  76: suminf.    2.66667 (12) obj. 1 iterations 26
Cbc0038I Pass  77: suminf.    2.66667 (12) obj. 1 iterations 37
Cbc0038I Pass  78: suminf.   13.18535 (64) obj. 1 iterations 146
Cbc0038I Pass  79: suminf.    7.34602 (39) obj. 1 iterations 78
Cbc0038I Pass  80: suminf.    6.34121 (40) obj. 1 iterations 34
Cbc0038I Pass  81: suminf.    5.57477 (37) obj. 1 iterations 31
Cbc0038I Pass  82: suminf.    5.41959 (36) obj. 1 iterations 19
Cbc0038I Pass  83: suminf.    5.04570 (29) obj. 1 iterations 50
Cbc0038I Pass  84: suminf.    4.26836 (26) obj. 1 iterations 35
Cbc0038I Pass  85: suminf.    6.99016 (30) obj. 1 iterations 55
Cbc0038I Pass  86: suminf.    4.56531 (23) obj. 1 iterations 68
Cbc0038I Pass  87: suminf.    4.15714 (21) obj. 1 iterations 16
Cbc0038I Pass  88: suminf.    4.58413 (23) obj. 1 iterations 43
Cbc0038I Pass  89: suminf.    9.74791 (43) obj. 1 iterations 98
Cbc0038I Pass  90: suminf.    3.98902 (23) obj. 1 iterations 100
Cbc0038I Pass  91: suminf.    3.98902 (23) obj. 1 iterations 5
Cbc0038I Pass  92: suminf.    5.54121 (22) obj. 1 iterations 52
Cbc0038I Pass  93: suminf.    4.44906 (25) obj. 1 iterations 39
Cbc0038I Pass  94: suminf.    4.23006 (25) obj. 1 iterations 28
Cbc0038I Pass  95: suminf.    2.78333 (11) obj. 1 iterations 90
Cbc0038I Pass  96: suminf.    1.85000 (8) obj. 1 iterations 39
Cbc0038I Pass  97: suminf.    2.96374 (15) obj. 1 iterations 75
Cbc0038I Pass  98: suminf.    1.72143 (11) obj. 1 iterations 32
Cbc0038I Pass  99: suminf.    3.01429 (11) obj. 1 iterations 60
Cbc0038I Pass 100: suminf.   13.46691 (54) obj. 1 iterations 103
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 349 integers at bound fixed and 0 continuous
Cbc0038I Full problem 269 rows 597 columns, reduced to 167 rows 218 columns
Cbc0038I Mini branch and bound did not improve solution (2.37 seconds)
Cbc0038I Full problem 270 rows 597 columns, reduced to 270 rows 597 columns - too large
Cbc0038I After 2.47 seconds - Feasibility pump exiting - took 1.00 seconds
Cbc0031I 72 added rows had average density of 55.527778
Cbc0013I At root node, 72 cuts changed objective from 0 to 0.99994429 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 233 row cuts average 14.0 elements, 0 column cuts (40 active)  in 0.658 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 328 row cuts average 509.4 elements, 0 column cuts (0 active)  in 0.793 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 493 row cuts average 11.5 elements, 0 column cuts (0 active)  in 31.947 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 8 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 61 row cuts average 49.1 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 175 row cuts average 157.0 elements, 0 column cuts (0 active)  in 0.270 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 136 row cuts average 83.8 elements, 0 column cuts (0 active)  in 0.206 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (39.94 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (41.26 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (43.67 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (47.44 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (50.04 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (53.14 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (55.19 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1 (57.23 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 1 (58.60 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 1 (60.43 seconds)
Cbc0010I After 10 nodes, 11 on tree, 1e+50 best solution, best possible 1 (61.87 seconds)
Cbc0010I After 11 nodes, 12 on tree, 1e+50 best solution, best possible 1 (63.02 seconds)
Cbc0010I After 15 nodes, 12 on tree, 1e+50 best solution, best possible 1 (63.95 seconds)
Cbc0010I After 17 nodes, 12 on tree, 1e+50 best solution, best possible 1 (66.05 seconds)
Cbc0010I After 18 nodes, 13 on tree, 1e+50 best solution, best possible 1 (67.35 seconds)
Cbc0010I After 19 nodes, 13 on tree, 1e+50 best solution, best possible 1 (68.05 seconds)
Cbc0010I After 20 nodes, 14 on tree, 1e+50 best solution, best possible 1 (69.17 seconds)
Cbc0010I After 21 nodes, 15 on tree, 1e+50 best solution, best possible 1 (70.36 seconds)
Cbc0010I After 24 nodes, 15 on tree, 1e+50 best solution, best possible 1 (71.51 seconds)
Cbc0010I After 27 nodes, 17 on tree, 1e+50 best solution, best possible 1 (72.35 seconds)
Cbc0010I After 32 nodes, 17 on tree, 1e+50 best solution, best possible 1 (73.17 seconds)
Cbc0010I After 36 nodes, 16 on tree, 1e+50 best solution, best possible 1 (74.11 seconds)
Cbc0010I After 41 nodes, 15 on tree, 1e+50 best solution, best possible 1 (75.11 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 13696 iterations and 42 nodes (75.25 seconds)
Cbc0001I Search completed - best objective 1, took 13757 iterations and 42 nodes (75.26 seconds)
Cbc0032I Strong branching done 706 times (24169 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 19, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 55 times and created 498 cuts of which 40 were active after adding rounds of cuts (0.860722 seconds)
Gomory was tried 55 times and created 329 cuts of which 0 were active after adding rounds of cuts (0.903535 seconds)
Knapsack was tried 55 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.427896 seconds)
liftKnapsack was tried 55 times and created 1501 cuts of which 0 were active after adding rounds of cuts (60.128 seconds)
Clique was tried 15 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.023173 seconds)
OddWheel was tried 15 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.106083 seconds)
MixedIntegerRounding2 was tried 55 times and created 198 cuts of which 0 were active after adding rounds of cuts (0.199533 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010523 seconds)
TwoMirCuts was tried 55 times and created 302 cuts of which 0 were active after adding rounds of cuts (0.353737 seconds)
ZeroHalf was tried 55 times and created 371 cuts of which 0 were active after adding rounds of cuts (0.500866 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               42
Total iterations:               13757
Time (CPU seconds):             75.2102
Time (Wallclock seconds):       75.3117
Total time (CPU seconds):       75.2189   (Wallclock seconds):       75.3296
