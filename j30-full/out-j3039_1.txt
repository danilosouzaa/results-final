Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3039/j3039_1.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3039_1.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 8.31481 - 0.101386 seconds
Cgl0003I 9 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 8 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 318 rows, 1116 columns (1116 integer (1115 of which binary)) and 19656 elements
Coin3009W Conflict graph built in 0.075 seconds, density: 1.003%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1116 objects (1116 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 75 integers unsatisfied sum - 19.1113
Cbc0038I Pass   1: suminf.   10.76405 (65) obj. 9.00394 iterations 93
Cbc0038I Pass   2: suminf.    8.09495 (63) obj. 9.06364 iterations 24
Cbc0038I Pass   3: suminf.    7.73824 (63) obj. 9.06364 iterations 6
Cbc0038I Pass   4: suminf.   11.60348 (65) obj. 9.16667 iterations 38
Cbc0038I Pass   5: suminf.   10.22346 (59) obj. 9.47059 iterations 25
Cbc0038I Pass   6: suminf.   10.16464 (59) obj. 9.47059 iterations 1
Cbc0038I Pass   7: suminf.    7.36898 (53) obj. 10 iterations 26
Cbc0038I Pass   8: suminf.    7.14646 (52) obj. 10 iterations 6
Cbc0038I Pass   9: suminf.    8.14280 (40) obj. 10 iterations 26
Cbc0038I Pass  10: suminf.    7.63178 (54) obj. 10 iterations 16
Cbc0038I Pass  11: suminf.    7.49614 (54) obj. 10 iterations 2
Cbc0038I Pass  12: suminf.    8.37538 (42) obj. 10 iterations 20
Cbc0038I Pass  13: suminf.    7.17195 (52) obj. 10 iterations 19
Cbc0038I Pass  14: suminf.    7.14646 (52) obj. 10 iterations 1
Cbc0038I Pass  15: suminf.    7.77792 (40) obj. 10 iterations 17
Cbc0038I Pass  16: suminf.    7.18154 (54) obj. 10 iterations 15
Cbc0038I Pass  17: suminf.    7.04327 (52) obj. 10 iterations 3
Cbc0038I Pass  18: suminf.    7.86363 (40) obj. 10 iterations 17
Cbc0038I Pass  19: suminf.    7.27914 (52) obj. 10 iterations 14
Cbc0038I Pass  20: suminf.    7.14646 (52) obj. 10 iterations 2
Cbc0038I Pass  21: suminf.    7.65332 (57) obj. 10 iterations 10
Cbc0038I Pass  22: suminf.    7.63760 (57) obj. 10 iterations 7
Cbc0038I Pass  23: suminf.    7.31507 (51) obj. 10 iterations 18
Cbc0038I Pass  24: suminf.    7.14646 (52) obj. 10 iterations 9
Cbc0038I Pass  25: suminf.    7.67281 (57) obj. 10 iterations 20
Cbc0038I Pass  26: suminf.    6.76726 (52) obj. 10 iterations 15
Cbc0038I Pass  27: suminf.    7.52373 (57) obj. 10 iterations 13
Cbc0038I Pass  28: suminf.    6.87045 (52) obj. 10 iterations 13
Cbc0038I Pass  29: suminf.    8.47097 (39) obj. 10 iterations 35
Cbc0038I Pass  30: suminf.    8.07113 (55) obj. 10 iterations 15
Cbc0038I Pass  31: suminf.    7.93297 (53) obj. 10 iterations 3
Cbc0038I Pass  32: suminf.    8.63415 (56) obj. 10 iterations 27
Cbc0038I Pass  33: suminf.    7.68096 (59) obj. 10 iterations 23
Cbc0038I Pass  34: suminf.    7.62962 (57) obj. 10 iterations 8
Cbc0038I Pass  35: suminf.   12.39822 (59) obj. 10 iterations 50
Cbc0038I Pass  36: suminf.   10.37748 (53) obj. 10 iterations 21
Cbc0038I Pass  37: suminf.    7.84434 (53) obj. 10 iterations 56
Cbc0038I Pass  38: suminf.    7.29263 (52) obj. 10 iterations 24
Cbc0038I Pass  39: suminf.   11.65719 (61) obj. 10 iterations 48
Cbc0038I Pass  40: suminf.    8.72567 (30) obj. 10 iterations 53
Cbc0038I Pass  41: suminf.    7.82901 (52) obj. 10 iterations 10
Cbc0038I Pass  42: suminf.    9.55981 (52) obj. 10 iterations 47
Cbc0038I Pass  43: suminf.    8.67642 (53) obj. 10 iterations 21
Cbc0038I Pass  44: suminf.    8.02117 (53) obj. 10 iterations 3
Cbc0038I Pass  45: suminf.    9.06869 (56) obj. 10 iterations 35
Cbc0038I Pass  46: suminf.    7.66267 (53) obj. 10 iterations 29
Cbc0038I Pass  47: suminf.    7.55884 (50) obj. 10 iterations 9
Cbc0038I Pass  48: suminf.    8.38240 (32) obj. 10 iterations 44
Cbc0038I Pass  49: suminf.    7.76942 (49) obj. 10 iterations 27
Cbc0038I Pass  50: suminf.    7.76335 (49) obj. 10 iterations 1
Cbc0038I Pass  51: suminf.    9.89133 (57) obj. 10 iterations 44
Cbc0038I Pass  52: suminf.    7.99704 (28) obj. 10 iterations 47
Cbc0038I Pass  53: suminf.    7.76006 (50) obj. 10 iterations 6
Cbc0038I Pass  54: suminf.   10.62403 (55) obj. 10 iterations 53
Cbc0038I Pass  55: suminf.    7.88863 (34) obj. 10 iterations 61
Cbc0038I Pass  56: suminf.    7.65929 (52) obj. 10 iterations 6
Cbc0038I Pass  57: suminf.    9.17459 (38) obj. 10 iterations 37
Cbc0038I Pass  58: suminf.    8.00498 (28) obj. 10 iterations 17
Cbc0038I Pass  59: suminf.    9.20794 (38) obj. 10 iterations 50
Cbc0038I Pass  60: suminf.    8.22526 (38) obj. 10 iterations 16
Cbc0038I Pass  61: suminf.    8.22526 (38) obj. 10 iterations 0
Cbc0038I Pass  62: suminf.    9.34877 (33) obj. 10 iterations 22
Cbc0038I Pass  63: suminf.    8.03276 (28) obj. 10 iterations 18
Cbc0038I Pass  64: suminf.    7.78276 (28) obj. 10 iterations 5
Cbc0038I Pass  65: suminf.    7.87827 (52) obj. 10 iterations 13
Cbc0038I Pass  66: suminf.    7.65929 (52) obj. 10 iterations 12
Cbc0038I Pass  67: suminf.    8.12119 (50) obj. 10 iterations 22
Cbc0038I Pass  68: suminf.    8.12119 (50) obj. 10 iterations 7
Cbc0038I Pass  69: suminf.    8.74057 (37) obj. 10 iterations 40
Cbc0038I Pass  70: suminf.    7.67434 (34) obj. 10 iterations 29
Cbc0038I Pass  71: suminf.    9.97504 (39) obj. 10 iterations 33
Cbc0038I Pass  72: suminf.    7.78276 (28) obj. 10 iterations 21
Cbc0038I Pass  73: suminf.    7.66546 (50) obj. 10 iterations 11
Cbc0038I Pass  74: suminf.    9.30079 (55) obj. 10 iterations 58
Cbc0038I Pass  75: suminf.    7.96457 (49) obj. 10 iterations 33
Cbc0038I Pass  76: suminf.   10.19679 (55) obj. 10 iterations 42
Cbc0038I Pass  77: suminf.    7.99704 (28) obj. 10 iterations 43
Cbc0038I Pass  78: suminf.    7.76006 (50) obj. 10 iterations 6
Cbc0038I Pass  79: suminf.    8.29113 (32) obj. 10 iterations 41
Cbc0038I Pass  80: suminf.    7.97024 (49) obj. 10 iterations 20
Cbc0038I Pass  81: suminf.    7.96457 (49) obj. 10 iterations 1
Cbc0038I Pass  82: suminf.    8.87589 (38) obj. 10 iterations 38
Cbc0038I Pass  83: suminf.    7.78276 (28) obj. 10 iterations 20
Cbc0038I Pass  84: suminf.    9.37734 (31) obj. 10 iterations 48
Cbc0038I Pass  85: suminf.    8.14466 (26) obj. 10 iterations 23
Cbc0038I Pass  86: suminf.    9.93290 (31) obj. 10 iterations 34
Cbc0038I Pass  87: suminf.    8.36688 (26) obj. 10 iterations 28
Cbc0038I Pass  88: suminf.    8.11688 (26) obj. 10 iterations 8
Cbc0038I Pass  89: suminf.    8.03355 (26) obj. 10 iterations 5
Cbc0038I Pass  90: suminf.    8.03355 (26) obj. 10 iterations 1
Cbc0038I Pass  91: suminf.   12.96474 (48) obj. 10 iterations 112
Cbc0038I Pass  92: suminf.    7.75411 (47) obj. 10 iterations 76
Cbc0038I Pass  93: suminf.    7.26401 (28) obj. 10 iterations 35
Cbc0038I Pass  94: suminf.    7.26401 (28) obj. 10 iterations 9
Cbc0038I Pass  95: suminf.    7.26401 (28) obj. 10 iterations 7
Cbc0038I Pass  96: suminf.   12.79089 (51) obj. 10 iterations 102
Cbc0038I Pass  97: suminf.    9.23255 (40) obj. 10 iterations 78
Cbc0038I Pass  98: suminf.    9.73314 (42) obj. 10 iterations 69
Cbc0038I Pass  99: suminf.    8.12845 (33) obj. 10 iterations 27
Cbc0038I Pass 100: suminf.   11.60984 (48) obj. 10 iterations 89
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 860 integers at bound fixed and 0 continuous
Cbc0038I Full problem 318 rows 1116 columns, reduced to 230 rows 234 columns
Cbc0038I Mini branch and bound did not improve solution (3.14 seconds)
Cbc0038I After 3.14 seconds - Feasibility pump exiting - took 1.38 seconds
Cbc0031I 54 added rows had average density of 97.537037
Cbc0013I At root node, 54 cuts changed objective from 8.3148148 to 9 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 219 row cuts average 6.6 elements, 5 column cuts (30 active)  in 0.855 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 188 row cuts average 717.4 elements, 0 column cuts (0 active)  in 0.993 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 177 row cuts average 28.7 elements, 0 column cuts (0 active)  in 15.264 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 254 row cuts average 68.4 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 234 row cuts average 179.3 elements, 0 column cuts (0 active)  in 0.351 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 147 row cuts average 70.6 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 9 (23.18 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 9 (27.16 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 9 (31.28 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 9 (34.58 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 9 (42.08 seconds)
Cbc0010I After 5 nodes, 5 on tree, 1e+50 best solution, best possible 9 (44.14 seconds)
Cbc0010I After 6 nodes, 4 on tree, 1e+50 best solution, best possible 9 (46.42 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 9 (52.37 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 9 (56.09 seconds)
Cbc0010I After 10 nodes, 5 on tree, 1e+50 best solution, best possible 9 (59.19 seconds)
Cbc0010I After 13 nodes, 4 on tree, 1e+50 best solution, best possible 9 (60.68 seconds)
Cbc0010I After 16 nodes, 3 on tree, 1e+50 best solution, best possible 9 (64.86 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 9 (66.91 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible 9 (68.04 seconds)
Cbc0010I After 32 nodes, 7 on tree, 1e+50 best solution, best possible 9 (68.75 seconds)
Cbc0010I After 33 nodes, 7 on tree, 1e+50 best solution, best possible 9 (69.48 seconds)
Cbc0010I After 37 nodes, 3 on tree, 1e+50 best solution, best possible 9 (70.25 seconds)
Cbc0010I After 39 nodes, 1 on tree, 1e+50 best solution, best possible 9 (71.53 seconds)
Cbc0010I After 40 nodes, 1 on tree, 1e+50 best solution, best possible 10 (74.82 seconds)
Cbc0010I After 41 nodes, 2 on tree, 1e+50 best solution, best possible 10 (80.14 seconds)
Cbc0010I After 42 nodes, 3 on tree, 1e+50 best solution, best possible 10 (84.76 seconds)
Cbc0010I After 43 nodes, 3 on tree, 1e+50 best solution, best possible 10 (87.40 seconds)
Cbc0010I After 44 nodes, 3 on tree, 1e+50 best solution, best possible 10 (90.13 seconds)
Cbc0010I After 46 nodes, 3 on tree, 1e+50 best solution, best possible 10 (91.75 seconds)
Cbc0010I After 47 nodes, 4 on tree, 1e+50 best solution, best possible 10 (92.55 seconds)
Cbc0010I After 57 nodes, 7 on tree, 1e+50 best solution, best possible 10 (93.45 seconds)
Cbc0010I After 60 nodes, 7 on tree, 1e+50 best solution, best possible 10 (94.20 seconds)
Cbc0010I After 61 nodes, 7 on tree, 1e+50 best solution, best possible 10 (95.94 seconds)
Cbc0010I After 69 nodes, 8 on tree, 1e+50 best solution, best possible 10 (98.43 seconds)
Cbc0010I After 77 nodes, 11 on tree, 1e+50 best solution, best possible 10 (101.47 seconds)
Cbc0010I After 78 nodes, 11 on tree, 1e+50 best solution, best possible 10 (106.71 seconds)
Cbc0010I After 84 nodes, 9 on tree, 1e+50 best solution, best possible 10 (107.76 seconds)
Cbc0010I After 89 nodes, 9 on tree, 1e+50 best solution, best possible 10 (110.89 seconds)
Cbc0010I After 90 nodes, 9 on tree, 1e+50 best solution, best possible 10 (112.79 seconds)
Cbc0010I After 106 nodes, 10 on tree, 1e+50 best solution, best possible 10 (114.60 seconds)
Cbc0010I After 111 nodes, 10 on tree, 1e+50 best solution, best possible 10 (118.00 seconds)
Cbc0010I After 121 nodes, 9 on tree, 1e+50 best solution, best possible 10 (118.82 seconds)
Cbc0010I After 139 nodes, 11 on tree, 1e+50 best solution, best possible 10 (119.53 seconds)
Cbc0010I After 142 nodes, 11 on tree, 1e+50 best solution, best possible 10 (120.61 seconds)
Cbc0010I After 150 nodes, 15 on tree, 1e+50 best solution, best possible 10 (121.40 seconds)
Cbc0010I After 157 nodes, 13 on tree, 1e+50 best solution, best possible 10 (122.51 seconds)
Cbc0010I After 166 nodes, 14 on tree, 1e+50 best solution, best possible 10 (123.23 seconds)
Cbc0010I After 172 nodes, 17 on tree, 1e+50 best solution, best possible 10 (124.39 seconds)
Cbc0010I After 195 nodes, 17 on tree, 1e+50 best solution, best possible 10 (125.61 seconds)
Cbc0010I After 222 nodes, 11 on tree, 1e+50 best solution, best possible 10 (126.33 seconds)
Cbc0010I After 232 nodes, 11 on tree, 1e+50 best solution, best possible 10 (128.48 seconds)
Cbc0010I After 246 nodes, 11 on tree, 1e+50 best solution, best possible 10 (131.73 seconds)
Cbc0004I Integer solution of 10 found after 25396 iterations and 255 nodes (132.34 seconds)
Cbc0001I Search completed - best objective 10, took 25396 iterations and 255 nodes (132.35 seconds)
Cbc0032I Strong branching done 810 times (6731 iterations), fathomed 1 nodes and fixed 9 variables
Cbc0035I Maximum depth 33, 0 variables fixed on reduced cost
Cuts at root node changed objective from 8.31481 to 9
Probing was tried 86 times and created 895 cuts of which 25 were active after adding rounds of cuts (1.33158 seconds)
Gomory was tried 85 times and created 189 cuts of which 0 were active after adding rounds of cuts (1.40763 seconds)
Knapsack was tried 85 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.787055 seconds)
liftKnapsack was tried 85 times and created 984 cuts of which 0 were active after adding rounds of cuts (111.625 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012917 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.059079 seconds)
MixedIntegerRounding2 was tried 85 times and created 1195 cuts of which 0 were active after adding rounds of cuts (0.777141 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009929 seconds)
TwoMirCuts was tried 85 times and created 470 cuts of which 0 were active after adding rounds of cuts (0.630546 seconds)
ZeroHalf was tried 85 times and created 624 cuts of which 0 were active after adding rounds of cuts (0.645992 seconds)

Result - Optimal solution found
Objective value:                10
Enumerated nodes:               255
Total iterations:               25396
Time (CPU seconds):             132.261
Time (Wallclock seconds):       132.422
Total time (CPU seconds):       132.312   (Wallclock seconds):       132.467
