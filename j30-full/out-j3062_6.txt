Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3062/j3062_6.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3062_6.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.077265 seconds
Cgl0002I 21 variables fixed
Cgl0003I 13 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 271 rows, 625 columns (625 integer (620 of which binary)) and 10052 elements
Coin3009W Conflict graph built in 0.059 seconds, density: 2.061%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 625 objects (625 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 61 integers unsatisfied sum - 17.2318
Cbc0038I Pass   1: suminf.    4.75000 (15) obj. 1 iterations 224
Cbc0038I Pass   2: suminf.    4.06640 (17) obj. 1 iterations 45
Cbc0038I Pass   3: suminf.    3.74877 (17) obj. 1 iterations 66
Cbc0038I Pass   4: suminf.    2.76444 (15) obj. 1 iterations 43
Cbc0038I Pass   5: suminf.    5.41667 (18) obj. 1 iterations 82
Cbc0038I Pass   6: suminf.    4.13889 (15) obj. 1 iterations 60
Cbc0038I Pass   7: suminf.    4.06989 (18) obj. 1 iterations 29
Cbc0038I Pass   8: suminf.    3.96296 (14) obj. 1 iterations 97
Cbc0038I Pass   9: suminf.    3.93519 (14) obj. 1 iterations 25
Cbc0038I Pass  10: suminf.    4.08333 (13) obj. 1 iterations 84
Cbc0038I Pass  11: suminf.    4.06989 (18) obj. 1 iterations 18
Cbc0038I Pass  12: suminf.    4.08519 (15) obj. 1 iterations 78
Cbc0038I Pass  13: suminf.    9.41071 (33) obj. 1 iterations 128
Cbc0038I Pass  14: suminf.    3.97608 (23) obj. 1 iterations 93
Cbc0038I Pass  15: suminf.    3.96558 (25) obj. 1 iterations 2
Cbc0038I Pass  16: suminf.    6.28645 (22) obj. 1 iterations 95
Cbc0038I Pass  17: suminf.    4.73395 (19) obj. 1 iterations 50
Cbc0038I Pass  18: suminf.    4.34630 (16) obj. 1 iterations 95
Cbc0038I Pass  19: suminf.    3.36852 (15) obj. 1 iterations 36
Cbc0038I Pass  20: suminf.    3.43333 (14) obj. 1 iterations 87
Cbc0038I Pass  21: suminf.    3.27222 (14) obj. 1 iterations 5
Cbc0038I Pass  22: suminf.    3.04630 (13) obj. 1 iterations 22
Cbc0038I Pass  23: suminf.    3.04630 (13) obj. 1 iterations 10
Cbc0038I Pass  24: suminf.    3.20833 (13) obj. 1 iterations 55
Cbc0038I Pass  25: suminf.    3.12963 (14) obj. 1 iterations 29
Cbc0038I Pass  26: suminf.    3.50000 (14) obj. 1 iterations 59
Cbc0038I Pass  27: suminf.    9.63985 (34) obj. 1 iterations 140
Cbc0038I Pass  28: suminf.    4.71798 (22) obj. 1 iterations 99
Cbc0038I Pass  29: suminf.    4.43229 (23) obj. 1 iterations 44
Cbc0038I Pass  30: suminf.    4.95398 (17) obj. 1 iterations 73
Cbc0038I Pass  31: suminf.    3.42361 (16) obj. 1 iterations 50
Cbc0038I Pass  32: suminf.    3.12530 (19) obj. 1 iterations 23
Cbc0038I Pass  33: suminf.    5.30197 (20) obj. 1 iterations 75
Cbc0038I Pass  34: suminf.    5.00164 (23) obj. 1 iterations 40
Cbc0038I Pass  35: suminf.    4.71602 (17) obj. 1 iterations 60
Cbc0038I Pass  36: suminf.    3.92975 (19) obj. 1 iterations 44
Cbc0038I Pass  37: suminf.    3.90047 (20) obj. 1 iterations 14
Cbc0038I Pass  38: suminf.    3.48182 (11) obj. 1 iterations 90
Cbc0038I Pass  39: suminf.    1.83333 (9) obj. 1 iterations 59
Cbc0038I Pass  40: suminf.    1.47222 (8) obj. 1 iterations 41
Cbc0038I Pass  41: suminf.    1.47222 (10) obj. 1 iterations 7
Cbc0038I Pass  42: suminf.    2.08333 (8) obj. 1 iterations 56
Cbc0038I Pass  43: suminf.    1.83333 (9) obj. 1 iterations 32
Cbc0038I Pass  44: suminf.    1.72222 (9) obj. 1 iterations 46
Cbc0038I Pass  45: suminf.    1.72222 (11) obj. 1 iterations 7
Cbc0038I Pass  46: suminf.    1.83333 (6) obj. 1 iterations 36
Cbc0038I Pass  47: suminf.    1.83333 (9) obj. 1 iterations 25
Cbc0038I Pass  48: suminf.    1.47222 (8) obj. 1 iterations 48
Cbc0038I Pass  49: suminf.    1.47222 (10) obj. 1 iterations 6
Cbc0038I Pass  50: suminf.    2.08333 (8) obj. 1 iterations 45
Cbc0038I Pass  51: suminf.    1.83333 (9) obj. 1 iterations 30
Cbc0038I Pass  52: suminf.    1.72222 (9) obj. 1 iterations 43
Cbc0038I Pass  53: suminf.    1.72222 (11) obj. 1 iterations 7
Cbc0038I Pass  54: suminf.    1.83333 (6) obj. 1 iterations 46
Cbc0038I Pass  55: suminf.    1.83333 (9) obj. 1 iterations 31
Cbc0038I Pass  56: suminf.    1.47222 (8) obj. 1 iterations 45
Cbc0038I Pass  57: suminf.    1.47222 (10) obj. 1 iterations 6
Cbc0038I Pass  58: suminf.    2.08333 (8) obj. 1 iterations 50
Cbc0038I Pass  59: suminf.    1.83333 (9) obj. 1 iterations 14
Cbc0038I Pass  60: suminf.    1.83333 (9) obj. 1 iterations 11
Cbc0038I Pass  61: suminf.    1.72222 (9) obj. 1 iterations 41
Cbc0038I Pass  62: suminf.    1.72222 (11) obj. 1 iterations 6
Cbc0038I Pass  63: suminf.    1.83333 (6) obj. 1 iterations 46
Cbc0038I Pass  64: suminf.    1.83333 (6) obj. 1 iterations 29
Cbc0038I Pass  65: suminf.    1.83333 (9) obj. 1 iterations 21
Cbc0038I Pass  66: suminf.    1.47222 (8) obj. 1 iterations 46
Cbc0038I Pass  67: suminf.    1.47222 (10) obj. 1 iterations 6
Cbc0038I Pass  68: suminf.    2.08333 (8) obj. 1 iterations 43
Cbc0038I Pass  69: suminf.    1.83333 (9) obj. 1 iterations 27
Cbc0038I Pass  70: suminf.    1.72222 (9) obj. 1 iterations 45
Cbc0038I Pass  71: suminf.    1.72222 (11) obj. 1 iterations 7
Cbc0038I Pass  72: suminf.    1.83333 (6) obj. 1 iterations 48
Cbc0038I Pass  73: suminf.    1.83333 (9) obj. 1 iterations 29
Cbc0038I Pass  74: suminf.    1.47222 (8) obj. 1 iterations 48
Cbc0038I Pass  75: suminf.    1.47222 (10) obj. 1 iterations 6
Cbc0038I Pass  76: suminf.    2.08333 (8) obj. 1 iterations 55
Cbc0038I Pass  77: suminf.    1.83333 (9) obj. 1 iterations 18
Cbc0038I Pass  78: suminf.    1.83333 (9) obj. 1 iterations 10
Cbc0038I Pass  79: suminf.    1.72222 (9) obj. 1 iterations 40
Cbc0038I Pass  80: suminf.    1.72222 (11) obj. 1 iterations 6
Cbc0038I Pass  81: suminf.    1.83333 (6) obj. 1 iterations 41
Cbc0038I Pass  82: suminf.    1.83333 (9) obj. 1 iterations 27
Cbc0038I Pass  83: suminf.    1.47222 (8) obj. 1 iterations 48
Cbc0038I Pass  84: suminf.    1.47222 (10) obj. 1 iterations 6
Cbc0038I Pass  85: suminf.    2.08333 (8) obj. 1 iterations 53
Cbc0038I Pass  86: suminf.    1.83333 (9) obj. 1 iterations 25
Cbc0038I Pass  87: suminf.    1.72222 (9) obj. 1 iterations 50
Cbc0038I Pass  88: suminf.    1.72222 (11) obj. 1 iterations 7
Cbc0038I Pass  89: suminf.    1.83333 (6) obj. 1 iterations 51
Cbc0038I Pass  90: suminf.    1.83333 (9) obj. 1 iterations 30
Cbc0038I Pass  91: suminf.    1.47222 (8) obj. 1 iterations 49
Cbc0038I Pass  92: suminf.    1.47222 (10) obj. 1 iterations 7
Cbc0038I Pass  93: suminf.    2.08333 (8) obj. 1 iterations 50
Cbc0038I Pass  94: suminf.    1.83333 (9) obj. 1 iterations 16
Cbc0038I Pass  95: suminf.    1.83333 (9) obj. 1 iterations 9
Cbc0038I Pass  96: suminf.    1.72222 (9) obj. 1 iterations 40
Cbc0038I Pass  97: suminf.    1.65556 (12) obj. 1 iterations 9
Cbc0038I Pass  98: suminf.    2.50000 (10) obj. 1 iterations 56
Cbc0038I Pass  99: suminf.    1.83333 (9) obj. 1 iterations 30
Cbc0038I Pass 100: suminf.   11.21694 (46) obj. 1 iterations 160
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 439 integers at bound fixed and 0 continuous
Cbc0038I Full problem 271 rows 625 columns, reduced to 172 rows 159 columns
Cbc0038I Mini branch and bound did not improve solution (2.48 seconds)
Cbc0038I Full problem 272 rows 625 columns, reduced to 270 rows 625 columns - too large
Cbc0038I After 2.61 seconds - Feasibility pump exiting - took 1.26 seconds
Cbc0031I 38 added rows had average density of 33.657895
Cbc0013I At root node, 38 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 14.1 elements, 38 column cuts (38 active)  in 0.484 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 48.8 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 300 row cuts average 8.2 elements, 0 column cuts (0 active)  in 3.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 10 row cuts average 37.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 27 row cuts average 52.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 113 row cuts average 121.1 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 86 row cuts average 95.1 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (7.36 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 0 (8.11 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 0 (9.43 seconds)
Cbc0010I After 5 nodes, 2 on tree, 1e+50 best solution, best possible 0 (11.15 seconds)
Cbc0010I After 6 nodes, 3 on tree, 1e+50 best solution, best possible 0 (13.76 seconds)
Cbc0010I After 7 nodes, 4 on tree, 1e+50 best solution, best possible 0 (16.16 seconds)
Cbc0010I After 8 nodes, 5 on tree, 1e+50 best solution, best possible 0 (18.11 seconds)
Cbc0010I After 13 nodes, 9 on tree, 1e+50 best solution, best possible 0 (18.83 seconds)
Cbc0010I After 19 nodes, 7 on tree, 1e+50 best solution, best possible 0 (19.54 seconds)
Cbc0010I After 30 nodes, 7 on tree, 1e+50 best solution, best possible 0 (20.48 seconds)
Cbc0010I After 41 nodes, 6 on tree, 1e+50 best solution, best possible 0 (21.82 seconds)
Cbc0010I After 45 nodes, 7 on tree, 1e+50 best solution, best possible 0 (22.57 seconds)
Cbc0010I After 59 nodes, 7 on tree, 1e+50 best solution, best possible 0 (23.31 seconds)
Cbc0010I After 68 nodes, 12 on tree, 1e+50 best solution, best possible 0 (24.04 seconds)
Cbc0010I After 78 nodes, 10 on tree, 1e+50 best solution, best possible 0 (26.04 seconds)
Cbc0010I After 91 nodes, 11 on tree, 1e+50 best solution, best possible 0 (26.76 seconds)
Cbc0010I After 102 nodes, 11 on tree, 1e+50 best solution, best possible 0 (27.83 seconds)
Cbc0010I After 126 nodes, 10 on tree, 1e+50 best solution, best possible 0 (28.54 seconds)
Cbc0010I After 128 nodes, 9 on tree, 1e+50 best solution, best possible 0 (29.41 seconds)
Cbc0010I After 142 nodes, 7 on tree, 1e+50 best solution, best possible 0 (30.49 seconds)
Cbc0010I After 161 nodes, 7 on tree, 1e+50 best solution, best possible 0 (31.30 seconds)
Cbc0010I After 183 nodes, 3 on tree, 1e+50 best solution, best possible 0 (32.01 seconds)
Cbc0010I After 185 nodes, 2 on tree, 1e+50 best solution, best possible 0 (32.82 seconds)
Cbc0010I After 186 nodes, 3 on tree, 1e+50 best solution, best possible 0 (33.58 seconds)
Cbc0010I After 194 nodes, 7 on tree, 1e+50 best solution, best possible 0 (34.93 seconds)
Cbc0010I After 205 nodes, 8 on tree, 1e+50 best solution, best possible 0 (35.63 seconds)
Cbc0010I After 214 nodes, 6 on tree, 1e+50 best solution, best possible 0 (36.55 seconds)
Cbc0010I After 225 nodes, 3 on tree, 1e+50 best solution, best possible 0 (37.32 seconds)
Cbc0010I After 228 nodes, 1 on tree, 1e+50 best solution, best possible 1 (38.26 seconds)
Cbc0010I After 229 nodes, 2 on tree, 1e+50 best solution, best possible 1 (38.98 seconds)
Cbc0010I After 230 nodes, 3 on tree, 1e+50 best solution, best possible 1 (39.89 seconds)
Cbc0010I After 231 nodes, 4 on tree, 1e+50 best solution, best possible 1 (41.34 seconds)
Cbc0010I After 232 nodes, 5 on tree, 1e+50 best solution, best possible 1 (42.54 seconds)
Cbc0010I After 233 nodes, 6 on tree, 1e+50 best solution, best possible 1 (43.39 seconds)
Cbc0004I Integer solution of 1 found after 27773 iterations and 254 nodes (43.74 seconds)
Cbc0001I Search completed - best objective 1, took 27773 iterations and 254 nodes (43.74 seconds)
Cbc0032I Strong branching done 1354 times (29242 iterations), fathomed 1 nodes and fixed 21 variables
Cbc0035I Maximum depth 21, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 76 times and created 646 cuts of which 0 were active after adding rounds of cuts (0.791736 seconds)
Gomory was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.153919 seconds)
Knapsack was tried 70 times and created 92 cuts of which 0 were active after adding rounds of cuts (0.418533 seconds)
liftKnapsack was tried 70 times and created 2587 cuts of which 0 were active after adding rounds of cuts (27.6555 seconds)
Clique was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.011218 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037254 seconds)
MixedIntegerRounding2 was tried 70 times and created 154 cuts of which 0 were active after adding rounds of cuts (0.238626 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006102 seconds)
TwoMirCuts was tried 10 times and created 113 cuts of which 0 were active after adding rounds of cuts (0.104476 seconds)
ZeroHalf was tried 10 times and created 86 cuts of which 0 were active after adding rounds of cuts (0.062081 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               254
Total iterations:               27773
Time (CPU seconds):             43.7165
Time (Wallclock seconds):       43.775
Total time (CPU seconds):       43.7404   (Wallclock seconds):       43.7982
