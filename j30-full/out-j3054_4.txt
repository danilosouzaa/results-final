Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3054/j3054_4.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3054_4.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is -3.55271e-15 - 0.080702 seconds
Cgl0002I 22 variables fixed
Cgl0003I 22 fixed, 0 tightened bounds, 5 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 253 rows, 429 columns (429 integer (424 of which binary)) and 5760 elements
Coin3009W Conflict graph built in 0.018 seconds, density: 1.837%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 429 objects (429 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 37 integers unsatisfied sum - 8.42832
Cbc0038I Pass   1: suminf.    5.34244 (40) obj. 0.0375504 iterations 81
Cbc0038I Pass   2: suminf.    8.63448 (33) obj. 0.259048 iterations 79
Cbc0038I Pass   3: suminf.    7.14996 (33) obj. 0.234921 iterations 24
Cbc0038I Pass   4: suminf.    6.56621 (30) obj. 0.234921 iterations 13
Cbc0038I Pass   5: suminf.    7.30319 (30) obj. 1 iterations 93
Cbc0038I Pass   6: suminf.    5.07677 (25) obj. 1 iterations 41
Cbc0038I Pass   7: suminf.    4.34969 (27) obj. 1 iterations 16
Cbc0038I Pass   8: suminf.    6.88661 (28) obj. 1 iterations 88
Cbc0038I Pass   9: suminf.    5.96336 (26) obj. 1 iterations 38
Cbc0038I Pass  10: suminf.    5.35967 (24) obj. 1 iterations 21
Cbc0038I Pass  11: suminf.    6.25487 (23) obj. 1 iterations 75
Cbc0038I Pass  12: suminf.    4.76270 (20) obj. 1 iterations 32
Cbc0038I Pass  13: suminf.    4.76270 (20) obj. 1 iterations 0
Cbc0038I Pass  14: suminf.    5.62496 (21) obj. 1 iterations 50
Cbc0038I Pass  15: suminf.    4.42372 (20) obj. 1 iterations 48
Cbc0038I Pass  16: suminf.    4.34831 (16) obj. 1 iterations 24
Cbc0038I Pass  17: suminf.    5.27533 (16) obj. 1 iterations 55
Cbc0038I Pass  18: suminf.    4.34831 (16) obj. 1 iterations 62
Cbc0038I Pass  19: suminf.    5.95912 (33) obj. 1 iterations 97
Cbc0038I Pass  20: suminf.    4.59280 (26) obj. 1 iterations 69
Cbc0038I Pass  21: suminf.    4.53871 (28) obj. 1 iterations 5
Cbc0038I Pass  22: suminf.    4.09999 (23) obj. 1 iterations 99
Cbc0038I Pass  23: suminf.    3.64061 (22) obj. 1 iterations 24
Cbc0038I Pass  24: suminf.    4.88716 (21) obj. 1 iterations 94
Cbc0038I Pass  25: suminf.    3.57969 (16) obj. 1 iterations 40
Cbc0038I Pass  26: suminf.    3.58210 (16) obj. 1 iterations 2
Cbc0038I Pass  27: suminf.    4.23240 (21) obj. 1 iterations 58
Cbc0038I Pass  28: suminf.    4.16536 (18) obj. 1 iterations 26
Cbc0038I Pass  29: suminf.    3.57234 (17) obj. 1 iterations 7
Cbc0038I Pass  30: suminf.    3.35000 (15) obj. 1 iterations 19
Cbc0038I Pass  31: suminf.    3.43750 (11) obj. 1 iterations 15
Cbc0038I Pass  32: suminf.    3.32128 (12) obj. 1 iterations 14
Cbc0038I Pass  33: suminf.    2.45000 (8) obj. 1 iterations 16
Cbc0038I Pass  34: suminf.    2.00000 (9) obj. 1 iterations 15
Cbc0038I Pass  35: suminf.    2.73452 (12) obj. 1 iterations 55
Cbc0038I Pass  36: suminf.    1.84048 (8) obj. 1 iterations 47
Cbc0038I Pass  37: suminf.    1.65000 (7) obj. 1 iterations 24
Cbc0038I Pass  38: suminf.    1.92500 (8) obj. 1 iterations 22
Cbc0038I Pass  39: suminf.    9.34506 (35) obj. 1 iterations 111
Cbc0038I Pass  40: suminf.    5.90081 (25) obj. 1 iterations 70
Cbc0038I Pass  41: suminf.    4.66790 (24) obj. 1 iterations 20
Cbc0038I Pass  42: suminf.    4.21770 (22) obj. 1 iterations 19
Cbc0038I Pass  43: suminf.    3.50718 (23) obj. 1 iterations 37
Cbc0038I Pass  44: suminf.    3.17103 (13) obj. 1 iterations 102
Cbc0038I Pass  45: suminf.    3.05675 (13) obj. 1 iterations 19
Cbc0038I Pass  46: suminf.    3.77177 (19) obj. 1 iterations 76
Cbc0038I Pass  47: suminf.    2.70314 (18) obj. 1 iterations 34
Cbc0038I Pass  48: suminf.    2.70314 (18) obj. 1 iterations 2
Cbc0038I Pass  49: suminf.    3.80228 (15) obj. 1 iterations 57
Cbc0038I Pass  50: suminf.    2.55682 (21) obj. 1 iterations 56
Cbc0038I Pass  51: suminf.    1.83063 (16) obj. 1 iterations 26
Cbc0038I Pass  52: suminf.    6.03177 (28) obj. 1 iterations 69
Cbc0038I Pass  53: suminf.    2.74859 (14) obj. 1 iterations 71
Cbc0038I Pass  54: suminf.    2.34048 (16) obj. 1 iterations 40
Cbc0038I Pass  55: suminf.    3.87415 (17) obj. 1 iterations 93
Cbc0038I Pass  56: suminf.    3.07623 (15) obj. 1 iterations 71
Cbc0038I Pass  57: suminf.    2.87563 (14) obj. 1 iterations 27
Cbc0038I Pass  58: suminf.    5.18726 (23) obj. 1 iterations 60
Cbc0038I Pass  59: suminf.    3.51389 (12) obj. 1 iterations 45
Cbc0038I Pass  60: suminf.    2.19568 (11) obj. 1 iterations 33
Cbc0038I Pass  61: suminf.    1.99507 (10) obj. 1 iterations 14
Cbc0038I Pass  62: suminf.    4.16389 (15) obj. 1 iterations 43
Cbc0038I Pass  63: suminf.    3.03770 (9) obj. 1 iterations 30
Cbc0038I Pass  64: suminf.    1.91452 (11) obj. 1 iterations 37
Cbc0038I Pass  65: suminf.    4.75062 (14) obj. 1 iterations 56
Cbc0038I Pass  66: suminf.    3.06481 (10) obj. 1 iterations 25
Cbc0038I Pass  67: suminf.    1.78241 (8) obj. 1 iterations 42
Cbc0038I Pass  68: suminf.    2.26389 (7) obj. 1 iterations 30
Cbc0038I Pass  69: suminf.    9.10789 (40) obj. 1 iterations 75
Cbc0038I Pass  70: suminf.    6.51555 (29) obj. 1 iterations 74
Cbc0038I Pass  71: suminf.    5.02521 (23) obj. 1 iterations 69
Cbc0038I Pass  72: suminf.    4.37131 (19) obj. 1 iterations 70
Cbc0038I Pass  73: suminf.    3.54960 (15) obj. 1 iterations 43
Cbc0038I Pass  74: suminf.    2.91564 (16) obj. 1 iterations 24
Cbc0038I Pass  75: suminf.    2.67878 (16) obj. 1 iterations 14
Cbc0038I Pass  76: suminf.    4.49840 (19) obj. 1 iterations 81
Cbc0038I Pass  77: suminf.    4.34597 (19) obj. 1 iterations 13
Cbc0038I Pass  78: suminf.    3.53742 (17) obj. 1 iterations 88
Cbc0038I Pass  79: suminf.    2.98065 (16) obj. 1 iterations 26
Cbc0038I Pass  80: suminf.    4.40715 (19) obj. 1 iterations 75
Cbc0038I Pass  81: suminf.    4.02845 (15) obj. 1 iterations 23
Cbc0038I Pass  82: suminf.    3.80381 (14) obj. 1 iterations 5
Cbc0038I Pass  83: suminf.    3.35937 (14) obj. 1 iterations 5
Cbc0038I Pass  84: suminf.    4.06250 (15) obj. 1 iterations 33
Cbc0038I Pass  85: suminf.    3.69725 (14) obj. 1 iterations 15
Cbc0038I Pass  86: suminf.    3.48751 (13) obj. 1 iterations 6
Cbc0038I Pass  87: suminf.    3.04306 (13) obj. 1 iterations 6
Cbc0038I Pass  88: suminf.    3.75927 (15) obj. 1 iterations 64
Cbc0038I Pass  89: suminf.    3.15772 (20) obj. 1 iterations 21
Cbc0038I Pass  90: suminf.    2.85000 (17) obj. 1 iterations 21
Cbc0038I Pass  91: suminf.    4.50238 (15) obj. 1 iterations 73
Cbc0038I Pass  92: suminf.    3.31071 (14) obj. 1 iterations 25
Cbc0038I Pass  93: suminf.    3.15978 (14) obj. 1 iterations 7
Cbc0038I Pass  94: suminf.    3.39309 (19) obj. 1 iterations 73
Cbc0038I Pass  95: suminf.    2.99052 (13) obj. 1 iterations 40
Cbc0038I Pass  96: suminf.    3.75225 (17) obj. 1 iterations 71
Cbc0038I Pass  97: suminf.    3.15772 (20) obj. 1 iterations 35
Cbc0038I Pass  98: suminf.    2.85000 (17) obj. 1 iterations 22
Cbc0038I Pass  99: suminf.    3.62895 (14) obj. 1 iterations 74
Cbc0038I Pass 100: suminf.   13.00116 (45) obj. 1 iterations 118
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 234 integers at bound fixed and 0 continuous
Cbc0038I Full problem 253 rows 429 columns, reduced to 182 rows 162 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.13 seconds)
Cbc0038I Full problem 254 rows 429 columns, reduced to 249 rows 429 columns - too large
Cbc0038I After 2.20 seconds - Feasibility pump exiting - took 1.14 seconds
Cbc0031I 54 added rows had average density of 59.981481
Cbc0013I At root node, 54 cuts changed objective from 1.110223e-16 to 1 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 256 row cuts average 3.3 elements, 1 column cuts (1 active)  in 3.288 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2142 row cuts average 421.8 elements, 0 column cuts (0 active)  in 5.072 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.617 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 983 row cuts average 8.1 elements, 0 column cuts (0 active)  in 229.508 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 10 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.366 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 76 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.285 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 445 row cuts average 127.0 elements, 0 column cuts (0 active)  in 0.501 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 325 row cuts average 56.9 elements, 0 column cuts (0 active)  in 0.646 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (250.81 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (256.81 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (265.37 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (273.84 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (282.99 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (292.97 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (294.59 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1 (296.77 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 1 (297.51 seconds)
Cbc0010I After 11 nodes, 10 on tree, 1e+50 best solution, best possible 1 (298.54 seconds)
Cbc0010I After 15 nodes, 11 on tree, 1e+50 best solution, best possible 1 (299.41 seconds)
Cbc0004I Integer solution of 1 found after 11041 iterations and 18 nodes (300.06 seconds)
Cbc0001I Search completed - best objective 1, took 11041 iterations and 18 nodes (300.06 seconds)
Cbc0032I Strong branching done 576 times (21345 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 13, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.11022e-16 to 1
Probing was tried 132 times and created 405 cuts of which 0 were active after adding rounds of cuts (3.43855 seconds)
Gomory was tried 132 times and created 2145 cuts of which 0 were active after adding rounds of cuts (5.16105 seconds)
Knapsack was tried 132 times and created 68 cuts of which 0 were active after adding rounds of cuts (0.788856 seconds)
liftKnapsack was tried 132 times and created 1415 cuts of which 0 were active after adding rounds of cuts (274.982 seconds)
Clique was tried 100 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.078023 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.366084 seconds)
MixedIntegerRounding2 was tried 100 times and created 76 cuts of which 0 were active after adding rounds of cuts (0.285059 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.202359 seconds)
TwoMirCuts was tried 132 times and created 547 cuts of which 0 were active after adding rounds of cuts (0.634515 seconds)
ZeroHalf was tried 132 times and created 469 cuts of which 0 were active after adding rounds of cuts (0.823145 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               18
Total iterations:               11041
Time (CPU seconds):             299.984
Time (Wallclock seconds):       300.192
Total time (CPU seconds):       299.993   (Wallclock seconds):       300.204
