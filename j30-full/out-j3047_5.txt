Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3047/j3047_5.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3047_5.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.12361 - 0.216616 seconds
Cgl0002I 6 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 300 rows, 619 columns (619 integer (618 of which binary)) and 9090 elements
Coin3009W Conflict graph built in 0.011 seconds, density: 0.887%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 619 objects (619 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 100 integers unsatisfied sum - 23.5725
Cbc0038I Pass   1: suminf.   18.14653 (73) obj. 5 iterations 114
Cbc0038I Pass   2: suminf.   18.02216 (74) obj. 5 iterations 21
Cbc0038I Pass   3: suminf.   10.04690 (39) obj. 5 iterations 136
Cbc0038I Pass   4: suminf.    7.87290 (38) obj. 5 iterations 48
Cbc0038I Pass   5: suminf.    6.73967 (36) obj. 5 iterations 35
Cbc0038I Pass   6: suminf.    6.42457 (35) obj. 5 iterations 22
Cbc0038I Pass   7: suminf.   10.34526 (33) obj. 5 iterations 109
Cbc0038I Pass   8: suminf.    7.02641 (30) obj. 5 iterations 89
Cbc0038I Pass   9: suminf.    6.55974 (32) obj. 5 iterations 39
Cbc0038I Pass  10: suminf.    7.12635 (30) obj. 5 iterations 65
Cbc0038I Pass  11: suminf.    4.99299 (27) obj. 5 iterations 59
Cbc0038I Pass  12: suminf.    4.72798 (28) obj. 5 iterations 30
Cbc0038I Pass  13: suminf.    6.28550 (27) obj. 5 iterations 67
Cbc0038I Pass  14: suminf.   14.21460 (58) obj. 5 iterations 136
Cbc0038I Pass  15: suminf.    6.94844 (37) obj. 5 iterations 75
Cbc0038I Pass  16: suminf.    6.79704 (33) obj. 5 iterations 18
Cbc0038I Pass  17: suminf.    7.81605 (37) obj. 5 iterations 72
Cbc0038I Pass  18: suminf.    7.27772 (39) obj. 5 iterations 50
Cbc0038I Pass  19: suminf.   10.14531 (35) obj. 5 iterations 127
Cbc0038I Pass  20: suminf.    6.24153 (29) obj. 5 iterations 64
Cbc0038I Pass  21: suminf.    5.57891 (26) obj. 5 iterations 21
Cbc0038I Pass  22: suminf.    8.32831 (32) obj. 5 iterations 73
Cbc0038I Pass  23: suminf.    6.29405 (26) obj. 5 iterations 58
Cbc0038I Pass  24: suminf.    6.06190 (27) obj. 5 iterations 20
Cbc0038I Pass  25: suminf.    8.39288 (33) obj. 5 iterations 70
Cbc0038I Pass  26: suminf.    7.51429 (31) obj. 5 iterations 27
Cbc0038I Pass  27: suminf.    6.77619 (26) obj. 5 iterations 24
Cbc0038I Pass  28: suminf.    5.06190 (24) obj. 5 iterations 15
Cbc0038I Pass  29: suminf.    5.06190 (24) obj. 5 iterations 3
Cbc0038I Pass  30: suminf.    7.24031 (28) obj. 5 iterations 107
Cbc0038I Pass  31: suminf.    5.70476 (25) obj. 5 iterations 83
Cbc0038I Pass  32: suminf.    7.04665 (28) obj. 5 iterations 61
Cbc0038I Pass  33: suminf.    5.43730 (22) obj. 5 iterations 48
Cbc0038I Pass  34: suminf.    4.60635 (22) obj. 5 iterations 11
Cbc0038I Pass  35: suminf.    7.57792 (28) obj. 5 iterations 88
Cbc0038I Pass  36: suminf.    6.57738 (27) obj. 5 iterations 54
Cbc0038I Pass  37: suminf.    5.78388 (29) obj. 5 iterations 35
Cbc0038I Pass  38: suminf.    5.83931 (28) obj. 5 iterations 116
Cbc0038I Pass  39: suminf.    5.14747 (27) obj. 5 iterations 41
Cbc0038I Pass  40: suminf.    5.57428 (26) obj. 5 iterations 44
Cbc0038I Pass  41: suminf.    4.48968 (25) obj. 5 iterations 20
Cbc0038I Pass  42: suminf.    6.34311 (26) obj. 5 iterations 71
Cbc0038I Pass  43: suminf.    4.96667 (20) obj. 5 iterations 52
Cbc0038I Pass  44: suminf.    4.14104 (23) obj. 5 iterations 17
Cbc0038I Pass  45: suminf.    3.83492 (21) obj. 5 iterations 23
Cbc0038I Pass  46: suminf.    5.95514 (21) obj. 5 iterations 99
Cbc0038I Pass  47: suminf.    3.65556 (19) obj. 5 iterations 55
Cbc0038I Pass  48: suminf.    5.86893 (20) obj. 5 iterations 49
Cbc0038I Pass  49: suminf.    3.87920 (22) obj. 5 iterations 55
Cbc0038I Pass  50: suminf.    6.98323 (27) obj. 5 iterations 106
Cbc0038I Pass  51: suminf.    5.70431 (33) obj. 5 iterations 56
Cbc0038I Pass  52: suminf.    7.77120 (30) obj. 5 iterations 93
Cbc0038I Pass  53: suminf.    5.58452 (27) obj. 5 iterations 90
Cbc0038I Pass  54: suminf.    5.28054 (28) obj. 5 iterations 25
Cbc0038I Pass  55: suminf.    7.05856 (29) obj. 5 iterations 69
Cbc0038I Pass  56: suminf.    5.65253 (31) obj. 5 iterations 86
Cbc0038I Pass  57: suminf.    6.06466 (27) obj. 5 iterations 71
Cbc0038I Pass  58: suminf.    5.44680 (29) obj. 5 iterations 60
Cbc0038I Pass  59: suminf.    8.74962 (31) obj. 5 iterations 122
Cbc0038I Pass  60: suminf.    6.35159 (23) obj. 5 iterations 91
Cbc0038I Pass  61: suminf.    5.63371 (27) obj. 5 iterations 59
Cbc0038I Pass  62: suminf.    4.55882 (22) obj. 5 iterations 59
Cbc0038I Pass  63: suminf.    7.53693 (25) obj. 5 iterations 114
Cbc0038I Pass  64: suminf.    4.36121 (19) obj. 5 iterations 50
Cbc0038I Pass  65: suminf.    4.05119 (18) obj. 5 iterations 10
Cbc0038I Pass  66: suminf.    5.05423 (19) obj. 5 iterations 59
Cbc0038I Pass  67: suminf.    4.51714 (17) obj. 5 iterations 30
Cbc0038I Pass  68: suminf.    4.23619 (17) obj. 5 iterations 16
Cbc0038I Pass  69: suminf.    4.76190 (19) obj. 5 iterations 44
Cbc0038I Pass  70: suminf.    3.91190 (20) obj. 5 iterations 51
Cbc0038I Pass  71: suminf.    3.86190 (19) obj. 5 iterations 13
Cbc0038I Pass  72: suminf.    5.27994 (21) obj. 5 iterations 50
Cbc0038I Pass  73: suminf.    4.76429 (20) obj. 5 iterations 27
Cbc0038I Pass  74: suminf.    5.06876 (20) obj. 5 iterations 30
Cbc0038I Pass  75: suminf.    3.30913 (20) obj. 5 iterations 38
Cbc0038I Pass  76: suminf.    7.52149 (23) obj. 5 iterations 76
Cbc0038I Pass  77: suminf.    4.34678 (20) obj. 5 iterations 60
Cbc0038I Pass  78: suminf.    3.34099 (19) obj. 5 iterations 18
Cbc0038I Pass  79: suminf.    2.91242 (16) obj. 5 iterations 8
Cbc0038I Pass  80: suminf.    4.88046 (20) obj. 5 iterations 60
Cbc0038I Pass  81: suminf.    4.00848 (17) obj. 5 iterations 56
Cbc0038I Pass  82: suminf.    3.60000 (14) obj. 5 iterations 42
Cbc0038I Pass  83: suminf.    4.68125 (18) obj. 5 iterations 55
Cbc0038I Pass  84: suminf.    3.62857 (17) obj. 5 iterations 32
Cbc0038I Pass  85: suminf.    4.50286 (16) obj. 5 iterations 45
Cbc0038I Pass  86: suminf.    4.50286 (16) obj. 5 iterations 12
Cbc0038I Pass  87: suminf.    4.19203 (15) obj. 5 iterations 54
Cbc0038I Pass  88: suminf.    2.91242 (16) obj. 5 iterations 36
Cbc0038I Pass  89: suminf.    4.88046 (20) obj. 5 iterations 64
Cbc0038I Pass  90: suminf.    4.00848 (17) obj. 5 iterations 50
Cbc0038I Pass  91: suminf.    3.60000 (14) obj. 5 iterations 44
Cbc0038I Pass  92: suminf.    4.17654 (19) obj. 5 iterations 60
Cbc0038I Pass  93: suminf.    3.40066 (17) obj. 5 iterations 54
Cbc0038I Pass  94: suminf.    3.02857 (14) obj. 5 iterations 26
Cbc0038I Pass  95: suminf.    4.34286 (16) obj. 5 iterations 68
Cbc0038I Pass  96: suminf.    4.28601 (19) obj. 5 iterations 38
Cbc0038I Pass  97: suminf.    3.39524 (14) obj. 5 iterations 55
Cbc0038I Pass  98: suminf.    3.39524 (13) obj. 5 iterations 21
Cbc0038I Pass  99: suminf.    4.34286 (16) obj. 5 iterations 75
Cbc0038I Pass 100: suminf.   12.99902 (56) obj. 5 iterations 153
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 383 integers at bound fixed and 0 continuous
Cbc0038I Full problem 300 rows 619 columns, reduced to 189 rows 201 columns
Cbc0038I Mini branch and bound did not improve solution (3.79 seconds)
Cbc0038I After 3.79 seconds - Feasibility pump exiting - took 2.80 seconds
Cbc0031I 49 added rows had average density of 59.44898
Cbc0013I At root node, 49 cuts changed objective from 3.1236081 to 4.999936 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 238 row cuts average 10.4 elements, 10 column cuts (10 active)  in 0.409 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 204 row cuts average 595.2 elements, 0 column cuts (0 active)  in 0.824 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 123 row cuts average 14.9 elements, 0 column cuts (0 active)  in 25.871 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 137 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 107 row cuts average 66.5 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 149 row cuts average 49.4 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 4.999936 (33.16 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 4.999936 (36.12 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 4.999936 (41.22 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 4.999936 (46.24 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 4.999936 (51.58 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 4.999936 (56.44 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 4.999936 (57.21 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 4.999936 (58.37 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 4.999936 (59.63 seconds)
Cbc0010I After 10 nodes, 9 on tree, 1e+50 best solution, best possible 4.999936 (60.83 seconds)
Cbc0010I After 12 nodes, 8 on tree, 1e+50 best solution, best possible 4.999936 (62.50 seconds)
Cbc0010I After 13 nodes, 9 on tree, 1e+50 best solution, best possible 4.999936 (64.44 seconds)
Cbc0010I After 15 nodes, 9 on tree, 1e+50 best solution, best possible 4.999936 (66.26 seconds)
Cbc0010I After 17 nodes, 8 on tree, 1e+50 best solution, best possible 4.999936 (68.22 seconds)
Cbc0010I After 19 nodes, 8 on tree, 1e+50 best solution, best possible 4.999936 (69.41 seconds)
Cbc0010I After 20 nodes, 9 on tree, 1e+50 best solution, best possible 4.999936 (70.50 seconds)
Cbc0010I After 23 nodes, 11 on tree, 1e+50 best solution, best possible 4.999936 (71.54 seconds)
Cbc0010I After 26 nodes, 11 on tree, 1e+50 best solution, best possible 4.999936 (73.13 seconds)
Cbc0010I After 28 nodes, 12 on tree, 1e+50 best solution, best possible 4.999936 (75.11 seconds)
Cbc0010I After 31 nodes, 13 on tree, 1e+50 best solution, best possible 4.999936 (76.41 seconds)
Cbc0010I After 35 nodes, 13 on tree, 1e+50 best solution, best possible 4.999936 (77.13 seconds)
Cbc0010I After 36 nodes, 13 on tree, 1e+50 best solution, best possible 4.999936 (78.30 seconds)
Cbc0010I After 37 nodes, 14 on tree, 1e+50 best solution, best possible 4.999936 (79.10 seconds)
Cbc0010I After 39 nodes, 14 on tree, 1e+50 best solution, best possible 4.999936 (80.79 seconds)
Cbc0010I After 40 nodes, 14 on tree, 1e+50 best solution, best possible 4.999936 (82.19 seconds)
Cbc0010I After 43 nodes, 17 on tree, 1e+50 best solution, best possible 4.999936 (84.56 seconds)
Cbc0010I After 46 nodes, 19 on tree, 1e+50 best solution, best possible 4.999936 (85.90 seconds)
Cbc0010I After 50 nodes, 19 on tree, 1e+50 best solution, best possible 4.999936 (86.79 seconds)
Cbc0010I After 51 nodes, 20 on tree, 1e+50 best solution, best possible 4.999936 (87.71 seconds)
Cbc0010I After 52 nodes, 20 on tree, 1e+50 best solution, best possible 4.999936 (88.48 seconds)
Cbc0010I After 53 nodes, 20 on tree, 1e+50 best solution, best possible 4.999936 (89.91 seconds)
Cbc0010I After 55 nodes, 21 on tree, 1e+50 best solution, best possible 4.999936 (90.76 seconds)
Cbc0010I After 58 nodes, 21 on tree, 1e+50 best solution, best possible 4.999936 (91.54 seconds)
Cbc0010I After 60 nodes, 22 on tree, 1e+50 best solution, best possible 4.999936 (92.30 seconds)
Cbc0004I Integer solution of 5 found after 9923 iterations and 61 nodes (92.55 seconds)
Cbc0001I Search completed - best objective 5, took 9923 iterations and 61 nodes (92.55 seconds)
Cbc0032I Strong branching done 898 times (20619 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.12361 to 4.99994
Probing was tried 67 times and created 635 cuts of which 0 were active after adding rounds of cuts (0.566244 seconds)
Gomory was tried 66 times and created 209 cuts of which 0 were active after adding rounds of cuts (0.961965 seconds)
Knapsack was tried 66 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.494995 seconds)
liftKnapsack was tried 66 times and created 1006 cuts of which 0 were active after adding rounds of cuts (78.5451 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024485 seconds)
OddWheel was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.097508 seconds)
MixedIntegerRounding2 was tried 66 times and created 250 cuts of which 0 were active after adding rounds of cuts (0.208214 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005187 seconds)
TwoMirCuts was tried 66 times and created 236 cuts of which 0 were active after adding rounds of cuts (0.292189 seconds)
ZeroHalf was tried 66 times and created 431 cuts of which 0 were active after adding rounds of cuts (0.456291 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               61
Total iterations:               9923
Time (CPU seconds):             92.6466
Time (Wallclock seconds):       92.6047
Total time (CPU seconds):       92.6594   (Wallclock seconds):       92.6191
