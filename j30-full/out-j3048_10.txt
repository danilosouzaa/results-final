Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3048/j3048_10.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3048_10.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.063701 seconds
Cgl0002I 16 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 258 rows, 450 columns (450 integer (446 of which binary)) and 6417 elements
Coin3009W Conflict graph built in 0.007 seconds, density: 1.149%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 450 objects (450 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 50 integers unsatisfied sum - 13.5345
Cbc0038I Pass   1: suminf.    9.14303 (38) obj. 0.097981 iterations 60
Cbc0038I Pass   2: suminf.    8.19727 (35) obj. 0.097981 iterations 16
Cbc0038I Pass   3: suminf.    7.95650 (40) obj. 0.11722 iterations 15
Cbc0038I Pass   4: suminf.    7.89583 (27) obj. 1 iterations 45
Cbc0038I Pass   5: suminf.    6.65476 (24) obj. 1 iterations 22
Cbc0038I Pass   6: suminf.    6.65476 (24) obj. 1 iterations 3
Cbc0038I Pass   7: suminf.    5.90476 (17) obj. 1 iterations 4
Cbc0038I Pass   8: suminf.    4.57143 (14) obj. 1 iterations 10
Cbc0038I Pass   9: suminf.    4.86310 (15) obj. 1 iterations 31
Cbc0038I Pass  10: suminf.    4.80952 (17) obj. 1 iterations 3
Cbc0038I Pass  11: suminf.    4.47619 (17) obj. 1 iterations 4
Cbc0038I Pass  12: suminf.    5.48810 (15) obj. 1 iterations 13
Cbc0038I Pass  13: suminf.    4.57143 (12) obj. 1 iterations 13
Cbc0038I Pass  14: suminf.    4.57143 (12) obj. 1 iterations 2
Cbc0038I Pass  15: suminf.    4.52976 (15) obj. 1 iterations 21
Cbc0038I Pass  16: suminf.    4.47619 (17) obj. 1 iterations 2
Cbc0038I Pass  17: suminf.    5.48810 (15) obj. 1 iterations 11
Cbc0038I Pass  18: suminf.    4.57143 (12) obj. 1 iterations 14
Cbc0038I Pass  19: suminf.    4.57143 (12) obj. 1 iterations 2
Cbc0038I Pass  20: suminf.    4.52976 (15) obj. 1 iterations 25
Cbc0038I Pass  21: suminf.    4.47619 (17) obj. 1 iterations 4
Cbc0038I Pass  22: suminf.    5.23810 (16) obj. 1 iterations 9
Cbc0038I Pass  23: suminf.    4.83810 (13) obj. 1 iterations 9
Cbc0038I Pass  24: suminf.    4.07619 (15) obj. 1 iterations 7
Cbc0038I Pass  25: suminf.    4.79365 (13) obj. 1 iterations 23
Cbc0038I Pass  26: suminf.    4.57143 (12) obj. 1 iterations 12
Cbc0038I Pass  27: suminf.    4.52976 (15) obj. 1 iterations 24
Cbc0038I Pass  28: suminf.    4.23810 (12) obj. 1 iterations 15
Cbc0038I Pass  29: suminf.    4.86310 (15) obj. 1 iterations 22
Cbc0038I Pass  30: suminf.    9.55556 (34) obj. 1 iterations 88
Cbc0038I Pass  31: suminf.    4.93175 (17) obj. 1 iterations 60
Cbc0038I Pass  32: suminf.    4.32460 (17) obj. 1 iterations 7
Cbc0038I Pass  33: suminf.    3.26667 (11) obj. 1 iterations 36
Cbc0038I Pass  34: suminf.    3.26667 (11) obj. 1 iterations 12
Cbc0038I Pass  35: suminf.    4.00000 (11) obj. 1 iterations 32
Cbc0038I Pass  36: suminf.    3.00000 (10) obj. 1 iterations 19
Cbc0038I Pass  37: suminf.    4.33333 (10) obj. 1 iterations 32
Cbc0038I Pass  38: suminf.   10.50000 (38) obj. 1 iterations 77
Cbc0038I Pass  39: suminf.    3.28571 (14) obj. 1 iterations 54
Cbc0038I Pass  40: suminf.    3.28571 (14) obj. 1 iterations 8
Cbc0038I Pass  41: suminf.    3.33333 (8) obj. 1 iterations 33
Cbc0038I Pass  42: suminf.    2.33333 (8) obj. 1 iterations 32
Cbc0038I Pass  43: suminf.    3.33333 (8) obj. 1 iterations 25
Cbc0038I Pass  44: suminf.    2.33333 (8) obj. 1 iterations 15
Cbc0038I Pass  45: suminf.    7.78889 (28) obj. 1 iterations 68
Cbc0038I Pass  46: suminf.    3.75238 (14) obj. 1 iterations 51
Cbc0038I Pass  47: suminf.    2.95238 (11) obj. 1 iterations 12
Cbc0038I Pass  48: suminf.    2.83333 (10) obj. 1 iterations 21
Cbc0038I Pass  49: suminf.    1.91667 (9) obj. 1 iterations 14
Cbc0038I Pass  50: suminf.    1.91667 (9) obj. 1 iterations 5
Cbc0038I Pass  51: suminf.    2.50000 (9) obj. 1 iterations 15
Cbc0038I Pass  52: suminf.   11.31287 (35) obj. 1 iterations 72
Cbc0038I Pass  53: suminf.    3.00238 (16) obj. 1 iterations 58
Cbc0038I Pass  54: suminf.    4.66667 (17) obj. 1 iterations 22
Cbc0038I Pass  55: suminf.    3.40303 (17) obj. 1 iterations 26
Cbc0038I Pass  56: suminf.    4.31667 (16) obj. 1 iterations 21
Cbc0038I Pass  57: suminf.    9.91048 (34) obj. 1 iterations 58
Cbc0038I Pass  58: suminf.    4.26768 (18) obj. 1 iterations 56
Cbc0038I Pass  59: suminf.    4.17045 (19) obj. 1 iterations 10
Cbc0038I Pass  60: suminf.    4.25238 (14) obj. 1 iterations 29
Cbc0038I Pass  61: suminf.    2.68571 (11) obj. 1 iterations 26
Cbc0038I Pass  62: suminf.    3.01905 (11) obj. 1 iterations 9
Cbc0038I Pass  63: suminf.   11.87056 (33) obj. 1 iterations 71
Cbc0038I Pass  64: suminf.    6.18814 (27) obj. 1 iterations 61
Cbc0038I Pass  65: suminf.    5.68238 (25) obj. 1 iterations 1
Cbc0038I Pass  66: suminf.    5.08238 (25) obj. 1 iterations 4
Cbc0038I Pass  67: suminf.    5.65238 (24) obj. 1 iterations 16
Cbc0038I Pass  68: suminf.   11.16111 (39) obj. 1 iterations 72
Cbc0038I Pass  69: suminf.    8.35243 (32) obj. 1 iterations 44
Cbc0038I Pass  70: suminf.    5.70942 (26) obj. 1 iterations 18
Cbc0038I Pass  71: suminf.    2.66667 (16) obj. 1 iterations 18
Cbc0038I Pass  72: suminf.    5.18095 (16) obj. 1 iterations 27
Cbc0038I Pass  73: suminf.    3.91111 (18) obj. 1 iterations 24
Cbc0038I Pass  74: suminf.    4.28571 (17) obj. 1 iterations 31
Cbc0038I Pass  75: suminf.    3.71429 (11) obj. 1 iterations 7
Cbc0038I Pass  76: suminf.    3.33333 (8) obj. 1 iterations 15
Cbc0038I Pass  77: suminf.    3.10714 (13) obj. 1 iterations 5
Cbc0038I Pass  78: suminf.    3.20000 (9) obj. 1 iterations 9
Cbc0038I Pass  79: suminf.    2.97143 (9) obj. 1 iterations 6
Cbc0038I Pass  80: suminf.    7.66869 (23) obj. 1 iterations 58
Cbc0038I Pass  81: suminf.    3.70000 (13) obj. 1 iterations 43
Cbc0038I Pass  82: suminf.    3.66667 (9) obj. 1 iterations 26
Cbc0038I Pass  83: suminf.    2.54167 (13) obj. 1 iterations 12
Cbc0038I Pass  84: suminf.    3.53333 (10) obj. 1 iterations 9
Cbc0038I Pass  85: suminf.    2.40000 (9) obj. 1 iterations 18
Cbc0038I Pass  86: suminf.    3.66667 (9) obj. 1 iterations 10
Cbc0038I Pass  87: suminf.    7.82613 (29) obj. 1 iterations 68
Cbc0038I Pass  88: suminf.    6.72000 (20) obj. 1 iterations 48
Cbc0038I Pass  89: suminf.    4.96667 (19) obj. 1 iterations 6
Cbc0038I Pass  90: suminf.    4.96667 (19) obj. 1 iterations 1
Cbc0038I Pass  91: suminf.    2.40000 (9) obj. 1 iterations 35
Cbc0038I Pass  92: suminf.    2.40000 (9) obj. 1 iterations 1
Cbc0038I Pass  93: suminf.    3.33333 (8) obj. 1 iterations 13
Cbc0038I Pass  94: suminf.    3.10714 (13) obj. 1 iterations 2
Cbc0038I Pass  95: suminf.    3.20000 (9) obj. 1 iterations 7
Cbc0038I Pass  96: suminf.    2.97143 (9) obj. 1 iterations 5
Cbc0038I Pass  97: suminf.    9.77304 (35) obj. 1 iterations 66
Cbc0038I Pass  98: suminf.    6.93016 (25) obj. 1 iterations 40
Cbc0038I Pass  99: suminf.    6.58254 (25) obj. 1 iterations 8
Cbc0038I Pass 100: suminf.    8.40556 (27) obj. 1 iterations 73
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 258 rows 450 columns, reduced to 200 rows 194 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.58 seconds)
Cbc0038I Full problem 259 rows 450 columns, reduced to 257 rows 450 columns - too large
Cbc0038I After 1.63 seconds - Feasibility pump exiting - took 0.90 seconds
Cbc0012I Integer solution of 1 found by DiveCoefficient after 5503 iterations and 0 nodes (108.69 seconds)
Cbc0031I 43 added rows had average density of 73
Cbc0013I At root node, 43 cuts changed objective from 0 to 1 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 808 row cuts average 5.4 elements, 0 column cuts (1 active)  in 3.136 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1989 row cuts average 425.7 elements, 0 column cuts (0 active)  in 3.470 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.752 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 312 row cuts average 13.0 elements, 0 column cuts (0 active)  in 93.154 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 177 row cuts average 33.4 elements, 0 column cuts (0 active)  in 0.284 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 340 row cuts average 161.6 elements, 0 column cuts (0 active)  in 0.537 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 398 row cuts average 57.6 elements, 0 column cuts (0 active)  in 0.478 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1, took 5503 iterations and 0 nodes (108.70 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 100 times and created 808 cuts of which 1 were active after adding rounds of cuts (3.13624 seconds)
Gomory was tried 100 times and created 1989 cuts of which 0 were active after adding rounds of cuts (3.47041 seconds)
Knapsack was tried 100 times and created 53 cuts of which 0 were active after adding rounds of cuts (0.752108 seconds)
liftKnapsack was tried 100 times and created 312 cuts of which 0 were active after adding rounds of cuts (93.1545 seconds)
Clique was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.051092 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.276222 seconds)
MixedIntegerRounding2 was tried 100 times and created 177 cuts of which 0 were active after adding rounds of cuts (0.284041 seconds)
FlowCover was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.198498 seconds)
TwoMirCuts was tried 100 times and created 340 cuts of which 0 were active after adding rounds of cuts (0.536601 seconds)
ZeroHalf was tried 100 times and created 398 cuts of which 0 were active after adding rounds of cuts (0.478283 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               0
Total iterations:               5503
Time (CPU seconds):             108.63
Time (Wallclock seconds):       108.823
Total time (CPU seconds):       108.64   (Wallclock seconds):       108.835
