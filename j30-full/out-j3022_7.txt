Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3022/j3022_7.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3022_7.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.101214 seconds
Cgl0002I 20 variables fixed
Cgl0003I 24 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 24 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 211 rows, 537 columns (537 integer (537 of which binary)) and 9059 elements
Coin3009W Conflict graph built in 0.031 seconds, density: 2.017%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 537 objects (537 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 37 integers unsatisfied sum - 9.40449
Cbc0038I Pass   1: suminf.    1.56553 (11) obj. 0 iterations 46
Cbc0038I Pass   2: suminf.    1.69814 (9) obj. 0 iterations 48
Cbc0038I Pass   3: suminf.    0.74258 (6) obj. 0 iterations 31
Cbc0038I Pass   4: suminf.    0.71064 (8) obj. 0 iterations 9
Cbc0038I Pass   5: suminf.    0.53140 (4) obj. 0 iterations 30
Cbc0038I Pass   6: suminf.    0.50048 (6) obj. 0 iterations 18
Cbc0038I Pass   7: suminf.    1.33333 (5) obj. 0 iterations 25
Cbc0038I Pass   8: suminf.    1.30139 (8) obj. 0 iterations 15
Cbc0038I Pass   9: suminf.    1.33333 (4) obj. 0 iterations 20
Cbc0038I Pass  10: suminf.    0.98194 (7) obj. 0 iterations 20
Cbc0038I Pass  11: suminf.    0.44444 (2) obj. 0 iterations 15
Cbc0038I Pass  12: suminf.    0.41250 (4) obj. 0 iterations 18
Cbc0038I Pass  13: suminf.    0.44444 (2) obj. 0 iterations 19
Cbc0038I Pass  14: suminf.    7.84807 (32) obj. 0 iterations 88
Cbc0038I Pass  15: suminf.    2.31841 (20) obj. 0 iterations 49
Cbc0038I Pass  16: suminf.    4.33333 (16) obj. 0 iterations 50
Cbc0038I Pass  17: suminf.    2.52853 (17) obj. 0 iterations 29
Cbc0038I Pass  18: suminf.    3.20952 (13) obj. 0 iterations 63
Cbc0038I Pass  19: suminf.    1.72222 (10) obj. 0 iterations 25
Cbc0038I Pass  20: suminf.    0.91667 (7) obj. 0 iterations 25
Cbc0038I Pass  21: suminf.    2.14080 (11) obj. 0 iterations 37
Cbc0038I Pass  22: suminf.    1.91065 (11) obj. 0 iterations 20
Cbc0038I Pass  23: suminf.    1.22222 (8) obj. 0 iterations 28
Cbc0038I Pass  24: suminf.    1.03571 (8) obj. 0 iterations 14
Cbc0038I Pass  25: suminf.    2.27520 (12) obj. 0 iterations 29
Cbc0038I Pass  26: suminf.    2.10902 (12) obj. 0 iterations 21
Cbc0038I Pass  27: suminf.    2.84127 (12) obj. 0 iterations 43
Cbc0038I Pass  28: suminf.    1.91270 (11) obj. 0 iterations 10
Cbc0038I Pass  29: suminf.    1.03571 (8) obj. 0 iterations 26
Cbc0038I Pass  30: suminf.    2.27520 (12) obj. 0 iterations 34
Cbc0038I Pass  31: suminf.    2.10902 (12) obj. 0 iterations 22
Cbc0038I Pass  32: suminf.    2.84127 (12) obj. 0 iterations 46
Cbc0038I Pass  33: suminf.    1.91270 (11) obj. 0 iterations 10
Cbc0038I Pass  34: suminf.    1.03571 (8) obj. 0 iterations 24
Cbc0038I Pass  35: suminf.    2.27520 (12) obj. 0 iterations 31
Cbc0038I Pass  36: suminf.    2.10902 (12) obj. 0 iterations 31
Cbc0038I Pass  37: suminf.    2.84127 (12) obj. 0 iterations 40
Cbc0038I Pass  38: suminf.    5.94050 (30) obj. 0 iterations 75
Cbc0038I Pass  39: suminf.    1.78968 (12) obj. 0 iterations 59
Cbc0038I Pass  40: suminf.    3.22346 (13) obj. 0 iterations 49
Cbc0038I Pass  41: suminf.    1.79206 (13) obj. 0 iterations 29
Cbc0038I Pass  42: suminf.    3.25714 (10) obj. 0 iterations 44
Cbc0038I Pass  43: suminf.    2.61143 (12) obj. 0 iterations 23
Cbc0038I Pass  44: suminf.    1.89714 (12) obj. 0 iterations 3
Cbc0038I Pass  45: suminf.    3.63800 (12) obj. 0 iterations 43
Cbc0038I Pass  46: suminf.    2.00952 (11) obj. 0 iterations 33
Cbc0038I Pass  47: suminf.    2.84762 (10) obj. 0 iterations 41
Cbc0038I Pass  48: suminf.    0.57143 (4) obj. 0 iterations 21
Cbc0038I Pass  49: suminf.    1.28571 (4) obj. 0 iterations 23
Cbc0038I Pass  50: suminf.    0.57143 (4) obj. 0 iterations 17
Cbc0038I Pass  51: suminf.    1.28571 (4) obj. 0 iterations 22
Cbc0038I Pass  52: suminf.    5.09335 (23) obj. 0 iterations 55
Cbc0038I Pass  53: suminf.    2.89683 (13) obj. 0 iterations 42
Cbc0038I Pass  54: suminf.    3.27448 (12) obj. 0 iterations 44
Cbc0038I Pass  55: suminf.    1.57083 (10) obj. 0 iterations 23
Cbc0038I Pass  56: suminf.    3.20408 (11) obj. 0 iterations 41
Cbc0038I Pass  57: suminf.    3.19048 (9) obj. 0 iterations 28
Cbc0038I Pass  58: suminf.    2.63155 (11) obj. 0 iterations 42
Cbc0038I Pass  59: suminf.    2.15617 (12) obj. 0 iterations 20
Cbc0038I Pass  60: suminf.    2.83929 (11) obj. 0 iterations 27
Cbc0038I Pass  61: suminf.    2.65079 (9) obj. 0 iterations 21
Cbc0038I Pass  62: suminf.    2.15873 (10) obj. 0 iterations 33
Cbc0038I Pass  63: suminf.    6.23603 (31) obj. 0 iterations 92
Cbc0038I Pass  64: suminf.    2.87428 (19) obj. 0 iterations 70
Cbc0038I Pass  65: suminf.    4.66533 (13) obj. 0 iterations 43
Cbc0038I Pass  66: suminf.    2.62912 (14) obj. 0 iterations 27
Cbc0038I Pass  67: suminf.    3.49603 (13) obj. 0 iterations 36
Cbc0038I Pass  68: suminf.    2.45408 (13) obj. 0 iterations 33
Cbc0038I Pass  69: suminf.    2.37470 (16) obj. 0 iterations 20
Cbc0038I Pass  70: suminf.    3.05011 (14) obj. 0 iterations 46
Cbc0038I Pass  71: suminf.    2.86763 (14) obj. 0 iterations 8
Cbc0038I Pass  72: suminf.    3.45238 (14) obj. 0 iterations 61
Cbc0038I Pass  73: suminf.    2.45408 (13) obj. 0 iterations 37
Cbc0038I Pass  74: suminf.    2.37470 (16) obj. 0 iterations 21
Cbc0038I Pass  75: suminf.    3.05011 (14) obj. 0 iterations 47
Cbc0038I Pass  76: suminf.    2.86763 (14) obj. 0 iterations 10
Cbc0038I Pass  77: suminf.    3.45238 (14) obj. 0 iterations 62
Cbc0038I Pass  78: suminf.    2.45408 (13) obj. 0 iterations 37
Cbc0038I Pass  79: suminf.    2.37470 (16) obj. 0 iterations 21
Cbc0038I Pass  80: suminf.    3.05011 (14) obj. 0 iterations 44
Cbc0038I Pass  81: suminf.    2.86763 (14) obj. 0 iterations 9
Cbc0038I Pass  82: suminf.    3.45238 (14) obj. 0 iterations 57
Cbc0038I Pass  83: suminf.    2.45408 (13) obj. 0 iterations 35
Cbc0038I Pass  84: suminf.    2.37470 (16) obj. 0 iterations 19
Cbc0038I Pass  85: suminf.    3.05011 (14) obj. 0 iterations 44
Cbc0038I Pass  86: suminf.    2.86763 (14) obj. 0 iterations 8
Cbc0038I Pass  87: suminf.    3.45238 (14) obj. 0 iterations 63
Cbc0038I Pass  88: suminf.    2.45408 (13) obj. 0 iterations 37
Cbc0038I Pass  89: suminf.    2.37470 (16) obj. 0 iterations 19
Cbc0038I Pass  90: suminf.    3.29651 (12) obj. 0 iterations 44
Cbc0038I Pass  91: suminf.    3.03315 (16) obj. 0 iterations 26
Cbc0038I Pass  92: suminf.    2.66005 (12) obj. 0 iterations 42
Cbc0038I Pass  93: suminf.    2.55423 (12) obj. 0 iterations 6
Cbc0038I Pass  94: suminf.    3.22336 (13) obj. 0 iterations 45
Cbc0038I Pass  95: suminf.    2.80617 (15) obj. 0 iterations 23
Cbc0038I Pass  96: suminf.    2.57540 (12) obj. 0 iterations 39
Cbc0038I Pass  97: suminf.    9.57425 (38) obj. 0 iterations 101
Cbc0038I Pass  98: suminf.    2.58881 (20) obj. 0 iterations 74
Cbc0038I Pass  99: suminf.    2.56608 (19) obj. 0 iterations 2
Cbc0038I Pass 100: suminf.    6.80622 (39) obj. 0 iterations 64
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 333 integers at bound fixed and 0 continuous
Cbc0038I Full problem 211 rows 537 columns, reduced to 180 rows 199 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.11 seconds)
Cbc0038I Full problem 212 rows 537 columns, reduced to 212 rows 537 columns - too large
Cbc0038I After 3.15 seconds - Feasibility pump exiting - took 1.75 seconds
Cbc0031I 31 added rows had average density of 145.22581
Cbc0013I At root node, 31 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.499 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 178 row cuts average 475.3 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 165 row cuts average 8.7 elements, 0 column cuts (0 active)  in 4.940 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 9 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 20 row cuts average 58.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 180 row cuts average 377.8 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 41 row cuts average 112.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (10.01 seconds)
Cbc0010I After 14 nodes, 14 on tree, 1e+50 best solution, best possible 0 (10.71 seconds)
Cbc0004I Integer solution of 0 found after 1907 iterations and 34 nodes (11.17 seconds)
Cbc0001I Search completed - best objective 0, took 1907 iterations and 34 nodes (11.18 seconds)
Cbc0032I Strong branching done 630 times (9376 iterations), fathomed 1 nodes and fixed 49 variables
Cbc0035I Maximum depth 21, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.499315 seconds)
Gomory was tried 10 times and created 178 cuts of which 0 were active after adding rounds of cuts (0.197547 seconds)
Knapsack was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.058372 seconds)
liftKnapsack was tried 10 times and created 165 cuts of which 0 were active after adding rounds of cuts (4.93985 seconds)
Clique was tried 10 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.00382 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.012008 seconds)
MixedIntegerRounding2 was tried 10 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.03864 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002436 seconds)
TwoMirCuts was tried 10 times and created 180 cuts of which 0 were active after adding rounds of cuts (0.243757 seconds)
ZeroHalf was tried 10 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.026347 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               34
Total iterations:               1907
Time (CPU seconds):             11.2151
Time (Wallclock seconds):       11.2215
Total time (CPU seconds):       11.2315   (Wallclock seconds):       11.2378
