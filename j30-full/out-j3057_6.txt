Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3057/j3057_6.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3057_6.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.08967 seconds
Cgl0002I 12 variables fixed
Cgl0003I 54 fixed, 0 tightened bounds, 6 strengthened rows, 10 substitutions
Cgl0003I 15 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 261 rows, 416 columns (416 integer (415 of which binary)) and 4265 elements
Coin3009W Conflict graph built in 0.009 seconds, density: 1.352%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 416 objects (416 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 66 integers unsatisfied sum - 18.6335
Cbc0038I Pass   1: suminf.   11.87995 (49) obj. 0.742857 iterations 123
Cbc0038I Pass   2: suminf.   11.41227 (37) obj. 1 iterations 12
Cbc0038I Pass   3: suminf.    6.90079 (26) obj. 2 iterations 53
Cbc0038I Pass   4: suminf.    6.90079 (26) obj. 2 iterations 4
Cbc0038I Pass   5: suminf.    7.43280 (25) obj. 2 iterations 81
Cbc0038I Pass   6: suminf.    6.65278 (24) obj. 2 iterations 26
Cbc0038I Pass   7: suminf.    6.65278 (24) obj. 2 iterations 3
Cbc0038I Pass   8: suminf.    6.42130 (26) obj. 2 iterations 38
Cbc0038I Pass   9: suminf.    6.42130 (26) obj. 2 iterations 10
Cbc0038I Pass  10: suminf.    6.38833 (25) obj. 2 iterations 26
Cbc0038I Pass  11: suminf.    6.08796 (25) obj. 2 iterations 32
Cbc0038I Pass  12: suminf.    7.59374 (28) obj. 2 iterations 80
Cbc0038I Pass  13: suminf.    6.95476 (26) obj. 2 iterations 44
Cbc0038I Pass  14: suminf.    7.04365 (23) obj. 2 iterations 45
Cbc0038I Pass  15: suminf.    7.01032 (24) obj. 2 iterations 27
Cbc0038I Pass  16: suminf.    6.97987 (30) obj. 2 iterations 78
Cbc0038I Pass  17: suminf.    6.97987 (30) obj. 2 iterations 10
Cbc0038I Pass  18: suminf.    6.10460 (23) obj. 2 iterations 76
Cbc0038I Pass  19: suminf.    5.11349 (18) obj. 2 iterations 29
Cbc0038I Pass  20: suminf.    3.81349 (14) obj. 2 iterations 10
Cbc0038I Pass  21: suminf.    4.91667 (16) obj. 2 iterations 37
Cbc0038I Pass  22: suminf.    4.51455 (16) obj. 2 iterations 14
Cbc0038I Pass  23: suminf.    4.44048 (16) obj. 2 iterations 21
Cbc0038I Pass  24: suminf.    4.70238 (14) obj. 2 iterations 39
Cbc0038I Pass  25: suminf.    3.86905 (16) obj. 2 iterations 27
Cbc0038I Pass  26: suminf.    3.86905 (16) obj. 2 iterations 14
Cbc0038I Pass  27: suminf.    4.67381 (14) obj. 2 iterations 50
Cbc0038I Pass  28: suminf.    4.25159 (14) obj. 2 iterations 16
Cbc0038I Pass  29: suminf.    4.16693 (16) obj. 2 iterations 10
Cbc0038I Pass  30: suminf.    4.55014 (18) obj. 2 iterations 56
Cbc0038I Pass  31: suminf.    4.14116 (16) obj. 2 iterations 26
Cbc0038I Pass  32: suminf.    3.84524 (12) obj. 2 iterations 51
Cbc0038I Pass  33: suminf.    3.28571 (14) obj. 2 iterations 26
Cbc0038I Pass  34: suminf.    4.53798 (15) obj. 2 iterations 34
Cbc0038I Pass  35: suminf.    3.99603 (15) obj. 2 iterations 24
Cbc0038I Pass  36: suminf.    4.46429 (12) obj. 2 iterations 38
Cbc0038I Pass  37: suminf.    3.20238 (12) obj. 2 iterations 27
Cbc0038I Pass  38: suminf.    3.03571 (12) obj. 2 iterations 2
Cbc0038I Pass  39: suminf.    3.67857 (11) obj. 2 iterations 24
Cbc0038I Pass  40: suminf.   10.73060 (41) obj. 2 iterations 84
Cbc0038I Pass  41: suminf.    8.02381 (24) obj. 2 iterations 64
Cbc0038I Pass  42: suminf.    7.28439 (25) obj. 2 iterations 23
Cbc0038I Pass  43: suminf.    6.28704 (24) obj. 2 iterations 19
Cbc0038I Pass  44: suminf.    5.00397 (21) obj. 2 iterations 65
Cbc0038I Pass  45: suminf.    4.81349 (20) obj. 2 iterations 23
Cbc0038I Pass  46: suminf.    5.29762 (17) obj. 2 iterations 43
Cbc0038I Pass  47: suminf.    4.58333 (15) obj. 2 iterations 41
Cbc0038I Pass  48: suminf.    5.25198 (19) obj. 2 iterations 32
Cbc0038I Pass  49: suminf.    4.63889 (15) obj. 2 iterations 12
Cbc0038I Pass  50: suminf.    4.41667 (16) obj. 2 iterations 14
Cbc0038I Pass  51: suminf.    5.41865 (18) obj. 2 iterations 26
Cbc0038I Pass  52: suminf.    4.80556 (14) obj. 2 iterations 16
Cbc0038I Pass  53: suminf.    4.58333 (15) obj. 2 iterations 19
Cbc0038I Pass  54: suminf.    5.25198 (19) obj. 2 iterations 34
Cbc0038I Pass  55: suminf.    4.63889 (15) obj. 2 iterations 12
Cbc0038I Pass  56: suminf.    4.41667 (16) obj. 2 iterations 15
Cbc0038I Pass  57: suminf.    5.41865 (18) obj. 2 iterations 25
Cbc0038I Pass  58: suminf.    4.80556 (14) obj. 2 iterations 12
Cbc0038I Pass  59: suminf.    4.58333 (15) obj. 2 iterations 16
Cbc0038I Pass  60: suminf.    5.25198 (19) obj. 2 iterations 26
Cbc0038I Pass  61: suminf.    4.63889 (15) obj. 2 iterations 12
Cbc0038I Pass  62: suminf.    4.41667 (16) obj. 2 iterations 16
Cbc0038I Pass  63: suminf.    5.41865 (18) obj. 2 iterations 22
Cbc0038I Pass  64: suminf.    4.80556 (14) obj. 2 iterations 10
Cbc0038I Pass  65: suminf.    4.58333 (15) obj. 2 iterations 15
Cbc0038I Pass  66: suminf.    5.25198 (19) obj. 2 iterations 26
Cbc0038I Pass  67: suminf.    4.63889 (15) obj. 2 iterations 14
Cbc0038I Pass  68: suminf.    4.41667 (16) obj. 2 iterations 18
Cbc0038I Pass  69: suminf.    5.41865 (18) obj. 2 iterations 26
Cbc0038I Pass  70: suminf.    4.80556 (14) obj. 2 iterations 11
Cbc0038I Pass  71: suminf.    4.58333 (15) obj. 2 iterations 13
Cbc0038I Pass  72: suminf.    5.25198 (19) obj. 2 iterations 26
Cbc0038I Pass  73: suminf.    4.63889 (15) obj. 2 iterations 12
Cbc0038I Pass  74: suminf.    4.41667 (16) obj. 2 iterations 17
Cbc0038I Pass  75: suminf.    5.41865 (18) obj. 2 iterations 23
Cbc0038I Pass  76: suminf.    4.80556 (14) obj. 2 iterations 12
Cbc0038I Pass  77: suminf.    4.58333 (15) obj. 2 iterations 18
Cbc0038I Pass  78: suminf.    5.25198 (19) obj. 2 iterations 30
Cbc0038I Pass  79: suminf.    4.63889 (15) obj. 2 iterations 14
Cbc0038I Pass  80: suminf.    4.41667 (16) obj. 2 iterations 19
Cbc0038I Pass  81: suminf.    5.41865 (18) obj. 2 iterations 26
Cbc0038I Pass  82: suminf.    4.80556 (14) obj. 2 iterations 17
Cbc0038I Pass  83: suminf.    4.58333 (15) obj. 2 iterations 15
Cbc0038I Pass  84: suminf.    5.25198 (19) obj. 2 iterations 26
Cbc0038I Pass  85: suminf.    4.63889 (15) obj. 2 iterations 16
Cbc0038I Pass  86: suminf.    4.41667 (16) obj. 2 iterations 19
Cbc0038I Pass  87: suminf.    5.41865 (18) obj. 2 iterations 31
Cbc0038I Pass  88: suminf.    4.80556 (14) obj. 2 iterations 12
Cbc0038I Pass  89: suminf.    4.58333 (15) obj. 2 iterations 16
Cbc0038I Pass  90: suminf.    5.25198 (19) obj. 2 iterations 27
Cbc0038I Pass  91: suminf.    4.63889 (15) obj. 2 iterations 14
Cbc0038I Pass  92: suminf.    4.41667 (16) obj. 2 iterations 17
Cbc0038I Pass  93: suminf.    5.41865 (18) obj. 2 iterations 23
Cbc0038I Pass  94: suminf.    4.80556 (14) obj. 2 iterations 14
Cbc0038I Pass  95: suminf.    4.58333 (15) obj. 2 iterations 16
Cbc0038I Pass  96: suminf.    5.25198 (19) obj. 2 iterations 34
Cbc0038I Pass  97: suminf.    4.63889 (15) obj. 2 iterations 14
Cbc0038I Pass  98: suminf.    4.41667 (16) obj. 2 iterations 16
Cbc0038I Pass  99: suminf.    4.79299 (18) obj. 2 iterations 27
Cbc0038I Pass 100: suminf.    8.56562 (45) obj. 2 iterations 94
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 255 integers at bound fixed and 0 continuous
Cbc0038I Full problem 261 rows 416 columns, reduced to 165 rows 143 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.58 seconds)
Cbc0038I After 1.58 seconds - Feasibility pump exiting - took 0.89 seconds
Cbc0031I 91 added rows had average density of 23.846154
Cbc0013I At root node, 91 cuts changed objective from 0 to 1.4999785 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1015 row cuts average 5.6 elements, 4 column cuts (10 active)  in 2.968 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1054 row cuts average 353.2 elements, 0 column cuts (0 active)  in 2.379 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 112 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.678 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 1752 row cuts average 9.2 elements, 0 column cuts (0 active)  in 177.724 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 56 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.874 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 140 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 487 row cuts average 101.7 elements, 0 column cuts (0 active)  in 0.888 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 270 row cuts average 30.2 elements, 0 column cuts (0 active)  in 1.367 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (195.97 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2 (199.40 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2 (202.23 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2 (204.21 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 2 (207.58 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 2 (211.01 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 2 (212.89 seconds)
Cbc0016I Integer solution of 2 found by strong branching after 16036 iterations and 10 nodes (213.38 seconds)
Cbc0001I Search completed - best objective 2, took 16036 iterations and 10 nodes (213.38 seconds)
Cbc0032I Strong branching done 358 times (12145 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 2
Probing was tried 125 times and created 1307 cuts of which 6 were active after adding rounds of cuts (3.08854 seconds)
Gomory was tried 125 times and created 1056 cuts of which 0 were active after adding rounds of cuts (2.43457 seconds)
Knapsack was tried 125 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.864232 seconds)
liftKnapsack was tried 125 times and created 2128 cuts of which 0 were active after adding rounds of cuts (192.267 seconds)
Clique was tried 100 times and created 56 cuts of which 0 were active after adding rounds of cuts (0.198649 seconds)
OddWheel was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.873722 seconds)
MixedIntegerRounding2 was tried 125 times and created 199 cuts of which 0 were active after adding rounds of cuts (0.291425 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043825 seconds)
TwoMirCuts was tried 125 times and created 597 cuts of which 0 were active after adding rounds of cuts (0.988337 seconds)
ZeroHalf was tried 125 times and created 367 cuts of which 0 were active after adding rounds of cuts (1.49749 seconds)

Result - Optimal solution found
Objective value:                2
Enumerated nodes:               10
Total iterations:               16036
Time (CPU seconds):             212.702
Time (Wallclock seconds):       213.455
Total time (CPU seconds):       212.711   (Wallclock seconds):       213.466
