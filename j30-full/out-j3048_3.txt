Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3048/j3048_3.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3048_3.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.482377 - 0.138758 seconds
Cgl0002I 12 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 300 rows, 775 columns (775 integer (774 of which binary)) and 12244 elements
Coin3009W Conflict graph built in 0.041 seconds, density: 1.227%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 775 objects (775 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 72 integers unsatisfied sum - 20.8062
Cbc0038I Pass   1: suminf.   13.61153 (53) obj. 1.26965 iterations 111
Cbc0038I Pass   2: suminf.    7.28902 (32) obj. 3 iterations 46
Cbc0038I Pass   3: suminf.    4.64068 (22) obj. 3 iterations 49
Cbc0038I Pass   4: suminf.    4.67443 (15) obj. 3 iterations 72
Cbc0038I Pass   5: suminf.    3.45903 (14) obj. 3 iterations 39
Cbc0038I Pass   6: suminf.    3.35511 (13) obj. 3 iterations 13
Cbc0038I Pass   7: suminf.    4.18084 (16) obj. 3 iterations 38
Cbc0038I Pass   8: suminf.    3.17331 (14) obj. 3 iterations 42
Cbc0038I Pass   9: suminf.    3.06940 (13) obj. 3 iterations 16
Cbc0038I Pass  10: suminf.    3.83730 (15) obj. 3 iterations 24
Cbc0038I Pass  11: suminf.    3.80083 (14) obj. 3 iterations 29
Cbc0038I Pass  12: suminf.    4.01872 (16) obj. 3 iterations 36
Cbc0038I Pass  13: suminf.    3.94717 (15) obj. 3 iterations 33
Cbc0038I Pass  14: suminf.    4.11504 (14) obj. 3 iterations 49
Cbc0038I Pass  15: suminf.    3.35511 (13) obj. 3 iterations 28
Cbc0038I Pass  16: suminf.    4.18084 (16) obj. 3 iterations 34
Cbc0038I Pass  17: suminf.    3.17331 (14) obj. 3 iterations 42
Cbc0038I Pass  18: suminf.    3.06940 (13) obj. 3 iterations 11
Cbc0038I Pass  19: suminf.    3.83730 (15) obj. 3 iterations 23
Cbc0038I Pass  20: suminf.    3.80083 (14) obj. 3 iterations 23
Cbc0038I Pass  21: suminf.    3.94717 (15) obj. 3 iterations 40
Cbc0038I Pass  22: suminf.    3.94717 (15) obj. 3 iterations 12
Cbc0038I Pass  23: suminf.    3.67348 (13) obj. 3 iterations 36
Cbc0038I Pass  24: suminf.    3.14082 (13) obj. 3 iterations 36
Cbc0038I Pass  25: suminf.    4.18084 (16) obj. 3 iterations 39
Cbc0038I Pass  26: suminf.    3.17331 (14) obj. 3 iterations 45
Cbc0038I Pass  27: suminf.    3.06940 (13) obj. 3 iterations 16
Cbc0038I Pass  28: suminf.    3.83730 (15) obj. 3 iterations 27
Cbc0038I Pass  29: suminf.    3.80083 (14) obj. 3 iterations 30
Cbc0038I Pass  30: suminf.    4.01872 (16) obj. 3 iterations 36
Cbc0038I Pass  31: suminf.    3.94717 (15) obj. 3 iterations 33
Cbc0038I Pass  32: suminf.    3.67348 (13) obj. 3 iterations 37
Cbc0038I Pass  33: suminf.    3.14082 (13) obj. 3 iterations 32
Cbc0038I Pass  34: suminf.    4.18084 (16) obj. 3 iterations 35
Cbc0038I Pass  35: suminf.    3.17331 (14) obj. 3 iterations 46
Cbc0038I Pass  36: suminf.    3.06940 (13) obj. 3 iterations 12
Cbc0038I Pass  37: suminf.    3.83730 (15) obj. 3 iterations 29
Cbc0038I Pass  38: suminf.    3.80083 (14) obj. 3 iterations 27
Cbc0038I Pass  39: suminf.    4.01872 (16) obj. 3 iterations 40
Cbc0038I Pass  40: suminf.    3.94717 (15) obj. 3 iterations 33
Cbc0038I Pass  41: suminf.    4.11504 (14) obj. 3 iterations 53
Cbc0038I Pass  42: suminf.    3.35511 (13) obj. 3 iterations 33
Cbc0038I Pass  43: suminf.    4.18084 (16) obj. 3 iterations 37
Cbc0038I Pass  44: suminf.    3.17331 (14) obj. 3 iterations 50
Cbc0038I Pass  45: suminf.    3.06940 (13) obj. 3 iterations 16
Cbc0038I Pass  46: suminf.    3.83730 (15) obj. 3 iterations 29
Cbc0038I Pass  47: suminf.    3.80083 (14) obj. 3 iterations 29
Cbc0038I Pass  48: suminf.    4.01872 (16) obj. 3 iterations 40
Cbc0038I Pass  49: suminf.    3.94717 (15) obj. 3 iterations 37
Cbc0038I Pass  50: suminf.    4.11504 (14) obj. 3 iterations 51
Cbc0038I Pass  51: suminf.    3.35511 (13) obj. 3 iterations 31
Cbc0038I Pass  52: suminf.    4.18084 (16) obj. 3 iterations 39
Cbc0038I Pass  53: suminf.    3.17331 (14) obj. 3 iterations 41
Cbc0038I Pass  54: suminf.    3.06940 (13) obj. 3 iterations 15
Cbc0038I Pass  55: suminf.    3.83730 (15) obj. 3 iterations 31
Cbc0038I Pass  56: suminf.    3.80083 (14) obj. 3 iterations 25
Cbc0038I Pass  57: suminf.    4.01872 (16) obj. 3 iterations 38
Cbc0038I Pass  58: suminf.    3.94717 (15) obj. 3 iterations 33
Cbc0038I Pass  59: suminf.    3.44838 (12) obj. 3 iterations 56
Cbc0038I Pass  60: suminf.    3.35511 (13) obj. 3 iterations 28
Cbc0038I Pass  61: suminf.    4.18084 (16) obj. 3 iterations 34
Cbc0038I Pass  62: suminf.    3.17331 (14) obj. 3 iterations 45
Cbc0038I Pass  63: suminf.    3.06940 (13) obj. 3 iterations 12
Cbc0038I Pass  64: suminf.    3.83730 (15) obj. 3 iterations 28
Cbc0038I Pass  65: suminf.    3.80083 (14) obj. 3 iterations 28
Cbc0038I Pass  66: suminf.    4.01872 (16) obj. 3 iterations 37
Cbc0038I Pass  67: suminf.    3.94717 (15) obj. 3 iterations 36
Cbc0038I Pass  68: suminf.    4.11504 (14) obj. 3 iterations 51
Cbc0038I Pass  69: suminf.    3.35511 (13) obj. 3 iterations 29
Cbc0038I Pass  70: suminf.    4.18084 (16) obj. 3 iterations 36
Cbc0038I Pass  71: suminf.    3.17331 (14) obj. 3 iterations 49
Cbc0038I Pass  72: suminf.    3.06940 (13) obj. 3 iterations 15
Cbc0038I Pass  73: suminf.    3.83730 (15) obj. 3 iterations 29
Cbc0038I Pass  74: suminf.    3.80083 (14) obj. 3 iterations 29
Cbc0038I Pass  75: suminf.    4.01872 (16) obj. 3 iterations 36
Cbc0038I Pass  76: suminf.    3.94717 (15) obj. 3 iterations 30
Cbc0038I Pass  77: suminf.    4.11504 (14) obj. 3 iterations 48
Cbc0038I Pass  78: suminf.    3.35511 (13) obj. 3 iterations 26
Cbc0038I Pass  79: suminf.    4.18084 (16) obj. 3 iterations 30
Cbc0038I Pass  80: suminf.    3.17331 (14) obj. 3 iterations 39
Cbc0038I Pass  81: suminf.    3.06940 (13) obj. 3 iterations 14
Cbc0038I Pass  82: suminf.    3.35511 (13) obj. 3 iterations 19
Cbc0038I Pass  83: suminf.    3.35511 (13) obj. 3 iterations 24
Cbc0038I Pass  84: suminf.    4.18084 (16) obj. 3 iterations 30
Cbc0038I Pass  85: suminf.    3.17331 (14) obj. 3 iterations 40
Cbc0038I Pass  86: suminf.    3.06940 (13) obj. 3 iterations 14
Cbc0038I Pass  87: suminf.    3.35511 (13) obj. 3 iterations 22
Cbc0038I Pass  88: suminf.    3.35511 (13) obj. 3 iterations 20
Cbc0038I Pass  89: suminf.    4.18084 (16) obj. 3 iterations 28
Cbc0038I Pass  90: suminf.    3.17331 (14) obj. 3 iterations 42
Cbc0038I Pass  91: suminf.    3.06940 (13) obj. 3 iterations 14
Cbc0038I Pass  92: suminf.    3.83730 (15) obj. 3 iterations 28
Cbc0038I Pass  93: suminf.    3.80083 (14) obj. 3 iterations 24
Cbc0038I Pass  94: suminf.    4.01872 (16) obj. 3 iterations 34
Cbc0038I Pass  95: suminf.    3.94717 (15) obj. 3 iterations 32
Cbc0038I Pass  96: suminf.    4.11504 (14) obj. 3 iterations 55
Cbc0038I Pass  97: suminf.    3.35511 (13) obj. 3 iterations 29
Cbc0038I Pass  98: suminf.    4.18084 (16) obj. 3 iterations 30
Cbc0038I Pass  99: suminf.    3.17331 (14) obj. 3 iterations 43
Cbc0038I Pass 100: suminf.    9.38015 (33) obj. 3 iterations 135
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 640 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (4.20 seconds)
Cbc0038I After 4.20 seconds - Feasibility pump exiting - took 2.72 seconds
Cbc0031I 40 added rows had average density of 43.6
Cbc0013I At root node, 40 cuts changed objective from 0.48237664 to 2 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 250 row cuts average 10.5 elements, 2 column cuts (22 active)  in 0.534 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 259 row cuts average 459.6 elements, 0 column cuts (0 active)  in 0.490 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 139 row cuts average 23.5 elements, 0 column cuts (0 active)  in 32.815 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 4 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 152 row cuts average 59.7 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 328 row cuts average 164.6 elements, 0 column cuts (0 active)  in 0.358 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 101 row cuts average 54.5 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (40.20 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2 (44.75 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2 (53.56 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2 (64.11 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 2 (70.16 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 2 (77.00 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 2 (79.77 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 2 (82.86 seconds)
Cbc0010I After 9 nodes, 8 on tree, 1e+50 best solution, best possible 2 (87.65 seconds)
Cbc0010I After 10 nodes, 9 on tree, 1e+50 best solution, best possible 2 (90.78 seconds)
Cbc0010I After 13 nodes, 9 on tree, 1e+50 best solution, best possible 2 (93.03 seconds)
Cbc0010I After 15 nodes, 8 on tree, 1e+50 best solution, best possible 2 (97.03 seconds)
Cbc0010I After 16 nodes, 9 on tree, 1e+50 best solution, best possible 2 (98.24 seconds)
Cbc0010I After 18 nodes, 9 on tree, 1e+50 best solution, best possible 2 (100.42 seconds)
Cbc0010I After 19 nodes, 9 on tree, 1e+50 best solution, best possible 2 (101.59 seconds)
Cbc0010I After 22 nodes, 10 on tree, 1e+50 best solution, best possible 2 (103.05 seconds)
Cbc0010I After 24 nodes, 10 on tree, 1e+50 best solution, best possible 2 (106.28 seconds)
Cbc0010I After 26 nodes, 10 on tree, 1e+50 best solution, best possible 2 (111.11 seconds)
Cbc0010I After 28 nodes, 10 on tree, 1e+50 best solution, best possible 2 (113.27 seconds)
Cbc0010I After 30 nodes, 10 on tree, 1e+50 best solution, best possible 2 (117.74 seconds)
Cbc0010I After 31 nodes, 11 on tree, 1e+50 best solution, best possible 2 (118.69 seconds)
Cbc0010I After 36 nodes, 9 on tree, 1e+50 best solution, best possible 2 (121.16 seconds)
Cbc0010I After 37 nodes, 10 on tree, 1e+50 best solution, best possible 2 (122.96 seconds)
Cbc0010I After 38 nodes, 11 on tree, 1e+50 best solution, best possible 2 (125.81 seconds)
Cbc0010I After 39 nodes, 12 on tree, 1e+50 best solution, best possible 2 (129.71 seconds)
Cbc0010I After 45 nodes, 10 on tree, 1e+50 best solution, best possible 2 (133.55 seconds)
Cbc0010I After 46 nodes, 11 on tree, 1e+50 best solution, best possible 2 (135.95 seconds)
Cbc0010I After 48 nodes, 11 on tree, 1e+50 best solution, best possible 2 (139.93 seconds)
Cbc0010I After 49 nodes, 12 on tree, 1e+50 best solution, best possible 2 (142.32 seconds)
Cbc0010I After 53 nodes, 10 on tree, 1e+50 best solution, best possible 2 (144.98 seconds)
Cbc0010I After 55 nodes, 11 on tree, 1e+50 best solution, best possible 2 (147.92 seconds)
Cbc0010I After 61 nodes, 6 on tree, 1e+50 best solution, best possible 2 (150.58 seconds)
Cbc0010I After 62 nodes, 7 on tree, 1e+50 best solution, best possible 2 (154.02 seconds)
Cbc0010I After 65 nodes, 7 on tree, 1e+50 best solution, best possible 2 (155.63 seconds)
Cbc0010I After 66 nodes, 7 on tree, 1e+50 best solution, best possible 2 (156.76 seconds)
Cbc0010I After 71 nodes, 4 on tree, 1e+50 best solution, best possible 2 (161.24 seconds)
Cbc0010I After 73 nodes, 4 on tree, 1e+50 best solution, best possible 2 (165.50 seconds)
Cbc0010I After 82 nodes, 2 on tree, 1e+50 best solution, best possible 2 (168.68 seconds)
Cbc0010I After 83 nodes, 2 on tree, 1e+50 best solution, best possible 2 (174.39 seconds)
Cbc0010I After 84 nodes, 2 on tree, 1e+50 best solution, best possible 2 (180.66 seconds)
Cbc0010I After 86 nodes, 1 on tree, 1e+50 best solution, best possible 3 (181.89 seconds)
Cbc0010I After 87 nodes, 2 on tree, 1e+50 best solution, best possible 3 (182.92 seconds)
Cbc0010I After 88 nodes, 3 on tree, 1e+50 best solution, best possible 3 (189.91 seconds)
Cbc0010I After 89 nodes, 4 on tree, 1e+50 best solution, best possible 3 (190.63 seconds)
Cbc0010I After 90 nodes, 5 on tree, 1e+50 best solution, best possible 3 (191.40 seconds)
Cbc0010I After 91 nodes, 6 on tree, 1e+50 best solution, best possible 3 (193.34 seconds)
Cbc0010I After 92 nodes, 7 on tree, 1e+50 best solution, best possible 3 (194.16 seconds)
Cbc0010I After 93 nodes, 7 on tree, 1e+50 best solution, best possible 3 (195.68 seconds)
Cbc0010I After 99 nodes, 9 on tree, 1e+50 best solution, best possible 3 (196.69 seconds)
Cbc0010I After 103 nodes, 11 on tree, 1e+50 best solution, best possible 3 (197.62 seconds)
Cbc0010I After 107 nodes, 13 on tree, 1e+50 best solution, best possible 3 (198.66 seconds)
Cbc0004I Integer solution of 3 found after 14763 iterations and 108 nodes (198.78 seconds)
Cbc0001I Search completed - best objective 3, took 14763 iterations and 108 nodes (198.78 seconds)
Cbc0032I Strong branching done 1434 times (30665 iterations), fathomed 2 nodes and fixed 43 variables
Cbc0035I Maximum depth 21, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.482377 to 2
Probing was tried 92 times and created 1023 cuts of which 20 were active after adding rounds of cuts (0.911163 seconds)
Gomory was tried 92 times and created 264 cuts of which 0 were active after adding rounds of cuts (0.760276 seconds)
Knapsack was tried 92 times and created 100 cuts of which 0 were active after adding rounds of cuts (0.59766 seconds)
liftKnapsack was tried 92 times and created 832 cuts of which 0 were active after adding rounds of cuts (179.424 seconds)
Clique was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.009174 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.046036 seconds)
MixedIntegerRounding2 was tried 92 times and created 651 cuts of which 0 were active after adding rounds of cuts (0.474165 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004029 seconds)
TwoMirCuts was tried 92 times and created 506 cuts of which 0 were active after adding rounds of cuts (0.526207 seconds)
ZeroHalf was tried 92 times and created 477 cuts of which 0 were active after adding rounds of cuts (0.463492 seconds)

Result - Optimal solution found
Objective value:                3
Enumerated nodes:               108
Total iterations:               14763
Time (CPU seconds):             198.611
Time (Wallclock seconds):       198.835
Total time (CPU seconds):       198.63   (Wallclock seconds):       198.853
