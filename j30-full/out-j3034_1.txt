Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3034/j3034_1.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3034_1.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 2.95238 - 0.137871 seconds
Cgl0002I 1 variables fixed
Cgl0003I 9 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 327 rows, 1139 columns (1139 integer (1138 of which binary)) and 13161 elements
Coin3009W Conflict graph built in 0.080 seconds, density: 0.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1139 objects (1139 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 60 integers unsatisfied sum - 18.4167
Cbc0038I Pass   1: suminf.   13.01908 (56) obj. 4 iterations 73
Cbc0038I Pass   2: suminf.   12.56928 (53) obj. 4 iterations 6
Cbc0038I Pass   3: suminf.   11.09236 (50) obj. 4 iterations 19
Cbc0038I Pass   4: suminf.   10.05257 (54) obj. 4.2 iterations 43
Cbc0038I Pass   5: suminf.   10.05257 (54) obj. 4.2 iterations 5
Cbc0038I Pass   6: suminf.   11.43251 (45) obj. 4 iterations 57
Cbc0038I Pass   7: suminf.    7.08429 (37) obj. 5 iterations 36
Cbc0038I Pass   8: suminf.    7.08429 (37) obj. 5 iterations 4
Cbc0038I Pass   9: suminf.    7.39167 (35) obj. 5 iterations 38
Cbc0038I Pass  10: suminf.    6.35000 (34) obj. 5 iterations 29
Cbc0038I Pass  11: suminf.    5.70714 (31) obj. 5 iterations 6
Cbc0038I Pass  12: suminf.    9.14781 (32) obj. 5 iterations 76
Cbc0038I Pass  13: suminf.    6.71914 (30) obj. 5 iterations 34
Cbc0038I Pass  14: suminf.    6.35696 (31) obj. 5 iterations 5
Cbc0038I Pass  15: suminf.    8.83460 (32) obj. 5 iterations 59
Cbc0038I Pass  16: suminf.    6.10794 (29) obj. 5 iterations 40
Cbc0038I Pass  17: suminf.    8.58413 (33) obj. 5 iterations 81
Cbc0038I Pass  18: suminf.    8.02857 (29) obj. 5 iterations 27
Cbc0038I Pass  19: suminf.    6.45714 (26) obj. 5 iterations 8
Cbc0038I Pass  20: suminf.    6.42540 (26) obj. 5 iterations 13
Cbc0038I Pass  21: suminf.    8.46827 (33) obj. 5 iterations 59
Cbc0038I Pass  22: suminf.    6.10794 (29) obj. 5 iterations 34
Cbc0038I Pass  23: suminf.    6.54596 (29) obj. 5 iterations 33
Cbc0038I Pass  24: suminf.    6.10794 (29) obj. 5 iterations 23
Cbc0038I Pass  25: suminf.    6.54932 (33) obj. 5 iterations 36
Cbc0038I Pass  26: suminf.   17.47763 (59) obj. 5 iterations 156
Cbc0038I Pass  27: suminf.    5.70579 (33) obj. 5 iterations 136
Cbc0038I Pass  28: suminf.    4.45098 (26) obj. 5 iterations 39
Cbc0038I Pass  29: suminf.    4.27731 (26) obj. 5 iterations 12
Cbc0038I Pass  30: suminf.    4.26251 (30) obj. 5 iterations 46
Cbc0038I Pass  31: suminf.    3.97798 (22) obj. 5 iterations 15
Cbc0038I Pass  32: suminf.    5.03623 (21) obj. 5 iterations 43
Cbc0038I Pass  33: suminf.    4.62498 (21) obj. 5 iterations 55
Cbc0038I Pass  34: suminf.    4.27617 (22) obj. 5 iterations 19
Cbc0038I Pass  35: suminf.    6.52848 (22) obj. 5 iterations 57
Cbc0038I Pass  36: suminf.    5.67899 (23) obj. 5 iterations 31
Cbc0038I Pass  37: suminf.    4.72988 (22) obj. 5 iterations 33
Cbc0038I Pass  38: suminf.    4.72106 (22) obj. 5 iterations 3
Cbc0038I Pass  39: suminf.    6.32848 (23) obj. 5 iterations 52
Cbc0038I Pass  40: suminf.    5.58943 (23) obj. 5 iterations 34
Cbc0038I Pass  41: suminf.    4.64032 (22) obj. 5 iterations 32
Cbc0038I Pass  42: suminf.    4.63149 (22) obj. 5 iterations 3
Cbc0038I Pass  43: suminf.    6.52848 (22) obj. 5 iterations 53
Cbc0038I Pass  44: suminf.    5.67899 (23) obj. 5 iterations 32
Cbc0038I Pass  45: suminf.    4.72988 (22) obj. 5 iterations 32
Cbc0038I Pass  46: suminf.    4.72106 (22) obj. 5 iterations 3
Cbc0038I Pass  47: suminf.    5.61499 (24) obj. 5 iterations 37
Cbc0038I Pass  48: suminf.    4.64032 (22) obj. 5 iterations 47
Cbc0038I Pass  49: suminf.    4.63149 (22) obj. 5 iterations 3
Cbc0038I Pass  50: suminf.    6.52848 (22) obj. 5 iterations 52
Cbc0038I Pass  51: suminf.    5.67899 (23) obj. 5 iterations 30
Cbc0038I Pass  52: suminf.    4.72988 (22) obj. 5 iterations 29
Cbc0038I Pass  53: suminf.    4.72106 (22) obj. 5 iterations 3
Cbc0038I Pass  54: suminf.    5.58943 (23) obj. 5 iterations 36
Cbc0038I Pass  55: suminf.    4.64032 (22) obj. 5 iterations 38
Cbc0038I Pass  56: suminf.    4.63149 (22) obj. 5 iterations 5
Cbc0038I Pass  57: suminf.    5.68721 (22) obj. 5 iterations 52
Cbc0038I Pass  58: suminf.    4.72988 (22) obj. 5 iterations 45
Cbc0038I Pass  59: suminf.    4.72106 (22) obj. 5 iterations 7
Cbc0038I Pass  60: suminf.    6.32848 (23) obj. 5 iterations 48
Cbc0038I Pass  61: suminf.    5.58943 (23) obj. 5 iterations 36
Cbc0038I Pass  62: suminf.    4.64032 (22) obj. 5 iterations 28
Cbc0038I Pass  63: suminf.    4.63149 (22) obj. 5 iterations 3
Cbc0038I Pass  64: suminf.    5.68721 (22) obj. 5 iterations 44
Cbc0038I Pass  65: suminf.    4.72988 (22) obj. 5 iterations 35
Cbc0038I Pass  66: suminf.    4.72106 (22) obj. 5 iterations 3
Cbc0038I Pass  67: suminf.    6.32848 (23) obj. 5 iterations 46
Cbc0038I Pass  68: suminf.    5.58943 (23) obj. 5 iterations 31
Cbc0038I Pass  69: suminf.    4.64032 (22) obj. 5 iterations 34
Cbc0038I Pass  70: suminf.    4.63149 (22) obj. 5 iterations 4
Cbc0038I Pass  71: suminf.    6.13427 (22) obj. 5 iterations 47
Cbc0038I Pass  72: suminf.    5.49344 (26) obj. 5 iterations 44
Cbc0038I Pass  73: suminf.    5.40845 (22) obj. 5 iterations 43
Cbc0038I Pass  74: suminf.    5.07855 (22) obj. 5 iterations 27
Cbc0038I Pass  75: suminf.    6.52848 (22) obj. 5 iterations 56
Cbc0038I Pass  76: suminf.    5.67899 (23) obj. 5 iterations 28
Cbc0038I Pass  77: suminf.    4.72988 (22) obj. 5 iterations 26
Cbc0038I Pass  78: suminf.    4.72106 (22) obj. 5 iterations 3
Cbc0038I Pass  79: suminf.    5.58943 (23) obj. 5 iterations 40
Cbc0038I Pass  80: suminf.    4.64032 (22) obj. 5 iterations 39
Cbc0038I Pass  81: suminf.    4.63149 (22) obj. 5 iterations 3
Cbc0038I Pass  82: suminf.    6.52848 (22) obj. 5 iterations 52
Cbc0038I Pass  83: suminf.    5.67899 (23) obj. 5 iterations 31
Cbc0038I Pass  84: suminf.    4.72988 (22) obj. 5 iterations 33
Cbc0038I Pass  85: suminf.    4.72106 (22) obj. 5 iterations 3
Cbc0038I Pass  86: suminf.    5.58943 (23) obj. 5 iterations 30
Cbc0038I Pass  87: suminf.    4.64032 (22) obj. 5 iterations 39
Cbc0038I Pass  88: suminf.    4.63149 (22) obj. 5 iterations 3
Cbc0038I Pass  89: suminf.    6.52848 (22) obj. 5 iterations 52
Cbc0038I Pass  90: suminf.    5.67899 (23) obj. 5 iterations 31
Cbc0038I Pass  91: suminf.   17.99308 (79) obj. 4.1867 iterations 142
Cbc0038I Pass  92: suminf.    8.76150 (46) obj. 4 iterations 112
Cbc0038I Pass  93: suminf.    8.15329 (44) obj. 4 iterations 23
Cbc0038I Pass  94: suminf.    9.56711 (53) obj. 4 iterations 72
Cbc0038I Pass  95: suminf.    8.72034 (43) obj. 4 iterations 39
Cbc0038I Pass  96: suminf.    7.22369 (47) obj. 4 iterations 72
Cbc0038I Pass  97: suminf.    6.87992 (36) obj. 4 iterations 28
Cbc0038I Pass  98: suminf.   12.10209 (52) obj. 4 iterations 91
Cbc0038I Pass  99: suminf.    8.02866 (36) obj. 4 iterations 82
Cbc0038I Pass 100: suminf.   16.59305 (67) obj. 4 iterations 145
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 877 integers at bound fixed and 0 continuous
Cbc0038I Full problem 327 rows 1139 columns, reduced to 240 rows 235 columns
Cbc0038I Mini branch and bound did not improve solution (2.55 seconds)
Cbc0038I After 2.55 seconds - Feasibility pump exiting - took 0.85 seconds
Cbc0031I 47 added rows had average density of 43.148936
Cbc0013I At root node, 47 cuts changed objective from 2.952381 to 4 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 283 row cuts average 8.8 elements, 53 column cuts (53 active)  in 0.795 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 72 row cuts average 531.4 elements, 0 column cuts (0 active)  in 0.312 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 234 row cuts average 24.7 elements, 0 column cuts (0 active)  in 3.580 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 173 row cuts average 76.2 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 164 row cuts average 145.7 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 104 row cuts average 76.5 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 4 (9.06 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 4 (9.87 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 4 (11.34 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 4 (12.64 seconds)
Cbc0010I After 4 nodes, 4 on tree, 1e+50 best solution, best possible 4 (14.20 seconds)
Cbc0010I After 5 nodes, 3 on tree, 1e+50 best solution, best possible 4 (15.50 seconds)
Cbc0010I After 6 nodes, 3 on tree, 1e+50 best solution, best possible 4 (18.43 seconds)
Cbc0010I After 7 nodes, 4 on tree, 1e+50 best solution, best possible 4 (21.56 seconds)
Cbc0010I After 8 nodes, 5 on tree, 1e+50 best solution, best possible 4 (23.35 seconds)
Cbc0010I After 9 nodes, 5 on tree, 1e+50 best solution, best possible 4 (24.26 seconds)
Cbc0010I After 11 nodes, 4 on tree, 1e+50 best solution, best possible 4 (27.05 seconds)
Cbc0010I After 12 nodes, 5 on tree, 1e+50 best solution, best possible 4 (28.18 seconds)
Cbc0010I After 15 nodes, 4 on tree, 1e+50 best solution, best possible 4 (29.37 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 4 (30.95 seconds)
Cbc0010I After 20 nodes, 2 on tree, 1e+50 best solution, best possible 4 (32.78 seconds)
Cbc0010I After 21 nodes, 2 on tree, 1e+50 best solution, best possible 4 (33.85 seconds)
Cbc0010I After 22 nodes, 3 on tree, 1e+50 best solution, best possible 4 (35.50 seconds)
Cbc0010I After 26 nodes, 1 on tree, 1e+50 best solution, best possible 5 (36.63 seconds)
Cbc0010I After 27 nodes, 2 on tree, 1e+50 best solution, best possible 5 (38.76 seconds)
Cbc0010I After 28 nodes, 3 on tree, 1e+50 best solution, best possible 5 (40.00 seconds)
Cbc0010I After 29 nodes, 4 on tree, 1e+50 best solution, best possible 5 (41.87 seconds)
Cbc0010I After 30 nodes, 5 on tree, 1e+50 best solution, best possible 5 (42.77 seconds)
Cbc0010I After 32 nodes, 7 on tree, 1e+50 best solution, best possible 5 (43.76 seconds)
Cbc0010I After 35 nodes, 9 on tree, 1e+50 best solution, best possible 5 (44.60 seconds)
Cbc0010I After 39 nodes, 10 on tree, 1e+50 best solution, best possible 5 (45.51 seconds)
Cbc0004I Integer solution of 5 found after 10417 iterations and 40 nodes (45.66 seconds)
Cbc0001I Search completed - best objective 5, took 10417 iterations and 40 nodes (45.66 seconds)
Cbc0032I Strong branching done 224 times (1970 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 11, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.95238 to 4
Probing was tried 57 times and created 1312 cuts of which 0 were active after adding rounds of cuts (1.16069 seconds)
Gomory was tried 57 times and created 75 cuts of which 0 were active after adding rounds of cuts (0.4817 seconds)
Knapsack was tried 57 times and created 102 cuts of which 0 were active after adding rounds of cuts (0.508762 seconds)
liftKnapsack was tried 57 times and created 1030 cuts of which 0 were active after adding rounds of cuts (35.2042 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00937 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.053891 seconds)
MixedIntegerRounding2 was tried 57 times and created 679 cuts of which 0 were active after adding rounds of cuts (0.382768 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00342 seconds)
TwoMirCuts was tried 57 times and created 319 cuts of which 0 were active after adding rounds of cuts (0.317144 seconds)
ZeroHalf was tried 57 times and created 345 cuts of which 0 were active after adding rounds of cuts (0.447743 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               40
Total iterations:               10417
Time (CPU seconds):             45.3602
Time (Wallclock seconds):       45.7102
Total time (CPU seconds):       45.3856   (Wallclock seconds):       45.7323
