Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3040/j3040_3.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3040_3.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 8.6041 - 0.156544 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 339 rows, 1324 columns (1324 integer (1323 of which binary)) and 21725 elements
Coin3009W Conflict graph built in 0.088 seconds, density: 0.866%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1324 objects (1324 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 83 integers unsatisfied sum - 22.5331
Cbc0038I Pass   1: suminf.   11.75925 (58) obj. 10 iterations 168
Cbc0038I Pass   2: suminf.   10.56709 (59) obj. 10 iterations 33
Cbc0038I Pass   3: suminf.   10.78511 (55) obj. 10.3201 iterations 23
Cbc0038I Pass   4: suminf.    9.24249 (37) obj. 11 iterations 102
Cbc0038I Pass   5: suminf.    9.11579 (38) obj. 11 iterations 36
Cbc0038I Pass   6: suminf.    8.61817 (36) obj. 11 iterations 17
Cbc0038I Pass   7: suminf.    7.51333 (38) obj. 11 iterations 34
Cbc0038I Pass   8: suminf.    7.03898 (36) obj. 11 iterations 35
Cbc0038I Pass   9: suminf.    9.41635 (33) obj. 11 iterations 78
Cbc0038I Pass  10: suminf.    6.36103 (28) obj. 11 iterations 65
Cbc0038I Pass  11: suminf.    6.27618 (28) obj. 11 iterations 12
Cbc0038I Pass  12: suminf.    7.78150 (33) obj. 11 iterations 91
Cbc0038I Pass  13: suminf.    6.66170 (37) obj. 11 iterations 46
Cbc0038I Pass  14: suminf.    6.27618 (28) obj. 11 iterations 42
Cbc0038I Pass  15: suminf.   17.47798 (72) obj. 10.1782 iterations 147
Cbc0038I Pass  16: suminf.    9.25394 (37) obj. 11 iterations 98
Cbc0038I Pass  17: suminf.    9.18132 (34) obj. 11 iterations 19
Cbc0038I Pass  18: suminf.    7.77963 (33) obj. 11 iterations 22
Cbc0038I Pass  19: suminf.    8.81461 (36) obj. 11 iterations 61
Cbc0038I Pass  20: suminf.    7.36830 (35) obj. 11 iterations 30
Cbc0038I Pass  21: suminf.   11.25414 (40) obj. 11 iterations 58
Cbc0038I Pass  22: suminf.    8.79994 (39) obj. 11 iterations 29
Cbc0038I Pass  23: suminf.    8.48586 (39) obj. 11 iterations 15
Cbc0038I Pass  24: suminf.    9.48808 (39) obj. 11 iterations 49
Cbc0038I Pass  25: suminf.    8.41383 (37) obj. 11 iterations 41
Cbc0038I Pass  26: suminf.    8.01653 (37) obj. 11 iterations 6
Cbc0038I Pass  27: suminf.    6.61560 (36) obj. 11 iterations 11
Cbc0038I Pass  28: suminf.    7.94162 (31) obj. 11 iterations 41
Cbc0038I Pass  29: suminf.    6.78894 (27) obj. 11 iterations 50
Cbc0038I Pass  30: suminf.    5.74132 (25) obj. 11 iterations 13
Cbc0038I Pass  31: suminf.    7.69111 (28) obj. 11 iterations 31
Cbc0038I Pass  32: suminf.    7.17141 (28) obj. 11 iterations 21
Cbc0038I Pass  33: suminf.    7.21076 (26) obj. 11 iterations 48
Cbc0038I Pass  34: suminf.    5.52228 (23) obj. 11 iterations 72
Cbc0038I Pass  35: suminf.    5.23656 (23) obj. 11 iterations 4
Cbc0038I Pass  36: suminf.    5.18894 (23) obj. 11 iterations 1
Cbc0038I Pass  37: suminf.    8.32121 (30) obj. 11 iterations 47
Cbc0038I Pass  38: suminf.    6.63808 (26) obj. 11 iterations 35
Cbc0038I Pass  39: suminf.    7.28202 (25) obj. 11 iterations 40
Cbc0038I Pass  40: suminf.    5.31015 (23) obj. 11 iterations 30
Cbc0038I Pass  41: suminf.    4.91333 (23) obj. 11 iterations 3
Cbc0038I Pass  42: suminf.    4.86571 (23) obj. 11 iterations 1
Cbc0038I Pass  43: suminf.    8.53333 (30) obj. 11 iterations 59
Cbc0038I Pass  44: suminf.    5.22249 (27) obj. 11 iterations 47
Cbc0038I Pass  45: suminf.    5.17487 (27) obj. 11 iterations 1
Cbc0038I Pass  46: suminf.    7.52949 (26) obj. 11 iterations 59
Cbc0038I Pass  47: suminf.    6.63808 (26) obj. 11 iterations 55
Cbc0038I Pass  48: suminf.    7.28202 (25) obj. 11 iterations 38
Cbc0038I Pass  49: suminf.    5.31015 (23) obj. 11 iterations 26
Cbc0038I Pass  50: suminf.    4.91333 (23) obj. 11 iterations 3
Cbc0038I Pass  51: suminf.    4.86571 (23) obj. 11 iterations 1
Cbc0038I Pass  52: suminf.    8.70185 (30) obj. 11 iterations 52
Cbc0038I Pass  53: suminf.    5.39421 (29) obj. 11 iterations 52
Cbc0038I Pass  54: suminf.    5.34659 (29) obj. 11 iterations 1
Cbc0038I Pass  55: suminf.    8.02063 (32) obj. 11 iterations 59
Cbc0038I Pass  56: suminf.    7.11310 (32) obj. 11 iterations 51
Cbc0038I Pass  57: suminf.    7.11310 (32) obj. 11 iterations 0
Cbc0038I Pass  58: suminf.    7.82407 (31) obj. 11 iterations 38
Cbc0038I Pass  59: suminf.    7.26953 (31) obj. 11 iterations 35
Cbc0038I Pass  60: suminf.    7.66764 (31) obj. 11 iterations 37
Cbc0038I Pass  61: suminf.   19.22924 (60) obj. 11 iterations 163
Cbc0038I Pass  62: suminf.   11.48718 (47) obj. 11 iterations 144
Cbc0038I Pass  63: suminf.   10.08869 (48) obj. 11 iterations 52
Cbc0038I Pass  64: suminf.    9.63314 (43) obj. 11 iterations 20
Cbc0038I Pass  65: suminf.    9.42911 (49) obj. 11 iterations 10
Cbc0038I Pass  66: suminf.    8.81067 (41) obj. 11 iterations 30
Cbc0038I Pass  67: suminf.    7.51640 (37) obj. 11 iterations 19
Cbc0038I Pass  68: suminf.    7.59824 (35) obj. 11 iterations 25
Cbc0038I Pass  69: suminf.    7.31508 (37) obj. 11 iterations 19
Cbc0038I Pass  70: suminf.    7.31508 (37) obj. 11 iterations 6
Cbc0038I Pass  71: suminf.   17.31744 (56) obj. 11 iterations 136
Cbc0038I Pass  72: suminf.   12.40979 (52) obj. 11 iterations 96
Cbc0038I Pass  73: suminf.   12.20146 (50) obj. 11 iterations 15
Cbc0038I Pass  74: suminf.   11.25095 (45) obj. 11 iterations 34
Cbc0038I Pass  75: suminf.   10.51559 (42) obj. 11 iterations 8
Cbc0038I Pass  76: suminf.   10.09002 (42) obj. 11 iterations 24
Cbc0038I Pass  77: suminf.    9.49003 (43) obj. 11 iterations 24
Cbc0038I Pass  78: suminf.    8.89140 (36) obj. 11 iterations 16
Cbc0038I Pass  79: suminf.    7.25145 (33) obj. 11 iterations 15
Cbc0038I Pass  80: suminf.    6.96574 (33) obj. 11 iterations 3
Cbc0038I Pass  81: suminf.    6.91812 (33) obj. 11 iterations 2
Cbc0038I Pass  82: suminf.    7.35115 (34) obj. 11 iterations 7
Cbc0038I Pass  83: suminf.   15.27171 (61) obj. 11 iterations 125
Cbc0038I Pass  84: suminf.    9.64076 (43) obj. 11 iterations 114
Cbc0038I Pass  85: suminf.    9.42252 (46) obj. 11 iterations 10
Cbc0038I Pass  86: suminf.    9.14483 (45) obj. 11 iterations 2
Cbc0038I Pass  87: suminf.   11.14992 (46) obj. 11 iterations 70
Cbc0038I Pass  88: suminf.   10.96179 (46) obj. 11 iterations 17
Cbc0038I Pass  89: suminf.    8.65105 (35) obj. 11 iterations 52
Cbc0038I Pass  90: suminf.    8.53981 (39) obj. 11 iterations 20
Cbc0038I Pass  91: suminf.    9.99967 (42) obj. 11 iterations 42
Cbc0038I Pass  92: suminf.    9.99967 (42) obj. 11 iterations 18
Cbc0038I Pass  93: suminf.   11.43662 (42) obj. 11 iterations 49
Cbc0038I Pass  94: suminf.   10.61795 (39) obj. 11 iterations 34
Cbc0038I Pass  95: suminf.    9.81655 (38) obj. 11 iterations 34
Cbc0038I Pass  96: suminf.    8.39390 (33) obj. 11 iterations 24
Cbc0038I Pass  97: suminf.    8.35581 (37) obj. 11 iterations 5
Cbc0038I Pass  98: suminf.   10.18928 (38) obj. 11 iterations 41
Cbc0038I Pass  99: suminf.    8.65581 (34) obj. 11 iterations 51
Cbc0038I Pass 100: suminf.   15.96491 (51) obj. 11 iterations 139
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1000 integers at bound fixed and 0 continuous
Cbc0038I Full problem 339 rows 1324 columns, reduced to 249 rows 290 columns
Cbc0038I Mini branch and bound did not improve solution (5.09 seconds)
Cbc0038I After 5.09 seconds - Feasibility pump exiting - took 3.08 seconds
Cbc0031I 87 added rows had average density of 61.781609
Cbc0013I At root node, 87 cuts changed objective from 8.6040956 to 10 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 286 row cuts average 19.8 elements, 28 column cuts (28 active)  in 1.170 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 297.0 elements, 0 column cuts (0 active)  in 0.488 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 191 row cuts average 39.7 elements, 0 column cuts (0 active)  in 10.613 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 1 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 245 row cuts average 82.3 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 176 row cuts average 170.1 elements, 0 column cuts (0 active)  in 0.294 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 125 row cuts average 81.7 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 10 (20.71 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 10 (24.53 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 10 (29.27 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 10 (32.37 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 10 (35.38 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 10 (38.83 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 10 (39.67 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 10 (40.39 seconds)
Cbc0010I After 9 nodes, 8 on tree, 1e+50 best solution, best possible 10 (41.37 seconds)
Cbc0010I After 10 nodes, 8 on tree, 1e+50 best solution, best possible 10 (42.84 seconds)
Cbc0010I After 13 nodes, 8 on tree, 1e+50 best solution, best possible 10 (44.17 seconds)
Cbc0010I After 16 nodes, 7 on tree, 1e+50 best solution, best possible 10 (46.44 seconds)
Cbc0010I After 17 nodes, 7 on tree, 1e+50 best solution, best possible 10 (48.24 seconds)
Cbc0010I After 18 nodes, 7 on tree, 1e+50 best solution, best possible 10 (49.23 seconds)
Cbc0010I After 21 nodes, 6 on tree, 1e+50 best solution, best possible 10 (50.59 seconds)
Cbc0010I After 22 nodes, 7 on tree, 1e+50 best solution, best possible 10 (52.41 seconds)
Cbc0010I After 23 nodes, 7 on tree, 1e+50 best solution, best possible 10 (54.37 seconds)
Cbc0010I After 25 nodes, 6 on tree, 1e+50 best solution, best possible 10 (55.63 seconds)
Cbc0010I After 26 nodes, 7 on tree, 1e+50 best solution, best possible 10 (57.38 seconds)
Cbc0010I After 27 nodes, 7 on tree, 1e+50 best solution, best possible 10 (59.85 seconds)
Cbc0010I After 30 nodes, 5 on tree, 1e+50 best solution, best possible 10 (62.52 seconds)
Cbc0010I After 31 nodes, 6 on tree, 1e+50 best solution, best possible 10 (63.57 seconds)
Cbc0010I After 32 nodes, 7 on tree, 1e+50 best solution, best possible 10 (64.33 seconds)
Cbc0010I After 33 nodes, 6 on tree, 1e+50 best solution, best possible 10 (66.49 seconds)
Cbc0010I After 34 nodes, 7 on tree, 1e+50 best solution, best possible 10 (67.99 seconds)
Cbc0010I After 35 nodes, 6 on tree, 1e+50 best solution, best possible 10 (68.79 seconds)
Cbc0010I After 36 nodes, 6 on tree, 1e+50 best solution, best possible 10 (71.10 seconds)
Cbc0010I After 39 nodes, 4 on tree, 1e+50 best solution, best possible 10 (73.70 seconds)
Cbc0010I After 40 nodes, 5 on tree, 1e+50 best solution, best possible 10 (76.76 seconds)
Cbc0010I After 42 nodes, 6 on tree, 1e+50 best solution, best possible 10 (77.48 seconds)
Cbc0010I After 43 nodes, 5 on tree, 1e+50 best solution, best possible 10 (78.42 seconds)
Cbc0010I After 45 nodes, 4 on tree, 1e+50 best solution, best possible 10 (81.28 seconds)
Cbc0010I After 46 nodes, 4 on tree, 1e+50 best solution, best possible 10 (83.10 seconds)
Cbc0010I After 47 nodes, 4 on tree, 1e+50 best solution, best possible 10 (84.70 seconds)
Cbc0010I After 50 nodes, 3 on tree, 1e+50 best solution, best possible 10 (89.13 seconds)
Cbc0010I After 51 nodes, 4 on tree, 1e+50 best solution, best possible 10 (90.82 seconds)
Cbc0010I After 52 nodes, 5 on tree, 1e+50 best solution, best possible 10 (92.85 seconds)
Cbc0010I After 53 nodes, 6 on tree, 1e+50 best solution, best possible 10 (94.66 seconds)
Cbc0010I After 54 nodes, 7 on tree, 1e+50 best solution, best possible 10 (96.63 seconds)
Cbc0010I After 55 nodes, 8 on tree, 1e+50 best solution, best possible 10 (97.62 seconds)
Cbc0010I After 56 nodes, 8 on tree, 1e+50 best solution, best possible 10 (100.00 seconds)
Cbc0010I After 58 nodes, 8 on tree, 1e+50 best solution, best possible 10 (101.68 seconds)
Cbc0010I After 59 nodes, 9 on tree, 1e+50 best solution, best possible 10 (103.70 seconds)
Cbc0010I After 60 nodes, 9 on tree, 1e+50 best solution, best possible 10 (105.07 seconds)
Cbc0010I After 61 nodes, 10 on tree, 1e+50 best solution, best possible 10 (106.39 seconds)
Cbc0010I After 62 nodes, 11 on tree, 1e+50 best solution, best possible 10 (109.14 seconds)
Cbc0010I After 65 nodes, 9 on tree, 1e+50 best solution, best possible 10 (110.07 seconds)
Cbc0010I After 66 nodes, 10 on tree, 1e+50 best solution, best possible 10 (111.26 seconds)
Cbc0010I After 68 nodes, 10 on tree, 1e+50 best solution, best possible 10 (112.54 seconds)
Cbc0010I After 69 nodes, 10 on tree, 1e+50 best solution, best possible 10 (113.67 seconds)
Cbc0010I After 70 nodes, 11 on tree, 1e+50 best solution, best possible 10 (115.47 seconds)
Cbc0010I After 71 nodes, 10 on tree, 1e+50 best solution, best possible 10 (116.46 seconds)
Cbc0010I After 72 nodes, 10 on tree, 1e+50 best solution, best possible 10 (118.32 seconds)
Cbc0010I After 73 nodes, 11 on tree, 1e+50 best solution, best possible 10 (119.85 seconds)
Cbc0010I After 75 nodes, 10 on tree, 1e+50 best solution, best possible 10 (121.07 seconds)
Cbc0010I After 78 nodes, 10 on tree, 1e+50 best solution, best possible 10 (122.32 seconds)
Cbc0010I After 79 nodes, 11 on tree, 1e+50 best solution, best possible 10 (123.46 seconds)
Cbc0010I After 82 nodes, 10 on tree, 1e+50 best solution, best possible 10 (125.03 seconds)
Cbc0010I After 84 nodes, 10 on tree, 1e+50 best solution, best possible 10 (126.57 seconds)
Cbc0010I After 85 nodes, 10 on tree, 1e+50 best solution, best possible 10 (128.01 seconds)
Cbc0010I After 88 nodes, 9 on tree, 1e+50 best solution, best possible 10 (129.55 seconds)
Cbc0010I After 90 nodes, 8 on tree, 1e+50 best solution, best possible 10 (131.52 seconds)
Cbc0010I After 92 nodes, 8 on tree, 1e+50 best solution, best possible 10 (133.04 seconds)
Cbc0010I After 93 nodes, 9 on tree, 1e+50 best solution, best possible 10 (134.63 seconds)
Cbc0010I After 95 nodes, 9 on tree, 1e+50 best solution, best possible 10 (136.81 seconds)
Cbc0010I After 98 nodes, 7 on tree, 1e+50 best solution, best possible 10 (138.29 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 10 (140.44 seconds)
Cbc0010I After 104 nodes, 3 on tree, 1e+50 best solution, best possible 10 (145.76 seconds)
Cbc0010I After 105 nodes, 4 on tree, 1e+50 best solution, best possible 10 (147.94 seconds)
Cbc0010I After 106 nodes, 5 on tree, 1e+50 best solution, best possible 10 (149.24 seconds)
Cbc0010I After 107 nodes, 5 on tree, 1e+50 best solution, best possible 10 (150.11 seconds)
Cbc0010I After 109 nodes, 3 on tree, 1e+50 best solution, best possible 10 (151.22 seconds)
Cbc0010I After 112 nodes, 1 on tree, 1e+50 best solution, best possible 11 (155.48 seconds)
Cbc0010I After 113 nodes, 2 on tree, 1e+50 best solution, best possible 11 (158.24 seconds)
Cbc0010I After 114 nodes, 3 on tree, 1e+50 best solution, best possible 11 (161.43 seconds)
Cbc0010I After 115 nodes, 4 on tree, 1e+50 best solution, best possible 11 (163.00 seconds)
Cbc0010I After 117 nodes, 6 on tree, 1e+50 best solution, best possible 11 (163.78 seconds)
Cbc0010I After 118 nodes, 7 on tree, 1e+50 best solution, best possible 11 (166.34 seconds)
Cbc0010I After 120 nodes, 7 on tree, 1e+50 best solution, best possible 11 (167.13 seconds)
Cbc0004I Integer solution of 11 found after 29036 iterations and 122 nodes (168.02 seconds)
Cbc0001I Search completed - best objective 11, took 29036 iterations and 122 nodes (168.02 seconds)
Cbc0032I Strong branching done 548 times (4895 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 13, 0 variables fixed on reduced cost
Cuts at root node changed objective from 8.6041 to 10
Probing was tried 114 times and created 1164 cuts of which 0 were active after adding rounds of cuts (1.81779 seconds)
Gomory was tried 10 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.488124 seconds)
Knapsack was tried 114 times and created 68 cuts of which 0 were active after adding rounds of cuts (1.17617 seconds)
liftKnapsack was tried 114 times and created 1219 cuts of which 0 were active after adding rounds of cuts (144.591 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.020794 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.09653 seconds)
MixedIntegerRounding2 was tried 114 times and created 1407 cuts of which 0 were active after adding rounds of cuts (1.07902 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005602 seconds)
TwoMirCuts was tried 114 times and created 397 cuts of which 0 were active after adding rounds of cuts (0.633967 seconds)
ZeroHalf was tried 114 times and created 680 cuts of which 0 were active after adding rounds of cuts (1.08612 seconds)

Result - Optimal solution found
Objective value:                11
Enumerated nodes:               122
Total iterations:               29036
Time (CPU seconds):             167.891
Time (Wallclock seconds):       168.082
Total time (CPU seconds):       167.942   (Wallclock seconds):       168.136
