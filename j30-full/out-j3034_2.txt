Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3034/j3034_2.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3034_2.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 4.64252 - 0.167139 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 331 rows, 1175 columns (1175 integer (1174 of which binary)) and 13678 elements
Coin3009W Conflict graph built in 0.059 seconds, density: 0.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1175 objects (1175 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 87 integers unsatisfied sum - 23.8777
Cbc0038I Pass   1: suminf.    8.18028 (42) obj. 8 iterations 229
Cbc0038I Pass   2: suminf.    6.39661 (35) obj. 8 iterations 44
Cbc0038I Pass   3: suminf.    5.95217 (35) obj. 8 iterations 16
Cbc0038I Pass   4: suminf.    8.31119 (41) obj. 8 iterations 75
Cbc0038I Pass   5: suminf.    6.95433 (42) obj. 8 iterations 43
Cbc0038I Pass   6: suminf.    7.05289 (40) obj. 8 iterations 35
Cbc0038I Pass   7: suminf.    6.29597 (39) obj. 8 iterations 43
Cbc0038I Pass   8: suminf.    6.28188 (41) obj. 8 iterations 12
Cbc0038I Pass   9: suminf.   10.66326 (39) obj. 8 iterations 90
Cbc0038I Pass  10: suminf.    9.16600 (38) obj. 8 iterations 44
Cbc0038I Pass  11: suminf.    8.68301 (37) obj. 8 iterations 12
Cbc0038I Pass  12: suminf.    7.75438 (33) obj. 8 iterations 31
Cbc0038I Pass  13: suminf.    7.55062 (32) obj. 8 iterations 23
Cbc0038I Pass  14: suminf.    5.72443 (38) obj. 8 iterations 63
Cbc0038I Pass  15: suminf.    5.36935 (29) obj. 8 iterations 34
Cbc0038I Pass  16: suminf.    5.33013 (30) obj. 8 iterations 16
Cbc0038I Pass  17: suminf.    8.76175 (33) obj. 8 iterations 83
Cbc0038I Pass  18: suminf.    5.93560 (30) obj. 8 iterations 78
Cbc0038I Pass  19: suminf.    5.75565 (32) obj. 8 iterations 22
Cbc0038I Pass  20: suminf.    5.95841 (29) obj. 8 iterations 62
Cbc0038I Pass  21: suminf.    5.61802 (31) obj. 8 iterations 39
Cbc0038I Pass  22: suminf.    6.63838 (35) obj. 8 iterations 79
Cbc0038I Pass  23: suminf.    5.99727 (29) obj. 8 iterations 26
Cbc0038I Pass  24: suminf.    4.99844 (28) obj. 8 iterations 13
Cbc0038I Pass  25: suminf.    5.82702 (24) obj. 8 iterations 94
Cbc0038I Pass  26: suminf.    4.32939 (23) obj. 8 iterations 77
Cbc0038I Pass  27: suminf.    6.32704 (25) obj. 8 iterations 49
Cbc0038I Pass  28: suminf.    4.86022 (26) obj. 8 iterations 35
Cbc0038I Pass  29: suminf.    4.83304 (24) obj. 8 iterations 64
Cbc0038I Pass  30: suminf.    4.80414 (23) obj. 8 iterations 12
Cbc0038I Pass  31: suminf.    9.97172 (52) obj. 8 iterations 145
Cbc0038I Pass  32: suminf.    6.03982 (36) obj. 8 iterations 135
Cbc0038I Pass  33: suminf.    4.91186 (34) obj. 8 iterations 52
Cbc0038I Pass  34: suminf.    7.82381 (41) obj. 8 iterations 120
Cbc0038I Pass  35: suminf.    6.13414 (30) obj. 8 iterations 90
Cbc0038I Pass  36: suminf.    4.99740 (24) obj. 8 iterations 32
Cbc0038I Pass  37: suminf.    5.71188 (22) obj. 8 iterations 69
Cbc0038I Pass  38: suminf.    4.91407 (23) obj. 8 iterations 41
Cbc0038I Pass  39: suminf.    7.81887 (31) obj. 8 iterations 81
Cbc0038I Pass  40: suminf.    6.23861 (26) obj. 8 iterations 63
Cbc0038I Pass  41: suminf.    7.02441 (32) obj. 8 iterations 52
Cbc0038I Pass  42: suminf.    6.32861 (31) obj. 8 iterations 47
Cbc0038I Pass  43: suminf.    6.08179 (32) obj. 8 iterations 27
Cbc0038I Pass  44: suminf.    5.53222 (28) obj. 8 iterations 33
Cbc0038I Pass  45: suminf.    5.34767 (31) obj. 8 iterations 20
Cbc0038I Pass  46: suminf.    8.41334 (27) obj. 8 iterations 69
Cbc0038I Pass  47: suminf.    6.61212 (27) obj. 8 iterations 71
Cbc0038I Pass  48: suminf.    6.51207 (29) obj. 8 iterations 76
Cbc0038I Pass  49: suminf.    5.93013 (28) obj. 8 iterations 49
Cbc0038I Pass  50: suminf.    7.62720 (26) obj. 8 iterations 101
Cbc0038I Pass  51: suminf.    7.09016 (27) obj. 8 iterations 4
Cbc0038I Pass  52: suminf.    5.68831 (25) obj. 8 iterations 22
Cbc0038I Pass  53: suminf.    5.13925 (30) obj. 8 iterations 32
Cbc0038I Pass  54: suminf.    4.72818 (29) obj. 8 iterations 55
Cbc0038I Pass  55: suminf.    6.42180 (27) obj. 8 iterations 52
Cbc0038I Pass  56: suminf.    5.64665 (26) obj. 8 iterations 35
Cbc0038I Pass  57: suminf.    7.42420 (25) obj. 8 iterations 60
Cbc0038I Pass  58: suminf.    5.69750 (23) obj. 8 iterations 54
Cbc0038I Pass  59: suminf.    8.81795 (36) obj. 8 iterations 93
Cbc0038I Pass  60: suminf.    6.68547 (33) obj. 8 iterations 91
Cbc0038I Pass  61: suminf.    6.22910 (30) obj. 8 iterations 19
Cbc0038I Pass  62: suminf.    8.28680 (28) obj. 8 iterations 119
Cbc0038I Pass  63: suminf.    7.00602 (29) obj. 8 iterations 53
Cbc0038I Pass  64: suminf.    6.24122 (28) obj. 8 iterations 16
Cbc0038I Pass  65: suminf.    6.07456 (27) obj. 8 iterations 13
Cbc0038I Pass  66: suminf.    9.17630 (32) obj. 8 iterations 84
Cbc0038I Pass  67: suminf.    7.56312 (29) obj. 8 iterations 60
Cbc0038I Pass  68: suminf.    6.62799 (29) obj. 8 iterations 42
Cbc0038I Pass  69: suminf.    6.10058 (28) obj. 8 iterations 29
Cbc0038I Pass  70: suminf.    7.96848 (30) obj. 8 iterations 87
Cbc0038I Pass  71: suminf.    6.47465 (29) obj. 8 iterations 63
Cbc0038I Pass  72: suminf.    8.26385 (34) obj. 8 iterations 99
Cbc0038I Pass  73: suminf.    6.60803 (31) obj. 8 iterations 86
Cbc0038I Pass  74: suminf.    6.62958 (28) obj. 8 iterations 92
Cbc0038I Pass  75: suminf.    4.98196 (26) obj. 8 iterations 33
Cbc0038I Pass  76: suminf.    4.98196 (26) obj. 8 iterations 0
Cbc0038I Pass  77: suminf.    9.34653 (31) obj. 8 iterations 123
Cbc0038I Pass  78: suminf.    7.62570 (27) obj. 8 iterations 60
Cbc0038I Pass  79: suminf.    7.31492 (28) obj. 8 iterations 9
Cbc0038I Pass  80: suminf.    6.50346 (24) obj. 8 iterations 99
Cbc0038I Pass  81: suminf.    4.58752 (25) obj. 8 iterations 61
Cbc0038I Pass  82: suminf.    4.01918 (24) obj. 8 iterations 33
Cbc0038I Pass  83: suminf.    6.11785 (28) obj. 8 iterations 126
Cbc0038I Pass  84: suminf.    4.98954 (24) obj. 8 iterations 69
Cbc0038I Pass  85: suminf.    6.29759 (30) obj. 8 iterations 107
Cbc0038I Pass  86: suminf.    3.98831 (25) obj. 8 iterations 93
Cbc0038I Pass  87: suminf.    3.82165 (25) obj. 8 iterations 17
Cbc0038I Pass  88: suminf.    8.26710 (30) obj. 8 iterations 121
Cbc0038I Pass  89: suminf.    5.80615 (22) obj. 8 iterations 64
Cbc0038I Pass  90: suminf.    5.57879 (24) obj. 8 iterations 16
Cbc0038I Pass  91: suminf.    5.98124 (23) obj. 8 iterations 63
Cbc0038I Pass  92: suminf.    4.28055 (29) obj. 8 iterations 76
Cbc0038I Pass  93: suminf.    4.11388 (29) obj. 8 iterations 9
Cbc0038I Pass  94: suminf.    5.60779 (28) obj. 8 iterations 58
Cbc0038I Pass  95: suminf.   18.02000 (67) obj. 8 iterations 178
Cbc0038I Pass  96: suminf.    8.98047 (45) obj. 8 iterations 180
Cbc0038I Pass  97: suminf.    8.93131 (48) obj. 8 iterations 18
Cbc0038I Pass  98: suminf.    8.29107 (47) obj. 8 iterations 12
Cbc0038I Pass  99: suminf.    8.47509 (35) obj. 8 iterations 116
Cbc0038I Pass 100: suminf.   12.04424 (56) obj. 8 iterations 200
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 864 integers at bound fixed and 0 continuous
Cbc0038I Full problem 331 rows 1175 columns, reduced to 220 rows 273 columns
Cbc0038I Mini branch and bound did not improve solution (4.23 seconds)
Cbc0038I After 4.23 seconds - Feasibility pump exiting - took 2.55 seconds
Cbc0031I 76 added rows had average density of 54.236842
Cbc0013I At root node, 76 cuts changed objective from 4.6425221 to 6 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 270 row cuts average 14.5 elements, 6 column cuts (65 active)  in 0.871 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 29 row cuts average 660.8 elements, 0 column cuts (0 active)  in 0.535 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 319 row cuts average 20.9 elements, 0 column cuts (0 active)  in 11.167 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 244 row cuts average 71.9 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 150 row cuts average 106.1 elements, 0 column cuts (0 active)  in 0.250 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 139 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 6 (20.30 seconds)
Cbc0010I After 1 nodes, 1 on tree, 1e+50 best solution, best possible 6 (23.02 seconds)
Cbc0010I After 2 nodes, 1 on tree, 1e+50 best solution, best possible 7 (24.95 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 7 (26.17 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 7 (27.87 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 7 (30.93 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 7 (34.66 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 7 (36.33 seconds)
Cbc0010I After 8 nodes, 7 on tree, 1e+50 best solution, best possible 7 (38.06 seconds)
Cbc0010I After 9 nodes, 7 on tree, 1e+50 best solution, best possible 7 (40.41 seconds)
Cbc0010I After 10 nodes, 8 on tree, 1e+50 best solution, best possible 7 (41.54 seconds)
Cbc0010I After 11 nodes, 9 on tree, 1e+50 best solution, best possible 7 (42.42 seconds)
Cbc0010I After 13 nodes, 9 on tree, 1e+50 best solution, best possible 7 (44.01 seconds)
Cbc0010I After 15 nodes, 9 on tree, 1e+50 best solution, best possible 7 (45.59 seconds)
Cbc0010I After 16 nodes, 10 on tree, 1e+50 best solution, best possible 7 (46.99 seconds)
Cbc0010I After 20 nodes, 8 on tree, 1e+50 best solution, best possible 7 (48.56 seconds)
Cbc0010I After 21 nodes, 9 on tree, 1e+50 best solution, best possible 7 (49.73 seconds)
Cbc0010I After 23 nodes, 8 on tree, 1e+50 best solution, best possible 7 (50.84 seconds)
Cbc0010I After 24 nodes, 8 on tree, 1e+50 best solution, best possible 7 (52.09 seconds)
Cbc0010I After 25 nodes, 9 on tree, 1e+50 best solution, best possible 7 (53.48 seconds)
Cbc0010I After 26 nodes, 9 on tree, 1e+50 best solution, best possible 7 (54.58 seconds)
Cbc0010I After 27 nodes, 9 on tree, 1e+50 best solution, best possible 7 (56.23 seconds)
Cbc0010I After 29 nodes, 9 on tree, 1e+50 best solution, best possible 7 (57.10 seconds)
Cbc0010I After 32 nodes, 8 on tree, 1e+50 best solution, best possible 7 (58.65 seconds)
Cbc0010I After 33 nodes, 8 on tree, 1e+50 best solution, best possible 7 (60.17 seconds)
Cbc0010I After 35 nodes, 7 on tree, 1e+50 best solution, best possible 7 (61.83 seconds)
Cbc0010I After 36 nodes, 8 on tree, 1e+50 best solution, best possible 7 (63.30 seconds)
Cbc0010I After 37 nodes, 9 on tree, 1e+50 best solution, best possible 7 (65.06 seconds)
Cbc0010I After 38 nodes, 8 on tree, 1e+50 best solution, best possible 7 (66.16 seconds)
Cbc0010I After 39 nodes, 8 on tree, 1e+50 best solution, best possible 7 (68.37 seconds)
Cbc0010I After 40 nodes, 9 on tree, 1e+50 best solution, best possible 7 (69.98 seconds)
Cbc0010I After 42 nodes, 8 on tree, 1e+50 best solution, best possible 7 (71.45 seconds)
Cbc0010I After 44 nodes, 8 on tree, 1e+50 best solution, best possible 7 (72.62 seconds)
Cbc0010I After 46 nodes, 8 on tree, 1e+50 best solution, best possible 7 (74.18 seconds)
Cbc0010I After 48 nodes, 7 on tree, 1e+50 best solution, best possible 7 (75.52 seconds)
Cbc0010I After 50 nodes, 7 on tree, 1e+50 best solution, best possible 7 (77.48 seconds)
Cbc0010I After 51 nodes, 7 on tree, 1e+50 best solution, best possible 7 (79.20 seconds)
Cbc0010I After 54 nodes, 5 on tree, 1e+50 best solution, best possible 7 (81.15 seconds)
Cbc0010I After 55 nodes, 6 on tree, 1e+50 best solution, best possible 7 (83.68 seconds)
Cbc0010I After 56 nodes, 6 on tree, 1e+50 best solution, best possible 7 (84.83 seconds)
Cbc0010I After 57 nodes, 7 on tree, 1e+50 best solution, best possible 7 (86.71 seconds)
Cbc0010I After 58 nodes, 7 on tree, 1e+50 best solution, best possible 7 (88.88 seconds)
Cbc0010I After 60 nodes, 7 on tree, 1e+50 best solution, best possible 7 (91.24 seconds)
Cbc0010I After 61 nodes, 8 on tree, 1e+50 best solution, best possible 7 (92.27 seconds)
Cbc0010I After 62 nodes, 8 on tree, 1e+50 best solution, best possible 7 (93.33 seconds)
Cbc0010I After 65 nodes, 7 on tree, 1e+50 best solution, best possible 7 (95.48 seconds)
Cbc0010I After 66 nodes, 8 on tree, 1e+50 best solution, best possible 7 (97.82 seconds)
Cbc0010I After 67 nodes, 9 on tree, 1e+50 best solution, best possible 7 (99.95 seconds)
Cbc0010I After 68 nodes, 10 on tree, 1e+50 best solution, best possible 7 (101.36 seconds)
Cbc0010I After 69 nodes, 10 on tree, 1e+50 best solution, best possible 7 (102.18 seconds)
Cbc0010I After 70 nodes, 10 on tree, 1e+50 best solution, best possible 7 (103.49 seconds)
Cbc0010I After 73 nodes, 8 on tree, 1e+50 best solution, best possible 7 (104.85 seconds)
Cbc0010I After 76 nodes, 6 on tree, 1e+50 best solution, best possible 7 (106.06 seconds)
Cbc0010I After 77 nodes, 6 on tree, 1e+50 best solution, best possible 7 (107.09 seconds)
Cbc0010I After 79 nodes, 6 on tree, 1e+50 best solution, best possible 7 (109.71 seconds)
Cbc0010I After 80 nodes, 7 on tree, 1e+50 best solution, best possible 7 (111.25 seconds)
Cbc0010I After 81 nodes, 6 on tree, 1e+50 best solution, best possible 7 (112.74 seconds)
Cbc0010I After 82 nodes, 7 on tree, 1e+50 best solution, best possible 7 (114.71 seconds)
Cbc0010I After 84 nodes, 5 on tree, 1e+50 best solution, best possible 7 (116.15 seconds)
Cbc0010I After 85 nodes, 6 on tree, 1e+50 best solution, best possible 7 (118.38 seconds)
Cbc0010I After 86 nodes, 7 on tree, 1e+50 best solution, best possible 7 (119.79 seconds)
Cbc0010I After 87 nodes, 8 on tree, 1e+50 best solution, best possible 7 (121.31 seconds)
Cbc0010I After 91 nodes, 5 on tree, 1e+50 best solution, best possible 7 (123.78 seconds)
Cbc0010I After 92 nodes, 5 on tree, 1e+50 best solution, best possible 7 (125.58 seconds)
Cbc0010I After 93 nodes, 5 on tree, 1e+50 best solution, best possible 7 (127.15 seconds)
Cbc0010I After 95 nodes, 4 on tree, 1e+50 best solution, best possible 7 (130.08 seconds)
Cbc0010I After 96 nodes, 5 on tree, 1e+50 best solution, best possible 7 (131.42 seconds)
Cbc0010I After 97 nodes, 6 on tree, 1e+50 best solution, best possible 7 (132.56 seconds)
Cbc0010I After 98 nodes, 5 on tree, 1e+50 best solution, best possible 7 (133.30 seconds)
Cbc0010I After 99 nodes, 6 on tree, 1e+50 best solution, best possible 7 (134.95 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 7 (136.00 seconds)
Cbc0010I After 101 nodes, 6 on tree, 1e+50 best solution, best possible 7 (137.25 seconds)
Cbc0010I After 102 nodes, 6 on tree, 1e+50 best solution, best possible 7 (138.04 seconds)
Cbc0010I After 103 nodes, 6 on tree, 1e+50 best solution, best possible 7 (138.85 seconds)
Cbc0010I After 105 nodes, 6 on tree, 1e+50 best solution, best possible 7 (141.14 seconds)
Cbc0010I After 107 nodes, 6 on tree, 1e+50 best solution, best possible 7 (143.06 seconds)
Cbc0010I After 108 nodes, 6 on tree, 1e+50 best solution, best possible 7 (144.92 seconds)
Cbc0010I After 111 nodes, 4 on tree, 1e+50 best solution, best possible 7 (145.87 seconds)
Cbc0010I After 112 nodes, 4 on tree, 1e+50 best solution, best possible 7 (146.80 seconds)
Cbc0010I After 114 nodes, 3 on tree, 1e+50 best solution, best possible 7 (149.77 seconds)
Cbc0010I After 115 nodes, 3 on tree, 1e+50 best solution, best possible 7 (152.23 seconds)
Cbc0010I After 116 nodes, 3 on tree, 1e+50 best solution, best possible 7 (156.50 seconds)
Cbc0010I After 117 nodes, 4 on tree, 1e+50 best solution, best possible 7 (158.45 seconds)
Cbc0010I After 118 nodes, 5 on tree, 1e+50 best solution, best possible 7 (160.29 seconds)
Cbc0010I After 120 nodes, 5 on tree, 1e+50 best solution, best possible 7 (162.11 seconds)
Cbc0010I After 121 nodes, 5 on tree, 1e+50 best solution, best possible 7 (163.46 seconds)
Cbc0010I After 124 nodes, 3 on tree, 1e+50 best solution, best possible 7 (165.52 seconds)
Cbc0010I After 128 nodes, 1 on tree, 1e+50 best solution, best possible 8 (166.91 seconds)
Cbc0010I After 129 nodes, 2 on tree, 1e+50 best solution, best possible 8 (168.82 seconds)
Cbc0010I After 130 nodes, 3 on tree, 1e+50 best solution, best possible 8 (169.92 seconds)
Cbc0010I After 131 nodes, 4 on tree, 1e+50 best solution, best possible 8 (172.11 seconds)
Cbc0010I After 133 nodes, 6 on tree, 1e+50 best solution, best possible 8 (174.06 seconds)
Cbc0010I After 135 nodes, 6 on tree, 1e+50 best solution, best possible 8 (175.25 seconds)
Cbc0010I After 138 nodes, 5 on tree, 1e+50 best solution, best possible 8 (176.01 seconds)
Cbc0010I After 139 nodes, 5 on tree, 1e+50 best solution, best possible 8 (176.77 seconds)
Cbc0010I After 141 nodes, 4 on tree, 1e+50 best solution, best possible 8 (178.25 seconds)
Cbc0010I After 142 nodes, 5 on tree, 1e+50 best solution, best possible 8 (180.01 seconds)
Cbc0010I After 144 nodes, 5 on tree, 1e+50 best solution, best possible 8 (182.44 seconds)
Cbc0010I After 145 nodes, 6 on tree, 1e+50 best solution, best possible 8 (183.49 seconds)
Cbc0010I After 146 nodes, 6 on tree, 1e+50 best solution, best possible 8 (184.36 seconds)
Cbc0010I After 147 nodes, 7 on tree, 1e+50 best solution, best possible 8 (185.47 seconds)
Cbc0010I After 150 nodes, 6 on tree, 1e+50 best solution, best possible 8 (186.86 seconds)
Cbc0010I After 151 nodes, 7 on tree, 1e+50 best solution, best possible 8 (188.25 seconds)
Cbc0010I After 153 nodes, 7 on tree, 1e+50 best solution, best possible 8 (189.78 seconds)
Cbc0010I After 158 nodes, 5 on tree, 1e+50 best solution, best possible 8 (191.88 seconds)
Cbc0010I After 160 nodes, 5 on tree, 1e+50 best solution, best possible 8 (195.52 seconds)
Cbc0010I After 161 nodes, 6 on tree, 1e+50 best solution, best possible 8 (197.72 seconds)
Cbc0010I After 164 nodes, 5 on tree, 1e+50 best solution, best possible 8 (200.57 seconds)
Cbc0010I After 166 nodes, 5 on tree, 1e+50 best solution, best possible 8 (202.59 seconds)
Cbc0010I After 167 nodes, 6 on tree, 1e+50 best solution, best possible 8 (205.23 seconds)
Cbc0010I After 168 nodes, 7 on tree, 1e+50 best solution, best possible 8 (206.51 seconds)
Cbc0010I After 172 nodes, 4 on tree, 1e+50 best solution, best possible 8 (208.12 seconds)
Cbc0010I After 173 nodes, 3 on tree, 1e+50 best solution, best possible 8 (209.54 seconds)
Cbc0010I After 174 nodes, 3 on tree, 1e+50 best solution, best possible 8 (210.51 seconds)
Cbc0010I After 176 nodes, 4 on tree, 1e+50 best solution, best possible 8 (211.54 seconds)
Cbc0010I After 179 nodes, 3 on tree, 1e+50 best solution, best possible 8 (212.48 seconds)
Cbc0010I After 181 nodes, 2 on tree, 1e+50 best solution, best possible 8 (214.93 seconds)
Cbc0010I After 182 nodes, 3 on tree, 1e+50 best solution, best possible 8 (217.51 seconds)
Cbc0010I After 183 nodes, 4 on tree, 1e+50 best solution, best possible 8 (218.75 seconds)
Cbc0010I After 184 nodes, 5 on tree, 1e+50 best solution, best possible 8 (220.21 seconds)
Cbc0010I After 185 nodes, 6 on tree, 1e+50 best solution, best possible 8 (221.14 seconds)
Cbc0010I After 187 nodes, 7 on tree, 1e+50 best solution, best possible 8 (222.51 seconds)
Cbc0010I After 189 nodes, 7 on tree, 1e+50 best solution, best possible 8 (223.96 seconds)
Cbc0010I After 191 nodes, 8 on tree, 1e+50 best solution, best possible 8 (225.43 seconds)
Cbc0010I After 193 nodes, 8 on tree, 1e+50 best solution, best possible 8 (226.29 seconds)
Cbc0010I After 195 nodes, 9 on tree, 1e+50 best solution, best possible 8 (227.71 seconds)
Cbc0010I After 198 nodes, 8 on tree, 1e+50 best solution, best possible 8 (229.00 seconds)
Cbc0010I After 201 nodes, 7 on tree, 1e+50 best solution, best possible 8 (230.30 seconds)
Cbc0010I After 202 nodes, 8 on tree, 1e+50 best solution, best possible 8 (231.53 seconds)
Cbc0010I After 204 nodes, 8 on tree, 1e+50 best solution, best possible 8 (232.25 seconds)
Cbc0010I After 206 nodes, 10 on tree, 1e+50 best solution, best possible 8 (233.01 seconds)
Cbc0010I After 209 nodes, 10 on tree, 1e+50 best solution, best possible 8 (233.96 seconds)
Cbc0010I After 212 nodes, 11 on tree, 1e+50 best solution, best possible 8 (234.95 seconds)
Cbc0010I After 216 nodes, 10 on tree, 1e+50 best solution, best possible 8 (236.07 seconds)
Cbc0010I After 219 nodes, 11 on tree, 1e+50 best solution, best possible 8 (236.84 seconds)
Cbc0010I After 221 nodes, 10 on tree, 1e+50 best solution, best possible 8 (237.95 seconds)
Cbc0010I After 224 nodes, 10 on tree, 1e+50 best solution, best possible 8 (238.88 seconds)
Cbc0004I Integer solution of 8 found after 80711 iterations and 226 nodes (239.30 seconds)
Cbc0001I Search completed - best objective 8, took 80711 iterations and 226 nodes (239.30 seconds)
Cbc0032I Strong branching done 962 times (9072 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 18, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.64252 to 6
Probing was tried 188 times and created 2235 cuts of which 59 were active after adding rounds of cuts (2.63367 seconds)
Gomory was tried 10 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.534696 seconds)
Knapsack was tried 185 times and created 134 cuts of which 0 were active after adding rounds of cuts (2.01657 seconds)
liftKnapsack was tried 185 times and created 4561 cuts of which 0 were active after adding rounds of cuts (195.061 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.022517 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.105718 seconds)
MixedIntegerRounding2 was tried 185 times and created 2649 cuts of which 0 were active after adding rounds of cuts (1.57469 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.0039 seconds)
TwoMirCuts was tried 185 times and created 724 cuts of which 0 were active after adding rounds of cuts (0.756679 seconds)
ZeroHalf was tried 185 times and created 1647 cuts of which 0 were active after adding rounds of cuts (2.5786 seconds)

Result - Optimal solution found
Objective value:                8
Enumerated nodes:               226
Total iterations:               80711
Time (CPU seconds):             238.459
Time (Wallclock seconds):       239.35
Total time (CPU seconds):       238.476   (Wallclock seconds):       239.369
