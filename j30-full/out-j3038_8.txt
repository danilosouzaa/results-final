Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3038/j3038_8.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3038_8.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 13.03 - 0.520785 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 349 rows, 1704 columns (1704 integer (1703 of which binary)) and 28507 elements
Coin3009W Conflict graph built in 0.152 seconds, density: 0.821%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1704 objects (1704 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 105 integers unsatisfied sum - 23.867
Cbc0038I Pass   1: suminf.   12.97330 (58) obj. 16 iterations 307
Cbc0038I Pass   2: suminf.   11.20968 (57) obj. 16 iterations 130
Cbc0038I Pass   3: suminf.   11.11110 (58) obj. 16 iterations 20
Cbc0038I Pass   4: suminf.   10.20192 (52) obj. 16 iterations 106
Cbc0038I Pass   5: suminf.   10.16391 (52) obj. 16 iterations 16
Cbc0038I Pass   6: suminf.   12.62001 (60) obj. 16 iterations 131
Cbc0038I Pass   7: suminf.   12.44292 (60) obj. 16 iterations 21
Cbc0038I Pass   8: suminf.   12.98404 (59) obj. 16 iterations 97
Cbc0038I Pass   9: suminf.   11.50108 (55) obj. 16 iterations 69
Cbc0038I Pass  10: suminf.   11.02304 (53) obj. 16 iterations 48
Cbc0038I Pass  11: suminf.   10.77994 (52) obj. 16 iterations 33
Cbc0038I Pass  12: suminf.   10.08153 (51) obj. 16 iterations 44
Cbc0038I Pass  13: suminf.    9.91736 (55) obj. 16 iterations 28
Cbc0038I Pass  14: suminf.   10.27775 (52) obj. 16 iterations 66
Cbc0038I Pass  15: suminf.    9.76788 (50) obj. 16 iterations 23
Cbc0038I Pass  16: suminf.    9.28911 (49) obj. 16 iterations 50
Cbc0038I Pass  17: suminf.    7.88143 (47) obj. 16 iterations 39
Cbc0038I Pass  18: suminf.    7.65201 (46) obj. 16 iterations 19
Cbc0038I Pass  19: suminf.   10.62222 (47) obj. 16 iterations 94
Cbc0038I Pass  20: suminf.    8.20461 (47) obj. 16 iterations 109
Cbc0038I Pass  21: suminf.    8.20461 (47) obj. 16 iterations 4
Cbc0038I Pass  22: suminf.   11.61192 (54) obj. 16 iterations 147
Cbc0038I Pass  23: suminf.   10.90747 (56) obj. 16 iterations 41
Cbc0038I Pass  24: suminf.   10.48088 (54) obj. 16 iterations 23
Cbc0038I Pass  25: suminf.   11.89254 (48) obj. 16 iterations 79
Cbc0038I Pass  26: suminf.   10.82625 (49) obj. 16 iterations 71
Cbc0038I Pass  27: suminf.   11.92598 (50) obj. 16 iterations 74
Cbc0038I Pass  28: suminf.   10.58968 (55) obj. 16 iterations 74
Cbc0038I Pass  29: suminf.   11.16898 (52) obj. 16 iterations 73
Cbc0038I Pass  30: suminf.    9.92871 (49) obj. 16 iterations 57
Cbc0038I Pass  31: suminf.    9.58509 (50) obj. 16 iterations 34
Cbc0038I Pass  32: suminf.    9.08073 (48) obj. 16 iterations 17
Cbc0038I Pass  33: suminf.    8.84129 (44) obj. 16 iterations 18
Cbc0038I Pass  34: suminf.   10.94300 (52) obj. 16 iterations 85
Cbc0038I Pass  35: suminf.    9.45365 (47) obj. 16 iterations 39
Cbc0038I Pass  36: suminf.    9.19840 (46) obj. 16 iterations 18
Cbc0038I Pass  37: suminf.    8.83332 (46) obj. 16 iterations 5
Cbc0038I Pass  38: suminf.    9.70814 (49) obj. 16 iterations 59
Cbc0038I Pass  39: suminf.    9.37186 (46) obj. 16 iterations 56
Cbc0038I Pass  40: suminf.    9.00678 (46) obj. 16 iterations 4
Cbc0038I Pass  41: suminf.    9.50504 (49) obj. 16 iterations 76
Cbc0038I Pass  42: suminf.    9.19840 (46) obj. 16 iterations 42
Cbc0038I Pass  43: suminf.    8.83332 (46) obj. 16 iterations 5
Cbc0038I Pass  44: suminf.   10.49630 (56) obj. 16 iterations 65
Cbc0038I Pass  45: suminf.    9.82305 (46) obj. 16 iterations 64
Cbc0038I Pass  46: suminf.    9.45797 (46) obj. 16 iterations 4
Cbc0038I Pass  47: suminf.   10.37924 (53) obj. 16 iterations 82
Cbc0038I Pass  48: suminf.    9.59279 (53) obj. 16 iterations 47
Cbc0038I Pass  49: suminf.   10.57536 (50) obj. 16 iterations 57
Cbc0038I Pass  50: suminf.    9.57359 (49) obj. 16 iterations 53
Cbc0038I Pass  51: suminf.    9.12761 (47) obj. 16 iterations 45
Cbc0038I Pass  52: suminf.   13.53864 (50) obj. 16 iterations 118
Cbc0038I Pass  53: suminf.   10.11852 (53) obj. 16 iterations 69
Cbc0038I Pass  54: suminf.    9.93709 (53) obj. 16 iterations 34
Cbc0038I Pass  55: suminf.   10.09570 (56) obj. 16 iterations 53
Cbc0038I Pass  56: suminf.    9.32673 (55) obj. 16 iterations 42
Cbc0038I Pass  57: suminf.    9.49713 (48) obj. 16 iterations 81
Cbc0038I Pass  58: suminf.    9.39909 (47) obj. 16 iterations 30
Cbc0038I Pass  59: suminf.   12.00332 (50) obj. 16 iterations 113
Cbc0038I Pass  60: suminf.   10.08097 (51) obj. 16 iterations 64
Cbc0038I Pass  61: suminf.    9.95327 (51) obj. 16 iterations 14
Cbc0038I Pass  62: suminf.   11.93244 (46) obj. 16 iterations 110
Cbc0038I Pass  63: suminf.   11.04666 (47) obj. 16 iterations 65
Cbc0038I Pass  64: suminf.    9.25149 (48) obj. 16 iterations 99
Cbc0038I Pass  65: suminf.    8.19183 (46) obj. 16 iterations 95
Cbc0038I Pass  66: suminf.    7.86030 (44) obj. 16 iterations 34
Cbc0038I Pass  67: suminf.    7.86030 (44) obj. 16 iterations 12
Cbc0038I Pass  68: suminf.    8.53128 (47) obj. 16 iterations 79
Cbc0038I Pass  69: suminf.    8.22653 (46) obj. 16 iterations 74
Cbc0038I Pass  70: suminf.   11.59145 (42) obj. 16 iterations 145
Cbc0038I Pass  71: suminf.    9.70274 (45) obj. 16 iterations 103
Cbc0038I Pass  72: suminf.    9.33677 (48) obj. 16 iterations 83
Cbc0038I Pass  73: suminf.    8.50145 (44) obj. 16 iterations 43
Cbc0038I Pass  74: suminf.    8.50145 (44) obj. 16 iterations 6
Cbc0038I Pass  75: suminf.   13.30054 (50) obj. 16 iterations 126
Cbc0038I Pass  76: suminf.   10.60308 (45) obj. 16 iterations 74
Cbc0038I Pass  77: suminf.    9.17238 (42) obj. 16 iterations 76
Cbc0038I Pass  78: suminf.    8.65460 (42) obj. 16 iterations 40
Cbc0038I Pass  79: suminf.    8.92770 (46) obj. 16 iterations 69
Cbc0038I Pass  80: suminf.    8.48156 (44) obj. 16 iterations 55
Cbc0038I Pass  81: suminf.   11.12142 (47) obj. 16 iterations 122
Cbc0038I Pass  82: suminf.   10.58200 (58) obj. 16 iterations 47
Cbc0038I Pass  83: suminf.   10.35909 (56) obj. 16 iterations 23
Cbc0038I Pass  84: suminf.   14.55472 (52) obj. 16 iterations 86
Cbc0038I Pass  85: suminf.   11.59157 (67) obj. 16 iterations 70
Cbc0038I Pass  86: suminf.   11.55521 (65) obj. 16 iterations 22
Cbc0038I Pass  87: suminf.   11.20864 (65) obj. 16 iterations 25
Cbc0038I Pass  88: suminf.   12.38559 (54) obj. 16 iterations 96
Cbc0038I Pass  89: suminf.    9.09207 (58) obj. 16 iterations 67
Cbc0038I Pass  90: suminf.   10.06526 (54) obj. 16 iterations 88
Cbc0038I Pass  91: suminf.    8.46060 (49) obj. 16 iterations 73
Cbc0038I Pass  92: suminf.    7.86962 (49) obj. 16 iterations 28
Cbc0038I Pass  93: suminf.    7.52585 (48) obj. 16 iterations 26
Cbc0038I Pass  94: suminf.    7.52585 (48) obj. 16 iterations 4
Cbc0038I Pass  95: suminf.    8.56150 (52) obj. 16 iterations 77
Cbc0038I Pass  96: suminf.    7.60534 (49) obj. 16 iterations 45
Cbc0038I Pass  97: suminf.    9.73152 (54) obj. 16 iterations 85
Cbc0038I Pass  98: suminf.    8.32768 (52) obj. 16 iterations 71
Cbc0038I Pass  99: suminf.   10.44270 (50) obj. 16 iterations 143
Cbc0038I Pass 100: suminf.   18.37673 (62) obj. 16 iterations 185
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1370 integers at bound fixed and 0 continuous
Cbc0038I Full problem 349 rows 1704 columns, reduced to 230 rows 302 columns
Cbc0038I Mini branch and bound did not improve solution (4.89 seconds)
Cbc0038I After 4.89 seconds - Feasibility pump exiting - took 1.90 seconds
Cbc0031I 160 added rows had average density of 86.6
Cbc0013I At root node, 160 cuts changed objective from 13.03003 to 14.278355 in 71 passes
Cbc0014I Cut generator 0 (Probing) - 925 row cuts average 40.8 elements, 14 column cuts (14 active)  in 12.416 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 52 row cuts average 314.5 elements, 0 column cuts (0 active)  in 7.268 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.573 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 643 row cuts average 41.6 elements, 0 column cuts (0 active)  in 136.786 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.229 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 1339 row cuts average 103.2 elements, 0 column cuts (0 active)  in 1.391 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 278 row cuts average 161.4 elements, 0 column cuts (0 active)  in 0.605 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 358 row cuts average 125.9 elements, 0 column cuts (0 active)  in 1.698 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 15 (182.31 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 15 (186.71 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 15 (191.50 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 15 (196.08 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 15 (199.36 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 15 (203.42 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 15 (204.76 seconds)
Cbc0010I After 13 nodes, 10 on tree, 1e+50 best solution, best possible 15 (205.53 seconds)
Cbc0010I After 15 nodes, 10 on tree, 1e+50 best solution, best possible 15 (207.16 seconds)
Cbc0010I After 17 nodes, 10 on tree, 1e+50 best solution, best possible 15 (208.21 seconds)
Cbc0010I After 23 nodes, 10 on tree, 1e+50 best solution, best possible 15 (208.94 seconds)
Cbc0010I After 26 nodes, 10 on tree, 1e+50 best solution, best possible 15 (211.29 seconds)
Cbc0010I After 31 nodes, 8 on tree, 1e+50 best solution, best possible 15 (213.53 seconds)
Cbc0010I After 32 nodes, 7 on tree, 1e+50 best solution, best possible 15 (215.62 seconds)
Cbc0010I After 37 nodes, 8 on tree, 1e+50 best solution, best possible 15 (216.38 seconds)
Cbc0010I After 38 nodes, 9 on tree, 1e+50 best solution, best possible 15 (219.35 seconds)
Cbc0010I After 42 nodes, 7 on tree, 1e+50 best solution, best possible 15 (220.16 seconds)
Cbc0010I After 47 nodes, 7 on tree, 1e+50 best solution, best possible 15 (222.09 seconds)
Cbc0010I After 49 nodes, 6 on tree, 1e+50 best solution, best possible 15 (224.62 seconds)
Cbc0010I After 54 nodes, 6 on tree, 1e+50 best solution, best possible 15 (225.33 seconds)
Cbc0010I After 57 nodes, 7 on tree, 1e+50 best solution, best possible 15 (227.25 seconds)
Cbc0010I After 60 nodes, 4 on tree, 1e+50 best solution, best possible 15 (234.10 seconds)
Cbc0010I After 61 nodes, 4 on tree, 1e+50 best solution, best possible 15 (237.54 seconds)
Cbc0010I After 62 nodes, 5 on tree, 1e+50 best solution, best possible 15 (241.79 seconds)
Cbc0010I After 63 nodes, 6 on tree, 1e+50 best solution, best possible 15 (244.06 seconds)
Cbc0010I After 68 nodes, 11 on tree, 1e+50 best solution, best possible 15 (247.66 seconds)
Cbc0010I After 74 nodes, 9 on tree, 1e+50 best solution, best possible 15 (248.36 seconds)
Cbc0010I After 79 nodes, 8 on tree, 1e+50 best solution, best possible 15 (249.12 seconds)
Cbc0010I After 80 nodes, 9 on tree, 1e+50 best solution, best possible 15 (250.82 seconds)
Cbc0010I After 87 nodes, 12 on tree, 1e+50 best solution, best possible 15 (253.28 seconds)
Cbc0010I After 93 nodes, 9 on tree, 1e+50 best solution, best possible 15 (254.05 seconds)
Cbc0010I After 99 nodes, 6 on tree, 1e+50 best solution, best possible 15 (254.83 seconds)
Cbc0010I After 104 nodes, 10 on tree, 1e+50 best solution, best possible 15 (259.68 seconds)
Cbc0010I After 110 nodes, 9 on tree, 1e+50 best solution, best possible 15 (260.46 seconds)
Cbc0010I After 118 nodes, 9 on tree, 1e+50 best solution, best possible 15 (261.18 seconds)
Cbc0010I After 119 nodes, 9 on tree, 1e+50 best solution, best possible 15 (264.30 seconds)
Cbc0010I After 125 nodes, 9 on tree, 1e+50 best solution, best possible 15 (266.52 seconds)
Cbc0010I After 135 nodes, 8 on tree, 1e+50 best solution, best possible 15 (267.24 seconds)
Cbc0010I After 137 nodes, 8 on tree, 1e+50 best solution, best possible 15 (270.32 seconds)
Cbc0010I After 143 nodes, 8 on tree, 1e+50 best solution, best possible 15 (273.39 seconds)
Cbc0010I After 151 nodes, 5 on tree, 1e+50 best solution, best possible 15 (274.19 seconds)
Cbc0010I After 152 nodes, 5 on tree, 1e+50 best solution, best possible 15 (276.04 seconds)
Cbc0010I After 158 nodes, 4 on tree, 1e+50 best solution, best possible 15 (276.88 seconds)
Cbc0010I After 159 nodes, 4 on tree, 1e+50 best solution, best possible 15 (280.21 seconds)
Cbc0010I After 160 nodes, 5 on tree, 1e+50 best solution, best possible 15 (282.06 seconds)
Cbc0010I After 166 nodes, 5 on tree, 1e+50 best solution, best possible 15 (282.94 seconds)
Cbc0010I After 168 nodes, 7 on tree, 1e+50 best solution, best possible 15 (285.73 seconds)
Cbc0010I After 176 nodes, 8 on tree, 1e+50 best solution, best possible 15 (289.38 seconds)
Cbc0010I After 184 nodes, 7 on tree, 1e+50 best solution, best possible 15 (290.11 seconds)
Cbc0010I After 185 nodes, 8 on tree, 1e+50 best solution, best possible 15 (291.18 seconds)
Cbc0010I After 187 nodes, 7 on tree, 1e+50 best solution, best possible 15 (292.37 seconds)
Cbc0010I After 195 nodes, 9 on tree, 1e+50 best solution, best possible 15 (293.14 seconds)
Cbc0010I After 196 nodes, 9 on tree, 1e+50 best solution, best possible 15 (294.39 seconds)
Cbc0010I After 204 nodes, 7 on tree, 1e+50 best solution, best possible 15 (295.12 seconds)
Cbc0010I After 211 nodes, 6 on tree, 1e+50 best solution, best possible 15 (297.29 seconds)
Cbc0010I After 219 nodes, 6 on tree, 1e+50 best solution, best possible 15 (299.79 seconds)
Cbc0010I After 225 nodes, 8 on tree, 1e+50 best solution, best possible 15 (300.58 seconds)
Cbc0010I After 229 nodes, 8 on tree, 1e+50 best solution, best possible 15 (302.46 seconds)
Cbc0010I After 234 nodes, 7 on tree, 1e+50 best solution, best possible 15 (303.25 seconds)
Cbc0010I After 237 nodes, 9 on tree, 1e+50 best solution, best possible 15 (307.13 seconds)
Cbc0010I After 240 nodes, 9 on tree, 1e+50 best solution, best possible 15 (308.81 seconds)
Cbc0010I After 246 nodes, 8 on tree, 1e+50 best solution, best possible 15 (309.61 seconds)
Cbc0010I After 248 nodes, 10 on tree, 1e+50 best solution, best possible 15 (311.92 seconds)
Cbc0010I After 256 nodes, 8 on tree, 1e+50 best solution, best possible 15 (312.64 seconds)
Cbc0010I After 265 nodes, 7 on tree, 1e+50 best solution, best possible 15 (313.41 seconds)
Cbc0010I After 270 nodes, 7 on tree, 1e+50 best solution, best possible 15 (314.12 seconds)
Cbc0010I After 272 nodes, 7 on tree, 1e+50 best solution, best possible 15 (315.76 seconds)
Cbc0010I After 279 nodes, 9 on tree, 1e+50 best solution, best possible 15 (318.76 seconds)
Cbc0010I After 284 nodes, 9 on tree, 1e+50 best solution, best possible 15 (321.94 seconds)
Cbc0010I After 291 nodes, 10 on tree, 1e+50 best solution, best possible 15 (322.69 seconds)
Cbc0010I After 299 nodes, 5 on tree, 1e+50 best solution, best possible 15 (323.39 seconds)
Cbc0010I After 301 nodes, 3 on tree, 1e+50 best solution, best possible 15 (325.96 seconds)
Cbc0010I After 302 nodes, 3 on tree, 1e+50 best solution, best possible 15 (330.26 seconds)
Cbc0010I After 305 nodes, 2 on tree, 1e+50 best solution, best possible 15 (336.83 seconds)
Cbc0010I After 306 nodes, 3 on tree, 1e+50 best solution, best possible 15 (341.93 seconds)
Cbc0010I After 307 nodes, 4 on tree, 1e+50 best solution, best possible 15 (347.12 seconds)
Cbc0010I After 308 nodes, 5 on tree, 1e+50 best solution, best possible 15 (355.22 seconds)
Cbc0010I After 309 nodes, 5 on tree, 1e+50 best solution, best possible 15 (356.92 seconds)
Cbc0010I After 311 nodes, 4 on tree, 1e+50 best solution, best possible 15 (360.12 seconds)
Cbc0010I After 312 nodes, 5 on tree, 1e+50 best solution, best possible 15 (362.11 seconds)
Cbc0010I After 318 nodes, 9 on tree, 1e+50 best solution, best possible 15 (364.61 seconds)
Cbc0010I After 323 nodes, 8 on tree, 1e+50 best solution, best possible 15 (365.35 seconds)
Cbc0010I After 325 nodes, 8 on tree, 1e+50 best solution, best possible 15 (368.10 seconds)
Cbc0010I After 330 nodes, 6 on tree, 1e+50 best solution, best possible 15 (369.03 seconds)
Cbc0010I After 334 nodes, 2 on tree, 1e+50 best solution, best possible 15 (369.81 seconds)
Cbc0010I After 335 nodes, 2 on tree, 1e+50 best solution, best possible 15 (376.31 seconds)
Cbc0010I After 336 nodes, 3 on tree, 1e+50 best solution, best possible 15 (381.17 seconds)
Cbc0010I After 337 nodes, 4 on tree, 1e+50 best solution, best possible 15 (386.03 seconds)
Cbc0010I After 341 nodes, 1 on tree, 1e+50 best solution, best possible 15 (386.77 seconds)
Cbc0010I After 342 nodes, 1 on tree, 1e+50 best solution, best possible 16 (391.09 seconds)
Cbc0010I After 343 nodes, 2 on tree, 1e+50 best solution, best possible 16 (397.29 seconds)
Cbc0010I After 344 nodes, 3 on tree, 1e+50 best solution, best possible 16 (400.99 seconds)
Cbc0010I After 345 nodes, 4 on tree, 1e+50 best solution, best possible 16 (405.47 seconds)
Cbc0010I After 346 nodes, 5 on tree, 1e+50 best solution, best possible 16 (412.45 seconds)
Cbc0010I After 348 nodes, 4 on tree, 1e+50 best solution, best possible 16 (413.55 seconds)
Cbc0010I After 350 nodes, 3 on tree, 1e+50 best solution, best possible 16 (418.19 seconds)
Cbc0010I After 351 nodes, 4 on tree, 1e+50 best solution, best possible 16 (422.11 seconds)
Cbc0010I After 352 nodes, 5 on tree, 1e+50 best solution, best possible 16 (424.28 seconds)
Cbc0010I After 362 nodes, 6 on tree, 1e+50 best solution, best possible 16 (427.57 seconds)
Cbc0010I After 368 nodes, 9 on tree, 1e+50 best solution, best possible 16 (431.67 seconds)
Cbc0010I After 377 nodes, 8 on tree, 1e+50 best solution, best possible 16 (432.86 seconds)
Cbc0010I After 381 nodes, 7 on tree, 1e+50 best solution, best possible 16 (433.67 seconds)
Cbc0010I After 384 nodes, 8 on tree, 1e+50 best solution, best possible 16 (434.84 seconds)
Cbc0010I After 385 nodes, 7 on tree, 1e+50 best solution, best possible 16 (436.20 seconds)
Cbc0010I After 388 nodes, 7 on tree, 1e+50 best solution, best possible 16 (437.13 seconds)
Cbc0010I After 401 nodes, 9 on tree, 1e+50 best solution, best possible 16 (438.51 seconds)
Cbc0010I After 405 nodes, 8 on tree, 1e+50 best solution, best possible 16 (439.79 seconds)
Cbc0010I After 423 nodes, 6 on tree, 1e+50 best solution, best possible 16 (440.60 seconds)
Cbc0010I After 432 nodes, 8 on tree, 1e+50 best solution, best possible 16 (441.36 seconds)
Cbc0010I After 442 nodes, 6 on tree, 1e+50 best solution, best possible 16 (442.07 seconds)
Cbc0010I After 447 nodes, 6 on tree, 1e+50 best solution, best possible 16 (443.95 seconds)
Cbc0010I After 459 nodes, 5 on tree, 1e+50 best solution, best possible 16 (444.67 seconds)
Cbc0010I After 465 nodes, 4 on tree, 1e+50 best solution, best possible 16 (446.43 seconds)
Cbc0010I After 475 nodes, 5 on tree, 1e+50 best solution, best possible 16 (449.31 seconds)
Cbc0010I After 478 nodes, 3 on tree, 1e+50 best solution, best possible 16 (456.29 seconds)
Cbc0010I After 479 nodes, 4 on tree, 1e+50 best solution, best possible 16 (458.77 seconds)
Cbc0010I After 487 nodes, 8 on tree, 1e+50 best solution, best possible 16 (459.88 seconds)
Cbc0010I After 495 nodes, 10 on tree, 1e+50 best solution, best possible 16 (461.29 seconds)
Cbc0010I After 496 nodes, 10 on tree, 1e+50 best solution, best possible 16 (462.07 seconds)
Cbc0010I After 499 nodes, 12 on tree, 1e+50 best solution, best possible 16 (462.97 seconds)
Cbc0010I After 506 nodes, 14 on tree, 1e+50 best solution, best possible 16 (463.67 seconds)
Cbc0010I After 522 nodes, 17 on tree, 1e+50 best solution, best possible 16 (464.54 seconds)
Cbc0010I After 540 nodes, 18 on tree, 1e+50 best solution, best possible 16 (465.67 seconds)
Cbc0010I After 555 nodes, 19 on tree, 1e+50 best solution, best possible 16 (466.37 seconds)
Cbc0004I Integer solution of 16 found after 149872 iterations and 557 nodes (466.56 seconds)
Cbc0001I Search completed - best objective 16, took 149872 iterations and 557 nodes (466.57 seconds)
Cbc0032I Strong branching done 1742 times (16232 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 30, 0 variables fixed on reduced cost
Cuts at root node changed objective from 13.03 to 15
Probing was tried 196 times and created 1995 cuts of which 0 were active after adding rounds of cuts (13.6219 seconds)
Gomory was tried 71 times and created 52 cuts of which 0 were active after adding rounds of cuts (7.26787 seconds)
Knapsack was tried 71 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.572963 seconds)
liftKnapsack was tried 194 times and created 2723 cuts of which 0 were active after adding rounds of cuts (355.433 seconds)
Clique was tried 71 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.229211 seconds)
OddWheel was tried 71 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.02416 seconds)
MixedIntegerRounding2 was tried 194 times and created 2910 cuts of which 0 were active after adding rounds of cuts (3.11213 seconds)
FlowCover was tried 71 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.063764 seconds)
TwoMirCuts was tried 194 times and created 526 cuts of which 0 were active after adding rounds of cuts (1.14551 seconds)
ZeroHalf was tried 194 times and created 1518 cuts of which 0 were active after adding rounds of cuts (3.71135 seconds)

Result - Optimal solution found
Objective value:                16
Enumerated nodes:               557
Total iterations:               149872
Time (CPU seconds):             465.172
Time (Wallclock seconds):       466.678
Total time (CPU seconds):       465.235   (Wallclock seconds):       466.723
