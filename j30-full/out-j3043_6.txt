Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3043/j3043_6.lp -timeM elapsed -seconds 10800 -solve -solu sol-full/sol-j3043_6.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.28894 - 0.101205 seconds
Cgl0002I 10 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 290 rows, 572 columns (572 integer (571 of which binary)) and 5802 elements
Coin3009W Conflict graph built in 0.010 seconds, density: 1.035%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 572 objects (572 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 77 integers unsatisfied sum - 19.7574
Cbc0038I Pass   1: suminf.   11.97544 (51) obj. 2 iterations 103
Cbc0038I Pass   2: suminf.    7.11368 (29) obj. 3 iterations 37
Cbc0038I Pass   3: suminf.    6.71905 (27) obj. 3 iterations 4
Cbc0038I Pass   4: suminf.    6.65967 (23) obj. 3 iterations 36
Cbc0038I Pass   5: suminf.    5.57825 (20) obj. 3 iterations 28
Cbc0038I Pass   6: suminf.    5.48182 (19) obj. 3 iterations 7
Cbc0038I Pass   7: suminf.    6.86923 (26) obj. 3 iterations 43
Cbc0038I Pass   8: suminf.    5.93667 (20) obj. 3 iterations 41
Cbc0038I Pass   9: suminf.    5.90000 (27) obj. 3 iterations 49
Cbc0038I Pass  10: suminf.    5.88125 (21) obj. 3 iterations 3
Cbc0038I Pass  11: suminf.    3.56700 (16) obj. 3 iterations 15
Cbc0038I Pass  12: suminf.    2.95714 (12) obj. 3 iterations 9
Cbc0038I Pass  13: suminf.    3.92500 (11) obj. 3 iterations 14
Cbc0038I Pass  14: suminf.    2.90714 (11) obj. 3 iterations 24
Cbc0038I Pass  15: suminf.    3.12500 (11) obj. 3 iterations 21
Cbc0038I Pass  16: suminf.   10.40952 (40) obj. 3 iterations 66
Cbc0038I Pass  17: suminf.    6.47381 (22) obj. 3 iterations 59
Cbc0038I Pass  18: suminf.    5.92955 (24) obj. 3 iterations 40
Cbc0038I Pass  19: suminf.    5.69762 (25) obj. 3 iterations 42
Cbc0038I Pass  20: suminf.    7.48144 (26) obj. 3 iterations 48
Cbc0038I Pass  21: suminf.    6.93896 (26) obj. 3 iterations 27
Cbc0038I Pass  22: suminf.    6.93896 (26) obj. 3 iterations 11
Cbc0038I Pass  23: suminf.    7.87444 (29) obj. 3 iterations 30
Cbc0038I Pass  24: suminf.    6.27229 (24) obj. 3 iterations 26
Cbc0038I Pass  25: suminf.    6.83308 (24) obj. 3 iterations 22
Cbc0038I Pass  26: suminf.   10.99757 (44) obj. 3 iterations 78
Cbc0038I Pass  27: suminf.    6.47706 (27) obj. 3 iterations 76
Cbc0038I Pass  28: suminf.    7.50308 (30) obj. 3 iterations 30
Cbc0038I Pass  29: suminf.    5.87362 (29) obj. 3 iterations 31
Cbc0038I Pass  30: suminf.    5.87362 (29) obj. 3 iterations 2
Cbc0038I Pass  31: suminf.    5.02182 (20) obj. 3 iterations 32
Cbc0038I Pass  32: suminf.    4.68182 (16) obj. 3 iterations 23
Cbc0038I Pass  33: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  34: suminf.    4.90332 (16) obj. 3 iterations 34
Cbc0038I Pass  35: suminf.    4.08658 (15) obj. 3 iterations 30
Cbc0038I Pass  36: suminf.    5.20364 (20) obj. 3 iterations 35
Cbc0038I Pass  37: suminf.    4.68182 (16) obj. 3 iterations 18
Cbc0038I Pass  38: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  39: suminf.    4.18182 (15) obj. 3 iterations 13
Cbc0038I Pass  40: suminf.    4.08658 (15) obj. 3 iterations 13
Cbc0038I Pass  41: suminf.    5.20364 (20) obj. 3 iterations 33
Cbc0038I Pass  42: suminf.    4.68182 (16) obj. 3 iterations 20
Cbc0038I Pass  43: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  44: suminf.    4.90332 (16) obj. 3 iterations 32
Cbc0038I Pass  45: suminf.    4.08658 (15) obj. 3 iterations 24
Cbc0038I Pass  46: suminf.    5.20364 (20) obj. 3 iterations 34
Cbc0038I Pass  47: suminf.    4.68182 (16) obj. 3 iterations 19
Cbc0038I Pass  48: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  49: suminf.    4.90332 (16) obj. 3 iterations 33
Cbc0038I Pass  50: suminf.    4.08658 (15) obj. 3 iterations 25
Cbc0038I Pass  51: suminf.    5.84000 (20) obj. 3 iterations 35
Cbc0038I Pass  52: suminf.    4.68182 (16) obj. 3 iterations 18
Cbc0038I Pass  53: suminf.    4.30087 (15) obj. 3 iterations 9
Cbc0038I Pass  54: suminf.    4.90332 (16) obj. 3 iterations 34
Cbc0038I Pass  55: suminf.    4.08658 (15) obj. 3 iterations 26
Cbc0038I Pass  56: suminf.    5.20364 (20) obj. 3 iterations 35
Cbc0038I Pass  57: suminf.    4.68182 (16) obj. 3 iterations 19
Cbc0038I Pass  58: suminf.    4.30087 (15) obj. 3 iterations 10
Cbc0038I Pass  59: suminf.    4.90332 (16) obj. 3 iterations 31
Cbc0038I Pass  60: suminf.    4.08658 (15) obj. 3 iterations 24
Cbc0038I Pass  61: suminf.    5.20364 (20) obj. 3 iterations 33
Cbc0038I Pass  62: suminf.    4.68182 (16) obj. 3 iterations 17
Cbc0038I Pass  63: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  64: suminf.    4.90332 (16) obj. 3 iterations 30
Cbc0038I Pass  65: suminf.    4.08658 (15) obj. 3 iterations 26
Cbc0038I Pass  66: suminf.    5.20364 (20) obj. 3 iterations 34
Cbc0038I Pass  67: suminf.    4.68182 (16) obj. 3 iterations 16
Cbc0038I Pass  68: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  69: suminf.    4.18182 (15) obj. 3 iterations 14
Cbc0038I Pass  70: suminf.    4.08658 (15) obj. 3 iterations 11
Cbc0038I Pass  71: suminf.    5.20364 (20) obj. 3 iterations 36
Cbc0038I Pass  72: suminf.    4.68182 (16) obj. 3 iterations 16
Cbc0038I Pass  73: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  74: suminf.    4.90332 (16) obj. 3 iterations 30
Cbc0038I Pass  75: suminf.    4.08658 (15) obj. 3 iterations 25
Cbc0038I Pass  76: suminf.    5.20364 (20) obj. 3 iterations 32
Cbc0038I Pass  77: suminf.    4.68182 (16) obj. 3 iterations 22
Cbc0038I Pass  78: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  79: suminf.    4.90332 (16) obj. 3 iterations 32
Cbc0038I Pass  80: suminf.    4.08658 (15) obj. 3 iterations 26
Cbc0038I Pass  81: suminf.    4.30087 (15) obj. 3 iterations 13
Cbc0038I Pass  82: suminf.    4.30087 (15) obj. 3 iterations 3
Cbc0038I Pass  83: suminf.    5.53968 (16) obj. 3 iterations 29
Cbc0038I Pass  84: suminf.    4.08658 (15) obj. 3 iterations 23
Cbc0038I Pass  85: suminf.    5.84000 (20) obj. 3 iterations 32
Cbc0038I Pass  86: suminf.    4.68182 (16) obj. 3 iterations 22
Cbc0038I Pass  87: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  88: suminf.    4.90332 (16) obj. 3 iterations 31
Cbc0038I Pass  89: suminf.    4.08658 (15) obj. 3 iterations 26
Cbc0038I Pass  90: suminf.    5.20364 (20) obj. 3 iterations 36
Cbc0038I Pass  91: suminf.    4.68182 (16) obj. 3 iterations 20
Cbc0038I Pass  92: suminf.    4.30087 (15) obj. 3 iterations 10
Cbc0038I Pass  93: suminf.    4.72150 (16) obj. 3 iterations 31
Cbc0038I Pass  94: suminf.    4.08658 (15) obj. 3 iterations 25
Cbc0038I Pass  95: suminf.    5.20364 (20) obj. 3 iterations 33
Cbc0038I Pass  96: suminf.    4.68182 (16) obj. 3 iterations 18
Cbc0038I Pass  97: suminf.    4.30087 (15) obj. 3 iterations 10
Cbc0038I Pass  98: suminf.    4.90332 (16) obj. 3 iterations 32
Cbc0038I Pass  99: suminf.    4.08658 (15) obj. 3 iterations 27
Cbc0038I Pass 100: suminf.    9.50231 (33) obj. 3 iterations 100
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 389 integers at bound fixed and 0 continuous
Cbc0038I Full problem 290 rows 572 columns, reduced to 172 rows 148 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I After 1.66 seconds - Feasibility pump exiting - took 0.72 seconds
Cbc0031I 48 added rows had average density of 33.1875
Cbc0013I At root node, 48 cuts changed objective from 1.2889389 to 2 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 265 row cuts average 4.0 elements, 2 column cuts (16 active)  in 0.299 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 212 row cuts average 444.7 elements, 0 column cuts (0 active)  in 0.555 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 67 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 132 row cuts average 11.7 elements, 0 column cuts (0 active)  in 8.627 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 138 row cuts average 33.8 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 270 row cuts average 209.7 elements, 0 column cuts (0 active)  in 0.847 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 151 row cuts average 36.2 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (13.78 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2 (17.33 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2 (23.89 seconds)
Cbc0010I After 3 nodes, 3 on tree, 1e+50 best solution, best possible 2 (24.89 seconds)
Cbc0010I After 6 nodes, 1 on tree, 1e+50 best solution, best possible 3 (26.05 seconds)
Cbc0010I After 7 nodes, 2 on tree, 1e+50 best solution, best possible 3 (27.89 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 3 (30.62 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 3 (33.52 seconds)
Cbc0010I After 10 nodes, 5 on tree, 1e+50 best solution, best possible 3 (36.33 seconds)
Cbc0010I After 11 nodes, 6 on tree, 1e+50 best solution, best possible 3 (37.26 seconds)
Cbc0010I After 12 nodes, 7 on tree, 1e+50 best solution, best possible 3 (39.07 seconds)
Cbc0010I After 14 nodes, 9 on tree, 1e+50 best solution, best possible 3 (39.96 seconds)
Cbc0010I After 17 nodes, 10 on tree, 1e+50 best solution, best possible 3 (40.85 seconds)
Cbc0010I After 20 nodes, 10 on tree, 1e+50 best solution, best possible 3 (41.96 seconds)
Cbc0010I After 23 nodes, 11 on tree, 1e+50 best solution, best possible 3 (42.95 seconds)
Cbc0010I After 25 nodes, 11 on tree, 1e+50 best solution, best possible 3 (43.65 seconds)
Cbc0010I After 27 nodes, 13 on tree, 1e+50 best solution, best possible 3 (44.49 seconds)
Cbc0010I After 31 nodes, 11 on tree, 1e+50 best solution, best possible 3 (45.69 seconds)
Cbc0010I After 33 nodes, 13 on tree, 1e+50 best solution, best possible 3 (46.40 seconds)
Cbc0010I After 37 nodes, 13 on tree, 1e+50 best solution, best possible 3 (47.72 seconds)
Cbc0010I After 40 nodes, 12 on tree, 1e+50 best solution, best possible 3 (49.15 seconds)
Cbc0010I After 44 nodes, 11 on tree, 1e+50 best solution, best possible 3 (50.44 seconds)
Cbc0010I After 45 nodes, 12 on tree, 1e+50 best solution, best possible 3 (51.15 seconds)
Cbc0010I After 46 nodes, 13 on tree, 1e+50 best solution, best possible 3 (51.91 seconds)
Cbc0010I After 49 nodes, 14 on tree, 1e+50 best solution, best possible 3 (52.83 seconds)
Cbc0010I After 56 nodes, 14 on tree, 1e+50 best solution, best possible 3 (53.84 seconds)
Cbc0010I After 60 nodes, 15 on tree, 1e+50 best solution, best possible 3 (54.69 seconds)
Cbc0010I After 62 nodes, 14 on tree, 1e+50 best solution, best possible 3 (55.39 seconds)
Cbc0010I After 64 nodes, 15 on tree, 1e+50 best solution, best possible 3 (56.73 seconds)
Cbc0010I After 67 nodes, 15 on tree, 1e+50 best solution, best possible 3 (57.72 seconds)
Cbc0010I After 72 nodes, 16 on tree, 1e+50 best solution, best possible 3 (58.62 seconds)
Cbc0010I After 74 nodes, 16 on tree, 1e+50 best solution, best possible 3 (59.40 seconds)
Cbc0010I After 79 nodes, 15 on tree, 1e+50 best solution, best possible 3 (60.18 seconds)
Cbc0010I After 82 nodes, 15 on tree, 1e+50 best solution, best possible 3 (60.92 seconds)
Cbc0010I After 86 nodes, 15 on tree, 1e+50 best solution, best possible 3 (61.66 seconds)
Cbc0010I After 88 nodes, 16 on tree, 1e+50 best solution, best possible 3 (62.39 seconds)
Cbc0010I After 93 nodes, 14 on tree, 1e+50 best solution, best possible 3 (63.14 seconds)
Cbc0010I After 95 nodes, 16 on tree, 1e+50 best solution, best possible 3 (63.89 seconds)
Cbc0010I After 100 nodes, 15 on tree, 1e+50 best solution, best possible 3 (64.88 seconds)
Cbc0010I After 104 nodes, 16 on tree, 1e+50 best solution, best possible 3 (65.58 seconds)
Cbc0010I After 108 nodes, 17 on tree, 1e+50 best solution, best possible 3 (66.43 seconds)
Cbc0010I After 111 nodes, 19 on tree, 1e+50 best solution, best possible 3 (67.21 seconds)
Cbc0010I After 114 nodes, 19 on tree, 1e+50 best solution, best possible 3 (68.13 seconds)
Cbc0010I After 118 nodes, 20 on tree, 1e+50 best solution, best possible 3 (69.23 seconds)
Cbc0010I After 121 nodes, 20 on tree, 1e+50 best solution, best possible 3 (70.31 seconds)
Cbc0010I After 124 nodes, 21 on tree, 1e+50 best solution, best possible 3 (71.45 seconds)
Cbc0010I After 128 nodes, 22 on tree, 1e+50 best solution, best possible 3 (72.26 seconds)
Cbc0010I After 134 nodes, 23 on tree, 1e+50 best solution, best possible 3 (73.12 seconds)
Cbc0010I After 143 nodes, 23 on tree, 1e+50 best solution, best possible 3 (73.90 seconds)
Cbc0010I After 149 nodes, 25 on tree, 1e+50 best solution, best possible 3 (75.28 seconds)
Cbc0010I After 159 nodes, 21 on tree, 1e+50 best solution, best possible 3 (76.17 seconds)
Cbc0010I After 162 nodes, 21 on tree, 1e+50 best solution, best possible 3 (76.94 seconds)
Cbc0010I After 165 nodes, 20 on tree, 1e+50 best solution, best possible 3 (77.66 seconds)
Cbc0010I After 170 nodes, 20 on tree, 1e+50 best solution, best possible 3 (79.14 seconds)
Cbc0010I After 172 nodes, 20 on tree, 1e+50 best solution, best possible 3 (79.84 seconds)
Cbc0010I After 176 nodes, 19 on tree, 1e+50 best solution, best possible 3 (81.11 seconds)
Cbc0010I After 180 nodes, 20 on tree, 1e+50 best solution, best possible 3 (82.04 seconds)
Cbc0010I After 182 nodes, 21 on tree, 1e+50 best solution, best possible 3 (82.87 seconds)
Cbc0004I Integer solution of 3 found after 22344 iterations and 183 nodes (82.99 seconds)
Cbc0001I Search completed - best objective 3, took 22344 iterations and 183 nodes (83.00 seconds)
Cbc0032I Strong branching done 1446 times (27328 iterations), fathomed 3 nodes and fixed 14 variables
Cbc0035I Maximum depth 25, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.28894 to 2
Probing was tried 155 times and created 1150 cuts of which 14 were active after adding rounds of cuts (0.589006 seconds)
Gomory was tried 151 times and created 231 cuts of which 0 were active after adding rounds of cuts (0.899746 seconds)
Knapsack was tried 151 times and created 326 cuts of which 0 were active after adding rounds of cuts (1.18779 seconds)
liftKnapsack was tried 151 times and created 1824 cuts of which 0 were active after adding rounds of cuts (64.9004 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012538 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.056343 seconds)
MixedIntegerRounding2 was tried 151 times and created 812 cuts of which 0 were active after adding rounds of cuts (0.426554 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002689 seconds)
TwoMirCuts was tried 151 times and created 705 cuts of which 0 were active after adding rounds of cuts (1.06866 seconds)
ZeroHalf was tried 151 times and created 881 cuts of which 0 were active after adding rounds of cuts (0.824243 seconds)

Result - Optimal solution found
Objective value:                3
Enumerated nodes:               183
Total iterations:               22344
Time (CPU seconds):             82.4134
Time (Wallclock seconds):       83.0417
Total time (CPU seconds):       82.4224   (Wallclock seconds):       83.0519
