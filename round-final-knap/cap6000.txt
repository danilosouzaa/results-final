Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/cap6000.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/cap6000.txt -quit (default strategy 1)
At line 1 NAME           cap6000
At line 2 ROWS
At line 2180 COLUMNS
At line 32208 RHS
At line 33210 BOUNDS
At line 39211 ENDATA
Problem cap6000 has 2176 rows, 6000 columns and 48243 elements
Coin0008I cap6000 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -2.45154e+06 - 0.083721 seconds
Cgl0003I 46 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 1954 rows, 5865 columns (5865 integer (5865 of which binary)) and 17534 elements
Coin3009W Conflict graph built in 0.012 seconds, density: 0.017%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 2 integers unsatisfied sum - 0.417858
Cbc0038I Pass   1: suminf.    0.02047 (1) obj. -2.44686e+06 iterations 152
Cbc0038I Pass   2: suminf.    0.26613 (1) obj. -2.37857e+06 iterations 7
Cbc0038I Solution found of -2.35432e+06
Cbc0038I Rounding solution of -2.36746e+06 is better than previous of -2.35432e+06
Cbc0038I Before mini branch and bound, 5861 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1954 rows 5865 columns, reduced to 2 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -2.36746e+06 to -2.4428e+06 (0.55 seconds)
Cbc0038I Round again with cutoff of -2.44368e+06
Cbc0038I Reduced cost fixing fixed 1798 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.02047 (1) obj. -2.44686e+06 iterations 0
Cbc0038I Pass   4: suminf.    0.18644 (1) obj. -2.44662e+06 iterations 6
Cbc0038I Pass   5: suminf.    0.25962 (3) obj. -2.44368e+06 iterations 141
Cbc0038I Pass   6: suminf.    0.18453 (3) obj. -2.44368e+06 iterations 32
Cbc0038I Pass   7: suminf.    0.53694 (3) obj. -2.44368e+06 iterations 15
Cbc0038I Pass   8: suminf.    0.53694 (3) obj. -2.44368e+06 iterations 0
Cbc0038I Pass   9: suminf.    0.57302 (3) obj. -2.44368e+06 iterations 37
Cbc0038I Pass  10: suminf.    0.57302 (3) obj. -2.44368e+06 iterations 0
Cbc0038I Pass  11: suminf.    0.89615 (3) obj. -2.44368e+06 iterations 37
Cbc0038I Pass  12: suminf.    0.58858 (3) obj. -2.44368e+06 iterations 93
Cbc0038I Pass  13: suminf.    0.53535 (3) obj. -2.44368e+06 iterations 95
Cbc0038I Pass  14: suminf.    0.55661 (2) obj. -2.44368e+06 iterations 29
Cbc0038I Pass  15: suminf.    0.50864 (3) obj. -2.44368e+06 iterations 18
Cbc0038I Pass  16: suminf.    0.63922 (3) obj. -2.44368e+06 iterations 37
Cbc0038I Pass  17: suminf.    1.32091 (3) obj. -2.44368e+06 iterations 92
Cbc0038I Pass  18: suminf.    0.72300 (3) obj. -2.44368e+06 iterations 90
Cbc0038I Pass  19: suminf.    0.75901 (3) obj. -2.44368e+06 iterations 37
Cbc0038I Pass  20: suminf.    0.86126 (3) obj. -2.44368e+06 iterations 87
Cbc0038I Pass  21: suminf.    0.77081 (3) obj. -2.44368e+06 iterations 30
Cbc0038I Pass  22: suminf.    0.61952 (3) obj. -2.44368e+06 iterations 29
Cbc0038I Pass  23: suminf.    0.61952 (3) obj. -2.44368e+06 iterations 0
Cbc0038I Pass  24: suminf.    0.54390 (3) obj. -2.44368e+06 iterations 47
Cbc0038I Pass  25: suminf.    0.54390 (3) obj. -2.44368e+06 iterations 0
Cbc0038I Pass  26: suminf.    0.69287 (3) obj. -2.44368e+06 iterations 37
Cbc0038I Pass  27: suminf.    1.23980 (3) obj. -2.44368e+06 iterations 101
Cbc0038I Pass  28: suminf.    0.90116 (3) obj. -2.44368e+06 iterations 75
Cbc0038I Pass  29: suminf.    0.76386 (3) obj. -2.44368e+06 iterations 81
Cbc0038I Pass  30: suminf.    0.72205 (3) obj. -2.44368e+06 iterations 34
Cbc0038I Pass  31: suminf.    0.69561 (3) obj. -2.44368e+06 iterations 58
Cbc0038I Pass  32: suminf.    0.67053 (3) obj. -2.44368e+06 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5787 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1954 rows 5865 columns, reduced to 4 rows 78 columns
Cbc0038I Mini branch and bound improved solution from -2.4428e+06 to -2.45095e+06 (1.33 seconds)
Cbc0038I Round again with cutoff of -2.45107e+06
Cbc0038I Reduced cost fixing fixed 5311 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.37957 (2) obj. -2.45107e+06 iterations 3
Cbc0038I Pass  33: suminf.    0.69590 (3) obj. -2.45107e+06 iterations 55
Cbc0038I Pass  34: suminf.    0.69590 (3) obj. -2.45107e+06 iterations 64
Cbc0038I Pass  35: suminf.    0.41947 (2) obj. -2.45153e+06 iterations 94
Cbc0038I Pass  36: suminf.    0.55046 (3) obj. -2.45107e+06 iterations 109
Cbc0038I Pass  37: suminf.    0.55046 (3) obj. -2.45107e+06 iterations 1
Cbc0038I Pass  38: suminf.    0.79163 (3) obj. -2.45107e+06 iterations 178
Cbc0038I Pass  39: suminf.    0.79163 (3) obj. -2.45107e+06 iterations 7
Cbc0038I Pass  40: suminf.    0.56510 (2) obj. -2.45117e+06 iterations 84
Cbc0038I Pass  41: suminf.    0.52681 (2) obj. -2.45107e+06 iterations 2
Cbc0038I Pass  42: suminf.    0.75108 (3) obj. -2.45107e+06 iterations 53
Cbc0038I Pass  43: suminf.    0.70445 (3) obj. -2.45107e+06 iterations 62
Cbc0038I Pass  44: suminf.    0.70445 (3) obj. -2.45107e+06 iterations 1
Cbc0038I Pass  45: suminf.    0.72130 (2) obj. -2.45119e+06 iterations 109
Cbc0038I Pass  46: suminf.    0.66238 (2) obj. -2.45107e+06 iterations 2
Cbc0038I Pass  47: suminf.    0.73333 (3) obj. -2.45107e+06 iterations 53
Cbc0038I Pass  48: suminf.    0.73333 (3) obj. -2.45107e+06 iterations 9
Cbc0038I Pass  49: suminf.    0.72130 (2) obj. -2.45119e+06 iterations 62
Cbc0038I Pass  50: suminf.    0.56825 (3) obj. -2.45107e+06 iterations 98
Cbc0038I Pass  51: suminf.    0.40128 (2) obj. -2.45107e+06 iterations 96
Cbc0038I Pass  52: suminf.    0.48620 (3) obj. -2.45107e+06 iterations 53
Cbc0038I Pass  53: suminf.    0.73301 (3) obj. -2.45107e+06 iterations 59
Cbc0038I Pass  54: suminf.    0.73301 (3) obj. -2.45107e+06 iterations 0
Cbc0038I Pass  55: suminf.    0.53975 (2) obj. -2.45122e+06 iterations 102
Cbc0038I Pass  56: suminf.    0.49089 (2) obj. -2.45107e+06 iterations 2
Cbc0038I Pass  57: suminf.    0.73905 (3) obj. -2.45107e+06 iterations 53
Cbc0038I Pass  58: suminf.    0.73905 (3) obj. -2.45107e+06 iterations 9
Cbc0038I Pass  59: suminf.    0.53975 (2) obj. -2.45122e+06 iterations 62
Cbc0038I Pass  60: suminf.    1.03890 (3) obj. -2.45107e+06 iterations 105
Cbc0038I Pass  61: suminf.    0.52217 (2) obj. -2.45107e+06 iterations 100
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5845 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1954 rows 5865 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (2.01 seconds)
Cbc0038I After 2.01 seconds - Feasibility pump exiting with objective of -2.45095e+06 - took 1.64 seconds
Cbc0012I Integer solution of -2450950 found by feasibility pump after 0 iterations and 0 nodes (2.01 seconds)
Cbc0038I Full problem 1954 rows 5865 columns, reduced to 3 rows 9 columns
Cbc0031I 9 added rows had average density of 160
Cbc0013I At root node, 9 cuts changed objective from -2451537.3 to -2451526.1 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 91 row cuts average 161.6 elements, 0 column cuts (0 active)  in 0.919 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.471 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 9 row cuts average 5861.0 elements, 0 column cuts (0 active)  in 0.350 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2450950 best solution, best possible -2451526.1 (4.35 seconds)
Cbc0010I After 2 nodes, 3 on tree, -2450950 best solution, best possible -2451526.1 (5.40 seconds)
Cbc0010I After 16 nodes, 13 on tree, -2450950 best solution, best possible -2451526.1 (6.11 seconds)
Cbc0010I After 39 nodes, 25 on tree, -2450950 best solution, best possible -2451526.1 (6.81 seconds)
Cbc0038I Full problem 1963 rows 5865 columns, reduced to 58 rows 442 columns
Cbc0044I Reduced cost fixing - 58 rows, 442 columns - restarting search
Cbc0012I Integer solution of -2450950 found by Previous solution after 0 iterations and 0 nodes (7.51 seconds)
Cbc0038I Full problem 58 rows 442 columns, reduced to 3 rows 9 columns
Cbc0031I 11 added rows had average density of 301.63636
Cbc0013I At root node, 11 cuts changed objective from -2451537.3 to -2451438.5 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 43 row cuts average 132.2 elements, 0 column cuts (0 active)  in 0.437 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 20 row cuts average 403.2 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 6 row cuts average 440.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 11 (Stored from first) - 10 row cuts average 141.8 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -2450950 best solution, best possible -2451438.5 (8.16 seconds)
Cbc0012I Integer solution of -2451079 found by rounding after 85 iterations and 5 nodes (8.38 seconds)
Cbc0010I After 8 nodes, 8 on tree, -2451079 best solution, best possible -2451438.5 (9.24 seconds)
Cbc0010I After 9 nodes, 9 on tree, -2451079 best solution, best possible -2451438.5 (10.13 seconds)
Cbc0012I Integer solution of -2451283 found by rounding after 129 iterations and 10 nodes (10.13 seconds)
Cbc0010I After 10 nodes, 9 on tree, -2451283 best solution, best possible -2451438.5 (11.23 seconds)
Cbc0010I After 11 nodes, 10 on tree, -2451283 best solution, best possible -2451438.5 (11.99 seconds)
Cbc0010I After 16 nodes, 12 on tree, -2451283 best solution, best possible -2451438.5 (12.77 seconds)
Cbc0010I After 29 nodes, 19 on tree, -2451283 best solution, best possible -2451438.5 (13.65 seconds)
Cbc0010I After 41 nodes, 25 on tree, -2451283 best solution, best possible -2451438.5 (14.48 seconds)
Cbc0010I After 61 nodes, 36 on tree, -2451283 best solution, best possible -2451438.5 (15.22 seconds)
Cbc0010I After 78 nodes, 44 on tree, -2451283 best solution, best possible -2451438.5 (15.92 seconds)
Cbc0010I After 139 nodes, 69 on tree, -2451283 best solution, best possible -2451438.5 (16.63 seconds)
Cbc0010I After 258 nodes, 121 on tree, -2451283 best solution, best possible -2451438.5 (17.39 seconds)
Cbc0010I After 290 nodes, 136 on tree, -2451283 best solution, best possible -2451438.5 (18.19 seconds)
Cbc0010I After 311 nodes, 144 on tree, -2451283 best solution, best possible -2451438.5 (19.12 seconds)
Cbc0010I After 334 nodes, 154 on tree, -2451283 best solution, best possible -2451438.5 (19.92 seconds)
Cbc0010I After 366 nodes, 168 on tree, -2451283 best solution, best possible -2451438.5 (20.63 seconds)
Cbc0010I After 381 nodes, 173 on tree, -2451283 best solution, best possible -2451438.5 (21.56 seconds)
Cbc0010I After 411 nodes, 188 on tree, -2451283 best solution, best possible -2451438.5 (22.26 seconds)
Cbc0010I After 439 nodes, 202 on tree, -2451283 best solution, best possible -2451438.5 (22.98 seconds)
Cbc0010I After 470 nodes, 215 on tree, -2451283 best solution, best possible -2451438.5 (23.71 seconds)
Cbc0010I After 478 nodes, 220 on tree, -2451283 best solution, best possible -2451438.5 (24.49 seconds)
Cbc0010I After 500 nodes, 230 on tree, -2451283 best solution, best possible -2451438.5 (25.24 seconds)
Cbc0010I After 531 nodes, 246 on tree, -2451283 best solution, best possible -2451438.5 (26.03 seconds)
Cbc0010I After 562 nodes, 260 on tree, -2451283 best solution, best possible -2451438.5 (26.82 seconds)
Cbc0010I After 591 nodes, 274 on tree, -2451283 best solution, best possible -2451438.5 (27.53 seconds)
Cbc0010I After 628 nodes, 291 on tree, -2451283 best solution, best possible -2451438.5 (28.38 seconds)
Cbc0010I After 660 nodes, 305 on tree, -2451283 best solution, best possible -2451438.5 (29.17 seconds)
Cbc0010I After 670 nodes, 310 on tree, -2451283 best solution, best possible -2451438.5 (29.88 seconds)
Cbc0010I After 693 nodes, 321 on tree, -2451283 best solution, best possible -2451438.5 (30.61 seconds)
Cbc0010I After 710 nodes, 329 on tree, -2451283 best solution, best possible -2451438.5 (31.36 seconds)
Cbc0010I After 733 nodes, 340 on tree, -2451283 best solution, best possible -2451438.5 (32.10 seconds)
Cbc0010I After 769 nodes, 354 on tree, -2451283 best solution, best possible -2451438.5 (32.80 seconds)
Cbc0010I After 818 nodes, 377 on tree, -2451283 best solution, best possible -2451438.5 (33.51 seconds)
Cbc0010I After 872 nodes, 398 on tree, -2451283 best solution, best possible -2451438.5 (34.22 seconds)
Cbc0010I After 966 nodes, 438 on tree, -2451283 best solution, best possible -2451438.5 (34.92 seconds)
Cbc0010I After 1003 nodes, 456 on tree, -2451283 best solution, best possible -2451438.5 (35.74 seconds)
Cbc0010I After 1009 nodes, 462 on tree, -2451283 best solution, best possible -2451438.5 (36.48 seconds)
Cbc0010I After 1018 nodes, 471 on tree, -2451283 best solution, best possible -2451438.5 (37.21 seconds)
Cbc0010I After 1034 nodes, 487 on tree, -2451283 best solution, best possible -2451438.5 (37.92 seconds)
Cbc0004I Integer solution of -2451325 found after 7535 iterations and 1040 nodes (38.02 seconds)
Cbc0010I After 1109 nodes, 365 on tree, -2451325 best solution, best possible -2451438.5 (38.67 seconds)
Cbc0010I After 1231 nodes, 399 on tree, -2451325 best solution, best possible -2451438.5 (39.38 seconds)
Cbc0010I After 1279 nodes, 412 on tree, -2451325 best solution, best possible -2451438.5 (40.10 seconds)
Cbc0010I After 1309 nodes, 420 on tree, -2451325 best solution, best possible -2451438.5 (40.82 seconds)
Cbc0010I After 1322 nodes, 426 on tree, -2451325 best solution, best possible -2451438.5 (41.63 seconds)
Cbc0010I After 1345 nodes, 433 on tree, -2451325 best solution, best possible -2451438.5 (42.34 seconds)
Cbc0010I After 1408 nodes, 452 on tree, -2451325 best solution, best possible -2451438.5 (43.15 seconds)
Cbc0010I After 1469 nodes, 470 on tree, -2451325 best solution, best possible -2451438.5 (43.89 seconds)
Cbc0010I After 1534 nodes, 485 on tree, -2451325 best solution, best possible -2451438.5 (44.59 seconds)
Cbc0010I After 1629 nodes, 504 on tree, -2451325 best solution, best possible -2451438.5 (45.44 seconds)
Cbc0010I After 1706 nodes, 526 on tree, -2451325 best solution, best possible -2451438.5 (46.14 seconds)
Cbc0010I After 1828 nodes, 558 on tree, -2451325 best solution, best possible -2451438.5 (46.86 seconds)
Cbc0010I After 1958 nodes, 588 on tree, -2451325 best solution, best possible -2451438.5 (47.56 seconds)
Cbc0010I After 2061 nodes, 612 on tree, -2451325 best solution, best possible -2451438.5 (48.30 seconds)
Cbc0010I After 2169 nodes, 636 on tree, -2451325 best solution, best possible -2451438.5 (49.06 seconds)
Cbc0010I After 2265 nodes, 653 on tree, -2451325 best solution, best possible -2451438.5 (49.77 seconds)
Cbc0016I Integer solution of -2451346 found by strong branching after 16470 iterations and 2279 nodes (49.91 seconds)
Cbc0010I After 2301 nodes, 399 on tree, -2451346 best solution, best possible -2451438.5 (50.47 seconds)
Cbc0016I Integer solution of -2451359 found by strong branching after 16959 iterations and 2340 nodes (51.10 seconds)
Cbc0010I After 2341 nodes, 182 on tree, -2451359 best solution, best possible -2451438.5 (51.17 seconds)
Cbc0004I Integer solution of -2451373 found after 17033 iterations and 2352 nodes (51.25 seconds)
Cbc0010I After 2447 nodes, 13 on tree, -2451373 best solution, best possible -2451438.5 (51.88 seconds)
Cbc0010I After 2600 nodes, 11 on tree, -2451373 best solution, best possible -2451438.5 (52.58 seconds)
Cbc0010I After 2801 nodes, 4 on tree, -2451373 best solution, best possible -2451438.5 (53.28 seconds)
Cbc0010I After 2902 nodes, 6 on tree, -2451373 best solution, best possible -2451438.5 (54.01 seconds)
Cbc0010I After 2982 nodes, 9 on tree, -2451373 best solution, best possible -2451438.5 (54.72 seconds)
Cbc0010I After 3082 nodes, 7 on tree, -2451373 best solution, best possible -2451438.5 (55.56 seconds)
Cbc0010I After 3184 nodes, 12 on tree, -2451373 best solution, best possible -2451438.5 (56.26 seconds)
Cbc0010I After 3369 nodes, 8 on tree, -2451373 best solution, best possible -2451438.5 (56.97 seconds)
Cbc0010I After 3535 nodes, 3 on tree, -2451373 best solution, best possible -2451438.5 (57.67 seconds)
Cbc0012I Integer solution of -2451377 found by rounding after 24647 iterations and 3607 nodes (57.97 seconds)
Cbc0010I After 3668 nodes, 2 on tree, -2451377 best solution, best possible -2451432.6 (58.44 seconds)
Cbc0010I After 3768 nodes, 4 on tree, -2451377 best solution, best possible -2451428.5 (59.18 seconds)
Cbc0010I After 3898 nodes, 4 on tree, -2451377 best solution, best possible -2451428.5 (59.88 seconds)
Cbc0001I Search completed - best objective -2451377, took 26703 iterations and 3943 nodes (60.08 seconds)
Cbc0032I Strong branching done 2920 times (12444 iterations), fathomed 44 nodes and fixed 676 variables
Cbc0035I Maximum depth 56, 33718 variables fixed on reduced cost
Cbc0038I Probing was tried 3191 times and created 893 cuts of which 0 were active after adding rounds of cuts (0.681 seconds)
Cbc0038I Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Cbc0038I Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I liftKnapsack was tried 3113 times and created 14989 cuts of which 0 were active after adding rounds of cuts (16.104 seconds)
Cbc0038I Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Cbc0038I FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 10 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)
Cbc0038I ZeroHalf was tried 709 times and created 936 cuts of which 0 were active after adding rounds of cuts (1.889 seconds)
Cbc0038I Stored from first was tried 3113 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -2451377 found by Reduced search after 27056 iterations and 3993 nodes (60.10 seconds)
Cbc0001I Search completed - best objective -2451377, took 27056 iterations and 3993 nodes (60.10 seconds)
Cbc0032I Strong branching done 366 times (1112 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 17, 5862 variables fixed on reduced cost
Cuts at root node changed objective from -2.45154e+06 to -2.45153e+06
Probing was tried 76 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.074334 seconds)
Gomory was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.082617 seconds)
Knapsack was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028146 seconds)
liftKnapsack was tried 76 times and created 322 cuts of which 0 were active after adding rounds of cuts (2.54355 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004725 seconds)
OddWheel was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.471186 seconds)
MixedIntegerRounding2 was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.087832 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011064 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003775 seconds)
ZeroHalf was tried 14 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.349561 seconds)

Result - Optimal solution found
Objective value:                -2451377
Enumerated nodes:               3993
Total iterations:               27056
Time (CPU seconds):             118.354
Time (Wallclock seconds):       60.1751
Total time (CPU seconds):       118.528   (Wallclock seconds):       60.2666
