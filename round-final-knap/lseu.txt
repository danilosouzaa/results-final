Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/lseu.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/lseu.txt -quit (default strategy 1)
At line 15 NAME          LSEU
At line 16 ROWS
At line 46 COLUMNS
At line 266 RHS
At line 281 BOUNDS
At line 371 ENDATA
Problem LSEU has 28 rows, 89 columns and 309 elements
Coin0008I LSEU read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 834.682 - 0.004874 seconds
Cgl0004I processed model has 27 rows, 88 columns (88 integer (88 of which binary)) and 261 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.258%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.00643
Cbc0038I Pass   1: suminf.    0.69474 (3) obj. 1031.39 iterations 14
Cbc0038I Pass   2: suminf.    0.45714 (1) obj. 1400.8 iterations 4
Cbc0038I Pass   3: suminf.    0.45714 (1) obj. 1400.8 iterations 0
Cbc0038I Pass   4: suminf.    0.35238 (1) obj. 1399.47 iterations 1
Cbc0038I Pass   5: suminf.    1.25907 (6) obj. 2848.14 iterations 27
Cbc0038I Pass   6: suminf.    0.50550 (2) obj. 2809.85 iterations 7
Cbc0038I Pass   7: suminf.    0.01053 (1) obj. 2407.88 iterations 4
Cbc0038I Pass   8: suminf.    0.01053 (1) obj. 2407.88 iterations 0
Cbc0038I Pass   9: suminf.    0.72902 (2) obj. 2536.08 iterations 2
Cbc0038I Pass  10: suminf.    0.03750 (1) obj. 4203.08 iterations 17
Cbc0038I Pass  11: suminf.    0.03750 (1) obj. 4203.07 iterations 3
Cbc0038I Pass  12: suminf.    0.45714 (1) obj. 3900.8 iterations 2
Cbc0038I Pass  13: suminf.    0.26667 (1) obj. 3902.13 iterations 1
Cbc0038I Pass  14: suminf.    0.26316 (1) obj. 3320.89 iterations 25
Cbc0038I Pass  15: suminf.    0.26316 (1) obj. 3320.89 iterations 5
Cbc0038I Pass  16: suminf.    0.47619 (1) obj. 3192.33 iterations 2
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. 3193.67 iterations 1
Cbc0038I Pass  18: suminf.    1.78000 (6) obj. 3604.58 iterations 14
Cbc0038I Pass  19: suminf.    0.71492 (2) obj. 3602.27 iterations 9
Cbc0038I Pass  20: suminf.    0.41905 (1) obj. 3600.93 iterations 2
Cbc0038I Pass  21: suminf.    0.39048 (1) obj. 3602.27 iterations 1
Cbc0038I Pass  22: suminf.    0.42353 (1) obj. 3613.19 iterations 15
Cbc0038I Pass  23: suminf.    0.15238 (1) obj. 3546.07 iterations 2
Cbc0038I Pass  24: suminf.    0.34286 (1) obj. 3547.4 iterations 1
Cbc0038I Pass  25: suminf.    0.71276 (3) obj. 3511.3 iterations 24
Cbc0038I Solution found of 3509
Cbc0038I Rounding solution of 1318 is better than previous of 3509
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 88 columns, reduced to 21 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 1318 to 1280 (1.90 seconds)
Cbc0038I Round again with cutoff of 1245.58
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  26: suminf.    0.69474 (3) obj. 1031.39 iterations 0
Cbc0038I Pass  27: suminf.    0.68100 (2) obj. 1245.58 iterations 7
Cbc0038I Pass  28: suminf.    0.35627 (3) obj. 1245.58 iterations 2
Cbc0038I Pass  29: suminf.    1.25518 (5) obj. 1095.74 iterations 6
Cbc0038I Pass  30: suminf.    0.94220 (2) obj. 1222.63 iterations 2
Cbc0038I Pass  31: suminf.    0.79715 (2) obj. 1245.58 iterations 5
Cbc0038I Pass  32: suminf.    1.34732 (6) obj. 1245.58 iterations 7
Cbc0038I Pass  33: suminf.    0.91721 (5) obj. 1245.58 iterations 6
Cbc0038I Pass  34: suminf.    1.24750 (4) obj. 1245.58 iterations 7
Cbc0038I Pass  35: suminf.    1.04229 (3) obj. 1245.58 iterations 5
Cbc0038I Pass  36: suminf.    0.89630 (3) obj. 1245.58 iterations 8
Cbc0038I Pass  37: suminf.    0.82592 (3) obj. 1245.58 iterations 4
Cbc0038I Pass  38: suminf.    0.45312 (2) obj. 1198.77 iterations 3
Cbc0038I Pass  39: suminf.    0.98420 (3) obj. 1245.58 iterations 5
Cbc0038I Pass  40: suminf.    0.60872 (2) obj. 1241.79 iterations 5
Cbc0038I Pass  41: suminf.    0.72231 (2) obj. 1177.57 iterations 2
Cbc0038I Pass  42: suminf.    2.52791 (9) obj. 1245.58 iterations 17
Cbc0038I Pass  43: suminf.    1.07829 (5) obj. 1245.58 iterations 7
Cbc0038I Pass  44: suminf.    1.07829 (5) obj. 1245.58 iterations 0
Cbc0038I Pass  45: suminf.    2.07731 (6) obj. 1245.58 iterations 9
Cbc0038I Pass  46: suminf.    1.73311 (5) obj. 1245.58 iterations 3
Cbc0038I Pass  47: suminf.    1.27188 (6) obj. 1245.58 iterations 4
Cbc0038I Pass  48: suminf.    2.04660 (7) obj. 1245.58 iterations 8
Cbc0038I Pass  49: suminf.    1.82942 (7) obj. 1245.58 iterations 4
Cbc0038I Pass  50: suminf.    1.46983 (6) obj. 1245.58 iterations 14
Cbc0038I Pass  51: suminf.    0.78396 (3) obj. 1245.58 iterations 9
Cbc0038I Pass  52: suminf.    0.78396 (3) obj. 1245.58 iterations 0
Cbc0038I Pass  53: suminf.    1.25041 (5) obj. 1245.58 iterations 8
Cbc0038I Pass  54: suminf.    1.97033 (9) obj. 1245.58 iterations 8
Cbc0038I Pass  55: suminf.    0.85693 (5) obj. 1245.58 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 88 columns, reduced to 19 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (3.30 seconds)
Cbc0038I After 3.30 seconds - Feasibility pump exiting with objective of 1280 - took 8.24 seconds
Cbc0012I Integer solution of 1280 found by feasibility pump after 0 iterations and 0 nodes (3.42 seconds)
Cbc0038I Full problem 27 rows 88 columns, reduced to 12 rows 16 columns
Cbc0012I Integer solution of 1153 found by RINS after 0 iterations and 0 nodes (3.55 seconds)
Cbc0031I 16 added rows had average density of 40.5
Cbc0013I At root node, 16 cuts changed objective from 944.75408 to 1050.5062 in 28 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 47 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 42 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.971 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 44 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 102 row cuts average 47.5 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 15 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1153 best solution, best possible 1050.5062 (7.78 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1153 best solution, best possible 1050.5062 (10.01 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1153 best solution, best possible 1050.5062 (11.75 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1153 best solution, best possible 1050.5062 (14.78 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1153 best solution, best possible 1050.5062 (15.59 seconds)
Cbc0004I Integer solution of 1128 found after 820 iterations and 10 nodes (17.26 seconds)
Cbc0010I After 10 nodes, 7 on tree, 1128 best solution, best possible 1050.5062 (17.26 seconds)
Cbc0010I After 11 nodes, 7 on tree, 1128 best solution, best possible 1050.5062 (19.29 seconds)
Cbc0010I After 13 nodes, 5 on tree, 1128 best solution, best possible 1050.5062 (20.26 seconds)
Cbc0010I After 14 nodes, 4 on tree, 1128 best solution, best possible 1050.5062 (21.73 seconds)
Cbc0010I After 15 nodes, 4 on tree, 1128 best solution, best possible 1050.5062 (23.43 seconds)
Cbc0010I After 16 nodes, 4 on tree, 1128 best solution, best possible 1050.5062 (24.20 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1128 best solution, best possible 1050.5062 (25.28 seconds)
Cbc0010I After 18 nodes, 4 on tree, 1128 best solution, best possible 1050.5062 (26.00 seconds)
Cbc0010I After 20 nodes, 3 on tree, 1128 best solution, best possible 1050.5062 (26.81 seconds)
Cbc0010I After 21 nodes, 4 on tree, 1128 best solution, best possible 1050.5062 (28.55 seconds)
Cbc0010I After 23 nodes, 6 on tree, 1128 best solution, best possible 1050.5062 (30.33 seconds)
Cbc0010I After 27 nodes, 5 on tree, 1128 best solution, best possible 1050.5062 (31.23 seconds)
Cbc0010I After 28 nodes, 4 on tree, 1128 best solution, best possible 1050.5062 (32.46 seconds)
Cbc0010I After 29 nodes, 3 on tree, 1128 best solution, best possible 1050.5062 (33.21 seconds)
Cbc0010I After 30 nodes, 3 on tree, 1128 best solution, best possible 1050.5062 (35.16 seconds)
Cbc0010I After 31 nodes, 4 on tree, 1128 best solution, best possible 1050.5062 (36.52 seconds)
Cbc0010I After 32 nodes, 5 on tree, 1128 best solution, best possible 1050.5062 (37.87 seconds)
Cbc0016I Integer solution of 1120 found by strong branching after 1772 iterations and 33 nodes (38.72 seconds)
Cbc0010I After 33 nodes, 6 on tree, 1120 best solution, best possible 1050.5062 (38.86 seconds)
Cbc0010I After 34 nodes, 5 on tree, 1120 best solution, best possible 1050.5062 (39.81 seconds)
Cbc0010I After 39 nodes, 2 on tree, 1120 best solution, best possible 1050.5062 (41.80 seconds)
Cbc0010I After 41 nodes, 3 on tree, 1120 best solution, best possible 1050.5062 (42.99 seconds)
Cbc0001I Search completed - best objective 1120, took 2179 iterations and 44 nodes (43.88 seconds)
Cbc0032I Strong branching done 626 times (5509 iterations), fathomed 4 nodes and fixed 14 variables
Cbc0035I Maximum depth 8, 428 variables fixed on reduced cost
Cuts at root node changed objective from 944.754 to 1050.51
Probing was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042346 seconds)
Gomory was tried 221 times and created 51 cuts of which 0 were active after adding rounds of cuts (0.343695 seconds)
Knapsack was tried 221 times and created 216 cuts of which 0 were active after adding rounds of cuts (0.734301 seconds)
liftKnapsack was tried 221 times and created 366 cuts of which 0 were active after adding rounds of cuts (5.81182 seconds)
Clique was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00472 seconds)
OddWheel was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008031 seconds)
MixedIntegerRounding2 was tried 221 times and created 501 cuts of which 0 were active after adding rounds of cuts (0.412556 seconds)
FlowCover was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002073 seconds)
TwoMirCuts was tried 221 times and created 548 cuts of which 0 were active after adding rounds of cuts (0.506853 seconds)
ZeroHalf was tried 221 times and created 112 cuts of which 0 were active after adding rounds of cuts (0.383674 seconds)

Result - Optimal solution found
Objective value:                1120
Enumerated nodes:               44
Total iterations:               2179
Time (CPU seconds):             130.506
Time (Wallclock seconds):       43.969
Total time (CPU seconds):       130.518   (Wallclock seconds):       43.9746
