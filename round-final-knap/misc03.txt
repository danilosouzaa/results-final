Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/misc03.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/misc03.txt -quit (default strategy 1)
At line 15 NAME          MISC03
At line 16 ROWS
At line 114 COLUMNS
At line 1182 RHS
At line 1219 BOUNDS
At line 1380 ENDATA
Problem MISC03 has 96 rows, 160 columns and 2053 elements
Coin0008I MISC03 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 1910 - 0.010436 seconds
Cgl0003I 15 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 138 columns (138 integer (138 of which binary)) and 1824 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 2.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 4.9999
Cbc0038I Initial state - 12 integers unsatisfied sum - 6
Cbc0038I Pass   1: suminf.    5.82857 (24) obj. 3351.29 iterations 36
Cbc0038I Pass   2: suminf.    4.66667 (14) obj. 3418.33 iterations 21
Cbc0038I Pass   3: suminf.    4.33333 (19) obj. 3418.33 iterations 26
Cbc0038I Pass   4: suminf.    5.42857 (18) obj. 3345 iterations 36
Cbc0038I Pass   5: suminf.    4.33333 (19) obj. 3210.83 iterations 31
Cbc0038I Pass   6: suminf.    5.44444 (17) obj. 3561.67 iterations 22
Cbc0038I Pass   7: suminf.    4.66667 (14) obj. 3418.33 iterations 22
Cbc0038I Pass   8: suminf.    4.33333 (19) obj. 3418.33 iterations 15
Cbc0038I Pass   9: suminf.    5.50000 (20) obj. 3325 iterations 27
Cbc0038I Pass  10: suminf.    4.66667 (24) obj. 3196.67 iterations 23
Cbc0038I Pass  11: suminf.    6.00000 (18) obj. 3545 iterations 25
Cbc0038I Pass  12: suminf.    7.00000 (24) obj. 4996.25 iterations 45
Cbc0038I Pass  13: suminf.    3.85000 (23) obj. 5071.25 iterations 27
Cbc0038I Pass  14: suminf.    3.20000 (15) obj. 5293 iterations 18
Cbc0038I Pass  15: suminf.    3.33333 (10) obj. 4408.33 iterations 17
Cbc0038I Pass  16: suminf.    3.00000 (14) obj. 4345 iterations 16
Cbc0038I Pass  17: suminf.    5.50000 (11) obj. 4895 iterations 34
Cbc0038I Pass  18: suminf.    5.00000 (10) obj. 4727.5 iterations 40
Cbc0038I Pass  19: suminf.    5.00000 (10) obj. 4727.5 iterations 23
Cbc0038I Pass  20: suminf.    7.50000 (15) obj. 4805 iterations 37
Cbc0038I Pass  21: suminf.    5.82857 (24) obj. 4401.29 iterations 33
Cbc0038I Pass  22: suminf.    4.66667 (14) obj. 4468.33 iterations 10
Cbc0038I Pass  23: suminf.    4.33333 (19) obj. 4468.33 iterations 17
Cbc0038I Pass  24: suminf.    5.50000 (20) obj. 4631.88 iterations 21
Cbc0038I Pass  25: suminf.    4.25000 (16) obj. 4550.62 iterations 26
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 4705 iterations 17
Cbc0038I Solution found of 4705
Cbc0038I Rounding solution of 4630 is better than previous of 4705
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 138 columns, reduced to 95 rows 89 columns
Cbc0038I Mini branch and bound improved solution from 4630 to 3905 (0.51 seconds)
Cbc0038I Round again with cutoff of 3701
Cbc0038I Pass  27: suminf.    5.82857 (24) obj. 3351.29 iterations 0
Cbc0038I Pass  28: suminf.    4.66667 (14) obj. 3418.33 iterations 21
Cbc0038I Pass  29: suminf.    4.33333 (19) obj. 3418.33 iterations 30
Cbc0038I Pass  30: suminf.    5.33333 (19) obj. 3285.83 iterations 26
Cbc0038I Pass  31: suminf.    6.69703 (23) obj. 3701 iterations 31
Cbc0038I Pass  32: suminf.    5.00000 (15) obj. 3600 iterations 58
Cbc0038I Pass  33: suminf.    4.66667 (20) obj. 3385.83 iterations 15
Cbc0038I Pass  34: suminf.    5.88063 (20) obj. 3701 iterations 35
Cbc0038I Pass  35: suminf.    4.70743 (21) obj. 3701 iterations 21
Cbc0038I Pass  36: suminf.    4.33333 (21) obj. 3701 iterations 25
Cbc0038I Pass  37: suminf.    5.67427 (24) obj. 3701 iterations 41
Cbc0038I Pass  38: suminf.    4.66667 (17) obj. 3701 iterations 29
Cbc0038I Pass  39: suminf.    4.33333 (19) obj. 3585.83 iterations 16
Cbc0038I Pass  40: suminf.    5.41902 (19) obj. 3701 iterations 26
Cbc0038I Pass  41: suminf.    4.70743 (21) obj. 3701 iterations 24
Cbc0038I Pass  42: suminf.    4.33333 (21) obj. 3701 iterations 22
Cbc0038I Pass  43: suminf.    5.83333 (21) obj. 3701 iterations 28
Cbc0038I Pass  44: suminf.    4.75000 (27) obj. 3701 iterations 34
Cbc0038I Pass  45: suminf.    4.66667 (27) obj. 3701 iterations 11
Cbc0038I Pass  46: suminf.    5.24851 (22) obj. 3701 iterations 25
Cbc0038I Pass  47: suminf.    6.33333 (13) obj. 3032.5 iterations 37
Cbc0038I Pass  48: suminf.    4.94000 (26) obj. 3462 iterations 42
Cbc0038I Pass  49: suminf.    4.65000 (26) obj. 3439 iterations 6
Cbc0038I Pass  50: suminf.    5.00000 (15) obj. 3653.33 iterations 24
Cbc0038I Pass  51: suminf.    4.43071 (32) obj. 3701 iterations 36
Cbc0038I Pass  52: suminf.    5.24664 (18) obj. 3701 iterations 22
Cbc0038I Pass  53: suminf.    4.00000 (17) obj. 3661 iterations 29
Cbc0038I Pass  54: suminf.    4.48056 (16) obj. 3701 iterations 30
Cbc0038I Pass  55: suminf.    3.73333 (19) obj. 3701 iterations 22
Cbc0038I Pass  56: suminf.    3.34400 (17) obj. 3701 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 138 columns, reduced to 95 rows 104 columns
Cbc0038I Mini branch and bound did not improve solution (0.99 seconds)
Cbc0038I After 0.99 seconds - Feasibility pump exiting with objective of 3905 - took 0.90 seconds
Cbc0012I Integer solution of 3905 found by feasibility pump after 0 iterations and 0 nodes (1.00 seconds)
Cbc0038I Full problem 95 rows 138 columns, reduced to 41 rows 14 columns
Cbc0031I 18 added rows had average density of 67.333333
Cbc0013I At root node, 18 cuts changed objective from 1910 to 2446.5173 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 189 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.338 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 910 row cuts average 134.1 elements, 0 column cuts (0 active)  in 0.440 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 42 row cuts average 3.0 elements, 0 column cuts (0 active)  in 3.366 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 119 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 248 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.206 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3905 best solution, best possible 2446.5173 (6.90 seconds)
Cbc0010I After 4 nodes, 3 on tree, 3905 best solution, best possible 2446.5173 (7.65 seconds)
Cbc0010I After 10 nodes, 5 on tree, 3905 best solution, best possible 2446.5173 (8.39 seconds)
Cbc0010I After 20 nodes, 5 on tree, 3905 best solution, best possible 2446.5173 (9.11 seconds)
Cbc0010I After 29 nodes, 7 on tree, 3905 best solution, best possible 2446.5173 (9.85 seconds)
Cbc0010I After 43 nodes, 4 on tree, 3905 best solution, best possible 2446.5173 (10.57 seconds)
Cbc0010I After 60 nodes, 5 on tree, 3905 best solution, best possible 2446.5173 (11.28 seconds)
Cbc0010I After 80 nodes, 5 on tree, 3905 best solution, best possible 2446.5173 (12.00 seconds)
Cbc0010I After 87 nodes, 2 on tree, 3905 best solution, best possible 2446.5173 (12.71 seconds)
Cbc0010I After 92 nodes, 7 on tree, 3905 best solution, best possible 2446.5173 (13.46 seconds)
Cbc0010I After 110 nodes, 8 on tree, 3905 best solution, best possible 2446.5173 (14.20 seconds)
Cbc0010I After 123 nodes, 12 on tree, 3905 best solution, best possible 2446.5173 (14.95 seconds)
Cbc0010I After 141 nodes, 8 on tree, 3905 best solution, best possible 2446.5173 (15.71 seconds)
Cbc0010I After 168 nodes, 3 on tree, 3905 best solution, best possible 2446.5173 (16.42 seconds)
Cbc0010I After 174 nodes, 5 on tree, 3905 best solution, best possible 2446.5173 (17.45 seconds)
Cbc0016I Integer solution of 3640 found by strong branching after 13843 iterations and 180 nodes (17.99 seconds)
Cbc0016I Integer solution of 3360 found by strong branching after 13875 iterations and 181 nodes (18.01 seconds)
Cbc0010I After 186 nodes, 8 on tree, 3360 best solution, best possible 2446.5173 (18.27 seconds)
Cbc0010I After 197 nodes, 8 on tree, 3360 best solution, best possible 2446.5173 (18.98 seconds)
Cbc0010I After 208 nodes, 11 on tree, 3360 best solution, best possible 2446.5173 (19.70 seconds)
Cbc0010I After 233 nodes, 6 on tree, 3360 best solution, best possible 2446.5173 (20.43 seconds)
Cbc0010I After 249 nodes, 4 on tree, 3360 best solution, best possible 3113.125 (21.21 seconds)
Cbc0001I Search completed - best objective 3360, took 17141 iterations and 268 nodes (21.60 seconds)
Cbc0032I Strong branching done 2522 times (34248 iterations), fathomed 19 nodes and fixed 74 variables
Cbc0035I Maximum depth 26, 1390 variables fixed on reduced cost
Cuts at root node changed objective from 1910 to 2446.52
Probing was tried 640 times and created 738 cuts of which 0 were active after adding rounds of cuts (0.7175 seconds)
Gomory was tried 623 times and created 925 cuts of which 0 were active after adding rounds of cuts (0.831994 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.094919 seconds)
liftKnapsack was tried 623 times and created 51 cuts of which 0 were active after adding rounds of cuts (11.8966 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014306 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038129 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.154322 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00581 seconds)
TwoMirCuts was tried 623 times and created 272 cuts of which 0 were active after adding rounds of cuts (0.296438 seconds)
ZeroHalf was tried 623 times and created 1935 cuts of which 0 were active after adding rounds of cuts (1.35321 seconds)

Result - Optimal solution found
Objective value:                3360
Enumerated nodes:               268
Total iterations:               17141
Time (CPU seconds):             21.6359
Time (Wallclock seconds):       21.6187
Total time (CPU seconds):       21.6417   (Wallclock seconds):       21.625
