Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/p0033.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/p0033.txt -quit (default strategy 1)
At line 15 NAME          P0033
At line 16 ROWS
At line 34 COLUMNS
At line 109 RHS
At line 118 BOUNDS
At line 152 ENDATA
Problem P0033 has 16 rows, 33 columns and 98 elements
Coin0008I P0033 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 2520.57 - 0.001703 seconds
Cgl0004I processed model has 14 rows, 32 columns (32 integer (32 of which binary)) and 78 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.356%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.72933
Cbc0038I Pass   1: suminf.    0.54926 (2) obj. 2861.66 iterations 9
Cbc0038I Pass   2: suminf.    0.42000 (2) obj. 3132.2 iterations 4
Cbc0038I Pass   3: suminf.    0.29000 (1) obj. 3097.22 iterations 2
Cbc0038I Pass   4: suminf.    1.10583 (4) obj. 3162.66 iterations 14
Cbc0038I Pass   5: suminf.    0.71250 (3) obj. 3229.93 iterations 3
Cbc0038I Pass   6: suminf.    0.71250 (2) obj. 3525.42 iterations 3
Cbc0038I Pass   7: suminf.    0.46250 (2) obj. 3604.93 iterations 2
Cbc0038I Pass   8: suminf.    1.50326 (4) obj. 3814.9 iterations 6
Cbc0038I Pass   9: suminf.    0.39250 (2) obj. 3873.38 iterations 4
Cbc0038I Solution found of 3915
Cbc0038I Rounding solution of 3095 is better than previous of 3915
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 32 columns, reduced to 12 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 3066.54
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass  10: suminf.    0.54926 (2) obj. 2861.66 iterations 0
Cbc0038I Pass  11: suminf.    0.38649 (3) obj. 3066.54 iterations 5
Cbc0038I Pass  12: suminf.    0.38649 (3) obj. 3066.54 iterations 0
Cbc0038I Pass  13: suminf.    0.67926 (3) obj. 2896.64 iterations 2
Cbc0038I Pass  14: suminf.    0.54926 (2) obj. 2861.66 iterations 2
Cbc0038I Pass  15: suminf.    2.18545 (9) obj. 3066.54 iterations 16
Cbc0038I Pass  16: suminf.    1.18122 (6) obj. 3066.54 iterations 6
Cbc0038I Pass  17: suminf.    1.80636 (6) obj. 3066.54 iterations 6
Cbc0038I Pass  18: suminf.    0.95926 (5) obj. 2885.84 iterations 5
Cbc0038I Pass  19: suminf.    0.35926 (2) obj. 2896.64 iterations 3
Cbc0038I Pass  20: suminf.    0.30649 (2) obj. 3066.54 iterations 2
Cbc0038I Pass  21: suminf.    0.30649 (2) obj. 3066.54 iterations 0
Cbc0038I Pass  22: suminf.    0.46926 (2) obj. 2861.66 iterations 1
Cbc0038I Pass  23: suminf.    0.68947 (3) obj. 2973.49 iterations 5
Cbc0038I Pass  24: suminf.    0.10000 (1) obj. 2973.2 iterations 6
Cbc0038I Pass  25: suminf.    0.21000 (1) obj. 2938.22 iterations 1
Cbc0038I Pass  26: suminf.    2.30087 (8) obj. 3066.54 iterations 8
Cbc0038I Pass  27: suminf.    0.50659 (3) obj. 3066.54 iterations 7
Cbc0038I Pass  28: suminf.    0.19493 (1) obj. 3066.54 iterations 3
Cbc0038I Pass  29: suminf.    0.25000 (1) obj. 3039 iterations 3
Cbc0038I Pass  30: suminf.    1.82260 (8) obj. 3066.54 iterations 16
Cbc0038I Pass  31: suminf.    1.47165 (8) obj. 3066.54 iterations 7
Cbc0038I Pass  32: suminf.    1.65942 (7) obj. 3066.54 iterations 6
Cbc0038I Pass  33: suminf.    1.21378 (5) obj. 3066.54 iterations 5
Cbc0038I Pass  34: suminf.    1.01073 (5) obj. 3066.54 iterations 3
Cbc0038I Pass  35: suminf.    0.56083 (3) obj. 2995.52 iterations 5
Cbc0038I Pass  36: suminf.    0.24293 (1) obj. 3066.54 iterations 4
Cbc0038I Pass  37: suminf.    0.25000 (1) obj. 3063 iterations 3
Cbc0038I Pass  38: suminf.    2.29355 (8) obj. 3066.54 iterations 21
Cbc0038I Pass  39: suminf.    1.04409 (6) obj. 3066.54 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 14 rows 32 columns, reduced to 13 rows 23 columns
Cbc0038I Mini branch and bound improved solution from 3915 to 3089 (1.81 seconds)
Cbc0038I Round again with cutoff of 3017.1
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  39: suminf.    0.54926 (2) obj. 2861.66 iterations 0
Cbc0038I Pass  40: suminf.    0.54195 (3) obj. 3017.1 iterations 5
Cbc0038I Pass  41: suminf.    0.54195 (3) obj. 3017.1 iterations 0
Cbc0038I Pass  42: suminf.    0.67926 (3) obj. 2896.64 iterations 2
Cbc0038I Pass  43: suminf.    0.54926 (2) obj. 2861.66 iterations 2
Cbc0038I Pass  44: suminf.    1.37883 (5) obj. 3017.1 iterations 9
Cbc0038I Pass  45: suminf.    0.86426 (3) obj. 2998.69 iterations 8
Cbc0038I Pass  46: suminf.    1.16214 (3) obj. 3017.1 iterations 3
Cbc0038I Pass  47: suminf.    1.31593 (3) obj. 3017.1 iterations 5
Cbc0038I Pass  48: suminf.    0.94195 (3) obj. 3017.1 iterations 4
Cbc0038I Pass  49: suminf.    0.85926 (3) obj. 2896.64 iterations 4
Cbc0038I Pass  50: suminf.    0.83926 (3) obj. 2896.64 iterations 2
Cbc0038I Pass  51: suminf.    0.83926 (3) obj. 2896.64 iterations 0
Cbc0038I Pass  52: suminf.    0.94195 (3) obj. 3017.1 iterations 3
Cbc0038I Pass  53: suminf.    0.94195 (3) obj. 3017.1 iterations 1
Cbc0038I Pass  54: suminf.    0.85926 (3) obj. 2896.64 iterations 4
Cbc0038I Pass  55: suminf.    0.83926 (3) obj. 2896.64 iterations 2
Cbc0038I Pass  56: suminf.    0.83926 (3) obj. 2896.64 iterations 0
Cbc0038I Pass  57: suminf.    0.94195 (3) obj. 3017.1 iterations 3
Cbc0038I Pass  58: suminf.    0.94195 (3) obj. 3017.1 iterations 1
Cbc0038I Pass  59: suminf.    0.85926 (3) obj. 2896.64 iterations 4
Cbc0038I Pass  60: suminf.    0.83926 (3) obj. 2896.64 iterations 2
Cbc0038I Pass  61: suminf.    0.83926 (3) obj. 2896.64 iterations 0
Cbc0038I Pass  62: suminf.    0.94195 (3) obj. 3017.1 iterations 3
Cbc0038I Pass  63: suminf.    0.94195 (3) obj. 3017.1 iterations 1
Cbc0038I Pass  64: suminf.    0.85926 (3) obj. 2896.64 iterations 4
Cbc0038I Pass  65: suminf.    0.83926 (3) obj. 2896.64 iterations 2
Cbc0038I Pass  66: suminf.    0.83926 (3) obj. 2896.64 iterations 0
Cbc0038I Pass  67: suminf.    0.94195 (3) obj. 3017.1 iterations 3
Cbc0038I Pass  68: suminf.    0.94195 (3) obj. 3017.1 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.95 seconds)
Cbc0038I After 1.95 seconds - Feasibility pump exiting with objective of 3089 - took 5.07 seconds
Cbc0012I Integer solution of 3089 found by feasibility pump after 0 iterations and 0 nodes (1.96 seconds)
Cbc0031I 12 added rows had average density of 8.3333333
Cbc0013I At root node, 64 cuts changed objective from 2819.3574 to 3089 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 17.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 28 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.338 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 24 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 73 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 12 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0001I Search completed - best objective 3089, took 94 iterations and 0 nodes (2.38 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Cuts at root node changed objective from 2819.36 to 3089
Probing was tried 7 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.007144 seconds)
Gomory was tried 7 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.009965 seconds)
Knapsack was tried 7 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.015566 seconds)
liftKnapsack was tried 7 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.337942 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022462 seconds)
OddWheel was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000912 seconds)
MixedIntegerRounding2 was tried 7 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.005763 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000445 seconds)
TwoMirCuts was tried 7 times and created 73 cuts of which 0 were active after adding rounds of cuts (0.019566 seconds)
ZeroHalf was tried 7 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.077248 seconds)

Result - Optimal solution found
Objective value:                3089
Enumerated nodes:               0
Total iterations:               94
Time (CPU seconds):             6.04841
Time (Wallclock seconds):       2.38579
Total time (CPU seconds):       6.05121   (Wallclock seconds):       2.39281
