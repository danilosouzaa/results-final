Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/mod008.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/mod008.txt -quit (default strategy 1)
At line 15 NAME          MOD008
At line 16 ROWS
At line 24 COLUMNS
At line 887 RHS
At line 891 BOUNDS
At line 1211 ENDATA
Problem MOD008 has 6 rows, 319 columns and 1243 elements
Coin0008I MOD008 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 290.931 - 0.00411 seconds
Cgl0004I processed model has 6 rows, 319 columns (319 integer (319 of which binary)) and 1243 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 0.156%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.29428
Cbc0038I Pass   1: suminf.    0.05051 (1) obj. 310.637 iterations 9
Cbc0038I Solution found of 379
Cbc0038I Before mini branch and bound, 313 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6 rows 319 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 379 to 308 (0.03 seconds)
Cbc0038I Round again with cutoff of 305.393
Cbc0038I Reduced cost fixing fixed 194 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.12773 (2) obj. 305.393 iterations 2
Cbc0038I Pass   3: suminf.    1.18243 (4) obj. 305.393 iterations 4
Cbc0038I Pass   4: suminf.    1.27327 (4) obj. 305.393 iterations 3
Cbc0038I Pass   5: suminf.    0.91144 (5) obj. 305.393 iterations 9
Cbc0038I Pass   6: suminf.    0.55865 (3) obj. 305.393 iterations 5
Cbc0038I Pass   7: suminf.    1.32826 (6) obj. 305.393 iterations 10
Cbc0038I Pass   8: suminf.    0.77024 (4) obj. 305.393 iterations 3
Cbc0038I Pass   9: suminf.    0.55674 (4) obj. 305.393 iterations 4
Cbc0038I Pass  10: suminf.    1.32826 (6) obj. 305.393 iterations 10
Cbc0038I Pass  11: suminf.    1.23527 (4) obj. 305.393 iterations 15
Cbc0038I Pass  12: suminf.    1.09214 (4) obj. 305.393 iterations 4
Cbc0038I Pass  13: suminf.    0.79886 (3) obj. 305.393 iterations 8
Cbc0038I Pass  14: suminf.    0.22812 (3) obj. 305.393 iterations 3
Cbc0038I Pass  15: suminf.    1.19607 (5) obj. 305.393 iterations 6
Cbc0038I Pass  16: suminf.    1.06971 (3) obj. 305.393 iterations 4
Cbc0038I Pass  17: suminf.    0.58537 (4) obj. 305.393 iterations 5
Cbc0038I Pass  18: suminf.    0.33312 (5) obj. 305.393 iterations 4
Cbc0038I Pass  19: suminf.    0.39884 (3) obj. 305.393 iterations 12
Cbc0038I Pass  20: suminf.    0.13058 (2) obj. 305.393 iterations 2
Cbc0038I Pass  21: suminf.    1.26818 (6) obj. 305.393 iterations 8
Cbc0038I Pass  22: suminf.    0.97750 (6) obj. 305.393 iterations 4
Cbc0038I Pass  23: suminf.    0.23488 (3) obj. 305.393 iterations 5
Cbc0038I Pass  24: suminf.    0.15478 (3) obj. 305.393 iterations 3
Cbc0038I Pass  25: suminf.    0.56733 (4) obj. 305.393 iterations 3
Cbc0038I Pass  26: suminf.    0.33446 (4) obj. 305.393 iterations 5
Cbc0038I Pass  27: suminf.    1.37250 (6) obj. 305.393 iterations 4
Cbc0038I Pass  28: suminf.    1.81919 (6) obj. 305.393 iterations 10
Cbc0038I Pass  29: suminf.    1.78517 (6) obj. 305.393 iterations 2
Cbc0038I Pass  30: suminf.    0.17217 (3) obj. 305.393 iterations 9
Cbc0038I Pass  31: suminf.    0.02562 (2) obj. 305.393 iterations 2
Cbc0038I Rounding solution of 307 is better than previous of 308
Cbc0038I Before mini branch and bound, 284 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6 rows 319 columns, reduced to 6 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of 302.501
Cbc0038I Reduced cost fixing fixed 231 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.17476 (3) obj. 302.501 iterations 1
Cbc0038I Pass  32: suminf.    1.46227 (5) obj. 302.501 iterations 5
Cbc0038I Pass  33: suminf.    0.33089 (2) obj. 301.396 iterations 7
Cbc0038I Pass  34: suminf.    0.14518 (2) obj. 302.501 iterations 3
Cbc0038I Pass  35: suminf.    1.18724 (5) obj. 302.501 iterations 4
Cbc0038I Pass  36: suminf.    0.76850 (6) obj. 302.501 iterations 12
Cbc0038I Pass  37: suminf.    0.33534 (4) obj. 302.501 iterations 3
Cbc0038I Pass  38: suminf.    1.78421 (6) obj. 302.501 iterations 8
Cbc0038I Pass  39: suminf.    1.10904 (6) obj. 298.273 iterations 6
Cbc0038I Pass  40: suminf.    0.72948 (5) obj. 302.501 iterations 5
Cbc0038I Pass  41: suminf.    1.51079 (6) obj. 302.501 iterations 4
Cbc0038I Pass  42: suminf.    1.42803 (6) obj. 302.501 iterations 5
Cbc0038I Pass  43: suminf.    1.20305 (6) obj. 302.501 iterations 4
Cbc0038I Pass  44: suminf.    0.87318 (3) obj. 302.501 iterations 6
Cbc0038I Pass  45: suminf.    0.12168 (3) obj. 302.501 iterations 4
Cbc0038I Pass  46: suminf.    0.12168 (3) obj. 302.501 iterations 0
Cbc0038I Pass  47: suminf.    1.57083 (6) obj. 300.257 iterations 13
Cbc0038I Pass  48: suminf.    0.79453 (7) obj. 302.501 iterations 7
Cbc0038I Pass  49: suminf.    1.23965 (5) obj. 302.501 iterations 6
Cbc0038I Pass  50: suminf.    0.96240 (4) obj. 302.501 iterations 7
Cbc0038I Pass  51: suminf.    1.33451 (5) obj. 302.501 iterations 8
Cbc0038I Pass  52: suminf.    0.44881 (3) obj. 302.501 iterations 3
Cbc0038I Pass  53: suminf.    0.18414 (5) obj. 302.501 iterations 4
Cbc0038I Pass  54: suminf.    1.37705 (5) obj. 302.501 iterations 7
Cbc0038I Pass  55: suminf.    1.24941 (5) obj. 302.501 iterations 5
Cbc0038I Pass  56: suminf.    1.04390 (4) obj. 302.501 iterations 6
Cbc0038I Pass  57: suminf.    0.84497 (4) obj. 302.501 iterations 1
Cbc0038I Pass  58: suminf.    1.19746 (5) obj. 302.501 iterations 6
Cbc0038I Pass  59: suminf.    0.95315 (5) obj. 302.501 iterations 5
Cbc0038I Pass  60: suminf.    1.22033 (5) obj. 302.501 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 282 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6 rows 319 columns, reduced to 6 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of 307 - took 0.35 seconds
Cbc0012I Integer solution of 307 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0031I 29 added rows had average density of 143.03448
Cbc0013I At root node, 29 cuts changed objective from 290.93107 to 303.25349 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 63 row cuts average 52.5 elements, 0 column cuts (0 active)  in 1.587 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 164 row cuts average 187.8 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 134 row cuts average 95.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 12 row cuts average 215.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 307 best solution, best possible 303.2601 (5.47 seconds)
Cbc0010I After 1 nodes, 2 on tree, 307 best solution, best possible 303.2601 (6.61 seconds)
Cbc0010I After 2 nodes, 3 on tree, 307 best solution, best possible 303.2601 (7.62 seconds)
Cbc0010I After 4 nodes, 5 on tree, 307 best solution, best possible 303.2601 (8.95 seconds)
Cbc0001I Search completed - best objective 307, took 846 iterations and 10 nodes (9.74 seconds)
Cbc0032I Strong branching done 200 times (3188 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 282 variables fixed on reduced cost
Cuts at root node changed objective from 290.931 to 303.26
Probing was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.039559 seconds)
Gomory was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.11634 seconds)
Knapsack was tried 40 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.393666 seconds)
liftKnapsack was tried 40 times and created 85 cuts of which 0 were active after adding rounds of cuts (2.25884 seconds)
Clique was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000662 seconds)
OddWheel was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000692 seconds)
MixedIntegerRounding2 was tried 40 times and created 211 cuts of which 0 were active after adding rounds of cuts (0.34262 seconds)
FlowCover was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004175 seconds)
TwoMirCuts was tried 23 times and created 134 cuts of which 0 were active after adding rounds of cuts (0.092237 seconds)
ZeroHalf was tried 23 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.025082 seconds)

Result - Optimal solution found
Objective value:                307
Enumerated nodes:               10
Total iterations:               846
Time (CPU seconds):             24.7089
Time (Wallclock seconds):       9.75228
Total time (CPU seconds):       24.718   (Wallclock seconds):       9.75994
