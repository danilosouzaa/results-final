Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/ns1116954.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/ns1116954.txt -quit (default strategy 1)
At line 1 NAME          ns1116954
At line 2 ROWS
At line 131995 COLUMNS
At line 542580 RHS
At line 666446 BOUNDS
At line 679095 ENDATA
Problem ns1116954 has 131991 rows, 12648 columns and 410582 elements
Coin0008I ns1116954 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 25.9755 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 14136 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14395 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14205 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15065 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15024 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13566 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14209 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13684 strengthened rows, 0 substitutions
Cgl0004I processed model has 131681 rows, 11928 columns (7482 integer (7482 of which binary)) and 536510 elements
Coin3009W Conflict graph built in 0.388 seconds, density: 0.075%
Cgl0015I Clique Strengthening extended 2863 cliques, 6966 were dominated
After applying Clique Strengthening continuous objective value is 0
Cbc0045I No integer variables out of 7482 objects (7482 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 580 integers unsatisfied sum - 133.384
Cbc0038I Pass   1: (301.55 seconds) suminf.   51.86204 (203) obj. 0 iterations 14349
Cbc0038I Pass   2: (509.01 seconds) suminf.   27.68384 (156) obj. 0 iterations 20396
Cbc0038I Pass   3: (636.91 seconds) suminf.   23.08733 (178) obj. 0 iterations 12757
Cbc0038I Pass   4: (699.88 seconds) suminf.   20.53424 (166) obj. 0 iterations 6348
Cbc0038I Pass   5: (717.90 seconds) suminf.   20.42788 (154) obj. 0 iterations 1886
Cbc0038I Pass   6: (797.05 seconds) suminf.   19.87584 (145) obj. 0 iterations 7746
Cbc0038I Pass   7: (859.38 seconds) suminf.   18.48577 (118) obj. 0 iterations 6143
Cbc0038I Pass   8: (900.81 seconds) suminf.   18.15613 (146) obj. 0 iterations 3877
Cbc0038I Pass   9: (930.34 seconds) suminf.   17.74983 (157) obj. 0 iterations 2651
Cbc0038I Pass  10: (931.83 seconds) suminf.   17.74983 (157) obj. 0 iterations 90
Cbc0038I Pass  11: (1202.49 seconds) suminf.   21.34281 (163) obj. 0 iterations 21725
Cbc0038I Pass  12: (1531.44 seconds) suminf.   16.27476 (117) obj. 0 iterations 25492
Cbc0038I Pass  13: (1596.05 seconds) suminf.   15.55442 (129) obj. 0 iterations 6092
Cbc0038I Pass  14: (1624.28 seconds) suminf.   15.12027 (118) obj. 0 iterations 2552
Cbc0038I Pass  15: (1673.30 seconds) suminf.   16.88648 (134) obj. 0 iterations 4703
Cbc0038I Pass  16: (1724.88 seconds) suminf.   15.76746 (106) obj. 0 iterations 4895
Cbc0038I Pass  17: (1725.02 seconds) suminf.   15.76746 (106) obj. 0 iterations 0
Cbc0038I Pass  18: (1763.13 seconds) suminf.   15.56578 (128) obj. 0 iterations 3556
Cbc0038I Pass  19: (1780.32 seconds) suminf.   15.12027 (118) obj. 0 iterations 1393
Cbc0038I Pass  20: (1881.29 seconds) suminf.   19.69680 (124) obj. 0 iterations 9947
Cbc0038I Pass  21: (1937.04 seconds) suminf.   17.36543 (136) obj. 0 iterations 5215
Cbc0038I Pass  22: (2061.47 seconds) suminf.   16.43182 (111) obj. 0 iterations 10816
Cbc0038I Pass  23: (2152.05 seconds) suminf.   15.42436 (117) obj. 0 iterations 6007
Cbc0038I Pass  24: (2218.69 seconds) suminf.   16.44741 (111) obj. 0 iterations 4150
Cbc0038I Pass  25: (2294.85 seconds) suminf.   15.18224 (134) obj. 0 iterations 5133
Cbc0038I Pass  26: (2431.59 seconds) suminf.   16.02538 (119) obj. 0 iterations 8661
Cbc0038I Pass  27: (2488.98 seconds) suminf.   15.55257 (112) obj. 0 iterations 2789
Cbc0038I Pass  28: (2733.49 seconds) suminf.   16.79700 (115) obj. 0 iterations 15060
Cbc0038I Pass  29: (2910.49 seconds) suminf.   15.69286 (128) obj. 0 iterations 11922
Cbc0038I Pass  30: (2939.24 seconds) suminf.   15.58090 (140) obj. 0 iterations 1465
Cbc0038I Pass  31: (3016.44 seconds) suminf.   15.78325 (126) obj. 0 iterations 4981
Cbc0038I Pass  32: (3130.57 seconds) suminf.   15.04255 (131) obj. 0 iterations 7514
Cbc0038I Pass  33: (3141.94 seconds) suminf.   14.90233 (131) obj. 0 iterations 607
Cbc0038I Pass  34: (3328.67 seconds) suminf.   17.31086 (98) obj. 0 iterations 12625
Cbc0038I Pass  35: (3456.73 seconds) suminf.   14.94242 (116) obj. 0 iterations 9351
Cbc0038I Pass  36: (3576.17 seconds) suminf.   24.76129 (116) obj. 0 iterations 11499
Cbc0038I Pass  37: (3718.76 seconds) suminf.   15.66025 (131) obj. 0 iterations 13754
Cbc0038I Pass  38: (3735.21 seconds) suminf.   15.37879 (143) obj. 0 iterations 2798
Cbc0038I Pass  39: (3799.15 seconds) suminf.   15.57147 (128) obj. 0 iterations 10134
Cbc0038I Pass  40: (3808.19 seconds) suminf.   15.34821 (123) obj. 0 iterations 1324
Cbc0038I Pass  41: (3838.26 seconds) suminf.   16.86972 (124) obj. 0 iterations 4774
Cbc0038I Pass  42: (3857.40 seconds) suminf.   16.12304 (118) obj. 0 iterations 3201
Cbc0038I Pass  43: (3865.18 seconds) suminf.   15.92383 (127) obj. 0 iterations 1073
Cbc0038I Pass  44: (3972.05 seconds) suminf.   16.91783 (95) obj. 0 iterations 15804
Cbc0038I Pass  45: (3993.01 seconds) suminf.   16.40157 (109) obj. 0 iterations 3260
Cbc0038I Pass  46: (4011.35 seconds) suminf.   15.94031 (116) obj. 0 iterations 2494
Cbc0038I Pass  47: (4011.56 seconds) suminf.   15.94031 (116) obj. 0 iterations 7
Cbc0038I Pass  48: (4021.83 seconds) suminf.   16.32616 (116) obj. 0 iterations 1479
Cbc0038I Pass  49: (4100.15 seconds) suminf.   22.18397 (99) obj. 0 iterations 11509
Cbc0038I Pass  50: (4289.34 seconds) suminf.   17.06431 (120) obj. 0 iterations 21952
Cbc0038I Pass  51: (4308.40 seconds) suminf.   16.62641 (135) obj. 0 iterations 2848
Cbc0038I Pass  52: (4356.57 seconds) suminf.   16.21466 (106) obj. 0 iterations 4652
Cbc0038I Pass  53: (4366.30 seconds) suminf.   15.66069 (109) obj. 0 iterations 1037
Cbc0038I Pass  54: (4372.82 seconds) suminf.   15.48955 (107) obj. 0 iterations 917
Cbc0038I Pass  55: (4383.59 seconds) suminf.   15.34734 (104) obj. 0 iterations 1270
Cbc0038I Pass  56: (4478.61 seconds) suminf.   14.75872 (69) obj. 0 iterations 11644
Cbc0038I Pass  57: (4506.24 seconds) suminf.   13.48095 (67) obj. 0 iterations 2389
Cbc0038I Pass  58: (4524.56 seconds) suminf.   13.35238 (62) obj. 0 iterations 1691
Cbc0038I Pass  59: (4530.54 seconds) suminf.   13.35238 (62) obj. 0 iterations 554
Cbc0038I Pass  60: (4612.17 seconds) suminf.   16.00317 (63) obj. 0 iterations 6360
Cbc0038I Pass  61: (4682.38 seconds) suminf.   13.52586 (74) obj. 0 iterations 8054
Cbc0038I Pass  62: (4751.74 seconds) suminf.   12.09829 (78) obj. 0 iterations 6145
Cbc0038I Pass  63: (4779.12 seconds) suminf.   11.88165 (105) obj. 0 iterations 1799
Cbc0038I Pass  64: (4780.93 seconds) suminf.   11.88165 (105) obj. 0 iterations 92
Cbc0038I Pass  65: (4955.77 seconds) suminf.   25.59966 (106) obj. 0 iterations 17276
Cbc0038I Pass  66: (5188.67 seconds) suminf.   16.53276 (102) obj. 0 iterations 22221
Cbc0038I Pass  67: (5250.98 seconds) suminf.   14.12575 (91) obj. 0 iterations 5931
Cbc0038I Pass  68: (5261.62 seconds) suminf.   14.04429 (86) obj. 0 iterations 931
Cbc0038I Pass  69: (5330.24 seconds) suminf.   15.93980 (90) obj. 0 iterations 5346
Cbc0038I Pass  70: (5378.32 seconds) suminf.   14.72381 (60) obj. 0 iterations 3934
Cbc0038I Pass  71: (5399.91 seconds) suminf.   14.69685 (67) obj. 0 iterations 1199
Cbc0038I Pass  72: (5423.69 seconds) suminf.   14.11837 (64) obj. 0 iterations 1582
Cbc0038I Pass  73: (5527.08 seconds) suminf.   13.21786 (62) obj. 0 iterations 8148
Cbc0038I Pass  74: (5731.74 seconds) suminf.   16.58752 (71) obj. 0 iterations 14162
Cbc0038I Pass  75: (5755.05 seconds) suminf.   14.92449 (71) obj. 0 iterations 1435
Cbc0038I Pass  76: (5778.08 seconds) suminf.   14.05265 (73) obj. 0 iterations 1586
Cbc0038I Pass  77: (5812.05 seconds) suminf.   13.86000 (73) obj. 0 iterations 2141
Cbc0038I Pass  78: (5834.41 seconds) suminf.   12.90000 (52) obj. 0 iterations 1219
Cbc0038I Pass  79: (5885.78 seconds) suminf.   13.79536 (63) obj. 0 iterations 3158
Cbc0038I Pass  80: (6007.00 seconds) suminf.   12.83333 (51) obj. 0 iterations 7952
Cbc0038I Pass  81: (6009.40 seconds) suminf.   12.83333 (51) obj. 0 iterations 117
Cbc0038I Pass  82: (6049.91 seconds) suminf.   11.99821 (59) obj. 0 iterations 2458
Cbc0038I Pass  83: (6099.65 seconds) suminf.   12.55873 (56) obj. 0 iterations 3739
Cbc0038I Pass  84: (6149.03 seconds) suminf.   12.19684 (114) obj. 0 iterations 4496
Cbc0038I Pass  85: (6152.42 seconds) suminf.   12.18852 (112) obj. 0 iterations 260
Cbc0038I Pass  86: (6209.68 seconds) suminf.   13.28095 (51) obj. 0 iterations 5248
Cbc0038I Pass  87: (6411.90 seconds) suminf.   11.77143 (53) obj. 0 iterations 19742
Cbc0038I Pass  88: (6424.25 seconds) suminf.   12.67143 (53) obj. 0 iterations 1031
Cbc0038I Pass  89: (6490.38 seconds) suminf.   23.77600 (123) obj. 0 iterations 8613
Cbc0038I Pass  90: (6606.10 seconds) suminf.   13.15040 (72) obj. 0 iterations 14405
Cbc0038I Pass  91: (6628.73 seconds) suminf.   11.02714 (61) obj. 0 iterations 2161
Cbc0038I Pass  92: (6661.98 seconds) suminf.   13.80665 (61) obj. 0 iterations 3197
Cbc0038I Pass  93: (6702.58 seconds) suminf.   10.58571 (48) obj. 0 iterations 3756
Cbc0038I Pass  94: (6710.45 seconds) suminf.   10.58571 (48) obj. 0 iterations 614
Cbc0038I Pass  95: (6752.59 seconds) suminf.   13.68836 (69) obj. 0 iterations 3863
Cbc0038I Pass  96: (6830.18 seconds) suminf.   11.03657 (58) obj. 0 iterations 7746
Cbc0038I Pass  97: (6846.05 seconds) suminf.   10.64133 (59) obj. 0 iterations 1427
Cbc0038I Pass  98: (6847.25 seconds) suminf.   10.64133 (59) obj. 0 iterations 107
Cbc0038I Pass  99: (6924.05 seconds) suminf.   15.61768 (78) obj. 0 iterations 7184
Cbc0038I Pass 100: (7077.02 seconds) suminf.   23.20687 (126) obj. 0 iterations 17327
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5691 integers at bound fixed and 3180 continuous
Cbc0038I Full problem 127578 rows 11928 columns, reduced to 13672 rows 2908 columns
Cbc0038I Mini branch and bound did not improve solution (7173.00 seconds)
Cbc0038I After 7339.09 seconds - Feasibility pump exiting - took 6143.09 seconds
Cbc0031I 337 added rows had average density of 14.442136
Cbc0013I At root node, 337 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1781 row cuts average 5.1 elements, 0 column cuts (259 active)  in 43.206 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 205 row cuts average 63.9 elements, 0 column cuts (0 active)  in 31.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 12.7 elements, 0 column cuts (0 active)  in 1.339 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 265 row cuts average 7.6 elements, 0 column cuts (0 active)  in 8.769 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 45 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.414 seconds - new frequency is 1
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 2.169 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 11 row cuts average 27.1 elements, 0 column cuts (0 active)  in 5.577 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.763 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 171 row cuts average 43.7 elements, 0 column cuts (0 active)  in 30.748 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 122 row cuts average 43.2 elements, 0 column cuts (0 active)  in 3.953 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (7781.83 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 0 (7858.33 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 0 (7983.98 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 0 (8113.74 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 0 (8213.76 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 0 (8288.67 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 0 (8384.20 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 0 (8442.16 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 0 (8494.24 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 0 (8568.55 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible 0 (8610.13 seconds)
Cbc0010I After 11 nodes, 11 on tree, 1e+50 best solution, best possible 0 (8650.06 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible 0 (8714.84 seconds)
Cbc0010I After 13 nodes, 12 on tree, 1e+50 best solution, best possible 0 (8763.48 seconds)
Cbc0010I After 14 nodes, 13 on tree, 1e+50 best solution, best possible 0 (8795.73 seconds)
Cbc0010I After 15 nodes, 13 on tree, 1e+50 best solution, best possible 0 (8844.13 seconds)
Cbc0010I After 16 nodes, 14 on tree, 1e+50 best solution, best possible 0 (8874.33 seconds)
Cbc0010I After 17 nodes, 15 on tree, 1e+50 best solution, best possible 0 (8902.24 seconds)
Cbc0010I After 18 nodes, 16 on tree, 1e+50 best solution, best possible 0 (8939.92 seconds)
Cbc0010I After 19 nodes, 16 on tree, 1e+50 best solution, best possible 0 (8980.10 seconds)
Cbc0010I After 20 nodes, 17 on tree, 1e+50 best solution, best possible 0 (9014.62 seconds)
Cbc0010I After 21 nodes, 18 on tree, 1e+50 best solution, best possible 0 (9053.86 seconds)
Cbc0010I After 22 nodes, 18 on tree, 1e+50 best solution, best possible 0 (9083.00 seconds)
Cbc0010I After 23 nodes, 19 on tree, 1e+50 best solution, best possible 0 (9119.36 seconds)
Cbc0010I After 24 nodes, 19 on tree, 1e+50 best solution, best possible 0 (9150.60 seconds)
Cbc0010I After 25 nodes, 20 on tree, 1e+50 best solution, best possible 0 (9175.18 seconds)
Cbc0010I After 26 nodes, 21 on tree, 1e+50 best solution, best possible 0 (9200.10 seconds)
Cbc0010I After 27 nodes, 22 on tree, 1e+50 best solution, best possible 0 (9255.88 seconds)
Cbc0010I After 28 nodes, 22 on tree, 1e+50 best solution, best possible 0 (9307.31 seconds)
Cbc0010I After 29 nodes, 23 on tree, 1e+50 best solution, best possible 0 (9333.08 seconds)
Cbc0010I After 30 nodes, 24 on tree, 1e+50 best solution, best possible 0 (9375.49 seconds)
Cbc0010I After 31 nodes, 24 on tree, 1e+50 best solution, best possible 0 (9406.10 seconds)
Cbc0010I After 32 nodes, 25 on tree, 1e+50 best solution, best possible 0 (9409.82 seconds)
Cbc0010I After 33 nodes, 26 on tree, 1e+50 best solution, best possible 0 (9456.13 seconds)
Cbc0010I After 34 nodes, 26 on tree, 1e+50 best solution, best possible 0 (9514.94 seconds)
Cbc0010I After 35 nodes, 26 on tree, 1e+50 best solution, best possible 0 (9541.61 seconds)
Cbc0010I After 36 nodes, 27 on tree, 1e+50 best solution, best possible 0 (9570.17 seconds)
Cbc0010I After 37 nodes, 27 on tree, 1e+50 best solution, best possible 0 (9598.76 seconds)
Cbc0010I After 38 nodes, 28 on tree, 1e+50 best solution, best possible 0 (9639.65 seconds)
Cbc0010I After 39 nodes, 28 on tree, 1e+50 best solution, best possible 0 (9695.56 seconds)
Cbc0010I After 40 nodes, 29 on tree, 1e+50 best solution, best possible 0 (9723.04 seconds)
Cbc0010I After 41 nodes, 30 on tree, 1e+50 best solution, best possible 0 (9743.72 seconds)
Cbc0010I After 42 nodes, 30 on tree, 1e+50 best solution, best possible 0 (9782.67 seconds)
Cbc0010I After 43 nodes, 30 on tree, 1e+50 best solution, best possible 0 (9813.63 seconds)
Cbc0010I After 44 nodes, 31 on tree, 1e+50 best solution, best possible 0 (9838.09 seconds)
Cbc0010I After 45 nodes, 31 on tree, 1e+50 best solution, best possible 0 (9878.92 seconds)
Cbc0010I After 46 nodes, 32 on tree, 1e+50 best solution, best possible 0 (9912.04 seconds)
Cbc0010I After 47 nodes, 33 on tree, 1e+50 best solution, best possible 0 (9916.87 seconds)
Cbc0010I After 48 nodes, 34 on tree, 1e+50 best solution, best possible 0 (9952.90 seconds)
Cbc0010I After 49 nodes, 34 on tree, 1e+50 best solution, best possible 0 (9994.77 seconds)
Cbc0010I After 50 nodes, 35 on tree, 1e+50 best solution, best possible 0 (10001.25 seconds)
Cbc0010I After 51 nodes, 35 on tree, 1e+50 best solution, best possible 0 (10032.67 seconds)
Cbc0010I After 52 nodes, 36 on tree, 1e+50 best solution, best possible 0 (10036.25 seconds)
Cbc0010I After 53 nodes, 37 on tree, 1e+50 best solution, best possible 0 (10040.82 seconds)
Cbc0010I After 54 nodes, 38 on tree, 1e+50 best solution, best possible 0 (10051.00 seconds)
Cbc0010I After 55 nodes, 38 on tree, 1e+50 best solution, best possible 0 (10057.61 seconds)
Cbc0010I After 56 nodes, 39 on tree, 1e+50 best solution, best possible 0 (10093.25 seconds)
Cbc0010I After 57 nodes, 39 on tree, 1e+50 best solution, best possible 0 (10128.83 seconds)
Cbc0010I After 58 nodes, 40 on tree, 1e+50 best solution, best possible 0 (10134.55 seconds)
Cbc0010I After 59 nodes, 41 on tree, 1e+50 best solution, best possible 0 (10140.11 seconds)
Cbc0010I After 60 nodes, 42 on tree, 1e+50 best solution, best possible 0 (10146.23 seconds)
Cbc0010I After 61 nodes, 42 on tree, 1e+50 best solution, best possible 0 (10154.93 seconds)
Cbc0010I After 62 nodes, 43 on tree, 1e+50 best solution, best possible 0 (10158.45 seconds)
Cbc0010I After 63 nodes, 43 on tree, 1e+50 best solution, best possible 0 (10172.90 seconds)
Cbc0010I After 64 nodes, 44 on tree, 1e+50 best solution, best possible 0 (10176.55 seconds)
Cbc0010I After 65 nodes, 45 on tree, 1e+50 best solution, best possible 0 (10212.93 seconds)
Cbc0010I After 66 nodes, 45 on tree, 1e+50 best solution, best possible 0 (10250.92 seconds)
Cbc0010I After 67 nodes, 45 on tree, 1e+50 best solution, best possible 0 (10261.84 seconds)
Cbc0010I After 68 nodes, 46 on tree, 1e+50 best solution, best possible 0 (10300.53 seconds)
Cbc0010I After 69 nodes, 46 on tree, 1e+50 best solution, best possible 0 (10344.00 seconds)
Cbc0010I After 70 nodes, 47 on tree, 1e+50 best solution, best possible 0 (10347.08 seconds)
Cbc0010I After 71 nodes, 47 on tree, 1e+50 best solution, best possible 0 (10372.10 seconds)
Cbc0010I After 72 nodes, 48 on tree, 1e+50 best solution, best possible 0 (10381.50 seconds)
Cbc0010I After 73 nodes, 49 on tree, 1e+50 best solution, best possible 0 (10385.87 seconds)
Cbc0010I After 74 nodes, 49 on tree, 1e+50 best solution, best possible 0 (10394.42 seconds)
Cbc0010I After 75 nodes, 50 on tree, 1e+50 best solution, best possible 0 (10399.20 seconds)
Cbc0010I After 76 nodes, 50 on tree, 1e+50 best solution, best possible 0 (10407.76 seconds)
Cbc0010I After 77 nodes, 51 on tree, 1e+50 best solution, best possible 0 (10436.67 seconds)
Cbc0010I After 78 nodes, 52 on tree, 1e+50 best solution, best possible 0 (10441.80 seconds)
Cbc0010I After 79 nodes, 53 on tree, 1e+50 best solution, best possible 0 (10445.02 seconds)
Cbc0010I After 80 nodes, 53 on tree, 1e+50 best solution, best possible 0 (10465.98 seconds)
Cbc0010I After 81 nodes, 54 on tree, 1e+50 best solution, best possible 0 (10469.92 seconds)
Cbc0010I After 82 nodes, 54 on tree, 1e+50 best solution, best possible 0 (10483.97 seconds)
Cbc0010I After 83 nodes, 55 on tree, 1e+50 best solution, best possible 0 (10499.61 seconds)
Cbc0010I After 84 nodes, 55 on tree, 1e+50 best solution, best possible 0 (10511.10 seconds)
Cbc0010I After 85 nodes, 56 on tree, 1e+50 best solution, best possible 0 (10513.57 seconds)
Cbc0010I After 86 nodes, 57 on tree, 1e+50 best solution, best possible 0 (10542.30 seconds)
Cbc0010I After 87 nodes, 57 on tree, 1e+50 best solution, best possible 0 (10554.04 seconds)
Cbc0010I After 88 nodes, 57 on tree, 1e+50 best solution, best possible 0 (10575.72 seconds)
Cbc0010I After 89 nodes, 58 on tree, 1e+50 best solution, best possible 0 (10591.60 seconds)
Cbc0010I After 90 nodes, 58 on tree, 1e+50 best solution, best possible 0 (10613.33 seconds)
Cbc0010I After 91 nodes, 59 on tree, 1e+50 best solution, best possible 0 (10619.26 seconds)
Cbc0010I After 92 nodes, 60 on tree, 1e+50 best solution, best possible 0 (10626.90 seconds)
Cbc0010I After 93 nodes, 61 on tree, 1e+50 best solution, best possible 0 (10644.11 seconds)
Cbc0010I After 94 nodes, 62 on tree, 1e+50 best solution, best possible 0 (10650.90 seconds)
Cbc0010I After 95 nodes, 63 on tree, 1e+50 best solution, best possible 0 (10679.19 seconds)
Cbc0010I After 96 nodes, 63 on tree, 1e+50 best solution, best possible 0 (10690.84 seconds)
Cbc0010I After 97 nodes, 63 on tree, 1e+50 best solution, best possible 0 (10694.34 seconds)
Cbc0010I After 98 nodes, 64 on tree, 1e+50 best solution, best possible 0 (10721.59 seconds)
Cbc0010I After 99 nodes, 64 on tree, 1e+50 best solution, best possible 0 (10732.95 seconds)
Cbc0010I After 100 nodes, 65 on tree, 1e+50 best solution, best possible 0 (10735.29 seconds)
Cbc0010I After 101 nodes, 65 on tree, 1e+50 best solution, best possible 0 (10740.66 seconds)
Cbc0010I After 102 nodes, 66 on tree, 1e+50 best solution, best possible 0 (10743.12 seconds)
Cbc0010I After 103 nodes, 66 on tree, 1e+50 best solution, best possible 0 (10750.17 seconds)
Cbc0010I After 105 nodes, 67 on tree, 1e+50 best solution, best possible 0 (10761.80 seconds)
Cbc0010I After 107 nodes, 69 on tree, 1e+50 best solution, best possible 0 (10770.02 seconds)
Cbc0010I After 108 nodes, 69 on tree, 1e+50 best solution, best possible 0 (10786.52 seconds)
Cbc0010I After 109 nodes, 69 on tree, 1e+50 best solution, best possible 0 (10790.74 seconds)
Cbc0010I After 110 nodes, 70 on tree, 1e+50 best solution, best possible 0 (10796.93 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 0), took 146420 iterations and 111 nodes (10802.54 seconds)
Cbc0032I Strong branching done 2258 times (148265 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 61, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 47 times and created 5019 cuts of which 259 were active after adding rounds of cuts (52.0952 seconds)
Gomory was tried 47 times and created 527 cuts of which 0 were active after adding rounds of cuts (69.5933 seconds)
Knapsack was tried 47 times and created 20 cuts of which 0 were active after adding rounds of cuts (3.91282 seconds)
liftKnapsack was tried 47 times and created 1174 cuts of which 0 were active after adding rounds of cuts (87.1479 seconds)
Clique was tried 47 times and created 91 cuts of which 0 were active after adding rounds of cuts (1.52111 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (2.16889 seconds)
MixedIntegerRounding2 was tried 10 times and created 11 cuts of which 0 were active after adding rounds of cuts (5.57733 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.76342 seconds)
TwoMirCuts was tried 10 times and created 171 cuts of which 0 were active after adding rounds of cuts (30.7478 seconds)
ZeroHalf was tried 10 times and created 122 cuts of which 0 were active after adding rounds of cuts (3.9529 seconds)

Result - Stopped on time limit
No feasible solution found
Lower bound:                    0
Enumerated nodes:               111
Total iterations:               146420
Time (CPU seconds):             9188.86
Time (Wallclock seconds):       10802.5
Total time (CPU seconds):       9189.55   (Wallclock seconds):       10803.4
