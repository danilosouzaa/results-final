Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/j3014_5.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/j3014_5.txt -quit (default strategy 1)
At line 2 NAME          j3014_5.lp
At line 3 ROWS
At line 330 COLUMNS
At line 6231 RHS
At line 6350 BOUNDS
At line 6930 ENDATA
Problem j3014_5.lp has 325 rows, 528 columns and 5890 elements
Coin0008I j3014_5.lp read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.082041 seconds
Cgl0002I 23 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 188 rows, 378 columns (378 integer (378 of which binary)) and 5372 elements
Coin3009W Conflict graph built in 0.007 seconds, density: 1.871%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 378 objects (378 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 68 integers unsatisfied sum - 16.2274
Cbc0038I Pass   1: suminf.    9.07639 (43) obj. 0 iterations 79
Cbc0038I Pass   2: suminf.    7.88824 (37) obj. 0 iterations 45
Cbc0038I Pass   3: suminf.    7.86577 (37) obj. 0 iterations 16
Cbc0038I Pass   4: suminf.    6.51670 (34) obj. 0 iterations 74
Cbc0038I Pass   5: suminf.    6.08466 (37) obj. 0 iterations 32
Cbc0038I Pass   6: suminf.    6.71287 (31) obj. 0 iterations 82
Cbc0038I Pass   7: suminf.    6.04661 (30) obj. 0 iterations 21
Cbc0038I Pass   8: suminf.    4.99126 (20) obj. 0 iterations 79
Cbc0038I Pass   9: suminf.    3.04530 (19) obj. 0 iterations 57
Cbc0038I Pass  10: suminf.    2.67619 (18) obj. 0 iterations 22
Cbc0038I Pass  11: suminf.    2.93913 (18) obj. 0 iterations 57
Cbc0038I Pass  12: suminf.    2.71607 (18) obj. 0 iterations 34
Cbc0038I Pass  13: suminf.    4.14854 (19) obj. 0 iterations 50
Cbc0038I Pass  14: suminf.    3.34286 (18) obj. 0 iterations 52
Cbc0038I Pass  15: suminf.    2.67619 (18) obj. 0 iterations 9
Cbc0038I Pass  16: suminf.    3.96523 (21) obj. 0 iterations 39
Cbc0038I Pass  17: suminf.    2.78218 (16) obj. 0 iterations 70
Cbc0038I Pass  18: suminf.    3.96929 (18) obj. 0 iterations 59
Cbc0038I Pass  19: suminf.    3.04127 (16) obj. 0 iterations 53
Cbc0038I Pass  20: suminf.    3.50093 (21) obj. 0 iterations 50
Cbc0038I Pass  21: suminf.    3.32698 (17) obj. 0 iterations 54
Cbc0038I Pass  22: suminf.    3.21235 (14) obj. 0 iterations 50
Cbc0038I Pass  23: suminf.   10.08263 (44) obj. 0 iterations 104
Cbc0038I Pass  24: suminf.    5.88054 (32) obj. 0 iterations 62
Cbc0038I Pass  25: suminf.    4.45835 (22) obj. 0 iterations 50
Cbc0038I Pass  26: suminf.    5.39487 (22) obj. 0 iterations 75
Cbc0038I Pass  27: suminf.    4.14917 (24) obj. 0 iterations 45
Cbc0038I Pass  28: suminf.    5.58942 (23) obj. 0 iterations 75
Cbc0038I Pass  29: suminf.    4.78184 (21) obj. 0 iterations 37
Cbc0038I Pass  30: suminf.    3.69170 (17) obj. 0 iterations 20
Cbc0038I Pass  31: suminf.    3.35265 (16) obj. 0 iterations 9
Cbc0038I Pass  32: suminf.    2.89733 (20) obj. 0 iterations 28
Cbc0038I Pass  33: suminf.    7.10218 (30) obj. 0 iterations 84
Cbc0038I Pass  34: suminf.    5.21772 (28) obj. 0 iterations 41
Cbc0038I Pass  35: suminf.    4.36189 (27) obj. 0 iterations 26
Cbc0038I Pass  36: suminf.    4.36014 (19) obj. 0 iterations 83
Cbc0038I Pass  37: suminf.    4.01186 (20) obj. 0 iterations 22
Cbc0038I Pass  38: suminf.    5.20310 (22) obj. 0 iterations 79
Cbc0038I Pass  39: suminf.    3.59546 (24) obj. 0 iterations 27
Cbc0038I Pass  40: suminf.    2.98432 (24) obj. 0 iterations 16
Cbc0038I Pass  41: suminf.    6.15371 (25) obj. 0 iterations 74
Cbc0038I Pass  42: suminf.    4.83562 (24) obj. 0 iterations 41
Cbc0038I Pass  43: suminf.    4.71111 (23) obj. 0 iterations 15
Cbc0038I Pass  44: suminf.    4.69153 (19) obj. 0 iterations 65
Cbc0038I Pass  45: suminf.    3.75000 (12) obj. 0 iterations 28
Cbc0038I Pass  46: suminf.    3.75000 (14) obj. 0 iterations 23
Cbc0038I Pass  47: suminf.    3.77778 (11) obj. 0 iterations 45
Cbc0038I Pass  48: suminf.    3.15556 (14) obj. 0 iterations 31
Cbc0038I Pass  49: suminf.    5.19591 (20) obj. 0 iterations 70
Cbc0038I Pass  50: suminf.    4.09553 (22) obj. 0 iterations 29
Cbc0038I Pass  51: suminf.    3.63453 (19) obj. 0 iterations 5
Cbc0038I Pass  52: suminf.    2.91553 (13) obj. 0 iterations 13
Cbc0038I Pass  53: suminf.    4.17235 (14) obj. 0 iterations 76
Cbc0038I Pass  54: suminf.    3.52222 (13) obj. 0 iterations 30
Cbc0038I Pass  55: suminf.    2.69444 (13) obj. 0 iterations 41
Cbc0038I Pass  56: suminf.    2.57099 (10) obj. 0 iterations 30
Cbc0038I Pass  57: suminf.    3.41924 (12) obj. 0 iterations 67
Cbc0038I Pass  58: suminf.    2.85745 (15) obj. 0 iterations 26
Cbc0038I Pass  59: suminf.    2.37758 (17) obj. 0 iterations 11
Cbc0038I Pass  60: suminf.    4.34960 (15) obj. 0 iterations 74
Cbc0038I Pass  61: suminf.    3.41147 (19) obj. 0 iterations 49
Cbc0038I Pass  62: suminf.    4.72442 (21) obj. 0 iterations 85
Cbc0038I Pass  63: suminf.    3.25722 (13) obj. 0 iterations 46
Cbc0038I Pass  64: suminf.    2.87361 (18) obj. 0 iterations 64
Cbc0038I Pass  65: suminf.    2.82963 (17) obj. 0 iterations 10
Cbc0038I Pass  66: suminf.    4.65556 (15) obj. 0 iterations 76
Cbc0038I Pass  67: suminf.    3.77778 (15) obj. 0 iterations 27
Cbc0038I Pass  68: suminf.    4.44321 (16) obj. 0 iterations 56
Cbc0038I Pass  69: suminf.    3.81201 (16) obj. 0 iterations 37
Cbc0038I Pass  70: suminf.    3.77778 (15) obj. 0 iterations 17
Cbc0038I Pass  71: suminf.    4.50556 (16) obj. 0 iterations 52
Cbc0038I Pass  72: suminf.    3.93889 (15) obj. 0 iterations 28
Cbc0038I Pass  73: suminf.    4.96517 (17) obj. 0 iterations 50
Cbc0038I Pass  74: suminf.    4.33016 (16) obj. 0 iterations 58
Cbc0038I Pass  75: suminf.    3.97903 (21) obj. 0 iterations 31
Cbc0038I Pass  76: suminf.    3.95238 (24) obj. 0 iterations 12
Cbc0038I Pass  77: suminf.    4.80278 (21) obj. 0 iterations 62
Cbc0038I Pass  78: suminf.    3.57778 (16) obj. 0 iterations 27
Cbc0038I Pass  79: suminf.    4.93889 (16) obj. 0 iterations 71
Cbc0038I Pass  80: suminf.    4.43889 (16) obj. 0 iterations 28
Cbc0038I Pass  81: suminf.    3.25000 (17) obj. 0 iterations 45
Cbc0038I Pass  82: suminf.    3.25000 (15) obj. 0 iterations 13
Cbc0038I Pass  83: suminf.    4.65926 (17) obj. 0 iterations 50
Cbc0038I Pass  84: suminf.    3.93800 (14) obj. 0 iterations 41
Cbc0038I Pass  85: suminf.    3.92643 (16) obj. 0 iterations 23
Cbc0038I Pass  86: suminf.    3.78848 (16) obj. 0 iterations 12
Cbc0038I Pass  87: suminf.    4.48889 (15) obj. 0 iterations 77
Cbc0038I Pass  88: suminf.    2.82778 (12) obj. 0 iterations 19
Cbc0038I Pass  89: suminf.    3.64889 (13) obj. 0 iterations 49
Cbc0038I Pass  90: suminf.    2.78603 (11) obj. 0 iterations 34
Cbc0038I Pass  91: suminf.    1.98603 (10) obj. 0 iterations 8
Cbc0038I Pass  92: suminf.    2.75238 (10) obj. 0 iterations 60
Cbc0038I Pass  93: suminf.    2.57778 (10) obj. 0 iterations 27
Cbc0038I Pass  94: suminf.    2.73495 (10) obj. 0 iterations 46
Cbc0038I Pass  95: suminf.    4.92385 (21) obj. 0 iterations 65
Cbc0038I Pass  96: suminf.    3.77778 (17) obj. 0 iterations 48
Cbc0038I Pass  97: suminf.    2.57778 (9) obj. 0 iterations 46
Cbc0038I Pass  98: suminf.    2.35556 (12) obj. 0 iterations 41
Cbc0038I Pass  99: suminf.    2.91667 (12) obj. 0 iterations 51
Cbc0038I Pass 100: suminf.    8.13130 (39) obj. 0 iterations 98
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 378 columns, reduced to 164 rows 177 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.15 seconds)
Cbc0038I Full problem 189 rows 378 columns, reduced to 189 rows 378 columns - too large
Cbc0038I After 1.19 seconds - Feasibility pump exiting - took 0.61 seconds
Cbc0031I 64 added rows had average density of 79.0625
Cbc0013I At root node, 64 cuts changed objective from 0 to 0 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 367 row cuts average 12.7 elements, 0 column cuts (0 active)  in 2.668 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2848 row cuts average 377.4 elements, 0 column cuts (0 active)  in 3.326 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 45 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.382 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 1328 row cuts average 11.1 elements, 0 column cuts (0 active)  in 66.321 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 47 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 152 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.378 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 415 row cuts average 156.9 elements, 0 column cuts (0 active)  in 0.381 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 156 row cuts average 62.1 elements, 0 column cuts (0 active)  in 0.484 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (80.47 seconds)
Cbc0010I After 11 nodes, 9 on tree, 1e+50 best solution, best possible 0 (81.19 seconds)
Cbc0010I After 40 nodes, 12 on tree, 1e+50 best solution, best possible 0 (81.90 seconds)
Cbc0010I After 84 nodes, 15 on tree, 1e+50 best solution, best possible 0 (82.62 seconds)
Cbc0010I After 180 nodes, 24 on tree, 1e+50 best solution, best possible 0 (83.32 seconds)
Cbc0010I After 309 nodes, 27 on tree, 1e+50 best solution, best possible 0 (84.03 seconds)
Cbc0010I After 387 nodes, 29 on tree, 1e+50 best solution, best possible 0 (84.73 seconds)
Cbc0010I After 450 nodes, 28 on tree, 1e+50 best solution, best possible 0 (85.44 seconds)
Cbc0010I After 519 nodes, 26 on tree, 1e+50 best solution, best possible 0 (86.15 seconds)
Cbc0010I After 597 nodes, 36 on tree, 1e+50 best solution, best possible 0 (86.85 seconds)
Cbc0010I After 677 nodes, 39 on tree, 1e+50 best solution, best possible 0 (87.57 seconds)
Cbc0010I After 748 nodes, 39 on tree, 1e+50 best solution, best possible 0 (88.28 seconds)
Cbc0010I After 802 nodes, 37 on tree, 1e+50 best solution, best possible 0 (88.98 seconds)
Cbc0010I After 851 nodes, 47 on tree, 1e+50 best solution, best possible 0 (89.68 seconds)
Cbc0010I After 920 nodes, 47 on tree, 1e+50 best solution, best possible 0 (90.40 seconds)
Cbc0010I After 975 nodes, 47 on tree, 1e+50 best solution, best possible 0 (91.11 seconds)
Cbc0010I After 1041 nodes, 52 on tree, 1e+50 best solution, best possible 0 (91.82 seconds)
Cbc0010I After 1113 nodes, 52 on tree, 1e+50 best solution, best possible 0 (92.54 seconds)
Cbc0010I After 1199 nodes, 48 on tree, 1e+50 best solution, best possible 0 (93.24 seconds)
Cbc0010I After 1272 nodes, 43 on tree, 1e+50 best solution, best possible 0 (93.95 seconds)
Cbc0010I After 1357 nodes, 37 on tree, 1e+50 best solution, best possible 0 (94.66 seconds)
Cbc0010I After 1425 nodes, 32 on tree, 1e+50 best solution, best possible 0 (95.36 seconds)
Cbc0010I After 1488 nodes, 41 on tree, 1e+50 best solution, best possible 0 (96.07 seconds)
Cbc0010I After 1570 nodes, 49 on tree, 1e+50 best solution, best possible 0 (96.77 seconds)
Cbc0010I After 1652 nodes, 29 on tree, 1e+50 best solution, best possible 0 (97.50 seconds)
Cbc0010I After 1729 nodes, 22 on tree, 1e+50 best solution, best possible 0 (98.21 seconds)
Cbc0010I After 1814 nodes, 17 on tree, 1e+50 best solution, best possible 0 (98.92 seconds)
Cbc0010I After 1871 nodes, 23 on tree, 1e+50 best solution, best possible 0 (99.62 seconds)
Cbc0010I After 1945 nodes, 23 on tree, 1e+50 best solution, best possible 0 (100.33 seconds)
Cbc0010I After 2019 nodes, 12 on tree, 1e+50 best solution, best possible 0 (101.04 seconds)
Cbc0010I After 2089 nodes, 15 on tree, 1e+50 best solution, best possible 0 (101.75 seconds)
Cbc0010I After 2158 nodes, 11 on tree, 1e+50 best solution, best possible 0 (102.46 seconds)
Cbc0010I After 2240 nodes, 9 on tree, 1e+50 best solution, best possible 0 (103.16 seconds)
Cbc0010I After 2304 nodes, 36 on tree, 1e+50 best solution, best possible 0 (103.87 seconds)
Cbc0010I After 2373 nodes, 30 on tree, 1e+50 best solution, best possible 0 (104.57 seconds)
Cbc0010I After 2454 nodes, 40 on tree, 1e+50 best solution, best possible 0 (105.28 seconds)
Cbc0010I After 2519 nodes, 27 on tree, 1e+50 best solution, best possible 0 (105.98 seconds)
Cbc0010I After 2586 nodes, 22 on tree, 1e+50 best solution, best possible 0 (106.69 seconds)
Cbc0010I After 2651 nodes, 25 on tree, 1e+50 best solution, best possible 0 (107.39 seconds)
Cbc0010I After 2721 nodes, 37 on tree, 1e+50 best solution, best possible 0 (108.10 seconds)
Cbc0010I After 2794 nodes, 28 on tree, 1e+50 best solution, best possible 0 (108.80 seconds)
Cbc0010I After 2858 nodes, 27 on tree, 1e+50 best solution, best possible 0 (109.51 seconds)
Cbc0010I After 2940 nodes, 26 on tree, 1e+50 best solution, best possible 0 (110.23 seconds)
Cbc0010I After 3008 nodes, 17 on tree, 1e+50 best solution, best possible 0 (110.93 seconds)
Cbc0010I After 3093 nodes, 30 on tree, 1e+50 best solution, best possible 0 (111.64 seconds)
Cbc0010I After 3176 nodes, 21 on tree, 1e+50 best solution, best possible 0 (112.35 seconds)
Cbc0010I After 3246 nodes, 33 on tree, 1e+50 best solution, best possible 0 (113.07 seconds)
Cbc0010I After 3332 nodes, 22 on tree, 1e+50 best solution, best possible 0 (113.77 seconds)
Cbc0010I After 3400 nodes, 18 on tree, 1e+50 best solution, best possible 0 (114.47 seconds)
Cbc0010I After 3453 nodes, 21 on tree, 1e+50 best solution, best possible 0 (115.17 seconds)
Cbc0010I After 3516 nodes, 15 on tree, 1e+50 best solution, best possible 0 (115.88 seconds)
Cbc0010I After 3585 nodes, 17 on tree, 1e+50 best solution, best possible 0 (116.59 seconds)
Cbc0010I After 3668 nodes, 23 on tree, 1e+50 best solution, best possible 0 (117.29 seconds)
Cbc0010I After 3743 nodes, 14 on tree, 1e+50 best solution, best possible 0 (117.99 seconds)
Cbc0010I After 3805 nodes, 12 on tree, 1e+50 best solution, best possible 0 (118.69 seconds)
Cbc0010I After 3874 nodes, 45 on tree, 1e+50 best solution, best possible 0 (119.39 seconds)
Cbc0010I After 3958 nodes, 47 on tree, 1e+50 best solution, best possible 0 (120.09 seconds)
Cbc0010I After 4045 nodes, 41 on tree, 1e+50 best solution, best possible 0 (120.80 seconds)
Cbc0010I After 4125 nodes, 36 on tree, 1e+50 best solution, best possible 0 (121.50 seconds)
Cbc0010I After 4212 nodes, 42 on tree, 1e+50 best solution, best possible 0 (122.20 seconds)
Cbc0010I After 4290 nodes, 30 on tree, 1e+50 best solution, best possible 0 (122.90 seconds)
Cbc0010I After 4374 nodes, 33 on tree, 1e+50 best solution, best possible 0 (123.61 seconds)
Cbc0010I After 4455 nodes, 26 on tree, 1e+50 best solution, best possible 0 (124.32 seconds)
Cbc0010I After 4538 nodes, 44 on tree, 1e+50 best solution, best possible 0 (125.02 seconds)
Cbc0010I After 4628 nodes, 30 on tree, 1e+50 best solution, best possible 0 (125.72 seconds)
Cbc0010I After 4725 nodes, 32 on tree, 1e+50 best solution, best possible 0 (126.43 seconds)
Cbc0010I After 4821 nodes, 24 on tree, 1e+50 best solution, best possible 0 (127.15 seconds)
Cbc0010I After 4901 nodes, 24 on tree, 1e+50 best solution, best possible 0 (127.86 seconds)
Cbc0010I After 4987 nodes, 26 on tree, 1e+50 best solution, best possible 0 (128.56 seconds)
Cbc0010I After 5068 nodes, 29 on tree, 1e+50 best solution, best possible 0 (129.26 seconds)
Cbc0010I After 5164 nodes, 26 on tree, 1e+50 best solution, best possible 0 (129.96 seconds)
Cbc0010I After 5251 nodes, 24 on tree, 1e+50 best solution, best possible 0 (130.66 seconds)
Cbc0010I After 5352 nodes, 31 on tree, 1e+50 best solution, best possible 0 (131.38 seconds)
Cbc0016I Integer solution of 0 found by strong branching after 295100 iterations and 5355 nodes (131.40 seconds)
Cbc0001I Search completed - best objective 0, took 295100 iterations and 5355 nodes (131.41 seconds)
Cbc0032I Strong branching done 10328 times (234513 iterations), fathomed 209 nodes and fixed 431 variables
Cbc0035I Maximum depth 59, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 100 times and created 367 cuts of which 0 were active after adding rounds of cuts (2.66775 seconds)
Gomory was tried 100 times and created 2848 cuts of which 0 were active after adding rounds of cuts (3.3258 seconds)
Knapsack was tried 100 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.382004 seconds)
liftKnapsack was tried 100 times and created 1328 cuts of which 0 were active after adding rounds of cuts (66.3213 seconds)
Clique was tried 100 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.062284 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.260499 seconds)
MixedIntegerRounding2 was tried 100 times and created 152 cuts of which 0 were active after adding rounds of cuts (0.37754 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.01662 seconds)
TwoMirCuts was tried 100 times and created 415 cuts of which 0 were active after adding rounds of cuts (0.380838 seconds)
ZeroHalf was tried 100 times and created 156 cuts of which 0 were active after adding rounds of cuts (0.484349 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               5355
Total iterations:               295100
Time (CPU seconds):             131.461
Time (Wallclock seconds):       131.516
Total time (CPU seconds):       131.56   (Wallclock seconds):       131.567
