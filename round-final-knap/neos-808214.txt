Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/neos-808214.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/neos-808214.txt -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 644 COLUMNS
At line 23230 RHS
At line 23871 BOUNDS
At line 25180 ENDATA
Problem file has 640 rows, 1308 columns and 22530 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.26496 seconds
Cgl0003I 84 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 631 rows, 1224 columns (1224 integer (1224 of which binary)) and 20820 elements
Coin3009W Conflict graph built in 0.023 seconds, density: 1.212%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 53 integer variables out of 1224 objects (1224 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 184 integers unsatisfied sum - 47.1931
Cbc0038I Pass   1: suminf.   25.28049 (132) obj. -3.55271e-15 iterations 499
Cbc0038I Pass   2: suminf.   22.44291 (143) obj. 0.0380623 iterations 259
Cbc0038I Pass   3: suminf.   20.56250 (136) obj. 2.22045e-15 iterations 209
Cbc0038I Pass   4: suminf.   19.08473 (152) obj. 0.191663 iterations 170
Cbc0038I Pass   5: suminf.   17.88732 (135) obj. 0.084507 iterations 149
Cbc0038I Pass   6: suminf.   16.83735 (141) obj. 0.0180723 iterations 142
Cbc0038I Pass   7: suminf.   16.37719 (124) obj. 0.0146199 iterations 160
Cbc0038I Pass   8: suminf.   15.46875 (99) obj. 0 iterations 398
Cbc0038I Pass   9: suminf.   15.00000 (49) obj. 0 iterations 200
Cbc0038I Pass  10: suminf.   14.95708 (133) obj. 0.0343348 iterations 172
Cbc0038I Pass  11: suminf.   16.13372 (115) obj. -1.33227e-15 iterations 507
Cbc0038I Pass  12: suminf.   14.85714 (68) obj. 2.55351e-15 iterations 438
Cbc0038I Pass  13: suminf.   14.77778 (68) obj. -2.88658e-15 iterations 83
Cbc0038I Pass  14: suminf.   14.44444 (67) obj. -1.9984e-15 iterations 107
Cbc0038I Pass  15: suminf.   14.43333 (78) obj. 1.77636e-15 iterations 97
Cbc0038I Pass  16: suminf.   16.00000 (32) obj. -4.93489e-15 iterations 789
Cbc0038I Pass  17: suminf.   16.00000 (32) obj. 4.32987e-15 iterations 177
Cbc0038I Pass  18: suminf.   16.00000 (32) obj. 1.9984e-15 iterations 280
Cbc0038I Pass  19: suminf.   16.00000 (32) obj. -1.15278e-14 iterations 311
Cbc0038I Pass  20: suminf.   16.00000 (32) obj. 2.18549e-15 iterations 352
Cbc0038I Pass  21: suminf.   14.00000 (28) obj. -4.52812e-15 iterations 306
Cbc0038I Pass  22: suminf.   14.00000 (28) obj. 0 iterations 235
Cbc0038I Pass  23: suminf.   14.00000 (28) obj. -1.65423e-14 iterations 247
Cbc0038I Pass  24: suminf.   14.00000 (28) obj. 0 iterations 263
Cbc0038I Pass  25: suminf.   14.00000 (28) obj. -1.93496e-15 iterations 207
Cbc0038I Pass  26: suminf.   14.00000 (28) obj. 4.55553e-15 iterations 336
Cbc0038I Pass  27: suminf.   14.00000 (28) obj. -1.36692e-14 iterations 336
Cbc0038I Pass  28: suminf.   14.00000 (28) obj. 0 iterations 291
Cbc0038I Pass  29: suminf.   14.00000 (28) obj. 2.66454e-15 iterations 426
Cbc0038I Pass  30: suminf.   14.00000 (28) obj. -1.77636e-15 iterations 304
Cbc0038I Pass  31: suminf.   14.00000 (28) obj. 1.12255e-14 iterations 254
Cbc0038I Pass  32: suminf.   14.00000 (28) obj. 6.58732e-15 iterations 251
Cbc0038I Pass  33: suminf.   14.00000 (28) obj. -1.53433e-14 iterations 151
Cbc0038I Pass  34: suminf.   14.00000 (28) obj. 0 iterations 270
Cbc0038I Pass  35: suminf.   14.00000 (28) obj. 2.44249e-15 iterations 253
Cbc0038I Pass  36: suminf.   14.00000 (28) obj. 1.29566e-14 iterations 331
Cbc0038I Pass  37: suminf.   14.00000 (28) obj. -2.09277e-14 iterations 321
Cbc0038I Pass  38: suminf.   14.00000 (28) obj. 1.66533e-15 iterations 184
Cbc0038I Pass  39: suminf.   14.00000 (28) obj. -2.77556e-15 iterations 153
Cbc0038I Pass  40: suminf.   14.00000 (28) obj. -4.21885e-15 iterations 307
Cbc0038I Pass  41: suminf.   14.00000 (28) obj. 3.33067e-15 iterations 329
Cbc0038I Pass  42: suminf.   14.00000 (28) obj. 1.55431e-15 iterations 265
Cbc0038I Pass  43: suminf.   14.00000 (28) obj. -1.33227e-15 iterations 309
Cbc0038I Pass  44: suminf.   14.00000 (28) obj. -1.11022e-15 iterations 179
Cbc0038I Pass  45: suminf.   14.00000 (28) obj. 3.88578e-15 iterations 389
Cbc0038I Pass  46: suminf.   14.00000 (28) obj. 0 iterations 199
Cbc0038I Pass  47: suminf.   14.00000 (28) obj. 0 iterations 319
Cbc0038I Pass  48: suminf.   14.00000 (28) obj. 5.10703e-15 iterations 182
Cbc0038I Pass  49: suminf.   14.00000 (28) obj. 0 iterations 183
Cbc0038I Pass  50: suminf.   14.00000 (28) obj. -8.71806e-15 iterations 196
Cbc0038I Pass  51: suminf.   14.00000 (28) obj. 8.60548e-15 iterations 287
Cbc0038I Pass  52: suminf.   14.00000 (28) obj. 4.88498e-15 iterations 157
Cbc0038I Pass  53: suminf.   14.00000 (28) obj. -2.65313e-14 iterations 260
Cbc0038I Pass  54: suminf.   14.00000 (28) obj. 0 iterations 234
Cbc0038I Pass  55: suminf.   14.00000 (28) obj. -9.99201e-15 iterations 282
Cbc0038I Pass  56: suminf.   14.00000 (28) obj. -2.68316e-14 iterations 221
Cbc0038I Pass  57: suminf.   14.00000 (28) obj. -1.16573e-14 iterations 225
Cbc0038I Pass  58: suminf.   14.00000 (28) obj. 0 iterations 278
Cbc0038I Pass  59: suminf.   14.00000 (28) obj. 0 iterations 230
Cbc0038I Pass  60: suminf.   14.00000 (28) obj. -5.55112e-16 iterations 193
Cbc0038I Pass  61: suminf.   14.00000 (28) obj. 1.19097e-15 iterations 304
Cbc0038I Pass  62: suminf.   14.00000 (28) obj. 8.77508e-15 iterations 276
Cbc0038I Pass  63: suminf.   14.00000 (28) obj. -1.03152e-17 iterations 228
Cbc0038I Pass  64: suminf.   14.00000 (28) obj. -2.8004e-15 iterations 207
Cbc0038I Pass  65: suminf.   14.00000 (28) obj. 0 iterations 298
Cbc0038I Pass  66: suminf.   14.00000 (28) obj. 0 iterations 232
Cbc0038I Pass  67: suminf.   14.00000 (28) obj. 0 iterations 182
Cbc0038I Pass  68: suminf.   50.48599 (202) obj. 2.92559 iterations 708
Cbc0038I Pass  69: suminf.   27.88928 (154) obj. 3.60736 iterations 402
Cbc0038I Pass  70: suminf.   19.02336 (144) obj. 3.61028 iterations 330
Cbc0038I Pass  71: suminf.   14.28571 (79) obj. 3.77143 iterations 410
Cbc0038I Pass  72: suminf.   10.50000 (40) obj. 4 iterations 389
Cbc0038I Pass  73: suminf.    9.50000 (34) obj. 4 iterations 189
Cbc0038I Pass  74: suminf.    9.50000 (34) obj. 4 iterations 136
Cbc0038I Pass  75: suminf.    9.50000 (34) obj. 4 iterations 81
Cbc0038I Pass  76: suminf.    9.50000 (34) obj. 4 iterations 74
Cbc0038I Pass  77: suminf.    9.50000 (34) obj. 4 iterations 94
Cbc0038I Pass  78: suminf.   53.03264 (198) obj. 4.41311 iterations 689
Cbc0038I Pass  79: suminf.   27.67304 (137) obj. 3.834 iterations 425
Cbc0038I Pass  80: suminf.   16.00000 (97) obj. 3.69231 iterations 282
Cbc0038I Pass  81: suminf.   14.01527 (100) obj. 3.5458 iterations 220
Cbc0038I Pass  82: suminf.   13.83333 (66) obj. 3.83333 iterations 94
Cbc0038I Pass  83: suminf.   14.33333 (54) obj. 4 iterations 572
Cbc0038I Pass  84: suminf.   13.50000 (69) obj. 3.875 iterations 210
Cbc0038I Pass  85: suminf.   13.15033 (115) obj. 3.84967 iterations 232
Cbc0038I Pass  86: suminf.   14.10472 (127) obj. 3.87736 iterations 508
Cbc0038I Pass  87: suminf.   11.55556 (63) obj. 3.88889 iterations 414
Cbc0038I Pass  88: suminf.   11.55556 (63) obj. 3.88889 iterations 47
Cbc0038I Pass  89: suminf.    9.95485 (113) obj. 4.83134 iterations 528
Cbc0038I Pass  90: suminf.    8.00000 (16) obj. 5 iterations 573
Cbc0038I Pass  91: suminf.    8.00000 (16) obj. 5 iterations 90
Cbc0038I Pass  92: suminf.    8.00000 (16) obj. 5 iterations 147
Cbc0038I Pass  93: suminf.    8.00000 (16) obj. 5 iterations 181
Cbc0038I Pass  94: suminf.    8.00000 (16) obj. 5 iterations 242
Cbc0038I Pass  95: suminf.    8.00000 (16) obj. 5 iterations 181
Cbc0038I Pass  96: suminf.    8.00000 (16) obj. 5 iterations 244
Cbc0038I Pass  97: suminf.    8.00000 (16) obj. 5 iterations 62
Cbc0038I Pass  98: suminf.    8.00000 (16) obj. 5 iterations 166
Cbc0038I Pass  99: suminf.    8.00000 (16) obj. 5 iterations 158
Cbc0038I Pass 100: suminf.   52.76754 (202) obj. 1.80371 iterations 639
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 332 integers at bound fixed and 0 continuous
Cbc0038I Full problem 631 rows 1224 columns, reduced to 573 rows 892 columns - too large
Cbc0038I Mini branch and bound did not improve solution (13.66 seconds)
Cbc0038I Full problem 632 rows 1224 columns, reduced to 632 rows 1224 columns - too large
Cbc0038I After 14.76 seconds - Feasibility pump exiting - took 13.94 seconds
Cbc0031I 9 added rows had average density of 11
Cbc0013I At root node, 9 cuts changed objective from 0 to 5 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.516 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 52.8 elements, 0 column cuts (0 active)  in 0.529 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 8.340 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 32 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.236 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 9 row cuts average 92.1 elements, 0 column cuts (0 active)  in 0.285 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 6 row cuts average 76.5 elements, 0 column cuts (0 active)  in 0.321 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 5 (26.55 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 5 (27.40 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 5 (28.24 seconds)
Cbc0010I After 15 nodes, 15 on tree, 1e+50 best solution, best possible 5 (29.02 seconds)
Cbc0010I After 22 nodes, 22 on tree, 1e+50 best solution, best possible 5 (29.78 seconds)
Cbc0010I After 31 nodes, 30 on tree, 1e+50 best solution, best possible 5 (30.51 seconds)
Cbc0010I After 44 nodes, 37 on tree, 1e+50 best solution, best possible 5 (31.24 seconds)
Cbc0010I After 69 nodes, 36 on tree, 1e+50 best solution, best possible 5 (31.94 seconds)
Cbc0010I After 93 nodes, 36 on tree, 1e+50 best solution, best possible 5 (32.65 seconds)
Cbc0010I After 117 nodes, 39 on tree, 1e+50 best solution, best possible 5 (33.37 seconds)
Cbc0010I After 138 nodes, 40 on tree, 1e+50 best solution, best possible 5 (34.07 seconds)
Cbc0010I After 159 nodes, 38 on tree, 1e+50 best solution, best possible 5 (34.80 seconds)
Cbc0010I After 181 nodes, 36 on tree, 1e+50 best solution, best possible 5 (35.53 seconds)
Cbc0010I After 204 nodes, 35 on tree, 1e+50 best solution, best possible 5 (36.23 seconds)
Cbc0010I After 221 nodes, 39 on tree, 1e+50 best solution, best possible 5 (36.93 seconds)
Cbc0010I After 247 nodes, 40 on tree, 1e+50 best solution, best possible 5 (37.66 seconds)
Cbc0010I After 270 nodes, 41 on tree, 1e+50 best solution, best possible 5 (38.38 seconds)
Cbc0010I After 297 nodes, 40 on tree, 1e+50 best solution, best possible 5 (39.09 seconds)
Cbc0010I After 323 nodes, 40 on tree, 1e+50 best solution, best possible 5 (39.81 seconds)
Cbc0010I After 352 nodes, 38 on tree, 1e+50 best solution, best possible 5 (40.52 seconds)
Cbc0010I After 377 nodes, 39 on tree, 1e+50 best solution, best possible 5 (41.25 seconds)
Cbc0010I After 399 nodes, 38 on tree, 1e+50 best solution, best possible 5 (41.98 seconds)
Cbc0010I After 429 nodes, 35 on tree, 1e+50 best solution, best possible 5 (42.69 seconds)
Cbc0010I After 452 nodes, 41 on tree, 1e+50 best solution, best possible 5 (43.45 seconds)
Cbc0010I After 479 nodes, 39 on tree, 1e+50 best solution, best possible 5 (44.17 seconds)
Cbc0010I After 505 nodes, 37 on tree, 1e+50 best solution, best possible 5 (44.90 seconds)
Cbc0010I After 531 nodes, 40 on tree, 1e+50 best solution, best possible 5 (45.61 seconds)
Cbc0010I After 562 nodes, 38 on tree, 1e+50 best solution, best possible 5 (46.35 seconds)
Cbc0010I After 587 nodes, 36 on tree, 1e+50 best solution, best possible 5 (47.08 seconds)
Cbc0010I After 609 nodes, 35 on tree, 1e+50 best solution, best possible 5 (47.80 seconds)
Cbc0010I After 632 nodes, 38 on tree, 1e+50 best solution, best possible 5 (48.51 seconds)
Cbc0010I After 655 nodes, 39 on tree, 1e+50 best solution, best possible 5 (49.24 seconds)
Cbc0010I After 676 nodes, 36 on tree, 1e+50 best solution, best possible 5 (49.96 seconds)
Cbc0010I After 696 nodes, 37 on tree, 1e+50 best solution, best possible 5 (50.68 seconds)
Cbc0010I After 719 nodes, 39 on tree, 1e+50 best solution, best possible 5 (51.38 seconds)
Cbc0010I After 740 nodes, 35 on tree, 1e+50 best solution, best possible 5 (52.09 seconds)
Cbc0010I After 765 nodes, 36 on tree, 1e+50 best solution, best possible 5 (52.84 seconds)
Cbc0010I After 791 nodes, 37 on tree, 1e+50 best solution, best possible 5 (53.56 seconds)
Cbc0010I After 813 nodes, 39 on tree, 1e+50 best solution, best possible 5 (54.27 seconds)
Cbc0010I After 833 nodes, 36 on tree, 1e+50 best solution, best possible 5 (55.00 seconds)
Cbc0010I After 856 nodes, 40 on tree, 1e+50 best solution, best possible 5 (55.71 seconds)
Cbc0010I After 879 nodes, 40 on tree, 1e+50 best solution, best possible 5 (56.42 seconds)
Cbc0010I After 904 nodes, 41 on tree, 1e+50 best solution, best possible 5 (57.12 seconds)
Cbc0010I After 932 nodes, 37 on tree, 1e+50 best solution, best possible 5 (57.84 seconds)
Cbc0010I After 953 nodes, 36 on tree, 1e+50 best solution, best possible 5 (58.55 seconds)
Cbc0010I After 974 nodes, 34 on tree, 1e+50 best solution, best possible 5 (59.27 seconds)
Cbc0010I After 1005 nodes, 36 on tree, 1e+50 best solution, best possible 5 (59.99 seconds)
Cbc0010I After 1028 nodes, 43 on tree, 1e+50 best solution, best possible 5 (60.70 seconds)
Cbc0010I After 1058 nodes, 35 on tree, 1e+50 best solution, best possible 5 (61.43 seconds)
Cbc0010I After 1076 nodes, 40 on tree, 1e+50 best solution, best possible 5 (62.15 seconds)
Cbc0010I After 1095 nodes, 39 on tree, 1e+50 best solution, best possible 5 (62.87 seconds)
Cbc0010I After 1113 nodes, 40 on tree, 1e+50 best solution, best possible 5 (63.61 seconds)
Cbc0010I After 1134 nodes, 37 on tree, 1e+50 best solution, best possible 5 (64.34 seconds)
Cbc0010I After 1150 nodes, 34 on tree, 1e+50 best solution, best possible 5 (65.06 seconds)
Cbc0010I After 1170 nodes, 36 on tree, 1e+50 best solution, best possible 5 (65.76 seconds)
Cbc0010I After 1196 nodes, 39 on tree, 1e+50 best solution, best possible 5 (66.46 seconds)
Cbc0010I After 1222 nodes, 38 on tree, 1e+50 best solution, best possible 5 (67.17 seconds)
Cbc0010I After 1244 nodes, 43 on tree, 1e+50 best solution, best possible 5 (67.89 seconds)
Cbc0010I After 1266 nodes, 33 on tree, 1e+50 best solution, best possible 5 (68.65 seconds)
Cbc0010I After 1284 nodes, 38 on tree, 1e+50 best solution, best possible 5 (69.35 seconds)
Cbc0010I After 1304 nodes, 50 on tree, 1e+50 best solution, best possible 5 (70.06 seconds)
Cbc0010I After 1326 nodes, 44 on tree, 1e+50 best solution, best possible 5 (70.80 seconds)
Cbc0010I After 1346 nodes, 42 on tree, 1e+50 best solution, best possible 5 (71.53 seconds)
Cbc0010I After 1367 nodes, 37 on tree, 1e+50 best solution, best possible 5 (72.25 seconds)
Cbc0010I After 1384 nodes, 50 on tree, 1e+50 best solution, best possible 5 (72.95 seconds)
Cbc0010I After 1407 nodes, 44 on tree, 1e+50 best solution, best possible 5 (73.70 seconds)
Cbc0010I After 1429 nodes, 38 on tree, 1e+50 best solution, best possible 5 (74.45 seconds)
Cbc0010I After 1449 nodes, 43 on tree, 1e+50 best solution, best possible 5 (75.18 seconds)
Cbc0010I After 1474 nodes, 38 on tree, 1e+50 best solution, best possible 5 (75.89 seconds)
Cbc0010I After 1494 nodes, 40 on tree, 1e+50 best solution, best possible 5 (76.65 seconds)
Cbc0010I After 1517 nodes, 41 on tree, 1e+50 best solution, best possible 5 (77.37 seconds)
Cbc0010I After 1541 nodes, 36 on tree, 1e+50 best solution, best possible 5 (78.09 seconds)
Cbc0010I After 1565 nodes, 36 on tree, 1e+50 best solution, best possible 5 (78.83 seconds)
Cbc0010I After 1583 nodes, 37 on tree, 1e+50 best solution, best possible 5 (79.55 seconds)
Cbc0010I After 1606 nodes, 35 on tree, 1e+50 best solution, best possible 5 (80.26 seconds)
Cbc0010I After 1628 nodes, 36 on tree, 1e+50 best solution, best possible 5 (80.98 seconds)
Cbc0010I After 1648 nodes, 40 on tree, 1e+50 best solution, best possible 5 (81.70 seconds)
Cbc0010I After 1665 nodes, 39 on tree, 1e+50 best solution, best possible 5 (82.42 seconds)
Cbc0010I After 1686 nodes, 39 on tree, 1e+50 best solution, best possible 5 (83.14 seconds)
Cbc0010I After 1704 nodes, 37 on tree, 1e+50 best solution, best possible 5 (83.84 seconds)
Cbc0010I After 1721 nodes, 35 on tree, 1e+50 best solution, best possible 5 (84.55 seconds)
Cbc0010I After 1745 nodes, 40 on tree, 1e+50 best solution, best possible 5 (85.26 seconds)
Cbc0010I After 1769 nodes, 34 on tree, 1e+50 best solution, best possible 5 (85.97 seconds)
Cbc0010I After 1788 nodes, 32 on tree, 1e+50 best solution, best possible 5 (86.70 seconds)
Cbc0010I After 1811 nodes, 35 on tree, 1e+50 best solution, best possible 5 (87.42 seconds)
Cbc0010I After 1829 nodes, 33 on tree, 1e+50 best solution, best possible 5 (88.14 seconds)
Cbc0010I After 1849 nodes, 32 on tree, 1e+50 best solution, best possible 5 (88.86 seconds)
Cbc0010I After 1867 nodes, 42 on tree, 1e+50 best solution, best possible 5 (89.58 seconds)
Cbc0010I After 1891 nodes, 39 on tree, 1e+50 best solution, best possible 5 (90.30 seconds)
Cbc0010I After 1913 nodes, 44 on tree, 1e+50 best solution, best possible 5 (91.01 seconds)
Cbc0010I After 1938 nodes, 40 on tree, 1e+50 best solution, best possible 5 (91.72 seconds)
Cbc0010I After 1955 nodes, 51 on tree, 1e+50 best solution, best possible 5 (92.47 seconds)
Cbc0010I After 1976 nodes, 45 on tree, 1e+50 best solution, best possible 5 (93.19 seconds)
Cbc0010I After 1997 nodes, 38 on tree, 1e+50 best solution, best possible 5 (93.90 seconds)
Cbc0010I After 2030 nodes, 46 on tree, 1e+50 best solution, best possible 5 (94.60 seconds)
Cbc0010I After 2061 nodes, 39 on tree, 1e+50 best solution, best possible 5 (95.32 seconds)
Cbc0010I After 2085 nodes, 37 on tree, 1e+50 best solution, best possible 5 (96.06 seconds)
Cbc0010I After 2103 nodes, 38 on tree, 1e+50 best solution, best possible 5 (96.76 seconds)
Cbc0010I After 2122 nodes, 42 on tree, 1e+50 best solution, best possible 5 (97.54 seconds)
Cbc0010I After 2145 nodes, 42 on tree, 1e+50 best solution, best possible 5 (98.25 seconds)
Cbc0010I After 2171 nodes, 35 on tree, 1e+50 best solution, best possible 5 (98.98 seconds)
Cbc0010I After 2192 nodes, 41 on tree, 1e+50 best solution, best possible 5 (99.68 seconds)
Cbc0010I After 2219 nodes, 35 on tree, 1e+50 best solution, best possible 5 (100.39 seconds)
Cbc0010I After 2239 nodes, 40 on tree, 1e+50 best solution, best possible 5 (101.12 seconds)
Cbc0010I After 2258 nodes, 37 on tree, 1e+50 best solution, best possible 5 (101.84 seconds)
Cbc0010I After 2278 nodes, 37 on tree, 1e+50 best solution, best possible 5 (102.55 seconds)
Cbc0010I After 2300 nodes, 32 on tree, 1e+50 best solution, best possible 5 (103.26 seconds)
Cbc0010I After 2322 nodes, 35 on tree, 1e+50 best solution, best possible 5 (104.02 seconds)
Cbc0010I After 2344 nodes, 39 on tree, 1e+50 best solution, best possible 5 (104.75 seconds)
Cbc0010I After 2364 nodes, 42 on tree, 1e+50 best solution, best possible 5 (105.45 seconds)
Cbc0010I After 2384 nodes, 44 on tree, 1e+50 best solution, best possible 5 (106.19 seconds)
Cbc0010I After 2410 nodes, 41 on tree, 1e+50 best solution, best possible 5 (106.93 seconds)
Cbc0010I After 2433 nodes, 38 on tree, 1e+50 best solution, best possible 5 (107.66 seconds)
Cbc0010I After 2456 nodes, 39 on tree, 1e+50 best solution, best possible 5 (108.39 seconds)
Cbc0010I After 2476 nodes, 37 on tree, 1e+50 best solution, best possible 5 (109.11 seconds)
Cbc0010I After 2498 nodes, 37 on tree, 1e+50 best solution, best possible 5 (109.83 seconds)
Cbc0010I After 2518 nodes, 37 on tree, 1e+50 best solution, best possible 5 (110.56 seconds)
Cbc0010I After 2543 nodes, 36 on tree, 1e+50 best solution, best possible 5 (111.29 seconds)
Cbc0010I After 2567 nodes, 34 on tree, 1e+50 best solution, best possible 5 (112.00 seconds)
Cbc0010I After 2587 nodes, 31 on tree, 1e+50 best solution, best possible 5 (112.71 seconds)
Cbc0010I After 2607 nodes, 38 on tree, 1e+50 best solution, best possible 5 (113.44 seconds)
Cbc0010I After 2633 nodes, 30 on tree, 1e+50 best solution, best possible 5 (114.20 seconds)
Cbc0010I After 2655 nodes, 37 on tree, 1e+50 best solution, best possible 5 (114.91 seconds)
Cbc0010I After 2673 nodes, 35 on tree, 1e+50 best solution, best possible 5 (115.61 seconds)
Cbc0010I After 2693 nodes, 32 on tree, 1e+50 best solution, best possible 5 (116.32 seconds)
Cbc0010I After 2710 nodes, 35 on tree, 1e+50 best solution, best possible 5 (117.02 seconds)
Cbc0010I After 2725 nodes, 50 on tree, 1e+50 best solution, best possible 5 (117.73 seconds)
Cbc0004I Integer solution of 5 found after 238126 iterations and 2732 nodes (118.00 seconds)
Cbc0001I Search completed - best objective 5, took 238126 iterations and 2732 nodes (118.01 seconds)
Cbc0032I Strong branching done 2322 times (23300 iterations), fathomed 10 nodes and fixed 6 variables
Cbc0035I Maximum depth 56, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 5
Probing was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.515635 seconds)
Gomory was tried 1866 times and created 546 cuts of which 0 were active after adding rounds of cuts (7.70513 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.101689 seconds)
liftKnapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (8.3403 seconds)
Clique was tried 1866 times and created 5485 cuts of which 0 were active after adding rounds of cuts (2.11894 seconds)
OddWheel was tried 9 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.235896 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.062493 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004137 seconds)
TwoMirCuts was tried 1866 times and created 9 cuts of which 0 were active after adding rounds of cuts (3.95913 seconds)
ZeroHalf was tried 1866 times and created 1690 cuts of which 0 were active after adding rounds of cuts (19.1898 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               2732
Total iterations:               238126
Time (CPU seconds):             117.979
Time (Wallclock seconds):       118.056
Total time (CPU seconds):       118.014   (Wallclock seconds):       118.082
