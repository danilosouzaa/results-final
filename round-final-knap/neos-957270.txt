Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/neos-957270.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/neos-957270.txt -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 3286 COLUMNS
At line 421259 RHS
At line 421608 BOUNDS
At line 427538 ENDATA
Problem file has 3282 rows, 5929 columns and 417968 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.5 - 13.2656 seconds
Cgl0003I 1 fixed, 0 tightened bounds, 1193 strengthened rows, 0 substitutions
Cgl0003I 9 fixed, 0 tightened bounds, 659 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 705 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 759 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 3252 rows, 5913 columns (5913 integer (5913 of which binary)) and 419641 elements
Coin3009W Conflict graph built in 0.285 seconds, density: 0.576%
Cgl0015I Clique Strengthening extended 2 cliques, 2 were dominated
After applying Clique Strengthening continuous objective value is 0.5
Cbc0045I Cutoff increment increased from 0.0001 to 0.4999
Cbc0045I 2 integer variables out of 5913 objects (5913 integer) have cost of 0.5 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 88 integers unsatisfied sum - 21.2856
Cbc0038I Pass   1: (34.01 seconds) suminf.    5.55039 (30) obj. 0.5 iterations 298
Cbc0038I Pass   2: (34.07 seconds) suminf.    4.99225 (28) obj. 0.5 iterations 6
Cbc0038I Pass   3: (34.18 seconds) suminf.    4.48062 (26) obj. 0.5 iterations 77
Cbc0038I Pass   4: (34.78 seconds) suminf.    2.00000 (14) obj. 0.5 iterations 62
Cbc0038I Pass   5: (35.08 seconds) suminf.    2.00000 (13) obj. 0.5 iterations 15
Cbc0038I Pass   6: (35.23 seconds) suminf.   13.80775 (43) obj. 1 iterations 221
Cbc0038I Pass   7: (35.40 seconds) suminf.    4.60669 (85) obj. 1 iterations 288
Cbc0038I Pass   8: (35.46 seconds) suminf.    3.31032 (82) obj. 1 iterations 12
Cbc0038I Pass   9: (35.61 seconds) suminf.    4.54055 (26) obj. 1 iterations 152
Cbc0038I Pass  10: (35.70 seconds) suminf.    3.90186 (24) obj. 1 iterations 21
Cbc0038I Pass  11: (35.76 seconds) suminf.    3.89320 (25) obj. 1 iterations 12
Cbc0038I Pass  12: (35.87 seconds) suminf.    3.52093 (20) obj. 1 iterations 70
Cbc0038I Pass  13: (36.41 seconds) suminf.    3.00000 (14) obj. 1 iterations 49
Cbc0038I Pass  14: (36.94 seconds) suminf.    3.00000 (14) obj. 1 iterations 10
Cbc0038I Pass  15: (37.09 seconds) suminf.    3.48062 (31) obj. 1 iterations 195
Cbc0038I Pass  16: (37.34 seconds) suminf.    2.03256 (12) obj. 1 iterations 193
Cbc0038I Pass  17: (37.64 seconds) suminf.    2.60000 (13) obj. 1 iterations 40
Cbc0038I Pass  18: (37.94 seconds) suminf.    2.35814 (13) obj. 1 iterations 35
Cbc0038I Pass  19: (38.12 seconds) suminf.    2.83721 (12) obj. 1 iterations 44
Cbc0038I Pass  20: (38.42 seconds) suminf.    2.35814 (13) obj. 1 iterations 60
Cbc0038I Pass  21: (38.96 seconds) suminf.    2.78788 (14) obj. 1 iterations 185
Cbc0038I Pass  22: (39.10 seconds) suminf.    2.66667 (9) obj. 1 iterations 172
Cbc0038I Pass  23: (39.21 seconds) suminf.    2.85271 (11) obj. 1 iterations 42
Cbc0038I Pass  24: (39.38 seconds) suminf.    2.66667 (12) obj. 1 iterations 58
Cbc0038I Pass  25: (39.50 seconds) suminf.    2.66667 (11) obj. 1 iterations 53
Cbc0038I Pass  26: (39.58 seconds) suminf.    2.66667 (9) obj. 1 iterations 57
Cbc0038I Pass  27: (39.67 seconds) suminf.    3.00000 (10) obj. 1 iterations 45
Cbc0038I Pass  28: (39.84 seconds) suminf.    3.00000 (12) obj. 1 iterations 50
Cbc0038I Pass  29: (39.94 seconds) suminf.    3.00000 (11) obj. 1 iterations 16
Cbc0038I Pass  30: (40.11 seconds) suminf.    2.80000 (12) obj. 1 iterations 28
Cbc0038I Pass  31: (40.27 seconds) suminf.    3.00000 (12) obj. 1 iterations 28
Cbc0038I Pass  32: (40.43 seconds) suminf.    4.23721 (11) obj. 1 iterations 188
Cbc0038I Pass  33: (40.61 seconds) suminf.    3.90388 (18) obj. 1 iterations 242
Cbc0038I Pass  34: (41.15 seconds) suminf.    2.45685 (14) obj. 1 iterations 79
Cbc0038I Pass  35: (41.33 seconds) suminf.    2.23256 (12) obj. 1 iterations 34
Cbc0038I Pass  36: (41.47 seconds) suminf.    2.37209 (11) obj. 1 iterations 87
Cbc0038I Pass  37: (41.59 seconds) suminf.    6.07442 (22) obj. 1 iterations 184
Cbc0038I Pass  38: (41.98 seconds) suminf.    2.17209 (13) obj. 1 iterations 181
Cbc0038I Pass  39: (42.30 seconds) suminf.    2.07907 (13) obj. 1 iterations 29
Cbc0038I Pass  40: (42.67 seconds) suminf.    1.91395 (13) obj. 1 iterations 74
Cbc0038I Pass  41: (43.36 seconds) suminf.    1.67907 (14) obj. 1 iterations 70
Cbc0038I Pass  42: (43.52 seconds) suminf.    2.17209 (11) obj. 1 iterations 85
Cbc0038I Pass  43: (43.66 seconds) suminf.    4.45349 (16) obj. 1 iterations 189
Cbc0038I Pass  44: (43.81 seconds) suminf.    2.55039 (8) obj. 1 iterations 176
Cbc0038I Pass  45: (43.93 seconds) suminf.    2.57674 (11) obj. 1 iterations 33
Cbc0038I Pass  46: (44.10 seconds) suminf.    2.57674 (12) obj. 1 iterations 18
Cbc0038I Pass  47: (44.29 seconds) suminf.    2.33023 (12) obj. 1 iterations 60
Cbc0038I Pass  48: (44.42 seconds) suminf.    2.33023 (11) obj. 1 iterations 61
Cbc0038I Pass  49: (44.56 seconds) suminf.    2.81860 (11) obj. 1 iterations 71
Cbc0038I Pass  50: (44.79 seconds) suminf.    2.71473 (12) obj. 1 iterations 184
Cbc0038I Pass  51: (44.96 seconds) suminf.    1.80000 (9) obj. 1 iterations 208
Cbc0038I Pass  52: (45.05 seconds) suminf.    1.80000 (10) obj. 1 iterations 29
Cbc0038I Pass  53: (45.12 seconds) suminf.    1.80000 (10) obj. 1 iterations 7
Cbc0038I Pass  54: (45.20 seconds) suminf.    1.40000 (9) obj. 1 iterations 25
Cbc0038I Pass  55: (45.28 seconds) suminf.    1.40000 (9) obj. 1 iterations 28
Cbc0038I Pass  56: (45.37 seconds) suminf.    1.80000 (10) obj. 1 iterations 44
Cbc0038I Pass  57: (45.54 seconds) suminf.    4.48351 (36) obj. 1 iterations 245
Cbc0038I Pass  58: (45.65 seconds) suminf.    1.54419 (9) obj. 1 iterations 153
Cbc0038I Pass  59: (45.74 seconds) suminf.    1.93333 (8) obj. 1 iterations 49
Cbc0038I Pass  60: (45.81 seconds) suminf.    1.80000 (6) obj. 1 iterations 55
Cbc0038I Pass  61: (45.88 seconds) suminf.    2.00000 (6) obj. 1 iterations 32
Cbc0038I Pass  62: (46.39 seconds) suminf.    2.28527 (14) obj. 1 iterations 182
Cbc0038I Pass  63: (46.52 seconds) suminf.    1.80000 (9) obj. 1 iterations 164
Cbc0038I Pass  64: (46.80 seconds) suminf.    3.00000 (13) obj. 1 iterations 103
Cbc0038I Pass  65: (46.90 seconds) suminf.    2.48217 (10) obj. 1 iterations 80
Cbc0038I Pass  66: (46.98 seconds) suminf.    2.06667 (9) obj. 1 iterations 8
Cbc0038I Pass  67: (47.13 seconds) suminf.    2.93178 (10) obj. 1 iterations 168
Cbc0038I Pass  68: (47.27 seconds) suminf.    2.74574 (18) obj. 1 iterations 196
Cbc0038I Pass  69: (47.42 seconds) suminf.    3.59783 (18) obj. 1 iterations 117
Cbc0038I Pass  70: (47.60 seconds) suminf.    2.80000 (11) obj. 1 iterations 117
Cbc0038I Pass  71: (47.68 seconds) suminf.    2.59070 (9) obj. 1 iterations 10
Cbc0038I Pass  72: (47.75 seconds) suminf.    1.80000 (7) obj. 1 iterations 11
Cbc0038I Pass  73: (47.82 seconds) suminf.    1.80000 (7) obj. 1 iterations 10
Cbc0038I Pass  74: (47.89 seconds) suminf.    1.80000 (5) obj. 1 iterations 13
Cbc0038I Pass  75: (47.97 seconds) suminf.    1.80000 (7) obj. 1 iterations 18
Cbc0038I Pass  76: (48.21 seconds) suminf.    3.05271 (12) obj. 1 iterations 187
Cbc0038I Pass  77: (48.33 seconds) suminf.    1.66667 (6) obj. 1 iterations 182
Cbc0038I Pass  78: (48.40 seconds) suminf.    1.79070 (7) obj. 1 iterations 33
Cbc0038I Pass  79: (48.47 seconds) suminf.    1.66667 (6) obj. 1 iterations 37
Cbc0038I Pass  80: (48.61 seconds) suminf.    5.32558 (21) obj. 1 iterations 180
Cbc0038I Pass  81: (48.99 seconds) suminf.    1.23256 (13) obj. 1 iterations 148
Cbc0038I Pass  82: (49.05 seconds) suminf.    1.23256 (21) obj. 1 iterations 11
Cbc0038I Pass  83: (49.25 seconds) suminf.    1.88372 (12) obj. 1 iterations 73
Cbc0038I Pass  84: (49.46 seconds) suminf.    1.88372 (12) obj. 1 iterations 53
Cbc0038I Pass  85: (49.60 seconds) suminf.    1.83721 (11) obj. 1 iterations 42
Cbc0038I Pass  86: (49.79 seconds) suminf.    1.83721 (12) obj. 1 iterations 46
Cbc0038I Pass  87: (49.92 seconds) suminf.    1.88372 (11) obj. 1 iterations 40
Cbc0038I Pass  88: (50.09 seconds) suminf.    3.60465 (11) obj. 1 iterations 149
Cbc0038I Pass  89: (50.23 seconds) suminf.    2.83333 (7) obj. 1 iterations 172
Cbc0038I Pass  90: (50.29 seconds) suminf.    2.66667 (7) obj. 1 iterations 4
Cbc0038I Pass  91: (50.36 seconds) suminf.    2.67132 (8) obj. 1 iterations 37
Cbc0038I Pass  92: (50.43 seconds) suminf.    2.46667 (8) obj. 1 iterations 23
Cbc0038I Pass  93: (50.50 seconds) suminf.    2.72868 (8) obj. 1 iterations 41
Cbc0038I Pass  94: (50.59 seconds) suminf.    2.66667 (10) obj. 1 iterations 28
Cbc0038I Pass  95: (50.67 seconds) suminf.    2.66667 (10) obj. 1 iterations 38
Cbc0038I Pass  96: (50.75 seconds) suminf.    2.66667 (7) obj. 1 iterations 51
Cbc0038I Pass  97: (50.82 seconds) suminf.    2.67132 (8) obj. 1 iterations 40
Cbc0038I Pass  98: (50.89 seconds) suminf.    2.46667 (8) obj. 1 iterations 29
Cbc0038I Pass  99: (50.97 seconds) suminf.    2.72868 (8) obj. 1 iterations 37
Cbc0038I Pass 100: (51.10 seconds) suminf.    6.62791 (19) obj. 1 iterations 183
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5280 integers at bound fixed and 1 continuous
Cbc0038I Full problem 3252 rows 5913 columns, reduced to 585 rows 568 columns
Cbc0038I Mini branch and bound did not improve solution (53.37 seconds)
Cbc0038I Full problem 3253 rows 5913 columns, reduced to 3253 rows 5913 columns - too large
Cbc0038I After 55.52 seconds - Feasibility pump exiting - took 21.87 seconds
Cbc0031I 21 added rows had average density of 413.42857
Cbc0013I At root node, 21 cuts changed objective from 0.5 to 0.5 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 49.3 elements, 2 column cuts (2 active)  in 5.529 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 85 row cuts average 950.7 elements, 0 column cuts (0 active)  in 3.803 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 298 row cuts average 410.2 elements, 0 column cuts (0 active)  in 26.088 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 15 row cuts average 902.7 elements, 0 column cuts (0 active)  in 2.746 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 30 row cuts average 176.9 elements, 0 column cuts (0 active)  in 2.070 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 38 row cuts average 130.1 elements, 0 column cuts (0 active)  in 0.747 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0.5 (102.05 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 0.5 (109.12 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 0.5 (115.71 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 0.5 (120.72 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 0.5 (124.50 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 0.5 (128.07 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 0.5 (130.52 seconds)
Cbc0010I After 8 nodes, 7 on tree, 1e+50 best solution, best possible 0.5 (131.44 seconds)
Cbc0010I After 12 nodes, 7 on tree, 1e+50 best solution, best possible 0.5 (132.26 seconds)
Cbc0010I After 16 nodes, 6 on tree, 1e+50 best solution, best possible 0.5 (134.59 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible 0.5 (138.18 seconds)
Cbc0010I After 19 nodes, 6 on tree, 1e+50 best solution, best possible 0.5 (140.02 seconds)
Cbc0010I After 20 nodes, 7 on tree, 1e+50 best solution, best possible 0.5 (140.75 seconds)
Cbc0010I After 25 nodes, 8 on tree, 1e+50 best solution, best possible 0.5 (141.69 seconds)
Cbc0010I After 26 nodes, 9 on tree, 1e+50 best solution, best possible 0.5 (143.57 seconds)
Cbc0010I After 30 nodes, 9 on tree, 1e+50 best solution, best possible 0.5 (144.30 seconds)
Cbc0010I After 34 nodes, 11 on tree, 1e+50 best solution, best possible 0.5 (146.56 seconds)
Cbc0010I After 38 nodes, 11 on tree, 1e+50 best solution, best possible 0.5 (147.35 seconds)
Cbc0010I After 41 nodes, 12 on tree, 1e+50 best solution, best possible 0.5 (148.11 seconds)
Cbc0010I After 45 nodes, 10 on tree, 1e+50 best solution, best possible 0.5 (150.49 seconds)
Cbc0004I Integer solution of 0.5 found after 2363 iterations and 47 nodes (150.94 seconds)
Cbc0001I Search completed - best objective 0.5, took 2363 iterations and 47 nodes (150.95 seconds)
Cbc0032I Strong branching done 206 times (1452 iterations), fathomed 5 nodes and fixed 19 variables
Cbc0035I Maximum depth 20, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.5 to 0.5
Probing was tried 28 times and created 120 cuts of which 0 were active after adding rounds of cuts (5.78101 seconds)
Gomory was tried 28 times and created 85 cuts of which 0 were active after adding rounds of cuts (5.0149 seconds)
Knapsack was tried 28 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.839069 seconds)
liftKnapsack was tried 28 times and created 553 cuts of which 0 were active after adding rounds of cuts (56.2561 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013373 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.050559 seconds)
MixedIntegerRounding2 was tried 10 times and created 15 cuts of which 0 were active after adding rounds of cuts (2.74594 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.112517 seconds)
TwoMirCuts was tried 10 times and created 30 cuts of which 0 were active after adding rounds of cuts (2.0701 seconds)
ZeroHalf was tried 10 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.747296 seconds)

Result - Optimal solution found
Objective value:                0.5
Enumerated nodes:               47
Total iterations:               2363
Time (CPU seconds):             151.293
Time (Wallclock seconds):       151.658
Total time (CPU seconds):       151.735   (Wallclock seconds):       152.056
