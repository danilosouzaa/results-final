Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/f2gap401600.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/f2gap401600.txt -quit (default strategy 1)
At line 2 NAME          f2gap401600
At line 3 ROWS
At line 45 COLUMNS
At line 4841 RHS
At line 4882 BOUNDS
At line 6483 ENDATA
Problem f2gap401600 has 40 rows, 1600 columns and 3200 elements
Coin0008I f2gap401600 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 82274.2 - 0.043959 seconds
Cgl0004I processed model has 40 rows, 1600 columns (1600 integer (1600 of which binary)) and 3200 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 0.031%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 29 integers unsatisfied sum - 1.19002
Cbc0038I Solution found of 82307
Cbc0038I Before mini branch and bound, 1571 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 1600 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.87 seconds)
Cbc0038I Round again with cutoff of 82302.8
Cbc0038I Pass   1: suminf.    0.04372 (5) obj. 82302.8 iterations 85
Cbc0038I Pass   2: suminf.    0.11237 (6) obj. 82298.3 iterations 18
Cbc0038I Pass   3: suminf.    5.96025 (34) obj. 82302.8 iterations 83
Cbc0038I Pass   4: suminf.    2.10184 (32) obj. 82302.8 iterations 41
Cbc0038I Pass   5: suminf.    1.01490 (35) obj. 82302.8 iterations 28
Cbc0038I Pass   6: suminf.    3.57288 (31) obj. 82301.3 iterations 42
Cbc0038I Pass   7: suminf.    1.28973 (29) obj. 82302.8 iterations 61
Cbc0038I Pass   8: suminf.    0.66888 (28) obj. 82302.8 iterations 66
Cbc0038I Pass   9: suminf.    0.75835 (29) obj. 82302.8 iterations 33
Cbc0038I Pass  10: suminf.    3.04217 (34) obj. 82302.8 iterations 60
Cbc0038I Pass  11: suminf.    4.76347 (34) obj. 82302.8 iterations 57
Cbc0038I Pass  12: suminf.    0.97907 (28) obj. 82302.8 iterations 64
Cbc0038I Pass  13: suminf.    0.53399 (28) obj. 82302.8 iterations 45
Cbc0038I Pass  14: suminf.    0.55950 (26) obj. 82301.6 iterations 36
Cbc0038I Pass  15: suminf.    3.53339 (33) obj. 82302.8 iterations 83
Cbc0038I Pass  16: suminf.    0.57887 (25) obj. 82302.8 iterations 94
Cbc0038I Pass  17: suminf.    0.68756 (24) obj. 82296.7 iterations 42
Cbc0038I Pass  18: suminf.    0.57804 (25) obj. 82302.8 iterations 30
Cbc0038I Pass  19: suminf.    0.70351 (24) obj. 82296 iterations 34
Cbc0038I Pass  20: suminf.    3.48580 (32) obj. 82302.8 iterations 84
Cbc0038I Pass  21: suminf.    4.61714 (29) obj. 82302.8 iterations 50
Cbc0038I Pass  22: suminf.    1.82813 (26) obj. 82302.8 iterations 48
Cbc0038I Pass  23: suminf.    0.60072 (24) obj. 82302.8 iterations 73
Cbc0038I Pass  24: suminf.    0.87235 (24) obj. 82302.8 iterations 48
Cbc0038I Pass  25: suminf.    3.79043 (31) obj. 82302.8 iterations 68
Cbc0038I Pass  26: suminf.    1.13694 (28) obj. 82293.4 iterations 39
Cbc0038I Pass  27: suminf.    0.90237 (29) obj. 82295.6 iterations 31
Cbc0038I Pass  28: suminf.    3.06499 (30) obj. 82302.8 iterations 32
Cbc0038I Pass  29: suminf.    0.70321 (25) obj. 82300.6 iterations 66
Cbc0038I Pass  30: suminf.    2.17560 (30) obj. 82302.8 iterations 34
Cbc0038I Before mini branch and bound, 1301 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 1600 columns, reduced to 36 rows 267 columns
Cbc0038I Mini branch and bound did not improve solution (81.01 seconds)
Cbc0038I Round again with cutoff of 82297.1
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  30: suminf.    0.10313 (9) obj. 82297.1 iterations 5
Cbc0038I Pass  31: suminf.    0.25685 (13) obj. 82288.8 iterations 25
Cbc0038I Pass  32: suminf.    2.93477 (33) obj. 82297.1 iterations 72
Cbc0038I Pass  33: suminf.    0.69782 (27) obj. 82289.7 iterations 38
Cbc0038I Pass  34: suminf.    3.33240 (27) obj. 82297.1 iterations 70
Cbc0038I Pass  35: suminf.    1.78378 (25) obj. 82297.1 iterations 33
Cbc0038I Pass  36: suminf.    0.53571 (24) obj. 82297.1 iterations 54
Cbc0038I Pass  37: suminf.    0.66030 (21) obj. 82297.1 iterations 46
Cbc0038I Pass  38: suminf.    3.44226 (34) obj. 82297.1 iterations 61
Cbc0038I Pass  39: suminf.    3.28479 (36) obj. 82297.1 iterations 54
Cbc0038I Pass  40: suminf.    0.58138 (24) obj. 82292.9 iterations 53
Cbc0038I Pass  41: suminf.    2.97292 (27) obj. 82297.1 iterations 32
Cbc0038I Pass  42: suminf.    0.76379 (19) obj. 82297.1 iterations 61
Cbc0038I Pass  43: suminf.    3.54744 (33) obj. 82297.1 iterations 72
Cbc0038I Pass  44: suminf.    1.55522 (29) obj. 82289.2 iterations 35
Cbc0038I Pass  45: suminf.    4.01652 (32) obj. 82297.1 iterations 30
Cbc0038I Pass  46: suminf.    2.85456 (30) obj. 82297.1 iterations 31
Cbc0038I Pass  47: suminf.    2.79236 (29) obj. 82297.1 iterations 13
Cbc0038I Pass  48: suminf.    2.55328 (28) obj. 82297.1 iterations 80
Cbc0038I Pass  49: suminf.    0.67648 (31) obj. 82297.1 iterations 46
Cbc0038I Pass  50: suminf.    0.88920 (27) obj. 82294.1 iterations 53
Cbc0038I Pass  51: suminf.    0.62200 (24) obj. 82297.1 iterations 45
Cbc0038I Pass  52: suminf.    0.76278 (25) obj. 82295.9 iterations 43
Cbc0038I Pass  53: suminf.    2.19329 (33) obj. 82297.1 iterations 56
Cbc0038I Pass  54: suminf.    0.57700 (25) obj. 82297.1 iterations 82
Cbc0038I Pass  55: suminf.    0.73062 (26) obj. 82297.1 iterations 56
Cbc0038I Pass  56: suminf.    3.15608 (35) obj. 82297.1 iterations 66
Cbc0038I Pass  57: suminf.    2.44392 (30) obj. 82297.1 iterations 36
Cbc0038I Pass  58: suminf.    2.89573 (27) obj. 82297.1 iterations 58
Cbc0038I Pass  59: suminf.    1.01188 (24) obj. 82297.1 iterations 62
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1303 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 1600 columns, reduced to 39 rows 296 columns
Cbc0038I Mini branch and bound did not improve solution (192.05 seconds)
Cbc0038I After 192.05 seconds - Feasibility pump exiting with objective of 82307 - took 374.69 seconds
Cbc0012I Integer solution of 82307 found by feasibility pump after 0 iterations and 0 nodes (192.22 seconds)
Cbc0031I 47 added rows had average density of 83.617021
Cbc0013I At root node, 123 cuts changed objective from 82274.237 to 82306.513 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 231.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 41 row cuts average 71.7 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 21 row cuts average 80.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 29 row cuts average 156.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 10 row cuts average 82.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective 82307, took 366 iterations and 0 nodes (196.12 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 82274.2 to 82306.5
Probing was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014977 seconds)
Gomory was tried 1 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.01787 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000147 seconds)
liftKnapsack was tried 1 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.076727 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (4.7e-05 seconds)
OddWheel was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (6.3e-05 seconds)
MixedIntegerRounding2 was tried 1 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.005598 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00016 seconds)
TwoMirCuts was tried 1 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.01504 seconds)
ZeroHalf was tried 1 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.00293 seconds)

Result - Optimal solution found
Objective value:                82307
Enumerated nodes:               0
Total iterations:               366
Time (CPU seconds):             382.922
Time (Wallclock seconds):       196.729
Total time (CPU seconds):       382.944   (Wallclock seconds):       196.752
