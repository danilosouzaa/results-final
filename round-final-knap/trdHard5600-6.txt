Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/trdHard5600-6.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/trdHard5600-6.txt -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 5034 COLUMNS
At line 17004 RHS
At line 17207 BOUNDS
At line 21970 ENDATA
Problem no_name has 5023 rows, 4762 columns and 22895 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -24854.9 - 3.33313 seconds
Cgl0003I 15 fixed, 0 tightened bounds, 227 strengthened rows, 18 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 111 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 93 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 70 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0004I processed model has 4772 rows, 4323 columns (4323 integer (4282 of which binary)) and 22401 elements
Coin3009W Conflict graph built in 0.053 seconds, density: 0.146%
Cgl0015I Clique Strengthening extended 7 cliques, 11 were dominated
After applying Clique Strengthening continuous objective value is -23853.1
Cbc0038I Initial state - 322 integers unsatisfied sum - 130.532
Cbc0038I Pass   1: (10.05 seconds) suminf.   26.76573 (115) obj. -13972.3 iterations 1261
Cbc0038I Pass   2: (11.21 seconds) suminf.   25.31773 (111) obj. -13999.5 iterations 1757
Cbc0038I Pass   3: (11.88 seconds) suminf.   24.34783 (114) obj. -13693.2 iterations 933
Cbc0038I Pass   4: (12.64 seconds) suminf.   23.28525 (109) obj. -13589.9 iterations 1073
Cbc0038I Pass   5: (12.69 seconds) suminf.   17.17647 (115) obj. -11650.4 iterations 75
Cbc0038I Pass   6: (12.88 seconds) suminf.   12.91594 (98) obj. -11232.8 iterations 266
Cbc0038I Pass   7: (12.92 seconds) suminf.   12.91594 (98) obj. -11232.8 iterations 49
Cbc0038I Pass   8: (13.80 seconds) suminf.   30.22917 (155) obj. -12054.5 iterations 1271
Cbc0038I Pass   9: (14.61 seconds) suminf.   19.22222 (104) obj. -11936.2 iterations 1323
Cbc0038I Pass  10: (14.84 seconds) suminf.   19.22222 (104) obj. -11936.2 iterations 351
Cbc0038I Pass  11: (15.51 seconds) suminf.   37.46914 (145) obj. -12800.1 iterations 1063
Cbc0038I Pass  12: (16.44 seconds) suminf.   29.40476 (114) obj. -13182.8 iterations 1433
Cbc0038I Pass  13: (16.51 seconds) suminf.   13.32323 (130) obj. -9290.04 iterations 96
Cbc0038I Pass  14: (16.72 seconds) suminf.    8.95868 (94) obj. -8895.04 iterations 291
Cbc0038I Pass  15: (16.78 seconds) suminf.    3.22727 (100) obj. -7593.45 iterations 94
Cbc0038I Pass  16: (16.91 seconds) suminf.    3.00000 (86) obj. -7590.78 iterations 155
Cbc0038I Pass  17: (17.48 seconds) suminf.    3.00000 (86) obj. -7590.78 iterations 855
Cbc0038I Pass  18: (18.39 seconds) suminf.    3.90566 (140) obj. -7148.88 iterations 1422
Cbc0038I Pass  19: (19.22 seconds) suminf.    3.02439 (87) obj. -7166.6 iterations 1467
Cbc0038I Pass  20: (19.38 seconds) suminf.    3.00000 (86) obj. -6910.97 iterations 204
Cbc0038I Pass  21: (19.47 seconds) suminf.    3.00000 (86) obj. -6910.97 iterations 100
Cbc0038I Pass  22: (19.65 seconds) suminf.    3.00000 (86) obj. -6910.97 iterations 187
Cbc0038I Pass  23: (20.64 seconds) suminf.    9.56098 (116) obj. 2129.17 iterations 1493
Cbc0038I Pass  24: (21.25 seconds) suminf.    6.79070 (90) obj. 2151.8 iterations 1157
Cbc0038I Pass  25: (21.90 seconds) suminf.    6.79070 (90) obj. 2151.8 iterations 940
Cbc0038I Pass  26: (22.78 seconds) suminf.   25.16245 (135) obj. -9716.7 iterations 1441
Cbc0038I Pass  27: (23.65 seconds) suminf.   19.10084 (104) obj. -10376.1 iterations 1391
Cbc0038I Pass  28: (24.14 seconds) suminf.   19.10084 (104) obj. -10376.1 iterations 724
Cbc0038I Pass  29: (24.64 seconds) suminf.   26.95054 (140) obj. -5406.95 iterations 850
Cbc0038I Pass  30: (25.48 seconds) suminf.   21.40000 (107) obj. -5511.16 iterations 1292
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3480 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 1002 rows 732 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to -9666.62 (26.19 seconds)
Cbc0038I Round again with cutoff of -11085.3
Cbc0038I Pass  30: (26.22 seconds) suminf.   26.76573 (115) obj. -13972.3 iterations 0
Cbc0038I Pass  31: (27.53 seconds) suminf.   25.31773 (111) obj. -13999.5 iterations 2173
Cbc0038I Pass  32: (28.15 seconds) suminf.   18.48104 (119) obj. -12303.7 iterations 990
Cbc0038I Pass  33: (29.03 seconds) suminf.   15.17021 (99) obj. -12004.3 iterations 1243
Cbc0038I Pass  34: (29.65 seconds) suminf.   13.55072 (104) obj. -11665 iterations 920
Cbc0038I Pass  35: (30.34 seconds) suminf.   13.04638 (99) obj. -11613.7 iterations 979
Cbc0038I Pass  36: (30.45 seconds) suminf.   13.47508 (102) obj. -11085.3 iterations 143
Cbc0038I Pass  37: (30.52 seconds) suminf.   11.01473 (101) obj. -11085.3 iterations 98
Cbc0038I Pass  38: (30.55 seconds) suminf.   10.94806 (101) obj. -11085.3 iterations 11
Cbc0038I Pass  39: (30.58 seconds) suminf.   10.94806 (101) obj. -11085.3 iterations 6
Cbc0038I Pass  40: (30.61 seconds) suminf.   10.94806 (101) obj. -11085.3 iterations 8
Cbc0038I Pass  41: (31.72 seconds) suminf.   26.49828 (148) obj. -11085.3 iterations 1502
Cbc0038I Pass  42: (32.72 seconds) suminf.   17.20115 (102) obj. -11334.1 iterations 1557
Cbc0038I Pass  43: (33.00 seconds) suminf.   17.43260 (106) obj. -11085.3 iterations 371
Cbc0038I Pass  44: (33.32 seconds) suminf.   15.34483 (106) obj. -11085.3 iterations 431
Cbc0038I Pass  45: (33.72 seconds) suminf.   15.34483 (106) obj. -11085.3 iterations 554
Cbc0038I Pass  46: (34.92 seconds) suminf.   36.93389 (160) obj. -11085.3 iterations 1760
Cbc0038I Pass  47: (35.69 seconds) suminf.   25.77752 (118) obj. -11347.3 iterations 1347
Cbc0038I Pass  48: (36.04 seconds) suminf.   25.39845 (122) obj. -11085.3 iterations 482
Cbc0038I Pass  49: (36.38 seconds) suminf.   23.94526 (122) obj. -11085.3 iterations 443
Cbc0038I Pass  50: (36.44 seconds) suminf.   24.05275 (121) obj. -11085.3 iterations 94
Cbc0038I Pass  51: (36.52 seconds) suminf.   24.05275 (121) obj. -11085.3 iterations 86
Cbc0038I Pass  52: (37.09 seconds) suminf.   24.05275 (121) obj. -11085.3 iterations 829
Cbc0038I Pass  53: (37.40 seconds) suminf.   35.35714 (138) obj. -11783.9 iterations 548
Cbc0038I Pass  54: (38.22 seconds) suminf.   27.36009 (112) obj. -11708 iterations 1244
Cbc0038I Pass  55: (38.93 seconds) suminf.   26.09171 (119) obj. -11085.3 iterations 926
Cbc0038I Pass  56: (39.63 seconds) suminf.   23.54120 (116) obj. -11085.3 iterations 941
Cbc0038I Pass  57: (40.16 seconds) suminf.   23.54120 (116) obj. -11085.3 iterations 747
Cbc0038I Pass  58: (40.51 seconds) suminf.   45.07485 (144) obj. -13505.8 iterations 597
Cbc0038I Pass  59: (41.48 seconds) suminf.   37.90168 (123) obj. -13731.2 iterations 1536
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3603 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 866 rows 619 columns
Cbc0038I Mini branch and bound improved solution from -9666.62 to -9784.59 (42.01 seconds)
Cbc0038I Round again with cutoff of -13638.8
Cbc0038I Pass  59: (42.03 seconds) suminf.   26.76573 (115) obj. -13972.3 iterations 0
Cbc0038I Pass  60: (43.56 seconds) suminf.   25.31773 (111) obj. -13999.5 iterations 2545
Cbc0038I Pass  61: (44.32 seconds) suminf.   24.47903 (117) obj. -13638.8 iterations 1022
Cbc0038I Pass  62: (45.15 seconds) suminf.   23.26187 (115) obj. -13638.8 iterations 1098
Cbc0038I Pass  63: (45.81 seconds) suminf.   23.26187 (115) obj. -13638.8 iterations 894
Cbc0038I Pass  64: (46.84 seconds) suminf.   26.57575 (138) obj. -13638.8 iterations 1408
Cbc0038I Pass  65: (47.94 seconds) suminf.   20.87142 (112) obj. -13638.8 iterations 1550
Cbc0038I Pass  66: (48.15 seconds) suminf.   11.31602 (113) obj. -14424.4 iterations 318
Cbc0038I Pass  67: (48.27 seconds) suminf.    8.76335 (95) obj. -14234.4 iterations 169
Cbc0038I Pass  68: (48.88 seconds) suminf.    8.13932 (101) obj. -13638.8 iterations 872
Cbc0038I Pass  69: (49.77 seconds) suminf.    6.59121 (122) obj. -13638.8 iterations 1249
Cbc0038I Pass  70: (50.41 seconds) suminf.    7.79963 (99) obj. -13638.8 iterations 875
Cbc0038I Pass  71: (50.86 seconds) suminf.    7.04272 (94) obj. -13638.8 iterations 633
Cbc0038I Pass  72: (51.62 seconds) suminf.    6.93667 (94) obj. -13865.1 iterations 1071
Cbc0038I Pass  73: (52.14 seconds) suminf.    6.86691 (93) obj. -13844.2 iterations 765
Cbc0038I Pass  74: (52.22 seconds) suminf.    8.24076 (97) obj. -13638.8 iterations 107
Cbc0038I Pass  75: (52.32 seconds) suminf.    8.24076 (97) obj. -13638.8 iterations 101
Cbc0038I Pass  76: (53.05 seconds) suminf.    8.21837 (97) obj. -13638.8 iterations 840
Cbc0038I Pass  77: (53.94 seconds) suminf.    7.02831 (128) obj. -13638.8 iterations 1118
Cbc0038I Pass  78: (54.44 seconds) suminf.    7.55807 (121) obj. -13638.8 iterations 634
Cbc0038I Pass  79: (55.86 seconds) suminf.   21.53787 (127) obj. -13638.8 iterations 1958
Cbc0038I Pass  80: (56.90 seconds) suminf.   16.17870 (104) obj. -13638.8 iterations 1616
Cbc0038I Pass  81: (57.07 seconds) suminf.   16.17870 (104) obj. -13638.8 iterations 209
Cbc0038I Pass  82: (57.89 seconds) suminf.   13.63870 (100) obj. -13638.8 iterations 1118
Cbc0038I Pass  83: (58.72 seconds) suminf.   13.24638 (99) obj. -13678.3 iterations 1249
Cbc0038I Pass  84: (59.14 seconds) suminf.   13.38801 (100) obj. -13638.8 iterations 590
Cbc0038I Pass  85: (59.61 seconds) suminf.   12.99569 (99) obj. -13678.3 iterations 710
Cbc0038I Pass  86: (60.25 seconds) suminf.   13.13029 (103) obj. -13638.8 iterations 866
Cbc0038I Pass  87: (60.86 seconds) suminf.   33.50050 (151) obj. -13638.8 iterations 944
Cbc0038I Pass  88: (61.90 seconds) suminf.   23.30254 (109) obj. -15592.8 iterations 1693
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3789 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 668 rows 438 columns
Cbc0038I Mini branch and bound improved solution from -9784.59 to -11520.6 (62.06 seconds)
Cbc0038I Round again with cutoff of -16703.1
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  88: (62.09 seconds) suminf.   27.85318 (121) obj. -16703.1 iterations 2
Cbc0038I Pass  89: (63.20 seconds) suminf.   25.31773 (111) obj. -17334.8 iterations 1773
Cbc0038I Pass  90: (63.97 seconds) suminf.   23.26018 (117) obj. -16703.1 iterations 1069
Cbc0038I Pass  91: (65.15 seconds) suminf.   22.43745 (117) obj. -16703.1 iterations 1607
Cbc0038I Pass  92: (65.97 seconds) suminf.   22.43343 (114) obj. -16703.1 iterations 1192
Cbc0038I Pass  93: (66.85 seconds) suminf.   41.50000 (163) obj. -16787.3 iterations 1309
Cbc0038I Pass  94: (67.96 seconds) suminf.   27.50640 (113) obj. -16869.4 iterations 1962
Cbc0038I Pass  95: (68.56 seconds) suminf.   27.50640 (113) obj. -16869.4 iterations 944
Cbc0038I Pass  96: (69.08 seconds) suminf.   37.02379 (138) obj. -17955.7 iterations 935
Cbc0038I Pass  97: (70.02 seconds) suminf.   31.29125 (117) obj. -17755.5 iterations 1489
Cbc0038I Pass  98: (70.08 seconds) suminf.   28.75908 (127) obj. -16703.1 iterations 116
Cbc0038I Pass  99: (70.30 seconds) suminf.   27.04005 (117) obj. -16703.1 iterations 355
Cbc0038I Pass 100: (70.33 seconds) suminf.   27.04005 (117) obj. -16703.1 iterations 5
Cbc0038I Pass 101: (70.90 seconds) suminf.   27.04005 (117) obj. -16703.1 iterations 756
Cbc0038I Pass 102: (71.62 seconds) suminf.   35.99511 (148) obj. -16703.1 iterations 1125
Cbc0038I Pass 103: (72.62 seconds) suminf.   30.14362 (126) obj. -16703.1 iterations 1589
Cbc0038I Pass 104: (72.65 seconds) suminf.   30.14362 (126) obj. -16703.1 iterations 9
Cbc0038I Pass 105: (73.31 seconds) suminf.   30.14621 (123) obj. -16703.1 iterations 943
Cbc0038I Pass 106: (74.04 seconds) suminf.   39.11180 (148) obj. -16703.1 iterations 1176
Cbc0038I Pass 107: (74.93 seconds) suminf.   29.91418 (116) obj. -16703.1 iterations 1447
Cbc0038I Pass 108: (75.63 seconds) suminf.   30.39670 (120) obj. -16703.1 iterations 1114
Cbc0038I Pass 109: (76.50 seconds) suminf.   29.85685 (119) obj. -16703.1 iterations 1103
Cbc0038I Pass 110: (76.88 seconds) suminf.   29.61094 (115) obj. -16756.6 iterations 557
Cbc0038I Pass 111: (77.57 seconds) suminf.   29.85685 (119) obj. -16703.1 iterations 929
Cbc0038I Pass 112: (78.06 seconds) suminf.   35.93401 (139) obj. -16703.1 iterations 756
Cbc0038I Pass 113: (78.99 seconds) suminf.   29.61094 (115) obj. -16864.3 iterations 1426
Cbc0038I Pass 114: (79.64 seconds) suminf.   30.73222 (120) obj. -16703.1 iterations 955
Cbc0038I Pass 115: (80.44 seconds) suminf.   30.73222 (120) obj. -16703.1 iterations 987
Cbc0038I Pass 116: (81.10 seconds) suminf.   30.10570 (119) obj. -16703.1 iterations 859
Cbc0038I Pass 117: (81.80 seconds) suminf.   29.62091 (122) obj. -16703.1 iterations 878
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3715 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 745 rows 496 columns
Cbc0038I Mini branch and bound did not improve solution (81.92 seconds)
Cbc0038I After 81.92 seconds - Feasibility pump exiting with objective of -11520.6 - took 72.49 seconds
Cbc0012I Integer solution of -11520.595 found by feasibility pump after 0 iterations and 0 nodes (81.92 seconds)
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 0 rows 0 columns
Cbc0031I 460 added rows had average density of 4.0695652
Cbc0013I At root node, 460 cuts changed objective from -23853.071 to -14705.326 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 1474 row cuts average 2.5 elements, 1 column cuts (458 active)  in 3.869 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 536 row cuts average 300.1 elements, 0 column cuts (0 active)  in 1.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 66 row cuts average 121.9 elements, 0 column cuts (0 active)  in 1.108 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 6 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 7 row cuts average 6.0 elements, 0 column cuts (0 active)  in 1.308 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 2 row cuts average 189.5 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 167 row cuts average 59.8 elements, 0 column cuts (0 active)  in 0.606 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -11520.595 best solution, best possible -14705.326 (96.80 seconds)
Cbc0010I After 1 nodes, 2 on tree, -11520.595 best solution, best possible -14705.326 (97.90 seconds)
Cbc0010I After 2 nodes, 3 on tree, -11520.595 best solution, best possible -14705.326 (98.79 seconds)
Cbc0010I After 3 nodes, 4 on tree, -11520.595 best solution, best possible -14705.326 (99.50 seconds)
Cbc0010I After 5 nodes, 6 on tree, -11520.595 best solution, best possible -14705.326 (100.54 seconds)
Cbc0010I After 7 nodes, 8 on tree, -11520.595 best solution, best possible -14705.326 (101.54 seconds)
Cbc0010I After 8 nodes, 8 on tree, -11520.595 best solution, best possible -14705.326 (102.26 seconds)
Cbc0012I Integer solution of -13296.595 found by rounding after 8249 iterations and 10 nodes (102.68 seconds)
Cbc0010I After 11 nodes, 8 on tree, -13296.595 best solution, best possible -14705.326 (103.37 seconds)
Cbc0010I After 13 nodes, 10 on tree, -13296.595 best solution, best possible -14705.326 (104.57 seconds)
Cbc0004I Integer solution of -13320.333 found after 8554 iterations and 14 nodes (104.65 seconds)
Cbc0010I After 17 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (106.08 seconds)
Cbc0010I After 19 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (107.01 seconds)
Cbc0010I After 21 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (107.77 seconds)
Cbc0010I After 25 nodes, 8 on tree, -13320.333 best solution, best possible -14705.326 (108.64 seconds)
Cbc0010I After 27 nodes, 8 on tree, -13320.333 best solution, best possible -14705.326 (109.39 seconds)
Cbc0010I After 30 nodes, 7 on tree, -13320.333 best solution, best possible -14705.326 (110.16 seconds)
Cbc0010I After 32 nodes, 7 on tree, -13320.333 best solution, best possible -14705.326 (110.88 seconds)
Cbc0010I After 36 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (111.67 seconds)
Cbc0010I After 41 nodes, 8 on tree, -13320.333 best solution, best possible -14705.326 (112.99 seconds)
Cbc0010I After 46 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (113.85 seconds)
Cbc0010I After 50 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (114.82 seconds)
Cbc0010I After 54 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (115.56 seconds)
Cbc0010I After 59 nodes, 11 on tree, -13320.333 best solution, best possible -14705.326 (116.31 seconds)
Cbc0010I After 66 nodes, 11 on tree, -13320.333 best solution, best possible -14705.326 (117.10 seconds)
Cbc0010I After 72 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (117.97 seconds)
Cbc0010I After 76 nodes, 11 on tree, -13320.333 best solution, best possible -14705.326 (118.78 seconds)
Cbc0010I After 85 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (119.49 seconds)
Cbc0010I After 94 nodes, 11 on tree, -13320.333 best solution, best possible -14705.326 (120.23 seconds)
Cbc0010I After 104 nodes, 8 on tree, -13320.333 best solution, best possible -14705.326 (121.14 seconds)
Cbc0010I After 108 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (121.88 seconds)
Cbc0010I After 115 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (122.66 seconds)
Cbc0010I After 123 nodes, 11 on tree, -13320.333 best solution, best possible -14705.326 (123.48 seconds)
Cbc0010I After 130 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (124.22 seconds)
Cbc0010I After 133 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (125.19 seconds)
Cbc0010I After 139 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (125.93 seconds)
Cbc0010I After 147 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (126.79 seconds)
Cbc0010I After 154 nodes, 11 on tree, -13320.333 best solution, best possible -14705.326 (127.50 seconds)
Cbc0010I After 160 nodes, 12 on tree, -13320.333 best solution, best possible -14705.326 (128.25 seconds)
Cbc0010I After 171 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (129.06 seconds)
Cbc0010I After 179 nodes, 10 on tree, -13320.333 best solution, best possible -14705.326 (129.77 seconds)
Cbc0010I After 192 nodes, 7 on tree, -13320.333 best solution, best possible -14705.326 (130.54 seconds)
Cbc0010I After 195 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (131.70 seconds)
Cbc0010I After 199 nodes, 11 on tree, -13320.333 best solution, best possible -14705.326 (132.67 seconds)
Cbc0010I After 203 nodes, 13 on tree, -13320.333 best solution, best possible -14705.326 (133.69 seconds)
Cbc0010I After 207 nodes, 15 on tree, -13320.333 best solution, best possible -14705.326 (134.66 seconds)
Cbc0010I After 211 nodes, 17 on tree, -13320.333 best solution, best possible -14705.326 (135.62 seconds)
Cbc0010I After 215 nodes, 19 on tree, -13320.333 best solution, best possible -14705.326 (136.93 seconds)
Cbc0010I After 217 nodes, 20 on tree, -13320.333 best solution, best possible -14705.326 (137.87 seconds)
Cbc0010I After 220 nodes, 20 on tree, -13320.333 best solution, best possible -14705.326 (139.05 seconds)
Cbc0010I After 222 nodes, 21 on tree, -13320.333 best solution, best possible -14705.326 (139.90 seconds)
Cbc0010I After 226 nodes, 21 on tree, -13320.333 best solution, best possible -14705.326 (142.44 seconds)
Cbc0010I After 228 nodes, 23 on tree, -13320.333 best solution, best possible -14705.326 (143.67 seconds)
Cbc0010I After 229 nodes, 23 on tree, -13320.333 best solution, best possible -14705.326 (144.39 seconds)
Cbc0010I After 232 nodes, 23 on tree, -13320.333 best solution, best possible -14705.326 (145.11 seconds)
Cbc0010I After 234 nodes, 24 on tree, -13320.333 best solution, best possible -14705.326 (146.01 seconds)
Cbc0010I After 236 nodes, 26 on tree, -13320.333 best solution, best possible -14705.326 (147.07 seconds)
Cbc0010I After 240 nodes, 24 on tree, -13320.333 best solution, best possible -14705.326 (148.04 seconds)
Cbc0010I After 242 nodes, 25 on tree, -13320.333 best solution, best possible -14705.326 (148.75 seconds)
Cbc0010I After 244 nodes, 26 on tree, -13320.333 best solution, best possible -14705.326 (149.67 seconds)
Cbc0010I After 247 nodes, 27 on tree, -13320.333 best solution, best possible -14705.326 (150.39 seconds)
Cbc0010I After 249 nodes, 28 on tree, -13320.333 best solution, best possible -14705.326 (151.17 seconds)
Cbc0010I After 252 nodes, 29 on tree, -13320.333 best solution, best possible -14705.326 (152.12 seconds)
Cbc0010I After 257 nodes, 29 on tree, -13320.333 best solution, best possible -14705.326 (153.18 seconds)
Cbc0010I After 259 nodes, 29 on tree, -13320.333 best solution, best possible -14705.326 (153.91 seconds)
Cbc0010I After 267 nodes, 25 on tree, -13320.333 best solution, best possible -14705.326 (155.01 seconds)
Cbc0010I After 270 nodes, 26 on tree, -13320.333 best solution, best possible -14705.326 (155.76 seconds)
Cbc0010I After 274 nodes, 25 on tree, -13320.333 best solution, best possible -14705.326 (156.80 seconds)
Cbc0010I After 279 nodes, 22 on tree, -13320.333 best solution, best possible -14705.326 (157.55 seconds)
Cbc0010I After 281 nodes, 23 on tree, -13320.333 best solution, best possible -14705.326 (158.42 seconds)
Cbc0010I After 285 nodes, 23 on tree, -13320.333 best solution, best possible -14705.326 (159.35 seconds)
Cbc0010I After 286 nodes, 23 on tree, -13320.333 best solution, best possible -14705.326 (160.05 seconds)
Cbc0010I After 292 nodes, 21 on tree, -13320.333 best solution, best possible -14705.326 (160.86 seconds)
Cbc0010I After 295 nodes, 20 on tree, -13320.333 best solution, best possible -14705.326 (161.61 seconds)
Cbc0010I After 297 nodes, 20 on tree, -13320.333 best solution, best possible -14705.326 (162.68 seconds)
Cbc0010I After 299 nodes, 20 on tree, -13320.333 best solution, best possible -14705.326 (163.64 seconds)
Cbc0010I After 308 nodes, 16 on tree, -13320.333 best solution, best possible -14705.326 (164.44 seconds)
Cbc0010I After 312 nodes, 14 on tree, -13320.333 best solution, best possible -14705.326 (165.38 seconds)
Cbc0010I After 314 nodes, 15 on tree, -13320.333 best solution, best possible -14705.326 (166.26 seconds)
Cbc0010I After 320 nodes, 13 on tree, -13320.333 best solution, best possible -14705.326 (167.09 seconds)
Cbc0010I After 322 nodes, 12 on tree, -13320.333 best solution, best possible -14705.326 (167.82 seconds)
Cbc0010I After 326 nodes, 11 on tree, -13320.333 best solution, best possible -14705.326 (168.55 seconds)
Cbc0010I After 329 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (169.26 seconds)
Cbc0010I After 334 nodes, 8 on tree, -13320.333 best solution, best possible -14705.326 (170.11 seconds)
Cbc0010I After 337 nodes, 9 on tree, -13320.333 best solution, best possible -14705.326 (171.12 seconds)
Cbc0010I After 341 nodes, 6 on tree, -13320.333 best solution, best possible -14705.326 (171.93 seconds)
Cbc0010I After 345 nodes, 4 on tree, -13320.333 best solution, best possible -14705.326 (173.00 seconds)
Cbc0010I After 348 nodes, 3 on tree, -13320.333 best solution, best possible -14705.326 (174.37 seconds)
Cbc0010I After 351 nodes, 2 on tree, -13320.333 best solution, best possible -14705.326 (175.20 seconds)
Cbc0010I After 352 nodes, 3 on tree, -13320.333 best solution, best possible -14705.326 (175.93 seconds)
Cbc0010I After 356 nodes, 3 on tree, -13320.333 best solution, best possible -14705.326 (177.50 seconds)
Cbc0010I After 359 nodes, 2 on tree, -13320.333 best solution, best possible -14705.326 (178.75 seconds)
Cbc0001I Search completed - best objective -13320.3333333, took 75996 iterations and 362 nodes (178.97 seconds)
Cbc0032I Strong branching done 3000 times (76090 iterations), fathomed 22 nodes and fixed 149 variables
Cbc0035I Maximum depth 42, 5031 variables fixed on reduced cost
Cuts at root node changed objective from -23853.1 to -14705.3
Probing was tried 266 times and created 2745 cuts of which 457 were active after adding rounds of cuts (5.72132 seconds)
Gomory was tried 264 times and created 592 cuts of which 0 were active after adding rounds of cuts (5.20467 seconds)
Knapsack was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.181664 seconds)
liftKnapsack was tried 264 times and created 328 cuts of which 0 were active after adding rounds of cuts (14.9636 seconds)
Clique was tried 11 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.076941 seconds)
OddWheel was tried 11 times and created 7 cuts of which 0 were active after adding rounds of cuts (1.30848 seconds)
MixedIntegerRounding2 was tried 11 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.09618 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013135 seconds)
TwoMirCuts was tried 264 times and created 169 cuts of which 0 were active after adding rounds of cuts (1.37407 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.111083 seconds)

Result - Optimal solution found
Objective value:                -13320.3333333
Enumerated nodes:               362
Total iterations:               75996
Time (CPU seconds):             179.503
Time (Wallclock seconds):       179.624
Total time (CPU seconds):       179.652   (Wallclock seconds):       179.703
