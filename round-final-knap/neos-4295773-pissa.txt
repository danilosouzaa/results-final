Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/neos-4295773-pissa.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/neos-4295773-pissa.txt -quit (default strategy 1)
At line 1 NAME          neos-4295773-pissa
At line 2 ROWS
At line 210120 COLUMNS
At line 762533 RHS
At line 826754 BOUNDS
At line 911879 ENDATA
Problem neos-4295773-pissa has 210116 rows, 85126 columns and 552408 elements
Coin0008I neos-4295773-pissa read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 19.8041 seconds
Cgl0003I 2915 fixed, 0 tightened bounds, 121369 strengthened rows, 0 substitutions
Cgl0003I 195 fixed, 0 tightened bounds, 86517 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 201 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15648 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17206 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 33676 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 55976 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24249 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10719 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5806 strengthened rows, 0 substitutions
Cgl0004I processed model has 127807 rows, 67364 columns (67362 integer (67362 of which binary)) and 637530 elements
Coin3009W Conflict graph built in 0.267 seconds, density: 0.003%
Cgl0015I Clique Strengthening extended 784 cliques, 2349 were dominated
After applying Clique Strengthening continuous objective value is 0
Cbc0038I Initial state - 1657 integers unsatisfied sum - 686.778
Cbc0038I Pass   1: (353.56 seconds) suminf.  615.86719 (2133) obj. 0.020107 iterations 5950
Cbc0038I Pass   2: (373.04 seconds) suminf.  597.62634 (2148) obj. 0.0206729 iterations 1992
Cbc0038I Pass   3: (395.03 seconds) suminf.  582.59259 (2010) obj. 0.0329741 iterations 1700
Cbc0038I Pass   4: (401.47 seconds) suminf.  578.20370 (2012) obj. 0.0333012 iterations 627
Cbc0038I Pass   5: (429.11 seconds) suminf.  566.09722 (2230) obj. 0.0432167 iterations 2229
Cbc0038I Pass   6: (438.07 seconds) suminf.  562.93704 (2344) obj. 0.0464984 iterations 698
Cbc0038I Pass   7: (440.07 seconds) suminf.  560.53704 (2349) obj. 0.0464984 iterations 314
Cbc0038I Pass   8: (442.63 seconds) suminf.  559.58519 (2361) obj. 0.0462251 iterations 265
Cbc0038I Pass   9: (445.52 seconds) suminf.  559.33519 (2368) obj. 0.0462251 iterations 266
Cbc0038I Pass  10: (453.37 seconds) suminf.  558.55741 (2392) obj. 0.0500161 iterations 683
Cbc0038I Pass  11: (454.59 seconds) suminf.  558.55741 (2391) obj. 0.0500161 iterations 160
Cbc0038I Pass  12: (464.22 seconds) suminf.  558.24510 (2337) obj. 0.0519267 iterations 775
Cbc0038I Pass  13: (465.98 seconds) suminf.  558.02451 (2345) obj. 0.0519267 iterations 223
Cbc0038I Pass  14: (469.58 seconds) suminf.  557.43803 (2337) obj. 0.0517384 iterations 317
Cbc0038I Pass  15: (470.66 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 104
Cbc0038I Pass  16: (471.22 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 33
Cbc0038I Pass  17: (471.78 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 27
Cbc0038I Pass  18: (472.55 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 47
Cbc0038I Pass  19: (473.01 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 20
Cbc0038I Pass  20: (473.47 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 21
Cbc0038I Pass  21: (473.96 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 24
Cbc0038I Pass  22: (474.45 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 25
Cbc0038I Pass  23: (474.91 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 15
Cbc0038I Pass  24: (475.34 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 6
Cbc0038I Pass  25: (475.79 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 8
Cbc0038I Pass  26: (476.23 seconds) suminf.  557.02839 (2347) obj. 0.0565848 iterations 7
Cbc0038I Pass  27: (520.22 seconds) suminf.  634.01786 (1970) obj. 0.0572218 iterations 5149
Cbc0038I Pass  28: (560.30 seconds) suminf.  572.91533 (2361) obj. 0.0584501 iterations 4523
Cbc0038I Pass  29: (572.38 seconds) suminf.  555.85408 (2527) obj. 0.0613646 iterations 1170
Cbc0038I Pass  30: (603.35 seconds) suminf.  528.85577 (1886) obj. 0.0842894 iterations 2934
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64143 integers at bound fixed and 0 continuous
Cbc0038I Full problem 126242 rows 67364 columns, reduced to 16767 rows 2260 columns
Cbc0038I Mini branch and bound did not improve solution (606.56 seconds)
Cbc0038I After 606.56 seconds - Feasibility pump exiting - took 308.12 seconds
Cbc0031I 17 added rows had average density of 193.29412
Cbc0013I At root node, 17 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 142.843 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 167 row cuts average 353.1 elements, 0 column cuts (0 active)  in 130.906 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 2.734 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 39.788 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 5.109 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 18 row cuts average 5.0 elements, 0 column cuts (0 active)  in 280.869 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 2 row cuts average 50.5 elements, 0 column cuts (0 active)  in 13.102 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 6390 row cuts average 86.2 elements, 0 column cuts (0 active)  in 96.844 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (1490.71 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 0 (1734.20 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 0 (1781.47 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 0 (1870.49 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 0 (1911.28 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 0 (1940.87 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 0 (1969.64 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 0 (2010.23 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 0 (2035.90 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 0 (2062.23 seconds)
Cbc0010I After 10 nodes, 11 on tree, 1e+50 best solution, best possible 0 (2087.73 seconds)
Cbc0010I After 11 nodes, 12 on tree, 1e+50 best solution, best possible 0 (2113.15 seconds)
Cbc0010I After 12 nodes, 13 on tree, 1e+50 best solution, best possible 0 (2135.97 seconds)
Cbc0010I After 13 nodes, 14 on tree, 1e+50 best solution, best possible 0 (2157.95 seconds)
Cbc0010I After 14 nodes, 15 on tree, 1e+50 best solution, best possible 0 (2187.89 seconds)
Cbc0010I After 15 nodes, 15 on tree, 1e+50 best solution, best possible 0 (2361.74 seconds)
Cbc0010I After 16 nodes, 15 on tree, 1e+50 best solution, best possible 0 (2612.24 seconds)
Cbc0010I After 17 nodes, 16 on tree, 1e+50 best solution, best possible 0 (2638.92 seconds)
Cbc0010I After 18 nodes, 17 on tree, 1e+50 best solution, best possible 0 (2665.11 seconds)
Cbc0010I After 19 nodes, 18 on tree, 1e+50 best solution, best possible 0 (2693.95 seconds)
Cbc0010I After 20 nodes, 19 on tree, 1e+50 best solution, best possible 0 (2722.19 seconds)
Cbc0010I After 21 nodes, 20 on tree, 1e+50 best solution, best possible 0 (2750.20 seconds)
Cbc0010I After 22 nodes, 21 on tree, 1e+50 best solution, best possible 0 (2778.82 seconds)
Cbc0010I After 23 nodes, 22 on tree, 1e+50 best solution, best possible 0 (2806.86 seconds)
Cbc0010I After 24 nodes, 23 on tree, 1e+50 best solution, best possible 0 (2835.42 seconds)
Cbc0010I After 25 nodes, 24 on tree, 1e+50 best solution, best possible 0 (2957.95 seconds)
Cbc0010I After 26 nodes, 24 on tree, 1e+50 best solution, best possible 0 (3175.07 seconds)
Cbc0010I After 27 nodes, 24 on tree, 1e+50 best solution, best possible 0 (3372.46 seconds)
Cbc0010I After 28 nodes, 24 on tree, 1e+50 best solution, best possible 0 (3561.34 seconds)
Cbc0010I After 29 nodes, 24 on tree, 1e+50 best solution, best possible 0 (3693.39 seconds)
Cbc0010I After 30 nodes, 24 on tree, 1e+50 best solution, best possible 0 (3848.62 seconds)
Cbc0010I After 31 nodes, 24 on tree, 1e+50 best solution, best possible 0 (3969.62 seconds)
Cbc0010I After 32 nodes, 24 on tree, 1e+50 best solution, best possible 0 (4123.98 seconds)
Cbc0010I After 33 nodes, 24 on tree, 1e+50 best solution, best possible 0 (4306.23 seconds)
Cbc0010I After 34 nodes, 24 on tree, 1e+50 best solution, best possible 0 (4507.23 seconds)
Cbc0010I After 35 nodes, 24 on tree, 1e+50 best solution, best possible 0 (4655.93 seconds)
Cbc0010I After 36 nodes, 24 on tree, 1e+50 best solution, best possible 0 (4901.53 seconds)
Cbc0010I After 37 nodes, 24 on tree, 1e+50 best solution, best possible 0 (5098.33 seconds)
Cbc0010I After 38 nodes, 24 on tree, 1e+50 best solution, best possible 0 (5230.73 seconds)
Cbc0010I After 39 nodes, 24 on tree, 1e+50 best solution, best possible 0 (5340.26 seconds)
Cbc0010I After 40 nodes, 24 on tree, 1e+50 best solution, best possible 0 (5471.62 seconds)
Cbc0010I After 41 nodes, 25 on tree, 1e+50 best solution, best possible 0 (5543.21 seconds)
Cbc0010I After 42 nodes, 25 on tree, 1e+50 best solution, best possible 0 (5559.31 seconds)
Cbc0010I After 43 nodes, 26 on tree, 1e+50 best solution, best possible 0 (5761.07 seconds)
Cbc0010I After 44 nodes, 26 on tree, 1e+50 best solution, best possible 0 (5905.04 seconds)
Cbc0010I After 45 nodes, 27 on tree, 1e+50 best solution, best possible 0 (6007.68 seconds)
Cbc0010I After 46 nodes, 28 on tree, 1e+50 best solution, best possible 0 (6092.63 seconds)
Cbc0010I After 47 nodes, 28 on tree, 1e+50 best solution, best possible 0 (6312.88 seconds)
Cbc0010I After 48 nodes, 28 on tree, 1e+50 best solution, best possible 0 (6540.61 seconds)
Cbc0010I After 49 nodes, 29 on tree, 1e+50 best solution, best possible 0 (6712.34 seconds)
Cbc0010I After 50 nodes, 29 on tree, 1e+50 best solution, best possible 0 (6920.44 seconds)
Cbc0010I After 51 nodes, 30 on tree, 1e+50 best solution, best possible 0 (6952.11 seconds)
Cbc0010I After 52 nodes, 31 on tree, 1e+50 best solution, best possible 0 (7133.69 seconds)
Cbc0010I After 53 nodes, 31 on tree, 1e+50 best solution, best possible 0 (7233.96 seconds)
Cbc0010I After 54 nodes, 31 on tree, 1e+50 best solution, best possible 0 (7357.62 seconds)
Cbc0010I After 55 nodes, 32 on tree, 1e+50 best solution, best possible 0 (7379.40 seconds)
Cbc0010I After 56 nodes, 33 on tree, 1e+50 best solution, best possible 0 (7491.03 seconds)
Cbc0010I After 57 nodes, 33 on tree, 1e+50 best solution, best possible 0 (7619.85 seconds)
Cbc0010I After 58 nodes, 33 on tree, 1e+50 best solution, best possible 0 (7732.15 seconds)
Cbc0010I After 59 nodes, 34 on tree, 1e+50 best solution, best possible 0 (7832.49 seconds)
Cbc0010I After 60 nodes, 34 on tree, 1e+50 best solution, best possible 0 (7968.16 seconds)
Cbc0010I After 61 nodes, 35 on tree, 1e+50 best solution, best possible 0 (8075.75 seconds)
Cbc0010I After 62 nodes, 35 on tree, 1e+50 best solution, best possible 0 (8201.24 seconds)
Cbc0010I After 63 nodes, 36 on tree, 1e+50 best solution, best possible 0 (8303.29 seconds)
Cbc0010I After 64 nodes, 37 on tree, 1e+50 best solution, best possible 0 (8541.42 seconds)
Cbc0010I After 65 nodes, 37 on tree, 1e+50 best solution, best possible 0 (8610.36 seconds)
Cbc0010I After 66 nodes, 37 on tree, 1e+50 best solution, best possible 0 (8859.86 seconds)
Cbc0010I After 67 nodes, 38 on tree, 1e+50 best solution, best possible 0 (8873.34 seconds)
Cbc0010I After 68 nodes, 39 on tree, 1e+50 best solution, best possible 0 (9016.01 seconds)
Cbc0010I After 69 nodes, 40 on tree, 1e+50 best solution, best possible 0 (9088.69 seconds)
Cbc0010I After 70 nodes, 41 on tree, 1e+50 best solution, best possible 0 (9120.87 seconds)
Cbc0010I After 71 nodes, 41 on tree, 1e+50 best solution, best possible 0 (9137.03 seconds)
Cbc0010I After 72 nodes, 42 on tree, 1e+50 best solution, best possible 0 (9170.14 seconds)
Cbc0010I After 73 nodes, 42 on tree, 1e+50 best solution, best possible 0 (9256.02 seconds)
Cbc0010I After 74 nodes, 43 on tree, 1e+50 best solution, best possible 0 (9272.41 seconds)
Cbc0010I After 75 nodes, 44 on tree, 1e+50 best solution, best possible 0 (9389.20 seconds)
Cbc0010I After 76 nodes, 44 on tree, 1e+50 best solution, best possible 0 (9417.29 seconds)
Cbc0010I After 77 nodes, 44 on tree, 1e+50 best solution, best possible 0 (9514.55 seconds)
Cbc0010I After 78 nodes, 45 on tree, 1e+50 best solution, best possible 0 (9587.17 seconds)
Cbc0010I After 79 nodes, 45 on tree, 1e+50 best solution, best possible 0 (9843.50 seconds)
Cbc0010I After 80 nodes, 46 on tree, 1e+50 best solution, best possible 0 (9857.15 seconds)
Cbc0010I After 81 nodes, 47 on tree, 1e+50 best solution, best possible 0 (9915.08 seconds)
Cbc0010I After 82 nodes, 47 on tree, 1e+50 best solution, best possible 0 (9971.90 seconds)
Cbc0010I After 83 nodes, 47 on tree, 1e+50 best solution, best possible 0 (10066.97 seconds)
Cbc0010I After 84 nodes, 47 on tree, 1e+50 best solution, best possible 0 (10222.60 seconds)
Cbc0010I After 85 nodes, 48 on tree, 1e+50 best solution, best possible 0 (10282.38 seconds)
Cbc0010I After 86 nodes, 49 on tree, 1e+50 best solution, best possible 0 (10490.96 seconds)
Cbc0010I After 87 nodes, 49 on tree, 1e+50 best solution, best possible 0 (10649.54 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 0), took 703053 iterations and 88 nodes (10808.44 seconds)
Cbc0032I Strong branching done 1944 times (184617 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 29, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (142.843 seconds)
Gomory was tried 10 times and created 167 cuts of which 0 were active after adding rounds of cuts (130.906 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (2.73418 seconds)
liftKnapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (39.7876 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (5.1087 seconds)
OddWheel was tried 10 times and created 18 cuts of which 0 were active after adding rounds of cuts (280.869 seconds)
MixedIntegerRounding2 was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (13.1023 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.236573 seconds)
TwoMirCuts was tried 10 times and created 6390 cuts of which 0 were active after adding rounds of cuts (96.8438 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (58.2107 seconds)

Result - Stopped on time limit
No feasible solution found
Lower bound:                    0
Enumerated nodes:               88
Total iterations:               703053
Time (CPU seconds):             10789.3
Time (Wallclock seconds):       10808.5
Total time (CPU seconds):       10790.5   (Wallclock seconds):       10809.6
