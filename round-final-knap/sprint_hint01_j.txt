Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/sprint_hint01_j.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/sprint_hint01_j.txt -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 5043 COLUMNS
At line 117191 RHS
At line 119203 BOUNDS
At line 130894 ENDATA
Problem no_name has 5032 rows, 11690 columns and 208410 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 65.1 - 1.57199 seconds
Cgl0002I 10 variables fixed
Cgl0003I 0 fixed, 60 tightened bounds, 840 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 739 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 569 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 409 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 399 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 399 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 399 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 399 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 399 strengthened rows, 0 substitutions
Cgl0004I processed model has 4862 rows, 11600 columns (11600 integer (11540 of which binary)) and 212419 elements
Coin3009W Conflict graph built in 3.863 seconds, density: 0.935%
Cgl0015I Clique Strengthening extended 1268 cliques, 1268 were dominated
After applying Clique Strengthening continuous objective value is 72.4446
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 482 integers unsatisfied sum - 113.259
Cbc0038I Pass   1: (70.28 seconds) suminf.   34.50000 (73) obj. 138 iterations 6854
Cbc0038I Pass   2: (71.61 seconds) suminf.   18.00000 (36) obj. 163.5 iterations 443
Cbc0038I Pass   3: (72.06 seconds) suminf.   18.00000 (36) obj. 163.5 iterations 131
Cbc0038I Pass   4: (72.81 seconds) suminf.   11.00000 (22) obj. 170 iterations 244
Cbc0038I Pass   5: (73.21 seconds) suminf.    7.00000 (14) obj. 177 iterations 111
Cbc0038I Pass   6: (73.42 seconds) suminf.    7.00000 (14) obj. 177 iterations 37
Cbc0038I Pass   7: (73.82 seconds) suminf.    7.00000 (14) obj. 177 iterations 110
Cbc0038I Pass   8: (78.19 seconds) suminf.    6.00000 (12) obj. 502 iterations 1084
Cbc0038I Pass   9: (81.50 seconds) suminf.    6.00000 (12) obj. 502 iterations 904
Cbc0038I Pass  10: (81.93 seconds) suminf.    5.00000 (10) obj. 512 iterations 104
Cbc0038I Pass  11: (82.22 seconds) suminf.    5.00000 (10) obj. 512 iterations 79
Cbc0038I Pass  12: (87.04 seconds) suminf.    5.00000 (10) obj. 786 iterations 1061
Cbc0038I Pass  13: (90.63 seconds) suminf.    5.00000 (10) obj. 786 iterations 880
Cbc0038I Pass  14: (91.01 seconds) suminf.    5.00000 (10) obj. 786 iterations 85
Cbc0038I Pass  15: (95.88 seconds) suminf.    0.00000 (0) obj. 1070 iterations 1083
Cbc0038I Solution found of 1070
Cbc0038I Cleaned solution of 1070
Cbc0038I Rounding solution of 197 is better than previous of 1070
Cbc0038I Before mini branch and bound, 10970 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4862 rows 11600 columns, reduced to 279 rows 161 columns
Cbc0038I Mini branch and bound improved solution from 197 to 174 (97.75 seconds)
Cbc0038I Round again with cutoff of 162.945
Cbc0038I Reduced cost fixing fixed 287 variables on major pass 2
Cbc0038I Pass  16: (98.00 seconds) suminf.   34.50000 (73) obj. 138 iterations 0
Cbc0038I Pass  17: (102.90 seconds) suminf.   10.82218 (23) obj. 162.945 iterations 1161
Cbc0038I Pass  18: (112.67 seconds) suminf.    9.06604 (23) obj. 162.945 iterations 2163
Cbc0038I Pass  19: (115.42 seconds) suminf.    9.06604 (23) obj. 162.945 iterations 473
Cbc0038I Pass  20: (124.10 seconds) suminf.    3.21408 (17) obj. 162.945 iterations 1921
Cbc0038I Solution found of 159.877
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 4863 rows 11600 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 159
Cbc0038I Before mini branch and bound, 11083 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4862 rows 11600 columns, reduced to 271 rows 152 columns
Cbc0038I Mini branch and bound improved solution from 159 to 116 (129.48 seconds)
Cbc0038I Round again with cutoff of 106.489
Cbc0038I Reduced cost fixing fixed 2941 variables on major pass 3
Cbc0038I Pass  21: (133.15 seconds) suminf.   30.83700 (73) obj. 106.489 iterations 1363
Cbc0038I Pass  22: (140.29 seconds) suminf.   28.25110 (59) obj. 106.489 iterations 1527
Cbc0038I Pass  23: (150.59 seconds) suminf.   16.68500 (40) obj. 106.489 iterations 1942
Cbc0038I Pass  24: (154.05 seconds) suminf.   13.73849 (48) obj. 106.489 iterations 591
Cbc0038I Pass  25: (155.19 seconds) suminf.   13.17767 (66) obj. 106.489 iterations 201
Cbc0038I Pass  26: (155.71 seconds) suminf.   13.40516 (50) obj. 106.489 iterations 160
Cbc0038I Pass  27: (155.93 seconds) suminf.   13.40516 (50) obj. 106.489 iterations 60
Cbc0038I Pass  28: (156.17 seconds) suminf.   13.40516 (50) obj. 106.489 iterations 57
Cbc0038I Pass  29: (156.33 seconds) suminf.   13.40516 (50) obj. 106.489 iterations 40
Cbc0038I Pass  30: (156.53 seconds) suminf.   13.40516 (50) obj. 106.489 iterations 50
Cbc0038I Pass  31: (156.70 seconds) suminf.   13.40516 (50) obj. 106.489 iterations 45
Cbc0038I Pass  32: (156.93 seconds) suminf.   13.17767 (66) obj. 106.489 iterations 66
Cbc0038I Pass  33: (157.04 seconds) suminf.   13.17767 (66) obj. 106.489 iterations 23
Cbc0038I Pass  34: (157.17 seconds) suminf.   13.17767 (66) obj. 106.489 iterations 27
Cbc0038I Pass  35: (157.27 seconds) suminf.   13.17767 (66) obj. 106.489 iterations 16
Cbc0038I Pass  36: (157.43 seconds) suminf.   13.19319 (65) obj. 106.489 iterations 37
Cbc0038I Pass  37: (158.84 seconds) suminf.   14.91831 (48) obj. 106.489 iterations 484
Cbc0038I Pass  38: (160.27 seconds) suminf.   13.73849 (49) obj. 106.489 iterations 479
Cbc0038I Pass  39: (160.49 seconds) suminf.   13.40516 (50) obj. 106.489 iterations 74
Cbc0038I Pass  40: (160.74 seconds) suminf.   11.41831 (47) obj. 106.489 iterations 82
Cbc0038I Pass  41: (160.97 seconds) suminf.   10.45779 (35) obj. 106.489 iterations 79
Cbc0038I Pass  42: (173.41 seconds) suminf.    8.80440 (19) obj. 106.489 iterations 2738
Cbc0038I Pass  43: (178.01 seconds) suminf.    7.85330 (17) obj. 106.489 iterations 844
Cbc0038I Pass  44: (178.48 seconds) suminf.    7.85330 (17) obj. 106.489 iterations 92
Cbc0038I Pass  45: (178.97 seconds) suminf.    7.85330 (17) obj. 106.489 iterations 85
Cbc0038I Pass  46: (179.54 seconds) suminf.    7.85330 (17) obj. 106.489 iterations 104
Cbc0038I Pass  47: (179.84 seconds) suminf.    7.85330 (17) obj. 106.489 iterations 49
Cbc0038I Pass  48: (180.37 seconds) suminf.    7.85330 (17) obj. 106.489 iterations 88
Cbc0038I Pass  49: (181.13 seconds) suminf.    7.85330 (17) obj. 106.489 iterations 134
Cbc0038I Pass  50: (184.70 seconds) suminf.    8.49633 (17) obj. 106.489 iterations 684
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11046 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4862 rows 11600 columns, reduced to 480 rows 255 columns
Cbc0038I Mini branch and bound did not improve solution (186.49 seconds)
Cbc0038I After 186.49 seconds - Feasibility pump exiting with objective of 116 - took 125.19 seconds
Cbc0012I Integer solution of 116 found by feasibility pump after 0 iterations and 0 nodes (186.52 seconds)
Cbc0038I Full problem 4862 rows 11600 columns, reduced to 242 rows 125 columns
Cbc0031I 24 added rows had average density of 41
Cbc0013I At root node, 24 cuts changed objective from 72.444606 to 73.538462 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 4.3 elements, 6 column cuts (6 active)  in 19.668 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 45.3 elements, 0 column cuts (0 active)  in 5.560 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.452 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 28.661 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.680 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.544 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 39 row cuts average 148.1 elements, 0 column cuts (0 active)  in 11.258 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 22 row cuts average 8.1 elements, 0 column cuts (0 active)  in 2.140 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 116 best solution, best possible 73.538462 (270.11 seconds)
Cbc0010I After 1 nodes, 2 on tree, 116 best solution, best possible 73.538462 (278.53 seconds)
Cbc0010I After 2 nodes, 3 on tree, 116 best solution, best possible 73.538462 (280.69 seconds)
Cbc0010I After 3 nodes, 4 on tree, 116 best solution, best possible 73.538462 (282.21 seconds)
Cbc0010I After 4 nodes, 5 on tree, 116 best solution, best possible 73.538462 (282.95 seconds)
Cbc0010I After 6 nodes, 7 on tree, 116 best solution, best possible 73.538462 (284.43 seconds)
Cbc0010I After 8 nodes, 9 on tree, 116 best solution, best possible 73.538462 (285.17 seconds)
Cbc0010I After 10 nodes, 10 on tree, 116 best solution, best possible 73.538462 (286.12 seconds)
Cbc0010I After 13 nodes, 12 on tree, 116 best solution, best possible 73.538462 (287.49 seconds)
Cbc0010I After 14 nodes, 12 on tree, 116 best solution, best possible 73.538462 (288.43 seconds)
Cbc0010I After 15 nodes, 13 on tree, 116 best solution, best possible 73.538462 (289.37 seconds)
Cbc0010I After 17 nodes, 14 on tree, 116 best solution, best possible 73.538462 (290.20 seconds)
Cbc0010I After 18 nodes, 15 on tree, 116 best solution, best possible 73.538462 (290.94 seconds)
Cbc0010I After 20 nodes, 17 on tree, 116 best solution, best possible 73.538462 (292.31 seconds)
Cbc0010I After 21 nodes, 18 on tree, 116 best solution, best possible 73.538462 (293.26 seconds)
Cbc0010I After 25 nodes, 21 on tree, 116 best solution, best possible 73.538462 (294.26 seconds)
Cbc0010I After 28 nodes, 23 on tree, 116 best solution, best possible 73.538462 (295.24 seconds)
Cbc0010I After 30 nodes, 24 on tree, 116 best solution, best possible 73.538462 (296.13 seconds)
Cbc0010I After 32 nodes, 25 on tree, 116 best solution, best possible 73.538462 (297.00 seconds)
Cbc0010I After 34 nodes, 26 on tree, 116 best solution, best possible 73.538462 (297.84 seconds)
Cbc0010I After 36 nodes, 28 on tree, 116 best solution, best possible 73.538462 (298.55 seconds)
Cbc0010I After 38 nodes, 30 on tree, 116 best solution, best possible 73.538462 (299.26 seconds)
Cbc0010I After 42 nodes, 33 on tree, 116 best solution, best possible 73.538462 (300.01 seconds)
Cbc0004I Integer solution of 74 found after 6049 iterations and 43 nodes (300.10 seconds)
Cbc0001I Search completed - best objective 74, took 6049 iterations and 43 nodes (300.11 seconds)
Cbc0032I Strong branching done 334 times (4147 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 29, 3512 variables fixed on reduced cost
Cuts at root node changed objective from 72.4446 to 73.5385
Probing was tried 22 times and created 41 cuts of which 0 were active after adding rounds of cuts (20.4313 seconds)
Gomory was tried 7 times and created 3 cuts of which 0 were active after adding rounds of cuts (5.56003 seconds)
Knapsack was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.451534 seconds)
liftKnapsack was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (28.661 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.119071 seconds)
OddWheel was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.679929 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.543843 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.071562 seconds)
TwoMirCuts was tried 22 times and created 44 cuts of which 0 were active after adding rounds of cuts (14.4384 seconds)
ZeroHalf was tried 22 times and created 31 cuts of which 0 were active after adding rounds of cuts (4.82739 seconds)

Result - Optimal solution found
Objective value:                74
Enumerated nodes:               43
Total iterations:               6049
Time (CPU seconds):             283.009
Time (Wallclock seconds):       302.074
Total time (CPU seconds):       283.332   (Wallclock seconds):       302.318
