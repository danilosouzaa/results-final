Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/beavma.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/beavma.txt -quit (default strategy 1)
At line 1 NAME          beavma
At line 2 ROWS
At line 376 COLUMNS
At line 1114 RHS
At line 1195 BOUNDS
At line 1586 ENDATA
Problem beavma has 372 rows, 390 columns and 975 elements
Coin0008I beavma read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 155778 - 0.018105 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 46 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 281 rows, 306 columns (129 integer (129 of which binary)) and 795 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.116%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 8.01376
Cbc0038I Pass   1: suminf.    5.41433 (43) obj. 328025 iterations 42
Cbc0038I Pass   2: suminf.    5.17375 (41) obj. 330784 iterations 5
Cbc0038I Pass   3: suminf.    0.27498 (14) obj. 393151 iterations 56
Cbc0038I Solution found of 440550
Cbc0038I Relaxing continuous gives 440550
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 82 continuous
Cbc0038I Full problem 281 rows 306 columns, reduced to 70 rows 67 columns
Cbc0038I Mini branch and bound improved solution from 440550 to 398512 (0.15 seconds)
Cbc0038I Round again with cutoff of 389359
Cbc0038I Pass   4: suminf.    5.41433 (43) obj. 328025 iterations 0
Cbc0038I Pass   5: suminf.    5.17375 (41) obj. 330784 iterations 5
Cbc0038I Pass   6: suminf.    0.89000 (17) obj. 389359 iterations 90
Cbc0038I Pass   7: suminf.    1.41169 (10) obj. 389359 iterations 31
Cbc0038I Pass   8: suminf.    1.23927 (11) obj. 389359 iterations 7
Cbc0038I Pass   9: suminf.    1.14078 (6) obj. 389359 iterations 18
Cbc0038I Pass  10: suminf.    0.66847 (4) obj. 387286 iterations 8
Cbc0038I Pass  11: suminf.    0.83293 (8) obj. 389359 iterations 11
Cbc0038I Pass  12: suminf.    0.69194 (6) obj. 389359 iterations 4
Cbc0038I Pass  13: suminf.    0.48443 (3) obj. 389359 iterations 8
Cbc0038I Pass  14: suminf.    0.44540 (2) obj. 389359 iterations 2
Cbc0038I Pass  15: suminf.    0.68986 (4) obj. 389359 iterations 4
Cbc0038I Pass  16: suminf.    0.49625 (2) obj. 388446 iterations 4
Cbc0038I Pass  17: suminf.    0.51214 (3) obj. 389359 iterations 3
Cbc0038I Pass  18: suminf.    0.47338 (2) obj. 389359 iterations 2
Cbc0038I Pass  19: suminf.    4.67970 (21) obj. 389359 iterations 27
Cbc0038I Pass  20: suminf.    3.25131 (19) obj. 389359 iterations 8
Cbc0038I Pass  21: suminf.    1.06759 (6) obj. 389359 iterations 39
Cbc0038I Pass  22: suminf.    1.03845 (6) obj. 389359 iterations 3
Cbc0038I Pass  23: suminf.    0.70239 (5) obj. 389359 iterations 6
Cbc0038I Pass  24: suminf.    0.56953 (3) obj. 389078 iterations 6
Cbc0038I Pass  25: suminf.    0.65709 (4) obj. 389359 iterations 5
Cbc0038I Pass  26: suminf.    2.85366 (22) obj. 389359 iterations 35
Cbc0038I Pass  27: suminf.    2.22422 (19) obj. 389359 iterations 9
Cbc0038I Pass  28: suminf.    1.16094 (7) obj. 389359 iterations 23
Cbc0038I Pass  29: suminf.    0.38646 (5) obj. 389359 iterations 8
Cbc0038I Pass  30: suminf.    0.66255 (4) obj. 389359 iterations 8
Cbc0038I Pass  31: suminf.    0.55735 (4) obj. 389359 iterations 6
Cbc0038I Pass  32: suminf.    0.66255 (4) obj. 389359 iterations 6
Cbc0038I Pass  33: suminf.    2.68212 (19) obj. 389359 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 74 continuous
Cbc0038I Full problem 281 rows 306 columns, reduced to 89 rows 91 columns
Cbc0038I Mini branch and bound improved solution from 398512 to 392272 (0.31 seconds)
Cbc0038I Round again with cutoff of 372884
Cbc0038I Pass  33: suminf.    5.41433 (43) obj. 328025 iterations 0
Cbc0038I Pass  34: suminf.    5.17375 (41) obj. 330784 iterations 5
Cbc0038I Pass  35: suminf.    0.92792 (20) obj. 372884 iterations 87
Cbc0038I Pass  36: suminf.    0.80782 (22) obj. 372884 iterations 4
Cbc0038I Pass  37: suminf.    1.97435 (18) obj. 372884 iterations 41
Cbc0038I Pass  38: suminf.    1.78876 (18) obj. 372884 iterations 5
Cbc0038I Pass  39: suminf.    1.47802 (15) obj. 372884 iterations 18
Cbc0038I Pass  40: suminf.    1.46029 (14) obj. 372884 iterations 3
Cbc0038I Pass  41: suminf.    1.13824 (9) obj. 372884 iterations 12
Cbc0038I Pass  42: suminf.    1.09979 (8) obj. 372884 iterations 1
Cbc0038I Pass  43: suminf.    1.13745 (8) obj. 372884 iterations 9
Cbc0038I Pass  44: suminf.    0.70864 (7) obj. 372884 iterations 11
Cbc0038I Pass  45: suminf.    1.02158 (10) obj. 372884 iterations 10
Cbc0038I Pass  46: suminf.    0.92706 (10) obj. 372884 iterations 3
Cbc0038I Pass  47: suminf.    1.59506 (9) obj. 372884 iterations 10
Cbc0038I Pass  48: suminf.    0.99290 (9) obj. 372884 iterations 6
Cbc0038I Pass  49: suminf.    0.85970 (8) obj. 372884 iterations 10
Cbc0038I Pass  50: suminf.    0.83930 (8) obj. 372884 iterations 3
Cbc0038I Pass  51: suminf.    1.49324 (8) obj. 372884 iterations 9
Cbc0038I Pass  52: suminf.    0.80330 (7) obj. 372884 iterations 10
Cbc0038I Pass  53: suminf.    1.24805 (10) obj. 372884 iterations 11
Cbc0038I Pass  54: suminf.    1.09482 (10) obj. 372884 iterations 4
Cbc0038I Pass  55: suminf.    1.13611 (7) obj. 372884 iterations 10
Cbc0038I Pass  56: suminf.    1.11572 (7) obj. 372884 iterations 3
Cbc0038I Pass  57: suminf.    1.49324 (8) obj. 372884 iterations 8
Cbc0038I Pass  58: suminf.    0.80330 (7) obj. 372884 iterations 9
Cbc0038I Pass  59: suminf.    1.24805 (10) obj. 372884 iterations 12
Cbc0038I Pass  60: suminf.    1.09482 (10) obj. 372884 iterations 4
Cbc0038I Pass  61: suminf.    1.13611 (7) obj. 372884 iterations 10
Cbc0038I Pass  62: suminf.    1.11572 (7) obj. 372884 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 74 continuous
Cbc0038I Full problem 281 rows 306 columns, reduced to 88 rows 90 columns
Cbc0038I Mini branch and bound did not improve solution (0.41 seconds)
Cbc0038I After 0.41 seconds - Feasibility pump exiting with objective of 392272 - took 0.33 seconds
Cbc0012I Integer solution of 392271.6 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0038I Full problem 281 rows 306 columns, reduced to 46 rows 45 columns
Cbc0031I 102 added rows had average density of 6.0490196
Cbc0013I At root node, 102 cuts changed objective from 306983.33 to 373253.4 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 79 row cuts average 2.3 elements, 4 column cuts (4 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 102 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 27 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 72 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 14 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (TwoMirCuts) - 100 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 392271.6 best solution, best possible 373253.4 (0.89 seconds)
Cbc0012I Integer solution of 385905.8 found by DiveCoefficient after 406 iterations and 2 nodes (1.06 seconds)
Cbc0016I Integer solution of 385894.6 found by strong branching after 719 iterations and 9 nodes (1.32 seconds)
Cbc0016I Integer solution of 385617.8 found by strong branching after 721 iterations and 10 nodes (1.33 seconds)
Cbc0016I Integer solution of 383746.6 found by strong branching after 936 iterations and 21 nodes (1.58 seconds)
Cbc0010I After 25 nodes, 4 on tree, 383746.6 best solution, best possible 378232.72 (1.59 seconds)
Cbc0004I Integer solution of 383285 found after 970 iterations and 29 nodes (1.63 seconds)
Cbc0001I Search completed - best objective 383285, took 1068 iterations and 36 nodes (1.66 seconds)
Cbc0032I Strong branching done 502 times (2651 iterations), fathomed 5 nodes and fixed 21 variables
Cbc0035I Maximum depth 8, 115 variables fixed on reduced cost
Cuts at root node changed objective from 306983 to 373253
Probing was tried 57 times and created 190 cuts of which 0 were active after adding rounds of cuts (0.032594 seconds)
Gomory was tried 57 times and created 158 cuts of which 0 were active after adding rounds of cuts (0.03331 seconds)
Knapsack was tried 57 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.090742 seconds)
liftKnapsack was tried 57 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.231212 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00046 seconds)
OddWheel was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001444 seconds)
MixedIntegerRounding2 was tried 57 times and created 118 cuts of which 0 were active after adding rounds of cuts (0.038986 seconds)
FlowCover was tried 57 times and created 49 cuts of which 0 were active after adding rounds of cuts (0.024007 seconds)
TwoMirCuts was tried 57 times and created 111 cuts of which 0 were active after adding rounds of cuts (0.031231 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000226 seconds)

Result - Optimal solution found
Objective value:                383285
Enumerated nodes:               36
Total iterations:               1068
Time (CPU seconds):             2.09585
Time (Wallclock seconds):       1.67087
Total time (CPU seconds):       2.10292   (Wallclock seconds):       1.67743
