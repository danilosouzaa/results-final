Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/bab2.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/bab2.txt -quit (default strategy 1)
At line 1 NAME          bab2
At line 2 ROWS
At line 17249 COLUMNS
At line 2161818 RHS
At line 2162872 BOUNDS
At line 2310785 ENDATA
Problem bab2 has 17245 rows, 147912 columns and 2027726 elements
Coin0008I bab2 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -432166 - 153.383 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 46 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 15661 rows, 144957 columns (144957 integer (144957 of which binary)) and 1946648 elements
Coin3009W Conflict graph built in 3.149 seconds, density: 0.011%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1007 integers unsatisfied sum - 321.592
Cbc0038I Pass   1: (714.85 seconds) suminf.  187.70479 (796) obj. -380145 iterations 23848
Cbc0038I Pass   2: (734.04 seconds) suminf.  165.20122 (741) obj. -369292 iterations 4495
Cbc0038I Pass   3: (741.68 seconds) suminf.  156.04575 (719) obj. -359379 iterations 2202
Cbc0038I Pass   4: (745.60 seconds) suminf.  155.05448 (728) obj. -358768 iterations 1156
Cbc0038I Pass   5: (749.64 seconds) suminf.  155.05448 (728) obj. -358794 iterations 463
Cbc0038I Pass   6: (750.59 seconds) suminf.  155.05448 (728) obj. -358794 iterations 65
Cbc0038I Pass   7: (813.85 seconds) suminf.  162.17137 (676) obj. -337921 iterations 9259
Cbc0038I Pass   8: (886.12 seconds) suminf.  149.57092 (680) obj. -332563 iterations 8080
Cbc0038I Pass   9: (889.17 seconds) suminf.  148.12806 (677) obj. -331987 iterations 575
Cbc0038I Pass  10: (890.02 seconds) suminf.  148.12806 (677) obj. -331987 iterations 36
Cbc0038I Pass  11: (891.10 seconds) suminf.  148.12806 (677) obj. -331987 iterations 54
Cbc0038I Pass  12: (893.58 seconds) suminf.  148.03823 (681) obj. -331834 iterations 516
Cbc0038I Pass  13: (897.09 seconds) suminf.  148.03823 (680) obj. -331749 iterations 526
Cbc0038I Pass  14: (899.73 seconds) suminf.  148.03823 (680) obj. -331749 iterations 355
Cbc0038I Pass  15: (968.62 seconds) suminf.  159.45041 (586) obj. -301574 iterations 8951
Cbc0038I Pass  16: (1078.85 seconds) suminf.  142.25561 (607) obj. -298092 iterations 9785
Cbc0038I Pass  17: (1106.86 seconds) suminf.  140.82275 (610) obj. -298147 iterations 2411
Cbc0038I Pass  18: (1107.45 seconds) suminf.  140.82275 (610) obj. -298147 iterations 55
Cbc0038I Pass  19: (1108.08 seconds) suminf.  140.82275 (610) obj. -298147 iterations 58
Cbc0038I Pass  20: (1112.73 seconds) suminf.  139.04775 (607) obj. -297769 iterations 896
Cbc0038I Pass  21: (1117.79 seconds) suminf.  139.04775 (605) obj. -297878 iterations 703
Cbc0038I Pass  22: (1121.56 seconds) suminf.  139.04775 (605) obj. -297878 iterations 569
Cbc0038I Pass  23: (1124.40 seconds) suminf.  139.04775 (605) obj. -297878 iterations 408
Cbc0038I Pass  24: (1356.76 seconds) suminf.  143.21646 (2022) obj. -294242 iterations 14582
Cbc0038I Pass  25: (1558.55 seconds) suminf.  132.13947 (642) obj. -289478 iterations 10122
Cbc0038I Pass  26: (1564.57 seconds) suminf.  130.27339 (624) obj. -288597 iterations 1958
Cbc0038I Pass  27: (1566.81 seconds) suminf.  130.27339 (625) obj. -288578 iterations 261
Cbc0038I Pass  28: (1569.03 seconds) suminf.  130.27339 (625) obj. -288578 iterations 467
Cbc0038I Pass  29: (1735.63 seconds) suminf.  139.82587 (626) obj. -279258 iterations 12300
Cbc0038I Pass  30: (1947.03 seconds) suminf.  129.81965 (622) obj. -279169 iterations 11198
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 139630 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1948.05 seconds)
Cbc0038I After 1948.05 seconds - Feasibility pump exiting - took 1023.29 seconds
Cbc0031I 424 added rows had average density of 271.80896
Cbc0013I At root node, 424 cuts changed objective from -406658.18 to -371145.88 in 50 passes
Cbc0014I Cut generator 0 (Probing) - 179 row cuts average 2.0 elements, 0 column cuts (33 active)  in 69.834 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 258 row cuts average 886.7 elements, 0 column cuts (0 active)  in 346.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 71 row cuts average 25.2 elements, 0 column cuts (0 active)  in 7.622 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 2698 row cuts average 62.7 elements, 0 column cuts (0 active)  in 1717.513 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 4 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.482 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 2.729 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 3 row cuts average 865.0 elements, 0 column cuts (0 active)  in 379.534 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 2.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 109 row cuts average 148.7 elements, 0 column cuts (0 active)  in 120.022 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 1143 row cuts average 193.6 elements, 0 column cuts (0 active)  in 778.810 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -371145.88 (6662.71 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible -371145.88 (6858.49 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible -371145.88 (7049.10 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible -371145.88 (7228.56 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible -371145.88 (7407.46 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible -371145.88 (7587.82 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible -371145.88 (7635.99 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible -371145.88 (7638.52 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible -371145.88 (7640.81 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible -371145.88 (7646.55 seconds)
Cbc0010I After 10 nodes, 11 on tree, 1e+50 best solution, best possible -371145.88 (7648.17 seconds)
Cbc0010I After 11 nodes, 11 on tree, 1e+50 best solution, best possible -371145.88 (7650.46 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible -371145.88 (7744.05 seconds)
Cbc0010I After 13 nodes, 12 on tree, 1e+50 best solution, best possible -371145.88 (7882.32 seconds)
Cbc0010I After 14 nodes, 13 on tree, 1e+50 best solution, best possible -371145.88 (8073.86 seconds)
Cbc0010I After 15 nodes, 13 on tree, 1e+50 best solution, best possible -371145.88 (8168.08 seconds)
Cbc0010I After 16 nodes, 14 on tree, 1e+50 best solution, best possible -371145.88 (8170.27 seconds)
Cbc0010I After 17 nodes, 14 on tree, 1e+50 best solution, best possible -371145.88 (8172.79 seconds)
Cbc0010I After 18 nodes, 15 on tree, 1e+50 best solution, best possible -371145.88 (8177.17 seconds)
Cbc0010I After 19 nodes, 15 on tree, 1e+50 best solution, best possible -371145.88 (8182.48 seconds)
Cbc0010I After 20 nodes, 16 on tree, 1e+50 best solution, best possible -371145.88 (8184.89 seconds)
Cbc0010I After 21 nodes, 17 on tree, 1e+50 best solution, best possible -371145.88 (8193.30 seconds)
Cbc0010I After 22 nodes, 17 on tree, 1e+50 best solution, best possible -371145.88 (8198.07 seconds)
Cbc0010I After 23 nodes, 18 on tree, 1e+50 best solution, best possible -371145.88 (8334.41 seconds)
Cbc0010I After 24 nodes, 18 on tree, 1e+50 best solution, best possible -371145.88 (8516.61 seconds)
Cbc0010I After 25 nodes, 19 on tree, 1e+50 best solution, best possible -371145.88 (8518.08 seconds)
Cbc0010I After 26 nodes, 20 on tree, 1e+50 best solution, best possible -371145.88 (8519.62 seconds)
Cbc0010I After 27 nodes, 21 on tree, 1e+50 best solution, best possible -371145.88 (8528.61 seconds)
Cbc0010I After 28 nodes, 21 on tree, 1e+50 best solution, best possible -371145.88 (8530.63 seconds)
Cbc0010I After 29 nodes, 22 on tree, 1e+50 best solution, best possible -371145.88 (8538.87 seconds)
Cbc0010I After 30 nodes, 22 on tree, 1e+50 best solution, best possible -371145.88 (8546.34 seconds)
Cbc0010I After 31 nodes, 22 on tree, 1e+50 best solution, best possible -371145.88 (8554.62 seconds)
Cbc0010I After 32 nodes, 22 on tree, 1e+50 best solution, best possible -371145.88 (8557.23 seconds)
Cbc0010I After 33 nodes, 23 on tree, 1e+50 best solution, best possible -371145.88 (8562.73 seconds)
Cbc0010I After 34 nodes, 23 on tree, 1e+50 best solution, best possible -371145.88 (8565.48 seconds)
Cbc0010I After 35 nodes, 24 on tree, 1e+50 best solution, best possible -371145.88 (8567.26 seconds)
Cbc0010I After 36 nodes, 25 on tree, 1e+50 best solution, best possible -371145.88 (8577.69 seconds)
Cbc0010I After 37 nodes, 25 on tree, 1e+50 best solution, best possible -371145.88 (8589.13 seconds)
Cbc0010I After 38 nodes, 25 on tree, 1e+50 best solution, best possible -371145.88 (8598.94 seconds)
Cbc0010I After 39 nodes, 26 on tree, 1e+50 best solution, best possible -371145.88 (8792.11 seconds)
Cbc0010I After 40 nodes, 26 on tree, 1e+50 best solution, best possible -371145.88 (8987.92 seconds)
Cbc0010I After 41 nodes, 27 on tree, 1e+50 best solution, best possible -371145.88 (9164.95 seconds)
Cbc0010I After 42 nodes, 27 on tree, 1e+50 best solution, best possible -371145.88 (9351.43 seconds)
Cbc0010I After 43 nodes, 28 on tree, 1e+50 best solution, best possible -371145.88 (9353.05 seconds)
Cbc0010I After 44 nodes, 29 on tree, 1e+50 best solution, best possible -371145.88 (9355.47 seconds)
Cbc0010I After 45 nodes, 29 on tree, 1e+50 best solution, best possible -371145.88 (9360.77 seconds)
Cbc0010I After 46 nodes, 29 on tree, 1e+50 best solution, best possible -371145.88 (9362.50 seconds)
Cbc0010I After 47 nodes, 30 on tree, 1e+50 best solution, best possible -371145.88 (9364.45 seconds)
Cbc0010I After 48 nodes, 30 on tree, 1e+50 best solution, best possible -371145.88 (9376.42 seconds)
Cbc0010I After 49 nodes, 31 on tree, 1e+50 best solution, best possible -371145.88 (9378.27 seconds)
Cbc0010I After 50 nodes, 31 on tree, 1e+50 best solution, best possible -371145.88 (9382.38 seconds)
Cbc0010I After 51 nodes, 32 on tree, 1e+50 best solution, best possible -371145.88 (9392.66 seconds)
Cbc0010I After 52 nodes, 32 on tree, 1e+50 best solution, best possible -371145.88 (9399.65 seconds)
Cbc0010I After 53 nodes, 33 on tree, 1e+50 best solution, best possible -371145.88 (9536.68 seconds)
Cbc0010I After 54 nodes, 33 on tree, 1e+50 best solution, best possible -371145.88 (9681.31 seconds)
Cbc0010I After 55 nodes, 34 on tree, 1e+50 best solution, best possible -371145.88 (9685.73 seconds)
Cbc0010I After 56 nodes, 35 on tree, 1e+50 best solution, best possible -371145.88 (9774.47 seconds)
Cbc0010I After 57 nodes, 35 on tree, 1e+50 best solution, best possible -371145.88 (9956.90 seconds)
Cbc0010I After 58 nodes, 35 on tree, 1e+50 best solution, best possible -371145.88 (9963.79 seconds)
Cbc0010I After 59 nodes, 36 on tree, 1e+50 best solution, best possible -371145.88 (9965.52 seconds)
Cbc0010I After 60 nodes, 36 on tree, 1e+50 best solution, best possible -371145.88 (9973.33 seconds)
Cbc0010I After 61 nodes, 37 on tree, 1e+50 best solution, best possible -371145.88 (9978.01 seconds)
Cbc0010I After 62 nodes, 37 on tree, 1e+50 best solution, best possible -371145.88 (10121.63 seconds)
Cbc0010I After 63 nodes, 36 on tree, 1e+50 best solution, best possible -371145.88 (10274.70 seconds)
Cbc0010I After 64 nodes, 36 on tree, 1e+50 best solution, best possible -371145.88 (10276.75 seconds)
Cbc0010I After 65 nodes, 37 on tree, 1e+50 best solution, best possible -371145.88 (10475.01 seconds)
Cbc0010I After 66 nodes, 37 on tree, 1e+50 best solution, best possible -371145.88 (10669.67 seconds)
Cbc0010I After 67 nodes, 38 on tree, 1e+50 best solution, best possible -371145.88 (10670.92 seconds)
Cbc0010I After 68 nodes, 38 on tree, 1e+50 best solution, best possible -371145.88 (10675.86 seconds)
Cbc0010I After 69 nodes, 39 on tree, 1e+50 best solution, best possible -371145.88 (10683.79 seconds)
Cbc0010I After 70 nodes, 39 on tree, 1e+50 best solution, best possible -371145.88 (10685.28 seconds)
Cbc0010I After 71 nodes, 40 on tree, 1e+50 best solution, best possible -371145.88 (10691.47 seconds)
Cbc0010I After 72 nodes, 40 on tree, 1e+50 best solution, best possible -371145.88 (10700.05 seconds)
Cbc0010I After 73 nodes, 41 on tree, 1e+50 best solution, best possible -371145.88 (10704.72 seconds)
Cbc0010I After 74 nodes, 41 on tree, 1e+50 best solution, best possible -371145.88 (10708.53 seconds)
Cbc0010I After 75 nodes, 42 on tree, 1e+50 best solution, best possible -371145.88 (10722.06 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -371145.88), took 101315 iterations and 76 nodes (10814.17 seconds)
Cbc0032I Strong branching done 608 times (6897 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 25, 0 variables fixed on reduced cost
Cuts at root node changed objective from -406658 to -371146
Probing was tried 133 times and created 306 cuts of which 33 were active after adding rounds of cuts (75.029 seconds)
Gomory was tried 133 times and created 260 cuts of which 0 were active after adding rounds of cuts (460.903 seconds)
Knapsack was tried 133 times and created 127 cuts of which 0 were active after adding rounds of cuts (21.0686 seconds)
liftKnapsack was tried 133 times and created 9466 cuts of which 0 were active after adding rounds of cuts (4959.06 seconds)
Clique was tried 50 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.482375 seconds)
OddWheel was tried 50 times and created 0 cuts of which 0 were active after adding rounds of cuts (2.72899 seconds)
MixedIntegerRounding2 was tried 50 times and created 3 cuts of which 0 were active after adding rounds of cuts (379.534 seconds)
FlowCover was tried 50 times and created 0 cuts of which 0 were active after adding rounds of cuts (2.00029 seconds)
TwoMirCuts was tried 50 times and created 109 cuts of which 0 were active after adding rounds of cuts (120.022 seconds)
ZeroHalf was tried 50 times and created 1143 cuts of which 0 were active after adding rounds of cuts (778.81 seconds)

Result - Stopped on time limit
No feasible solution found
Lower bound:                    -371146
Enumerated nodes:               76
Total iterations:               101315
Time (CPU seconds):             9211.67
Time (Wallclock seconds):       10814.3
Total time (CPU seconds):       9214.48   (Wallclock seconds):       10818.6
