Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/gr4x6.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/gr4x6.txt -quit (default strategy 1)
At line 2 NAME          gr4x6
At line 3 ROWS
At line 39 COLUMNS
At line 186 RHS
At line 197 BOUNDS
At line 222 ENDATA
Problem gr4x6 has 34 rows, 48 columns and 96 elements
Coin0008I gr4x6 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 185.55 - 0.000694 seconds
Cgl0004I processed model has 34 rows, 48 columns (24 integer (24 of which binary)) and 96 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.515%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.83333
Cbc0038I Pass   1: suminf.    0.83333 (3) obj. 192.85 iterations 7
Cbc0038I Solution found of 226.35
Cbc0038I Relaxing continuous gives 226.35
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 18 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 222.27
Cbc0038I Pass   2: suminf.    0.83333 (3) obj. 192.85 iterations 0
Cbc0038I Pass   3: suminf.    0.24001 (1) obj. 222.27 iterations 4
Cbc0038I Pass   4: suminf.    0.14286 (1) obj. 212.4 iterations 2
Cbc0038I Pass   5: suminf.    0.13313 (1) obj. 222.27 iterations 3
Cbc0038I Pass   6: suminf.    0.50000 (1) obj. 216.4 iterations 2
Cbc0038I Pass   7: suminf.    0.88355 (3) obj. 222.27 iterations 7
Cbc0038I Pass   8: suminf.    0.50000 (2) obj. 216.517 iterations 4
Cbc0038I Pass   9: suminf.    0.47376 (2) obj. 222.27 iterations 5
Cbc0038I Pass  10: suminf.    0.46349 (2) obj. 222.27 iterations 3
Cbc0038I Pass  11: suminf.    0.91095 (3) obj. 222.27 iterations 4
Cbc0038I Pass  12: suminf.    0.33333 (2) obj. 215.35 iterations 5
Cbc0038I Pass  13: suminf.    0.33333 (2) obj. 215.35 iterations 1
Cbc0038I Pass  14: suminf.    0.56751 (2) obj. 222.27 iterations 4
Cbc0038I Pass  15: suminf.    0.55724 (2) obj. 222.27 iterations 2
Cbc0038I Pass  16: suminf.    0.82761 (3) obj. 222.27 iterations 4
Cbc0038I Pass  17: suminf.    0.90867 (3) obj. 222.27 iterations 9
Cbc0038I Pass  18: suminf.    0.78821 (3) obj. 222.27 iterations 4
Cbc0038I Pass  19: suminf.    0.25501 (2) obj. 222.27 iterations 7
Cbc0038I Pass  20: suminf.    0.24474 (2) obj. 222.27 iterations 2
Cbc0038I Pass  21: suminf.    0.83905 (3) obj. 222.27 iterations 6
Cbc0038I Pass  22: suminf.    0.93276 (3) obj. 222.27 iterations 4
Cbc0038I Pass  23: suminf.    0.90215 (2) obj. 222.27 iterations 2
Cbc0038I Pass  24: suminf.    1.07594 (3) obj. 222.27 iterations 3
Cbc0038I Pass  25: suminf.    0.71129 (3) obj. 222.27 iterations 4
Cbc0038I Pass  26: suminf.    0.19529 (1) obj. 222.27 iterations 10
Cbc0038I Pass  27: suminf.    0.14286 (1) obj. 222 iterations 3
Cbc0038I Pass  28: suminf.    0.16214 (1) obj. 222.27 iterations 4
Cbc0038I Pass  29: suminf.    1.15756 (3) obj. 222.27 iterations 8
Cbc0038I Pass  30: suminf.    1.15756 (3) obj. 222.27 iterations 2
Cbc0038I Pass  31: suminf.    0.33333 (1) obj. 221.233 iterations 8
Cbc0038I Rounding solution of 218.3 is better than previous of 226.35
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 10 continuous
Cbc0038I Full problem 34 rows 48 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 218.3 to 212.1 (1.24 seconds)
Cbc0038I Round again with cutoff of 206.79
Cbc0038I Pass  31: suminf.    0.83333 (3) obj. 192.85 iterations 0
Cbc0038I Pass  32: suminf.    0.50375 (2) obj. 206.79 iterations 4
Cbc0038I Pass  33: suminf.    0.49349 (2) obj. 206.79 iterations 1
Cbc0038I Pass  34: suminf.    0.87666 (3) obj. 206.79 iterations 4
Cbc0038I Pass  35: suminf.    0.50000 (2) obj. 201.517 iterations 2
Cbc0038I Pass  36: suminf.    0.82871 (3) obj. 206.79 iterations 3
Cbc0038I Pass  37: suminf.    0.33333 (2) obj. 200.35 iterations 2
Cbc0038I Pass  38: suminf.    0.59750 (2) obj. 206.79 iterations 4
Cbc0038I Pass  39: suminf.    0.58724 (2) obj. 206.79 iterations 1
Cbc0038I Pass  40: suminf.    0.79333 (3) obj. 206.79 iterations 5
Cbc0038I Pass  41: suminf.    1.83458 (5) obj. 206.79 iterations 11
Cbc0038I Pass  42: suminf.    1.70339 (6) obj. 206.79 iterations 1
Cbc0038I Pass  43: suminf.    1.16282 (4) obj. 206.79 iterations 12
Cbc0038I Pass  44: suminf.    1.16282 (4) obj. 206.79 iterations 1
Cbc0038I Pass  45: suminf.    1.38303 (4) obj. 206.79 iterations 4
Cbc0038I Pass  46: suminf.    1.16282 (4) obj. 206.79 iterations 7
Cbc0038I Pass  47: suminf.    0.29599 (1) obj. 206.79 iterations 14
Cbc0038I Solution found of 202.35
Cbc0038I Relaxing continuous gives 202.35
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 7 continuous
Cbc0038I Full problem 34 rows 48 columns, reduced to 25 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (4.67 seconds)
Cbc0038I Round again with cutoff of 197.31
Cbc0038I Pass  48: suminf.    0.83333 (3) obj. 192.85 iterations 0
Cbc0038I Pass  49: suminf.    0.82360 (3) obj. 197.31 iterations 3
Cbc0038I Pass  50: suminf.    0.82360 (3) obj. 197.31 iterations 0
Cbc0038I Pass  51: suminf.    1.09958 (3) obj. 197.31 iterations 6
Cbc0038I Pass  52: suminf.    0.83333 (3) obj. 192.85 iterations 3
Cbc0038I Pass  53: suminf.    0.98492 (6) obj. 197.31 iterations 9
Cbc0038I Pass  54: suminf.    0.66667 (2) obj. 194.967 iterations 7
Cbc0038I Pass  55: suminf.    0.81975 (2) obj. 197.31 iterations 4
Cbc0038I Pass  56: suminf.    0.81975 (2) obj. 197.31 iterations 2
Cbc0038I Pass  57: suminf.    0.81312 (2) obj. 197.31 iterations 5
Cbc0038I Pass  58: suminf.    1.97117 (6) obj. 197.31 iterations 8
Cbc0038I Pass  59: suminf.    1.69888 (5) obj. 197.31 iterations 3
Cbc0038I Pass  60: suminf.    1.99106 (5) obj. 197.31 iterations 6
Cbc0038I Pass  61: suminf.    1.59344 (8) obj. 197.31 iterations 7
Cbc0038I Pass  62: suminf.    1.39676 (6) obj. 197.31 iterations 1
Cbc0038I Pass  63: suminf.    0.87103 (3) obj. 197.31 iterations 8
Cbc0038I Pass  64: suminf.    0.81975 (2) obj. 197.31 iterations 3
Cbc0038I Pass  65: suminf.    0.81312 (2) obj. 197.31 iterations 5
Cbc0038I Pass  66: suminf.    0.66667 (2) obj. 194.967 iterations 4
Cbc0038I Pass  67: suminf.    0.81975 (2) obj. 197.31 iterations 3
Cbc0038I Pass  68: suminf.    0.82288 (3) obj. 197.31 iterations 2
Cbc0038I Pass  69: suminf.    1.39901 (4) obj. 197.31 iterations 5
Cbc0038I Pass  70: suminf.    1.09025 (4) obj. 197.31 iterations 7
Cbc0038I Pass  71: suminf.    0.66667 (3) obj. 191.683 iterations 2
Cbc0038I Pass  72: suminf.    0.56718 (3) obj. 197.31 iterations 4
Cbc0038I Pass  73: suminf.    0.56718 (3) obj. 197.31 iterations 1
Cbc0038I Pass  74: suminf.    1.00583 (3) obj. 197.31 iterations 7
Cbc0038I Pass  75: suminf.    0.56718 (3) obj. 197.31 iterations 5
Cbc0038I Pass  76: suminf.    0.56718 (3) obj. 197.31 iterations 4
Cbc0038I Pass  77: suminf.    1.29152 (5) obj. 197.31 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 9 continuous
Cbc0038I Full problem 34 rows 48 columns, reduced to 21 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (7.19 seconds)
Cbc0038I After 7.19 seconds - Feasibility pump exiting with objective of 202.35 - took 20.78 seconds
Cbc0012I Integer solution of 202.35 found by feasibility pump after 0 iterations and 0 nodes (7.19 seconds)
Cbc0031I 8 added rows had average density of 7.25
Cbc0013I At root node, 29 cuts changed objective from 185.55 to 202.35 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 9 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 7 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 3 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (TwoMirCuts) - 11 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective 202.35, took 17 iterations and 0 nodes (7.49 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 185.55 to 202.35
Probing was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000903 seconds)
Gomory was tried 2 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.000852 seconds)
Knapsack was tried 2 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.00128 seconds)
liftKnapsack was tried 2 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.007502 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (7.1e-05 seconds)
OddWheel was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (7e-05 seconds)
MixedIntegerRounding2 was tried 2 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.001192 seconds)
FlowCover was tried 2 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000549 seconds)
TwoMirCuts was tried 2 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.001956 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (7e-06 seconds)

Result - Optimal solution found
Objective value:                202.35
Enumerated nodes:               0
Total iterations:               17
Time (CPU seconds):             21.7449
Time (Wallclock seconds):       7.50307
Total time (CPU seconds):       21.7574   (Wallclock seconds):       7.5103
