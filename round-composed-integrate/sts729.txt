Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/sts729.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/sts729.txt -quit (default strategy 1)
At line 1 NAME           sts729
At line 2 ROWS
At line 88456 COLUMNS
At line 354544 RHS
At line 442997 BOUNDS
At line 443727 ENDATA
Problem sts729 has 88452 rows, 729 columns and 265356 elements
Coin0008I sts729 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 243 - 15.3124 seconds
Cgl0004I processed model has 88452 rows, 729 columns (729 integer (729 of which binary)) and 265356 elements
Coin3009W Conflict graph built in 0.013 seconds, density: 0.069%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 729 integers unsatisfied sum - 243
Cbc0038I Pass   1: (23.25 seconds) suminf.  243.00000 (729) obj. 243 iterations 173
Cbc0038I Pass   2: (37.33 seconds) suminf.  237.33333 (712) obj. 254.333 iterations 513
Cbc0038I Pass   3: (54.76 seconds) suminf.  229.00000 (687) obj. 271 iterations 564
Cbc0038I Pass   4: (66.43 seconds) suminf.  222.00000 (666) obj. 285 iterations 450
Cbc0038I Pass   5: (76.07 seconds) suminf.  218.00000 (654) obj. 293 iterations 347
Cbc0038I Pass   6: (85.48 seconds) suminf.  212.66667 (638) obj. 303.667 iterations 331
Cbc0038I Pass   7: (94.17 seconds) suminf.  208.33333 (625) obj. 312.333 iterations 343
Cbc0038I Pass   8: (107.60 seconds) suminf.  200.66667 (602) obj. 327.667 iterations 512
Cbc0038I Pass   9: (121.33 seconds) suminf.  191.66667 (575) obj. 345.667 iterations 463
Cbc0038I Pass  10: (131.78 seconds) suminf.  182.33333 (547) obj. 364.333 iterations 483
Cbc0038I Pass  11: (138.17 seconds) suminf.  174.66667 (524) obj. 379.667 iterations 348
Cbc0038I Pass  12: (144.52 seconds) suminf.  170.33333 (511) obj. 388.333 iterations 333
Cbc0038I Pass  13: (150.16 seconds) suminf.  165.00000 (495) obj. 399 iterations 264
Cbc0038I Pass  14: (154.94 seconds) suminf.  161.00000 (483) obj. 407 iterations 240
Cbc0038I Pass  15: (160.87 seconds) suminf.  153.00000 (459) obj. 423 iterations 345
Cbc0038I Pass  16: (165.35 seconds) suminf.  149.66667 (449) obj. 429.667 iterations 224
Cbc0038I Pass  17: (173.62 seconds) suminf.  140.00000 (420) obj. 449 iterations 367
Cbc0038I Pass  18: (177.65 seconds) suminf.  135.66667 (407) obj. 457.667 iterations 188
Cbc0038I Pass  19: (181.35 seconds) suminf.  132.33333 (397) obj. 464.333 iterations 191
Cbc0038I Pass  20: (186.77 seconds) suminf.  123.33333 (370) obj. 482.333 iterations 311
Cbc0038I Pass  21: (191.44 seconds) suminf.  115.66667 (347) obj. 497.667 iterations 288
Cbc0038I Pass  22: (197.01 seconds) suminf.  109.33333 (328) obj. 510.333 iterations 270
Cbc0038I Pass  23: (200.77 seconds) suminf.  106.00000 (318) obj. 517 iterations 170
Cbc0038I Pass  24: (207.15 seconds) suminf.   96.33333 (289) obj. 536.333 iterations 284
Cbc0038I Pass  25: (210.62 seconds) suminf.   89.66667 (269) obj. 549.667 iterations 198
Cbc0038I Pass  26: (214.82 seconds) suminf.   82.66667 (248) obj. 563.667 iterations 225
Cbc0038I Pass  27: (218.78 seconds) suminf.   74.33333 (223) obj. 580.333 iterations 220
Cbc0038I Pass  28: (221.10 seconds) suminf.   68.33333 (205) obj. 592.333 iterations 132
Cbc0038I Pass  29: (222.93 seconds) suminf.   63.00000 (189) obj. 603 iterations 146
Cbc0038I Pass  30: (224.09 seconds) suminf.   59.00000 (177) obj. 611 iterations 131
Cbc0038I Rounding solution of 665 is better than previous of 1e+50
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88452 rows 729 columns, reduced to 88452 rows 729 columns - too large
Cbc0038I Mini branch and bound did not improve solution (225.31 seconds)
Cbc0038I Round again with cutoff of 621.9
Cbc0038I Pass  30: (225.52 seconds) suminf.  243.00000 (729) obj. 243 iterations 0
Cbc0038I Pass  31: (238.85 seconds) suminf.  233.66667 (701) obj. 261.667 iterations 573
Cbc0038I Pass  32: (254.77 seconds) suminf.  225.00000 (675) obj. 279 iterations 592
Cbc0038I Pass  33: (264.13 seconds) suminf.  221.66667 (665) obj. 285.667 iterations 331
Cbc0038I Pass  34: (280.34 seconds) suminf.  216.00000 (648) obj. 297 iterations 542
Cbc0038I Pass  35: (295.09 seconds) suminf.  208.66667 (626) obj. 311.667 iterations 542
Cbc0038I Pass  36: (305.85 seconds) suminf.  203.33333 (610) obj. 322.333 iterations 390
Cbc0038I Pass  37: (313.55 seconds) suminf.  198.33333 (595) obj. 332.333 iterations 348
Cbc0038I Pass  38: (324.58 seconds) suminf.  192.66667 (578) obj. 343.667 iterations 388
Cbc0038I Pass  39: (332.33 seconds) suminf.  189.33333 (568) obj. 350.333 iterations 279
Cbc0038I Pass  40: (343.58 seconds) suminf.  182.33333 (547) obj. 364.333 iterations 414
Cbc0038I Pass  41: (350.27 seconds) suminf.  179.00000 (537) obj. 371 iterations 247
Cbc0038I Pass  42: (360.28 seconds) suminf.  170.33333 (511) obj. 388.333 iterations 399
Cbc0038I Pass  43: (367.67 seconds) suminf.  163.66667 (491) obj. 401.667 iterations 280
Cbc0038I Pass  44: (378.18 seconds) suminf.  155.00000 (465) obj. 419 iterations 374
Cbc0038I Pass  45: (387.50 seconds) suminf.  145.66667 (437) obj. 437.667 iterations 378
Cbc0038I Pass  46: (394.68 seconds) suminf.  137.00000 (411) obj. 455 iterations 300
Cbc0038I Pass  47: (406.28 seconds) suminf.  127.33333 (382) obj. 474.333 iterations 426
Cbc0038I Pass  48: (413.32 seconds) suminf.  121.33333 (364) obj. 486.333 iterations 305
Cbc0038I Pass  49: (420.86 seconds) suminf.  111.66667 (335) obj. 505.667 iterations 336
Cbc0038I Pass  50: (427.60 seconds) suminf.  102.33333 (307) obj. 524.333 iterations 312
Cbc0038I Pass  51: (430.39 seconds) suminf.   98.33333 (295) obj. 532.333 iterations 139
Cbc0038I Pass  52: (434.47 seconds) suminf.   93.66667 (281) obj. 541.667 iterations 197
Cbc0038I Pass  53: (438.43 seconds) suminf.   84.33333 (253) obj. 560.333 iterations 237
Cbc0038I Pass  54: (441.20 seconds) suminf.   76.00000 (228) obj. 577 iterations 218
Cbc0038I Pass  55: (444.10 seconds) suminf.   67.66667 (203) obj. 593.667 iterations 213
Cbc0038I Pass  56: (445.16 seconds) suminf.   64.33333 (193) obj. 600.333 iterations 108
Cbc0038I Pass  57: (447.01 seconds) suminf.   57.00000 (171) obj. 615 iterations 146
Cbc0038I Pass  58: (449.31 seconds) suminf.   53.76658 (161) obj. 621.9 iterations 194
Cbc0038I Pass  59: (450.80 seconds) suminf.   53.76658 (161) obj. 621.9 iterations 70
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88452 rows 729 columns, reduced to 88452 rows 729 columns - too large
Cbc0038I Mini branch and bound did not improve solution (453.14 seconds)
Cbc0038I After 453.14 seconds - Feasibility pump exiting with objective of 665 - took 390.46 seconds
Cbc0012I Integer solution of 665 found by feasibility pump after 0 iterations and 0 nodes (453.23 seconds)
Cbc0031I 184 added rows had average density of 594.11957
Cbc0013I At root node, 184 cuts changed objective from 243 to 246.54213 in 46 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 5.835 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 4219 row cuts average 537.6 elements, 0 column cuts (0 active)  in 162.957 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 12.151 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 265.976 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 37.052 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.729 seconds - new frequency is -100
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 665 (best possible 246.54213), took 347728 iterations and 0 nodes (10827.54 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 243 to 246.542
Probing was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (5.83504 seconds)
Gomory was tried 46 times and created 4219 cuts of which 0 were active after adding rounds of cuts (162.957 seconds)
Knapsack was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (12.1507 seconds)
liftKnapsack was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (265.976 seconds)
Clique was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001139 seconds)
OddWheel was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001305 seconds)
MixedIntegerRounding2 was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (37.0521 seconds)
FlowCover was tried 46 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.728543 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (2.0345 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (90.6656 seconds)

Result - Stopped on time limit
Objective value:                665
Lower bound:                    246.542
Gap:                            1.69731
Enumerated nodes:               0
Total iterations:               347728
Time (CPU seconds):             13666.5
Time (Wallclock seconds):       11144.2
Total time (CPU seconds):       13667.2   (Wallclock seconds):       11145
