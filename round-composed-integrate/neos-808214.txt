Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/neos-808214.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/neos-808214.txt -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 644 COLUMNS
At line 23230 RHS
At line 23871 BOUNDS
At line 25180 ENDATA
Problem file has 640 rows, 1308 columns and 22530 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.248325 seconds
Cgl0003I 84 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 631 rows, 1224 columns (1224 integer (1224 of which binary)) and 20820 elements
Coin3009W Conflict graph built in 0.024 seconds, density: 1.212%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 53 integer variables out of 1224 objects (1224 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 184 integers unsatisfied sum - 47.1931
Cbc0038I Pass   1: suminf.   25.28049 (132) obj. -3.55271e-15 iterations 499
Cbc0038I Pass   2: suminf.   22.44291 (143) obj. 0.0380623 iterations 259
Cbc0038I Pass   3: suminf.   20.56250 (136) obj. 2.22045e-15 iterations 209
Cbc0038I Pass   4: suminf.   19.08473 (152) obj. 0.191663 iterations 170
Cbc0038I Pass   5: suminf.   17.88732 (135) obj. 0.084507 iterations 149
Cbc0038I Pass   6: suminf.   16.83735 (141) obj. 0.0180723 iterations 142
Cbc0038I Pass   7: suminf.   16.37719 (124) obj. 0.0146199 iterations 160
Cbc0038I Pass   8: suminf.   15.46875 (99) obj. 0 iterations 398
Cbc0038I Pass   9: suminf.   15.00000 (49) obj. 0 iterations 200
Cbc0038I Pass  10: suminf.   14.95708 (133) obj. 0.0343348 iterations 172
Cbc0038I Pass  11: suminf.   16.13372 (115) obj. -1.33227e-15 iterations 507
Cbc0038I Pass  12: suminf.   14.85714 (68) obj. 2.55351e-15 iterations 438
Cbc0038I Pass  13: suminf.   14.77778 (68) obj. -2.88658e-15 iterations 83
Cbc0038I Pass  14: suminf.   14.44444 (67) obj. -1.9984e-15 iterations 107
Cbc0038I Pass  15: suminf.   14.43333 (78) obj. 1.77636e-15 iterations 97
Cbc0038I Pass  16: suminf.   16.00000 (32) obj. -4.93489e-15 iterations 789
Cbc0038I Pass  17: suminf.   16.00000 (32) obj. 4.32987e-15 iterations 177
Cbc0038I Pass  18: suminf.   16.00000 (32) obj. 1.9984e-15 iterations 280
Cbc0038I Pass  19: suminf.   16.00000 (32) obj. -1.15278e-14 iterations 311
Cbc0038I Pass  20: suminf.   16.00000 (32) obj. 2.18549e-15 iterations 352
Cbc0038I Pass  21: suminf.   14.00000 (28) obj. -4.52812e-15 iterations 306
Cbc0038I Pass  22: suminf.   14.00000 (28) obj. 0 iterations 235
Cbc0038I Pass  23: suminf.   14.00000 (28) obj. -1.65423e-14 iterations 247
Cbc0038I Pass  24: suminf.   14.00000 (28) obj. 0 iterations 263
Cbc0038I Pass  25: suminf.   14.00000 (28) obj. -1.93496e-15 iterations 207
Cbc0038I Pass  26: suminf.   14.00000 (28) obj. 4.55553e-15 iterations 336
Cbc0038I Pass  27: suminf.   14.00000 (28) obj. -1.36692e-14 iterations 336
Cbc0038I Pass  28: suminf.   14.00000 (28) obj. 0 iterations 291
Cbc0038I Pass  29: suminf.   14.00000 (28) obj. 2.66454e-15 iterations 426
Cbc0038I Pass  30: suminf.   14.00000 (28) obj. -1.77636e-15 iterations 304
Cbc0038I Pass  31: suminf.   14.00000 (28) obj. 1.12255e-14 iterations 254
Cbc0038I Pass  32: suminf.   14.00000 (28) obj. 6.58732e-15 iterations 251
Cbc0038I Pass  33: suminf.   14.00000 (28) obj. -1.53433e-14 iterations 151
Cbc0038I Pass  34: suminf.   14.00000 (28) obj. 0 iterations 270
Cbc0038I Pass  35: suminf.   14.00000 (28) obj. 2.44249e-15 iterations 253
Cbc0038I Pass  36: suminf.   14.00000 (28) obj. 1.29566e-14 iterations 331
Cbc0038I Pass  37: suminf.   14.00000 (28) obj. -2.09277e-14 iterations 321
Cbc0038I Pass  38: suminf.   14.00000 (28) obj. 1.66533e-15 iterations 184
Cbc0038I Pass  39: suminf.   14.00000 (28) obj. -2.77556e-15 iterations 153
Cbc0038I Pass  40: suminf.   14.00000 (28) obj. -4.21885e-15 iterations 307
Cbc0038I Pass  41: suminf.   14.00000 (28) obj. 3.33067e-15 iterations 329
Cbc0038I Pass  42: suminf.   14.00000 (28) obj. 1.55431e-15 iterations 265
Cbc0038I Pass  43: suminf.   14.00000 (28) obj. -1.33227e-15 iterations 309
Cbc0038I Pass  44: suminf.   14.00000 (28) obj. -1.11022e-15 iterations 179
Cbc0038I Pass  45: suminf.   14.00000 (28) obj. 3.88578e-15 iterations 389
Cbc0038I Pass  46: suminf.   14.00000 (28) obj. 0 iterations 199
Cbc0038I Pass  47: suminf.   14.00000 (28) obj. 0 iterations 319
Cbc0038I Pass  48: suminf.   14.00000 (28) obj. 5.10703e-15 iterations 182
Cbc0038I Pass  49: suminf.   14.00000 (28) obj. 0 iterations 183
Cbc0038I Pass  50: suminf.   14.00000 (28) obj. -8.71806e-15 iterations 196
Cbc0038I Pass  51: suminf.   14.00000 (28) obj. 8.60548e-15 iterations 287
Cbc0038I Pass  52: suminf.   14.00000 (28) obj. 4.88498e-15 iterations 157
Cbc0038I Pass  53: suminf.   14.00000 (28) obj. -2.65313e-14 iterations 260
Cbc0038I Pass  54: suminf.   14.00000 (28) obj. 0 iterations 234
Cbc0038I Pass  55: suminf.   14.00000 (28) obj. -9.99201e-15 iterations 282
Cbc0038I Pass  56: suminf.   14.00000 (28) obj. -2.68316e-14 iterations 221
Cbc0038I Pass  57: suminf.   14.00000 (28) obj. -1.16573e-14 iterations 225
Cbc0038I Pass  58: suminf.   14.00000 (28) obj. 0 iterations 278
Cbc0038I Pass  59: suminf.   14.00000 (28) obj. 0 iterations 230
Cbc0038I Pass  60: suminf.   14.00000 (28) obj. -5.55112e-16 iterations 193
Cbc0038I Pass  61: suminf.   14.00000 (28) obj. 1.19097e-15 iterations 304
Cbc0038I Pass  62: suminf.   14.00000 (28) obj. 8.77508e-15 iterations 276
Cbc0038I Pass  63: suminf.   14.00000 (28) obj. -1.03152e-17 iterations 228
Cbc0038I Pass  64: suminf.   14.00000 (28) obj. -2.8004e-15 iterations 207
Cbc0038I Pass  65: suminf.   14.00000 (28) obj. 0 iterations 298
Cbc0038I Pass  66: suminf.   14.00000 (28) obj. 0 iterations 232
Cbc0038I Pass  67: suminf.   14.00000 (28) obj. 0 iterations 182
Cbc0038I Pass  68: suminf.   50.48599 (202) obj. 2.92559 iterations 708
Cbc0038I Pass  69: suminf.   27.88928 (154) obj. 3.60736 iterations 402
Cbc0038I Pass  70: suminf.   19.02336 (144) obj. 3.61028 iterations 330
Cbc0038I Pass  71: suminf.   14.28571 (79) obj. 3.77143 iterations 410
Cbc0038I Pass  72: suminf.   10.50000 (40) obj. 4 iterations 389
Cbc0038I Pass  73: suminf.    9.50000 (34) obj. 4 iterations 189
Cbc0038I Pass  74: suminf.    9.50000 (34) obj. 4 iterations 136
Cbc0038I Pass  75: suminf.    9.50000 (34) obj. 4 iterations 81
Cbc0038I Pass  76: suminf.    9.50000 (34) obj. 4 iterations 74
Cbc0038I Pass  77: suminf.    9.50000 (34) obj. 4 iterations 94
Cbc0038I Pass  78: suminf.   53.03264 (198) obj. 4.41311 iterations 689
Cbc0038I Pass  79: suminf.   27.67304 (137) obj. 3.834 iterations 425
Cbc0038I Pass  80: suminf.   16.00000 (97) obj. 3.69231 iterations 282
Cbc0038I Pass  81: suminf.   14.01527 (100) obj. 3.5458 iterations 220
Cbc0038I Pass  82: suminf.   13.83333 (66) obj. 3.83333 iterations 94
Cbc0038I Pass  83: suminf.   14.33333 (54) obj. 4 iterations 572
Cbc0038I Pass  84: suminf.   13.50000 (69) obj. 3.875 iterations 210
Cbc0038I Pass  85: suminf.   13.15033 (115) obj. 3.84967 iterations 232
Cbc0038I Pass  86: suminf.   14.10472 (127) obj. 3.87736 iterations 508
Cbc0038I Pass  87: suminf.   11.55556 (63) obj. 3.88889 iterations 414
Cbc0038I Pass  88: suminf.   11.55556 (63) obj. 3.88889 iterations 47
Cbc0038I Pass  89: suminf.    9.95485 (113) obj. 4.83134 iterations 528
Cbc0038I Pass  90: suminf.    8.00000 (16) obj. 5 iterations 573
Cbc0038I Pass  91: suminf.    8.00000 (16) obj. 5 iterations 90
Cbc0038I Pass  92: suminf.    8.00000 (16) obj. 5 iterations 147
Cbc0038I Pass  93: suminf.    8.00000 (16) obj. 5 iterations 181
Cbc0038I Pass  94: suminf.    8.00000 (16) obj. 5 iterations 242
Cbc0038I Pass  95: suminf.    8.00000 (16) obj. 5 iterations 181
Cbc0038I Pass  96: suminf.    8.00000 (16) obj. 5 iterations 244
Cbc0038I Pass  97: suminf.    8.00000 (16) obj. 5 iterations 62
Cbc0038I Pass  98: suminf.    8.00000 (16) obj. 5 iterations 166
Cbc0038I Pass  99: suminf.    8.00000 (16) obj. 5 iterations 158
Cbc0038I Pass 100: suminf.   52.76754 (202) obj. 1.80371 iterations 639
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 332 integers at bound fixed and 0 continuous
Cbc0038I Full problem 631 rows 1224 columns, reduced to 573 rows 892 columns - too large
Cbc0038I Mini branch and bound did not improve solution (14.20 seconds)
Cbc0038I Full problem 632 rows 1224 columns, reduced to 632 rows 1224 columns - too large
Cbc0038I After 15.32 seconds - Feasibility pump exiting - took 14.46 seconds
Cbc0031I 9 added rows had average density of 11
Cbc0013I At root node, 9 cuts changed objective from 0 to 5 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.524 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 52.8 elements, 0 column cuts (0 active)  in 0.535 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 23.075 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 32 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 9 row cuts average 92.1 elements, 0 column cuts (0 active)  in 0.290 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 6 row cuts average 76.5 elements, 0 column cuts (0 active)  in 0.331 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 5 (41.89 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 5 (42.76 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 5 (43.61 seconds)
Cbc0010I After 15 nodes, 15 on tree, 1e+50 best solution, best possible 5 (44.40 seconds)
Cbc0010I After 22 nodes, 22 on tree, 1e+50 best solution, best possible 5 (45.17 seconds)
Cbc0010I After 31 nodes, 30 on tree, 1e+50 best solution, best possible 5 (45.91 seconds)
Cbc0010I After 44 nodes, 37 on tree, 1e+50 best solution, best possible 5 (46.63 seconds)
Cbc0010I After 69 nodes, 36 on tree, 1e+50 best solution, best possible 5 (47.35 seconds)
Cbc0010I After 93 nodes, 36 on tree, 1e+50 best solution, best possible 5 (48.07 seconds)
Cbc0010I After 117 nodes, 39 on tree, 1e+50 best solution, best possible 5 (48.78 seconds)
Cbc0010I After 138 nodes, 40 on tree, 1e+50 best solution, best possible 5 (49.49 seconds)
Cbc0010I After 159 nodes, 38 on tree, 1e+50 best solution, best possible 5 (50.24 seconds)
Cbc0010I After 181 nodes, 36 on tree, 1e+50 best solution, best possible 5 (50.97 seconds)
Cbc0010I After 204 nodes, 35 on tree, 1e+50 best solution, best possible 5 (51.68 seconds)
Cbc0010I After 221 nodes, 39 on tree, 1e+50 best solution, best possible 5 (52.40 seconds)
Cbc0010I After 246 nodes, 39 on tree, 1e+50 best solution, best possible 5 (53.10 seconds)
Cbc0010I After 268 nodes, 41 on tree, 1e+50 best solution, best possible 5 (53.82 seconds)
Cbc0010I After 296 nodes, 39 on tree, 1e+50 best solution, best possible 5 (54.56 seconds)
Cbc0010I After 320 nodes, 39 on tree, 1e+50 best solution, best possible 5 (55.28 seconds)
Cbc0010I After 346 nodes, 39 on tree, 1e+50 best solution, best possible 5 (55.99 seconds)
Cbc0010I After 374 nodes, 36 on tree, 1e+50 best solution, best possible 5 (56.72 seconds)
Cbc0010I After 396 nodes, 39 on tree, 1e+50 best solution, best possible 5 (57.44 seconds)
Cbc0010I After 424 nodes, 39 on tree, 1e+50 best solution, best possible 5 (58.16 seconds)
Cbc0010I After 449 nodes, 42 on tree, 1e+50 best solution, best possible 5 (58.88 seconds)
Cbc0010I After 470 nodes, 39 on tree, 1e+50 best solution, best possible 5 (59.59 seconds)
Cbc0010I After 498 nodes, 39 on tree, 1e+50 best solution, best possible 5 (60.30 seconds)
Cbc0010I After 523 nodes, 38 on tree, 1e+50 best solution, best possible 5 (61.00 seconds)
Cbc0010I After 552 nodes, 41 on tree, 1e+50 best solution, best possible 5 (61.73 seconds)
Cbc0010I After 578 nodes, 37 on tree, 1e+50 best solution, best possible 5 (62.47 seconds)
Cbc0010I After 602 nodes, 35 on tree, 1e+50 best solution, best possible 5 (63.20 seconds)
Cbc0010I After 626 nodes, 36 on tree, 1e+50 best solution, best possible 5 (63.91 seconds)
Cbc0010I After 650 nodes, 37 on tree, 1e+50 best solution, best possible 5 (64.64 seconds)
Cbc0010I After 669 nodes, 35 on tree, 1e+50 best solution, best possible 5 (65.35 seconds)
Cbc0010I After 688 nodes, 37 on tree, 1e+50 best solution, best possible 5 (66.07 seconds)
Cbc0010I After 710 nodes, 40 on tree, 1e+50 best solution, best possible 5 (66.78 seconds)
Cbc0010I After 735 nodes, 36 on tree, 1e+50 best solution, best possible 5 (67.49 seconds)
Cbc0010I After 757 nodes, 37 on tree, 1e+50 best solution, best possible 5 (68.20 seconds)
Cbc0010I After 782 nodes, 38 on tree, 1e+50 best solution, best possible 5 (68.91 seconds)
Cbc0010I After 802 nodes, 39 on tree, 1e+50 best solution, best possible 5 (69.62 seconds)
Cbc0010I After 826 nodes, 38 on tree, 1e+50 best solution, best possible 5 (70.34 seconds)
Cbc0010I After 845 nodes, 40 on tree, 1e+50 best solution, best possible 5 (71.05 seconds)
Cbc0010I After 871 nodes, 39 on tree, 1e+50 best solution, best possible 5 (71.76 seconds)
Cbc0010I After 896 nodes, 38 on tree, 1e+50 best solution, best possible 5 (72.47 seconds)
Cbc0010I After 919 nodes, 38 on tree, 1e+50 best solution, best possible 5 (73.17 seconds)
Cbc0010I After 945 nodes, 40 on tree, 1e+50 best solution, best possible 5 (73.89 seconds)
Cbc0010I After 965 nodes, 37 on tree, 1e+50 best solution, best possible 5 (74.60 seconds)
Cbc0010I After 995 nodes, 38 on tree, 1e+50 best solution, best possible 5 (75.33 seconds)
Cbc0010I After 1019 nodes, 34 on tree, 1e+50 best solution, best possible 5 (76.03 seconds)
Cbc0010I After 1046 nodes, 40 on tree, 1e+50 best solution, best possible 5 (76.73 seconds)
Cbc0010I After 1067 nodes, 42 on tree, 1e+50 best solution, best possible 5 (77.47 seconds)
Cbc0010I After 1085 nodes, 40 on tree, 1e+50 best solution, best possible 5 (78.21 seconds)
Cbc0010I After 1107 nodes, 38 on tree, 1e+50 best solution, best possible 5 (78.97 seconds)
Cbc0010I After 1124 nodes, 38 on tree, 1e+50 best solution, best possible 5 (79.70 seconds)
Cbc0010I After 1143 nodes, 36 on tree, 1e+50 best solution, best possible 5 (80.43 seconds)
Cbc0010I After 1163 nodes, 33 on tree, 1e+50 best solution, best possible 5 (81.14 seconds)
Cbc0010I After 1182 nodes, 44 on tree, 1e+50 best solution, best possible 5 (81.84 seconds)
Cbc0010I After 1209 nodes, 39 on tree, 1e+50 best solution, best possible 5 (82.55 seconds)
Cbc0010I After 1234 nodes, 35 on tree, 1e+50 best solution, best possible 5 (83.25 seconds)
Cbc0010I After 1256 nodes, 41 on tree, 1e+50 best solution, best possible 5 (83.97 seconds)
Cbc0010I After 1275 nodes, 32 on tree, 1e+50 best solution, best possible 5 (84.73 seconds)
Cbc0010I After 1294 nodes, 45 on tree, 1e+50 best solution, best possible 5 (85.46 seconds)
Cbc0010I After 1317 nodes, 42 on tree, 1e+50 best solution, best possible 5 (86.18 seconds)
Cbc0010I After 1337 nodes, 40 on tree, 1e+50 best solution, best possible 5 (86.89 seconds)
Cbc0010I After 1352 nodes, 40 on tree, 1e+50 best solution, best possible 5 (87.60 seconds)
Cbc0010I After 1373 nodes, 39 on tree, 1e+50 best solution, best possible 5 (88.30 seconds)
Cbc0010I After 1393 nodes, 46 on tree, 1e+50 best solution, best possible 5 (89.02 seconds)
Cbc0010I After 1414 nodes, 41 on tree, 1e+50 best solution, best possible 5 (89.72 seconds)
Cbc0010I After 1433 nodes, 39 on tree, 1e+50 best solution, best possible 5 (90.45 seconds)
Cbc0010I After 1456 nodes, 37 on tree, 1e+50 best solution, best possible 5 (91.17 seconds)
Cbc0010I After 1479 nodes, 43 on tree, 1e+50 best solution, best possible 5 (91.90 seconds)
Cbc0010I After 1498 nodes, 37 on tree, 1e+50 best solution, best possible 5 (92.61 seconds)
Cbc0010I After 1521 nodes, 40 on tree, 1e+50 best solution, best possible 5 (93.33 seconds)
Cbc0010I After 1544 nodes, 36 on tree, 1e+50 best solution, best possible 5 (94.07 seconds)
Cbc0010I After 1567 nodes, 36 on tree, 1e+50 best solution, best possible 5 (94.79 seconds)
Cbc0010I After 1586 nodes, 40 on tree, 1e+50 best solution, best possible 5 (95.51 seconds)
Cbc0010I After 1610 nodes, 34 on tree, 1e+50 best solution, best possible 5 (96.23 seconds)
Cbc0010I After 1630 nodes, 38 on tree, 1e+50 best solution, best possible 5 (96.94 seconds)
Cbc0010I After 1651 nodes, 38 on tree, 1e+50 best solution, best possible 5 (97.69 seconds)
Cbc0010I After 1671 nodes, 37 on tree, 1e+50 best solution, best possible 5 (98.43 seconds)
Cbc0010I After 1689 nodes, 39 on tree, 1e+50 best solution, best possible 5 (99.14 seconds)
Cbc0010I After 1707 nodes, 34 on tree, 1e+50 best solution, best possible 5 (99.85 seconds)
Cbc0010I After 1724 nodes, 38 on tree, 1e+50 best solution, best possible 5 (100.57 seconds)
Cbc0010I After 1749 nodes, 40 on tree, 1e+50 best solution, best possible 5 (101.28 seconds)
Cbc0010I After 1773 nodes, 34 on tree, 1e+50 best solution, best possible 5 (102.01 seconds)
Cbc0010I After 1791 nodes, 35 on tree, 1e+50 best solution, best possible 5 (102.72 seconds)
Cbc0010I After 1813 nodes, 34 on tree, 1e+50 best solution, best possible 5 (103.42 seconds)
Cbc0010I After 1831 nodes, 35 on tree, 1e+50 best solution, best possible 5 (104.13 seconds)
Cbc0010I After 1850 nodes, 33 on tree, 1e+50 best solution, best possible 5 (104.83 seconds)
Cbc0010I After 1868 nodes, 42 on tree, 1e+50 best solution, best possible 5 (105.55 seconds)
Cbc0010I After 1891 nodes, 39 on tree, 1e+50 best solution, best possible 5 (106.27 seconds)
Cbc0010I After 1912 nodes, 44 on tree, 1e+50 best solution, best possible 5 (106.98 seconds)
Cbc0010I After 1937 nodes, 40 on tree, 1e+50 best solution, best possible 5 (107.72 seconds)
Cbc0010I After 1953 nodes, 51 on tree, 1e+50 best solution, best possible 5 (108.43 seconds)
Cbc0010I After 1975 nodes, 44 on tree, 1e+50 best solution, best possible 5 (109.19 seconds)
Cbc0010I After 1996 nodes, 38 on tree, 1e+50 best solution, best possible 5 (109.89 seconds)
Cbc0010I After 2028 nodes, 45 on tree, 1e+50 best solution, best possible 5 (110.60 seconds)
Cbc0010I After 2059 nodes, 41 on tree, 1e+50 best solution, best possible 5 (111.31 seconds)
Cbc0010I After 2082 nodes, 35 on tree, 1e+50 best solution, best possible 5 (112.02 seconds)
Cbc0010I After 2101 nodes, 36 on tree, 1e+50 best solution, best possible 5 (112.75 seconds)
Cbc0010I After 2119 nodes, 41 on tree, 1e+50 best solution, best possible 5 (113.47 seconds)
Cbc0010I After 2140 nodes, 37 on tree, 1e+50 best solution, best possible 5 (114.19 seconds)
Cbc0010I After 2166 nodes, 38 on tree, 1e+50 best solution, best possible 5 (114.93 seconds)
Cbc0010I After 2187 nodes, 43 on tree, 1e+50 best solution, best possible 5 (115.67 seconds)
Cbc0010I After 2212 nodes, 42 on tree, 1e+50 best solution, best possible 5 (116.37 seconds)
Cbc0010I After 2234 nodes, 35 on tree, 1e+50 best solution, best possible 5 (117.09 seconds)
Cbc0010I After 2255 nodes, 35 on tree, 1e+50 best solution, best possible 5 (117.83 seconds)
Cbc0010I After 2275 nodes, 39 on tree, 1e+50 best solution, best possible 5 (118.54 seconds)
Cbc0010I After 2294 nodes, 36 on tree, 1e+50 best solution, best possible 5 (119.28 seconds)
Cbc0010I After 2314 nodes, 35 on tree, 1e+50 best solution, best possible 5 (119.99 seconds)
Cbc0010I After 2340 nodes, 35 on tree, 1e+50 best solution, best possible 5 (120.73 seconds)
Cbc0010I After 2357 nodes, 43 on tree, 1e+50 best solution, best possible 5 (121.44 seconds)
Cbc0010I After 2379 nodes, 42 on tree, 1e+50 best solution, best possible 5 (122.15 seconds)
Cbc0010I After 2398 nodes, 49 on tree, 1e+50 best solution, best possible 5 (122.87 seconds)
Cbc0010I After 2422 nodes, 43 on tree, 1e+50 best solution, best possible 5 (123.59 seconds)
Cbc0010I After 2444 nodes, 42 on tree, 1e+50 best solution, best possible 5 (124.30 seconds)
Cbc0010I After 2468 nodes, 43 on tree, 1e+50 best solution, best possible 5 (125.01 seconds)
Cbc0010I After 2488 nodes, 40 on tree, 1e+50 best solution, best possible 5 (125.74 seconds)
Cbc0010I After 2512 nodes, 35 on tree, 1e+50 best solution, best possible 5 (126.47 seconds)
Cbc0010I After 2545 nodes, 36 on tree, 1e+50 best solution, best possible 5 (127.19 seconds)
Cbc0010I After 2578 nodes, 37 on tree, 1e+50 best solution, best possible 5 (127.89 seconds)
Cbc0010I After 2609 nodes, 40 on tree, 1e+50 best solution, best possible 5 (128.61 seconds)
Cbc0010I After 2643 nodes, 36 on tree, 1e+50 best solution, best possible 5 (129.32 seconds)
Cbc0010I After 2674 nodes, 34 on tree, 1e+50 best solution, best possible 5 (130.02 seconds)
Cbc0010I After 2705 nodes, 30 on tree, 1e+50 best solution, best possible 5 (130.72 seconds)
Cbc0010I After 2729 nodes, 54 on tree, 1e+50 best solution, best possible 5 (131.44 seconds)
Cbc0004I Integer solution of 5 found after 238126 iterations and 2732 nodes (131.53 seconds)
Cbc0001I Search completed - best objective 5, took 238126 iterations and 2732 nodes (131.53 seconds)
Cbc0032I Strong branching done 2322 times (23300 iterations), fathomed 10 nodes and fixed 6 variables
Cbc0035I Maximum depth 56, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 5
Probing was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.524071 seconds)
Gomory was tried 1866 times and created 546 cuts of which 0 were active after adding rounds of cuts (7.47571 seconds)
Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.099568 seconds)
liftKnapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (23.0749 seconds)
Clique was tried 1866 times and created 5485 cuts of which 0 were active after adding rounds of cuts (2.11346 seconds)
OddWheel was tried 9 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.242421 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.063249 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004689 seconds)
TwoMirCuts was tried 1866 times and created 9 cuts of which 0 were active after adding rounds of cuts (3.87122 seconds)
ZeroHalf was tried 1866 times and created 1690 cuts of which 0 were active after adding rounds of cuts (18.8571 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               2732
Total iterations:               238126
Time (CPU seconds):             131.446
Time (Wallclock seconds):       131.565
Total time (CPU seconds):       131.486   (Wallclock seconds):       131.592
