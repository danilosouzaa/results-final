Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/ibarra.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/ibarra.txt -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 358 COLUMNS
At line 1763 RHS
At line 1880 RANGES
At line 1904 BOUNDS
At line 2181 ENDATA
Problem no_name has 347 rows, 279 columns and 2549 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 390.612 - 0.014002 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 28 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 295 rows, 261 columns (258 integer (258 of which binary)) and 2376 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 0.308%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 1.96467
Cbc0038I Pass   1: suminf.    1.15064 (24) obj. 745.136 iterations 61
Cbc0038I Pass   2: suminf.    6.64367 (23) obj. 6645.13 iterations 24
Cbc0038I Pass   3: suminf.    0.72656 (23) obj. 858.423 iterations 10
Cbc0038I Pass   4: suminf.    7.20321 (18) obj. 6092.22 iterations 14
Cbc0038I Pass   5: suminf.   14.94377 (37) obj. 56917.5 iterations 59
Cbc0038I Pass   6: suminf.    3.58741 (10) obj. 106763 iterations 45
Cbc0038I Pass   7: suminf.    3.58741 (10) obj. 106763 iterations 2
Cbc0038I Pass   8: suminf.    0.11941 (7) obj. 104735 iterations 26
Cbc0038I Pass   9: suminf.    0.09186 (14) obj. 104744 iterations 3
Cbc0038I Pass  10: suminf.    6.64418 (18) obj. 6079.6 iterations 14
Cbc0038I Pass  11: suminf.    0.85156 (23) obj. 1172.74 iterations 16
Cbc0038I Pass  12: suminf.    6.84124 (14) obj. 7201.65 iterations 22
Cbc0038I Pass  13: suminf.    6.84124 (14) obj. 7201.65 iterations 0
Cbc0038I Pass  14: suminf.   14.40647 (33) obj. 55799.6 iterations 54
Cbc0038I Pass  15: suminf.    1.62157 (11) obj. 100270 iterations 49
Cbc0038I Pass  16: suminf.    1.21524 (10) obj. 63778.7 iterations 32
Cbc0038I Pass  17: suminf.    0.51131 (20) obj. 63768.6 iterations 5
Cbc0038I Pass  18: suminf.    5.92909 (15) obj. 68083.7 iterations 12
Cbc0038I Pass  19: suminf.   12.89045 (35) obj. 46785.2 iterations 54
Cbc0038I Pass  20: suminf.    2.00000 (4) obj. 45749.3 iterations 42
Cbc0038I Solution found of 45719.3
Cbc0038I Relaxing continuous gives 45719.3
Cbc0038I Before mini branch and bound, 118 integers at bound fixed and 0 continuous
Cbc0038I Full problem 295 rows 261 columns, reduced to 108 rows 73 columns
Cbc0038I Mini branch and bound improved solution from 45719.3 to 1211.66 (0.65 seconds)
Cbc0038I Round again with cutoff of 1129.55
Cbc0038I Pass  21: suminf.    1.15064 (24) obj. 745.136 iterations 0
Cbc0038I Pass  22: suminf.    1.51931 (10) obj. 1129.55 iterations 36
Cbc0038I Pass  23: suminf.    0.72656 (23) obj. 858.423 iterations 13
Cbc0038I Pass  24: suminf.    1.24534 (14) obj. 1129.55 iterations 13
Cbc0038I Pass  25: suminf.    9.34508 (34) obj. 1129.55 iterations 45
Cbc0038I Pass  26: suminf.    1.55360 (18) obj. 1129.55 iterations 37
Cbc0038I Pass  27: suminf.    1.54426 (19) obj. 1129.55 iterations 1
Cbc0038I Pass  28: suminf.    1.02527 (13) obj. 1129.55 iterations 36
Cbc0038I Pass  29: suminf.    0.81495 (23) obj. 1113.32 iterations 17
Cbc0038I Pass  30: suminf.    1.03164 (14) obj. 1129.55 iterations 11
Cbc0038I Pass  31: suminf.    3.39119 (18) obj. 1129.55 iterations 40
Cbc0038I Pass  32: suminf.    0.59692 (17) obj. 1129.55 iterations 44
Cbc0038I Pass  33: suminf.    0.37989 (25) obj. 1129.55 iterations 11
Cbc0038I Pass  34: suminf.    1.06845 (12) obj. 1129.55 iterations 26
Cbc0038I Pass  35: suminf.    0.96112 (15) obj. 1129.55 iterations 22
Cbc0038I Pass  36: suminf.    1.20874 (10) obj. 1129.55 iterations 28
Cbc0038I Pass  37: suminf.    6.19776 (15) obj. 1129.55 iterations 52
Cbc0038I Pass  38: suminf.    0.64087 (5) obj. 1129.55 iterations 11
Cbc0038I Pass  39: suminf.    0.11613 (14) obj. 833.683 iterations 91
Cbc0038I Pass  40: suminf.    0.92834 (5) obj. 1129.55 iterations 23
Cbc0038I Pass  41: suminf.    5.13869 (14) obj. 1129.55 iterations 40
Cbc0038I Pass  42: suminf.    0.19578 (3) obj. 1129.55 iterations 46
Cbc0038I Pass  43: suminf.    0.12549 (4) obj. 1129.55 iterations 3
Cbc0038I Pass  44: suminf.    0.91074 (24) obj. 1129.55 iterations 58
Cbc0038I Pass  45: suminf.    0.42926 (9) obj. 1129.55 iterations 22
Cbc0038I Pass  46: suminf.    0.33515 (16) obj. 1129.55 iterations 31
Cbc0038I Pass  47: suminf.    0.95017 (13) obj. 1129.55 iterations 13
Cbc0038I Pass  48: suminf.    7.04606 (18) obj. 1129.55 iterations 55
Cbc0038I Pass  49: suminf.    0.14159 (18) obj. 871.201 iterations 73
Cbc0038I Pass  50: suminf.    0.79620 (6) obj. 1129.55 iterations 22
Cbc0038I Rounding solution of 1124.39 is better than previous of 1211.66
Cbc0038I Before mini branch and bound, 129 integers at bound fixed and 2 continuous
Cbc0038I Full problem 295 rows 261 columns, reduced to 90 rows 58 columns
Cbc0038I Mini branch and bound improved solution from 1124.39 to 837.63 (2.27 seconds)
Cbc0038I Round again with cutoff of 748.226
Cbc0038I Reduced cost fixing fixed 15 variables on major pass 3
Cbc0038I Pass  50: suminf.    1.32381 (11) obj. 572.258 iterations 14
Cbc0038I Pass  51: suminf.    1.03028 (10) obj. 748.226 iterations 41
Cbc0038I Pass  52: suminf.    0.90820 (10) obj. 677.09 iterations 13
Cbc0038I Pass  53: suminf.    3.39406 (11) obj. 748.226 iterations 40
Cbc0038I Pass  54: suminf.    1.11848 (10) obj. 748.226 iterations 24
Cbc0038I Pass  55: suminf.    1.08295 (13) obj. 748.226 iterations 2
Cbc0038I Pass  56: suminf.    2.23025 (10) obj. 748.226 iterations 27
Cbc0038I Pass  57: suminf.    0.90820 (10) obj. 603.407 iterations 21
Cbc0038I Pass  58: suminf.    1.15672 (10) obj. 748.226 iterations 15
Cbc0038I Pass  59: suminf.    4.90831 (15) obj. 748.226 iterations 34
Cbc0038I Pass  60: suminf.    0.23798 (13) obj. 748.226 iterations 33
Cbc0038I Pass  61: suminf.    0.23798 (13) obj. 748.226 iterations 3
Cbc0038I Pass  62: suminf.    1.05449 (10) obj. 748.226 iterations 15
Cbc0038I Pass  63: suminf.    0.96344 (10) obj. 695.171 iterations 14
Cbc0038I Pass  64: suminf.    1.05449 (10) obj. 748.226 iterations 15
Cbc0038I Pass  65: suminf.    4.17768 (11) obj. 748.226 iterations 28
Cbc0038I Pass  66: suminf.    2.12931 (18) obj. 748.226 iterations 47
Cbc0038I Pass  67: suminf.    1.88439 (10) obj. 748.226 iterations 39
Cbc0038I Pass  68: suminf.    1.02321 (24) obj. 748.226 iterations 20
Cbc0038I Pass  69: suminf.    1.38727 (13) obj. 748.226 iterations 10
Cbc0038I Pass  70: suminf.    4.36817 (13) obj. 748.226 iterations 35
Cbc0038I Pass  71: suminf.    0.13865 (9) obj. 675.976 iterations 59
Cbc0038I Pass  72: suminf.    0.26609 (9) obj. 748.226 iterations 17
Cbc0038I Pass  73: suminf.    4.49124 (16) obj. 748.226 iterations 30
Cbc0038I Pass  74: suminf.    0.11511 (9) obj. 697.319 iterations 52
Cbc0038I Pass  75: suminf.    0.20491 (9) obj. 748.226 iterations 8
Cbc0038I Pass  76: suminf.    3.71534 (11) obj. 748.226 iterations 35
Cbc0038I Pass  77: suminf.    0.12535 (7) obj. 697.473 iterations 61
Cbc0038I Pass  78: suminf.    0.22260 (7) obj. 748.226 iterations 20
Cbc0038I Pass  79: suminf.    3.52601 (11) obj. 748.226 iterations 28
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 146 integers at bound fixed and 2 continuous
Cbc0038I Full problem 295 rows 261 columns, reduced to 72 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (3.85 seconds)
Cbc0038I After 3.85 seconds - Feasibility pump exiting with objective of 837.63 - took 5.07 seconds
Cbc0012I Integer solution of 837.63 found by feasibility pump after 0 iterations and 0 nodes (3.85 seconds)
Cbc0038I Full problem 295 rows 261 columns, reduced to 8 rows 2 columns
Cbc0031I 50 added rows had average density of 12
Cbc0013I At root node, 50 cuts changed objective from 390.61154 to 521.34185 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 148 row cuts average 17.4 elements, 38 column cuts (38 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 20 row cuts average 9.1 elements, 0 column cuts (0 active)  in 5.168 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 69 row cuts average 53.1 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 53 row cuts average 51.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 837.63 best solution, best possible 521.34185 (12.08 seconds)
Cbc0010I After 1 nodes, 2 on tree, 837.63 best solution, best possible 521.34185 (12.96 seconds)
Cbc0001I Search completed - best objective 837.6300000000001, took 673 iterations and 6 nodes (13.10 seconds)
Cbc0032I Strong branching done 200 times (3676 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 114 variables fixed on reduced cost
Cuts at root node changed objective from 390.612 to 521.342
Probing was tried 42 times and created 233 cuts of which 0 were active after adding rounds of cuts (0.12025 seconds)
Gomory was tried 42 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.055111 seconds)
Knapsack was tried 42 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.063234 seconds)
liftKnapsack was tried 42 times and created 27 cuts of which 0 were active after adding rounds of cuts (6.02254 seconds)
Clique was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002684 seconds)
OddWheel was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009826 seconds)
MixedIntegerRounding2 was tried 42 times and created 119 cuts of which 0 were active after adding rounds of cuts (0.067969 seconds)
FlowCover was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003413 seconds)
TwoMirCuts was tried 42 times and created 239 cuts of which 0 were active after adding rounds of cuts (0.047425 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00093 seconds)

Result - Optimal solution found
Objective value:                837.63
Enumerated nodes:               6
Total iterations:               673
Time (CPU seconds):             12.3506
Time (Wallclock seconds):       13.1067
Total time (CPU seconds):       12.3551   (Wallclock seconds):       13.1419
