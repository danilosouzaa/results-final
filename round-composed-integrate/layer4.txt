Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/layer4.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/layer4.txt -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 1361 COLUMNS
At line 5513 RHS
At line 5715 BOUNDS
At line 6411 ENDATA
Problem no_name has 1350 rows, 695 columns and 7179 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -3.45567e+09 - 0.251246 seconds
Cgl0003I 165 fixed, 0 tightened bounds, 765 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 475 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 592 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 525 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 394 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 293 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 230 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 177 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 126 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 113 strengthened rows, 0 substitutions
Cgl0004I processed model has 1116 rows, 525 columns (525 integer (520 of which binary)) and 9007 elements
Coin3009W Conflict graph built in 0.004 seconds, density: 0.765%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 137 integers unsatisfied sum - 39.7933
Cbc0038I Pass   1: suminf.    0.63333 (2) obj. -5.649e+08 iterations 164
Cbc0038I Solution found of -5.649e+08
Cbc0038I Cleaned solution of -5.649e+08
Cbc0038I Before mini branch and bound, 387 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1116 rows 525 columns, reduced to 352 rows 76 columns
Cbc0038I Mini branch and bound did not improve solution (2.65 seconds)
Cbc0038I Round again with cutoff of -8.28577e+08
Cbc0038I Pass   2: suminf.    3.92260 (121) obj. -8.28577e+08 iterations 39
Cbc0038I Pass   3: suminf.    3.28926 (119) obj. -8.28577e+08 iterations 2
Cbc0038I Pass   4: suminf.    3.39681 (20) obj. -8.28577e+08 iterations 1
Cbc0038I Pass   5: suminf.    1.18765 (7) obj. -8.60833e+08 iterations 57
Cbc0038I Pass   6: suminf.    1.09383 (5) obj. -8.754e+08 iterations 51
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. -8.754e+08 iterations 8
Cbc0038I Solution found of -8.754e+08
Cbc0038I Cleaned solution of -8.754e+08
Cbc0038I Before mini branch and bound, 329 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1116 rows 525 columns, reduced to 536 rows 190 columns
Cbc0038I Mini branch and bound improved solution from -8.754e+08 to -1.4964e+09 (3.73 seconds)
Cbc0038I Round again with cutoff of -1.83745e+09
Cbc0038I Pass   8: suminf.   16.50790 (121) obj. -1.83745e+09 iterations 0
Cbc0038I Pass   9: suminf.   15.87457 (119) obj. -1.83745e+09 iterations 2
Cbc0038I Pass  10: suminf.    8.86517 (37) obj. -2.90321e+09 iterations 51
Cbc0038I Pass  11: suminf.    7.40435 (35) obj. -2.7384e+09 iterations 125
Cbc0038I Pass  12: suminf.    7.75831 (42) obj. -2.53421e+09 iterations 62
Cbc0038I Pass  13: suminf.    5.82238 (46) obj. -2.44159e+09 iterations 18
Cbc0038I Pass  14: suminf.    9.60638 (26) obj. -1.83745e+09 iterations 90
Cbc0038I Pass  15: suminf.    6.56445 (45) obj. -2.51559e+09 iterations 91
Cbc0038I Pass  16: suminf.    5.84118 (52) obj. -2.54643e+09 iterations 118
Cbc0038I Pass  17: suminf.    5.27513 (47) obj. -2.57014e+09 iterations 77
Cbc0038I Pass  18: suminf.    6.41877 (33) obj. -2.58315e+09 iterations 119
Cbc0038I Pass  19: suminf.    5.80872 (42) obj. -2.37987e+09 iterations 75
Cbc0038I Pass  20: suminf.    4.31087 (40) obj. -2.38483e+09 iterations 61
Cbc0038I Pass  21: suminf.    4.30983 (40) obj. -2.38483e+09 iterations 4
Cbc0038I Pass  22: suminf.    6.45356 (24) obj. -1.83745e+09 iterations 68
Cbc0038I Pass  23: suminf.    6.03478 (28) obj. -2.27265e+09 iterations 36
Cbc0038I Pass  24: suminf.    4.81747 (30) obj. -2.24939e+09 iterations 53
Cbc0038I Pass  25: suminf.    4.75582 (40) obj. -2.14472e+09 iterations 4
Cbc0038I Pass  26: suminf.    4.04028 (22) obj. -2.27265e+09 iterations 72
Cbc0038I Pass  27: suminf.    3.75862 (24) obj. -2.27265e+09 iterations 6
Cbc0038I Pass  28: suminf.    5.24759 (35) obj. -2.11253e+09 iterations 71
Cbc0038I Pass  29: suminf.    4.94594 (34) obj. -1.97404e+09 iterations 30
Cbc0038I Pass  30: suminf.    4.22823 (123) obj. -1.83745e+09 iterations 91
Cbc0038I Pass  31: suminf.    3.41604 (122) obj. -1.83745e+09 iterations 8
Cbc0038I Pass  32: suminf.    2.03530 (112) obj. -1.83745e+09 iterations 49
Cbc0038I Pass  33: suminf.    0.37929 (103) obj. -1.83745e+09 iterations 47
Cbc0038I Pass  34: suminf.    0.39362 (26) obj. -1.83745e+09 iterations 2
Cbc0038I Pass  35: suminf.    8.73869 (32) obj. -2.33332e+09 iterations 114
Cbc0038I Pass  36: suminf.    0.69754 (107) obj. -1.83745e+09 iterations 134
Cbc0038I Pass  37: suminf.    2.62351 (14) obj. -2.34385e+09 iterations 83
Cbc0038I Rounding solution of -1.96215e+09 is better than previous of -1.4964e+09
Cbc0038I Before mini branch and bound, 252 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1116 rows 525 columns, reduced to 711 rows 269 columns - 53 fixed gives 188, 66 - ok now
Cbc0038I Mini branch and bound did not improve solution (4.23 seconds)
Cbc0038I Round again with cutoff of -2.33401e+09
Cbc0038I Pass  37: suminf.   22.70218 (122) obj. -2.33401e+09 iterations 3
Cbc0038I Pass  38: suminf.   22.06885 (120) obj. -2.33401e+09 iterations 2
Cbc0038I Pass  39: suminf.   11.76433 (50) obj. -2.90207e+09 iterations 62
Cbc0038I Pass  40: suminf.    9.74196 (50) obj. -2.97111e+09 iterations 69
Cbc0038I Pass  41: suminf.    7.62878 (38) obj. -2.7384e+09 iterations 172
Cbc0038I Pass  42: suminf.    6.80384 (44) obj. -2.7384e+09 iterations 39
Cbc0038I Pass  43: suminf.    4.51487 (19) obj. -2.33401e+09 iterations 171
Cbc0038I Pass  44: suminf.    3.50804 (30) obj. -2.33401e+09 iterations 90
Cbc0038I Pass  45: suminf.   13.70534 (120) obj. -2.33401e+09 iterations 96
Cbc0038I Pass  46: suminf.   12.17722 (118) obj. -2.33401e+09 iterations 20
Cbc0038I Pass  47: suminf.    2.78336 (11) obj. -2.341e+09 iterations 93
Cbc0038I Pass  48: suminf.    2.54880 (17) obj. -2.348e+09 iterations 56
Cbc0038I Pass  49: suminf.    4.43905 (112) obj. -2.33401e+09 iterations 118
Cbc0038I Pass  50: suminf.    2.98121 (104) obj. -2.33401e+09 iterations 52
Cbc0038I Pass  51: suminf.    3.68491 (103) obj. -2.33401e+09 iterations 46
Cbc0038I Pass  52: suminf.    2.87364 (103) obj. -2.33401e+09 iterations 38
Cbc0038I Pass  53: suminf.    2.68491 (102) obj. -2.33401e+09 iterations 9
Cbc0038I Pass  54: suminf.    1.96241 (7) obj. -2.35319e+09 iterations 70
Cbc0038I Pass  55: suminf.    2.55305 (15) obj. -2.37774e+09 iterations 82
Cbc0038I Pass  56: suminf.    1.41524 (22) obj. -2.38717e+09 iterations 53
Cbc0038I Pass  57: suminf.    9.45795 (126) obj. -2.33401e+09 iterations 140
Cbc0038I Pass  58: suminf.    9.80251 (123) obj. -2.33401e+09 iterations 16
Cbc0038I Pass  59: suminf.    7.88685 (112) obj. -2.33401e+09 iterations 58
Cbc0038I Pass  60: suminf.    7.39907 (110) obj. -2.33401e+09 iterations 1
Cbc0038I Pass  61: suminf.    4.97069 (25) obj. -2.348e+09 iterations 86
Cbc0038I Pass  62: suminf.    5.61391 (109) obj. -2.33401e+09 iterations 88
Cbc0038I Pass  63: suminf.    3.73022 (11) obj. -2.34e+09 iterations 30
Cbc0038I Pass  64: suminf.    1.68621 (8) obj. -2.348e+09 iterations 42
Cbc0038I Pass  65: suminf.    2.68491 (102) obj. -2.33401e+09 iterations 92
Cbc0038I Pass  66: suminf.    2.68491 (102) obj. -2.33401e+09 iterations 7
Cbc0038I Rounding solution of -2.1174e+09 is better than previous of -1.96215e+09
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1116 rows 525 columns, reduced to 786 rows 279 columns - 53 fixed gives 179, 58 - ok now
Cbc0038I Mini branch and bound did not improve solution (4.75 seconds)
Cbc0038I Round again with cutoff of -2.59431e+09
Cbc0038I Pass  66: suminf.   25.94931 (123) obj. -2.59431e+09 iterations 5
Cbc0038I Pass  67: suminf.   25.31598 (121) obj. -2.59431e+09 iterations 2
Cbc0038I Pass  68: suminf.   24.65424 (94) obj. -2.59431e+09 iterations 24
Cbc0038I Pass  69: suminf.   23.88517 (120) obj. -2.59431e+09 iterations 9
Cbc0038I Pass  70: suminf.   23.90427 (125) obj. -2.59431e+09 iterations 11
Cbc0038I Pass  71: suminf.   23.78888 (125) obj. -2.59431e+09 iterations 1
Cbc0038I Pass  72: suminf.   23.78888 (125) obj. -2.59431e+09 iterations 0
Cbc0038I Pass  73: suminf.   23.84259 (119) obj. -2.62752e+09 iterations 97
Cbc0038I Pass  74: suminf.   20.94989 (129) obj. -2.59431e+09 iterations 99
Cbc0038I Pass  75: suminf.    9.97273 (94) obj. -2.59431e+09 iterations 94
Cbc0038I Pass  76: suminf.    9.24879 (132) obj. -2.59431e+09 iterations 41
Cbc0038I Pass  77: suminf.    9.71381 (129) obj. -2.59431e+09 iterations 73
Cbc0038I Pass  78: suminf.   10.57035 (130) obj. -2.59431e+09 iterations 7
Cbc0038I Pass  79: suminf.   10.14952 (130) obj. -2.59431e+09 iterations 71
Cbc0038I Pass  80: suminf.    9.17326 (121) obj. -2.59431e+09 iterations 100
Cbc0038I Pass  81: suminf.   10.13198 (134) obj. -2.59431e+09 iterations 24
Cbc0038I Pass  82: suminf.    9.74783 (126) obj. -2.59431e+09 iterations 110
Cbc0038I Pass  83: suminf.    6.30012 (93) obj. -2.59431e+09 iterations 18
Cbc0038I Pass  84: suminf.    6.21425 (129) obj. -2.59431e+09 iterations 41
Cbc0038I Pass  85: suminf.    6.32782 (129) obj. -2.59431e+09 iterations 83
Cbc0038I Pass  86: suminf.    4.60488 (123) obj. -2.59431e+09 iterations 15
Cbc0038I Pass  87: suminf.    5.05875 (123) obj. -2.59431e+09 iterations 131
Cbc0038I Pass  88: suminf.    4.93430 (122) obj. -2.59431e+09 iterations 23
Cbc0038I Pass  89: suminf.    4.63117 (123) obj. -2.59431e+09 iterations 63
Cbc0038I Pass  90: suminf.    6.53872 (136) obj. -2.59431e+09 iterations 6
Cbc0038I Pass  91: suminf.    7.08414 (131) obj. -2.59431e+09 iterations 58
Cbc0038I Pass  92: suminf.    7.40029 (135) obj. -2.59431e+09 iterations 9
Cbc0038I Pass  93: suminf.    9.34264 (128) obj. -2.59431e+09 iterations 90
Cbc0038I Pass  94: suminf.    7.61231 (128) obj. -2.59431e+09 iterations 39
Cbc0038I Pass  95: suminf.    8.37796 (127) obj. -2.59431e+09 iterations 83
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 141 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1116 rows 525 columns, reduced to 915 rows 383 columns - 53 fixed gives 204, 79 - ok now
Cbc0038I Mini branch and bound did not improve solution (5.27 seconds)
Cbc0038I After 5.27 seconds - Feasibility pump exiting with objective of -2.1174e+09 - took 2.72 seconds
Cbc0012I Integer solution of -2.1174e+09 found by feasibility pump after 0 iterations and 0 nodes (5.27 seconds)
Cbc0038I Full problem 1116 rows 525 columns, reduced to 402 rows 100 columns
Cbc0031I 17 added rows had average density of 291.64706
Cbc0013I At root node, 17 cuts changed objective from -3.2016746e+09 to -2.8913163e+09 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 2.0 elements, 3 column cuts (3 active)  in 0.569 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 102 row cuts average 517.6 elements, 0 column cuts (0 active)  in 0.267 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 19 row cuts average 12.0 elements, 0 column cuts (0 active)  in 7.099 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 121 row cuts average 369.0 elements, 0 column cuts (0 active)  in 0.462 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2.1174e+09 best solution, best possible -2.8913163e+09 (19.98 seconds)
Cbc0010I After 2 nodes, 1 on tree, -2.1174e+09 best solution, best possible -2.7384e+09 (21.39 seconds)
Cbc0010I After 3 nodes, 2 on tree, -2.1174e+09 best solution, best possible -2.7384e+09 (22.10 seconds)
Cbc0010I After 4 nodes, 3 on tree, -2.1174e+09 best solution, best possible -2.7384e+09 (22.93 seconds)
Cbc0010I After 6 nodes, 5 on tree, -2.1174e+09 best solution, best possible -2.7384e+09 (24.43 seconds)
Cbc0010I After 14 nodes, 10 on tree, -2.1174e+09 best solution, best possible -2.7384e+09 (25.18 seconds)
Cbc0010I After 27 nodes, 15 on tree, -2.1174e+09 best solution, best possible -2.7384e+09 (25.89 seconds)
Cbc0038I Full problem 1133 rows 525 columns, reduced to 672 rows 300 columns
Cbc0044I Reduced cost fixing - 672 rows, 300 columns - restarting search
Cbc0012I Integer solution of -2.1174e+09 found by Previous solution after 0 iterations and 0 nodes (26.61 seconds)
Cbc0038I Full problem 672 rows 300 columns, reduced to 220 rows 79 columns
Cbc0031I 5 added rows had average density of 94.4
Cbc0013I At root node, 67 cuts changed objective from -3.087e+09 to -1.8760031e+09 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 184 row cuts average 201.4 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 16 row cuts average 10.1 elements, 0 column cuts (0 active)  in 2.305 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 2 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 298 row cuts average 179.2 elements, 0 column cuts (0 active)  in 0.368 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 11 (Stored from first) - 19 row cuts average 188.1 elements, 0 column cuts (0 active)
Cbc0001I Search completed - best objective -2117399995, took 1954 iterations and 0 nodes (30.86 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cbc0038I Probing was tried 7 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.143 seconds)
Cbc0038I Gomory was tried 7 times and created 184 cuts of which 0 were active after adding rounds of cuts (0.110 seconds)
Cbc0038I Knapsack was tried 7 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Cbc0038I liftKnapsack was tried 7 times and created 16 cuts of which 0 were active after adding rounds of cuts (2.305 seconds)
Cbc0038I Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I OddWheel was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Cbc0038I MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I FlowCover was tried 7 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I TwoMirCuts was tried 7 times and created 298 cuts of which 0 were active after adding rounds of cuts (0.368 seconds)
Cbc0038I ZeroHalf was tried 7 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
Cbc0038I Stored from first was tried 7 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -2117399995, took 6362 iterations and 50 nodes (30.88 seconds)
Cbc0032I Strong branching done 786 times (20277 iterations), fathomed 1 nodes and fixed 14 variables
Cbc0035I Maximum depth 20, 11 variables fixed on reduced cost
Cuts at root node changed objective from -3.20167e+09 to -2.89132e+09
Probing was tried 29 times and created 182 cuts of which 0 were active after adding rounds of cuts (0.63305 seconds)
Gomory was tried 10 times and created 102 cuts of which 0 were active after adding rounds of cuts (0.267135 seconds)
Knapsack was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.039292 seconds)
liftKnapsack was tried 29 times and created 81 cuts of which 0 were active after adding rounds of cuts (9.66661 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006598 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045542 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.07275 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029514 seconds)
TwoMirCuts was tried 29 times and created 200 cuts of which 0 were active after adding rounds of cuts (0.532726 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014851 seconds)

Result - Optimal solution found
Objective value:                -2117399995
Enumerated nodes:               50
Total iterations:               6362
Time (CPU seconds):             30.8512
Time (Wallclock seconds):       30.9498
Total time (CPU seconds):       30.8662   (Wallclock seconds):       30.9646
