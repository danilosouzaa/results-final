Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/supportcase14.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/supportcase14.txt -quit (default strategy 1)
At line 1 NAME supportcase14
At line 2 ROWS
At line 238 COLUMNS
At line 1674 RHS
At line 1824 BOUNDS
At line 2129 ENDATA
Problem supportcase14 has 234 rows, 304 columns and 1129 elements
Coin0008I supportcase14 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 272 - 0.013665 seconds
Cgl0002I 32 variables fixed
Cgl0003I 35 fixed, 0 tightened bounds, 18 strengthened rows, 4 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 67 rows, 145 columns (145 integer (145 of which binary)) and 693 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 5.581%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 26 integers unsatisfied sum - 6.45833
Cbc0038I Pass   1: suminf.    5.88889 (22) obj. 281.833 iterations 32
Cbc0038I Pass   2: suminf.    5.40000 (18) obj. 282.4 iterations 19
Cbc0038I Pass   3: suminf.    5.00000 (15) obj. 281.667 iterations 19
Cbc0038I Pass   4: suminf.    3.66667 (11) obj. 301 iterations 36
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 303 iterations 16
Cbc0038I Solution found of 303
Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 145 columns, reduced to 21 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 303 to 297 (0.63 seconds)
Cbc0038I Round again with cutoff of 294.017
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 2
Cbc0038I Pass   6: suminf.    5.88889 (22) obj. 281.833 iterations 0
Cbc0038I Pass   7: suminf.    5.50000 (11) obj. 286.5 iterations 5
Cbc0038I Pass   8: suminf.    3.58054 (15) obj. 294.017 iterations 24
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 294 iterations 27
Cbc0038I Solution found of 294
Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 145 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (1.19 seconds)
Cbc0038I Round again with cutoff of 289.633
Cbc0038I Reduced cost fixing fixed 19 variables on major pass 3
Cbc0038I Pass  10: suminf.    5.88889 (22) obj. 281.833 iterations 0
Cbc0038I Pass  11: suminf.    5.00000 (15) obj. 281.667 iterations 22
Cbc0038I Pass  12: suminf.    5.00000 (15) obj. 281.667 iterations 18
Cbc0038I Pass  13: suminf.    8.43335 (21) obj. 289.633 iterations 35
Cbc0038I Pass  14: suminf.    5.00000 (15) obj. 285.333 iterations 30
Cbc0038I Pass  15: suminf.    4.00000 (12) obj. 288.667 iterations 7
Cbc0038I Pass  16: suminf.    4.00000 (12) obj. 288.667 iterations 8
Cbc0038I Pass  17: suminf.    4.38979 (25) obj. 289.633 iterations 32
Cbc0038I Pass  18: suminf.    1.88408 (23) obj. 289.633 iterations 9
Cbc0038I Pass  19: suminf.    1.57772 (16) obj. 289.633 iterations 19
Cbc0038I Pass  20: suminf.    7.00000 (14) obj. 278.5 iterations 30
Cbc0038I Pass  21: suminf.    6.00000 (12) obj. 287.5 iterations 16
Cbc0038I Pass  22: suminf.    5.10832 (23) obj. 289.633 iterations 26
Cbc0038I Pass  23: suminf.    4.76092 (25) obj. 289.633 iterations 13
Cbc0038I Pass  24: suminf.    4.87332 (13) obj. 289.633 iterations 18
Cbc0038I Pass  25: suminf.    4.68876 (21) obj. 289.633 iterations 13
Cbc0038I Pass  26: suminf.    4.62785 (20) obj. 289.633 iterations 9
Cbc0038I Pass  27: suminf.    4.57466 (23) obj. 289.633 iterations 7
Cbc0038I Pass  28: suminf.    1.46635 (16) obj. 289.633 iterations 33
Cbc0038I Pass  29: suminf.    0.27155 (17) obj. 289.633 iterations 19
Cbc0038I Pass  30: suminf.    7.00000 (14) obj. 276.5 iterations 26
Cbc0038I Pass  31: suminf.    7.00000 (14) obj. 278.5 iterations 15
Cbc0038I Pass  32: suminf.    4.65126 (26) obj. 289.633 iterations 26
Cbc0038I Pass  33: suminf.    3.22907 (24) obj. 289.633 iterations 11
Cbc0038I Pass  34: suminf.    2.60033 (26) obj. 289.633 iterations 13
Cbc0038I Pass  35: suminf.    7.00000 (18) obj. 280 iterations 23
Cbc0038I Pass  36: suminf.    5.66667 (24) obj. 281.583 iterations 27
Cbc0038I Pass  37: suminf.    5.50000 (24) obj. 282.214 iterations 7
Cbc0038I Pass  38: suminf.    6.60955 (27) obj. 289.633 iterations 34
Cbc0038I Pass  39: suminf.    1.26683 (6) obj. 289.633 iterations 35
Cbc0038I Rounding solution of 289 is better than previous of 294
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 145 columns, reduced to 51 rows 79 columns
Cbc0038I Mini branch and bound did not improve solution (1.33 seconds)
Cbc0038I Round again with cutoff of 284.45
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 4
Cbc0038I Pass  39: suminf.    5.55556 (20) obj. 280.778 iterations 4
Cbc0038I Pass  40: suminf.    5.00000 (15) obj. 281.667 iterations 23
Cbc0038I Pass  41: suminf.    6.66263 (24) obj. 284.45 iterations 23
Cbc0038I Pass  42: suminf.    5.86381 (16) obj. 284.45 iterations 19
Cbc0038I Pass  43: suminf.    7.00000 (19) obj. 284.45 iterations 16
Cbc0038I Pass  44: suminf.    5.37475 (22) obj. 284.45 iterations 21
Cbc0038I Pass  45: suminf.    5.37475 (22) obj. 284.45 iterations 0
Cbc0038I Pass  46: suminf.    4.77778 (20) obj. 283.778 iterations 23
Cbc0038I Pass  47: suminf.    4.44444 (19) obj. 283.889 iterations 11
Cbc0038I Pass  48: suminf.    6.33333 (22) obj. 283.167 iterations 22
Cbc0038I Pass  49: suminf.    5.22750 (23) obj. 284.45 iterations 26
Cbc0038I Pass  50: suminf.    4.94492 (25) obj. 284.45 iterations 15
Cbc0038I Pass  51: suminf.    3.94608 (25) obj. 284.45 iterations 16
Cbc0038I Pass  52: suminf.    6.69544 (22) obj. 284.45 iterations 29
Cbc0038I Pass  53: suminf.    6.05371 (26) obj. 284.45 iterations 8
Cbc0038I Pass  54: suminf.    5.00000 (15) obj. 281.667 iterations 18
Cbc0038I Pass  55: suminf.    5.00000 (15) obj. 281.667 iterations 1
Cbc0038I Pass  56: suminf.    5.21685 (20) obj. 284.45 iterations 19
Cbc0038I Pass  57: suminf.    5.21685 (20) obj. 284.45 iterations 11
Cbc0038I Pass  58: suminf.    6.27778 (24) obj. 280.778 iterations 22
Cbc0038I Pass  59: suminf.    5.55556 (20) obj. 280.778 iterations 16
Cbc0038I Pass  60: suminf.    5.00000 (15) obj. 281.667 iterations 9
Cbc0038I Pass  61: suminf.    5.65413 (18) obj. 284.45 iterations 23
Cbc0038I Pass  62: suminf.    4.07120 (23) obj. 284.45 iterations 19
Cbc0038I Pass  63: suminf.    3.61661 (21) obj. 284.45 iterations 7
Cbc0038I Pass  64: suminf.    3.54895 (20) obj. 284.45 iterations 3
Cbc0038I Pass  65: suminf.    6.00000 (22) obj. 278.5 iterations 28
Cbc0038I Pass  66: suminf.    5.66667 (17) obj. 281.333 iterations 15
Cbc0038I Pass  67: suminf.    6.26918 (16) obj. 284.45 iterations 21
Cbc0038I Pass  68: suminf.    4.77497 (21) obj. 284.45 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 67 rows 145 columns, reduced to 39 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (1.85 seconds)
Cbc0038I After 1.85 seconds - Feasibility pump exiting with objective of 289 - took 4.59 seconds
Cbc0012I Integer solution of 289 found by feasibility pump after 0 iterations and 0 nodes (1.85 seconds)
Cbc0038I Full problem 67 rows 145 columns, reduced to 9 rows 5 columns
Cbc0012I Integer solution of 288 found by DiveCoefficient after 54 iterations and 0 nodes (1.94 seconds)
Cbc0031I 5 added rows had average density of 19.4
Cbc0013I At root node, 5 cuts changed objective from 276.16667 to 288 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.9 elements, 40 column cuts (40 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 32 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 9 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective 288, took 54 iterations and 0 nodes (1.94 seconds)
Cbc0035I Maximum depth 0, 47 variables fixed on reduced cost
Cuts at root node changed objective from 276.167 to 288
Probing was tried 5 times and created 50 cuts of which 0 were active after adding rounds of cuts (0.019545 seconds)
Gomory was tried 5 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.00384 seconds)
Knapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006499 seconds)
liftKnapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.076056 seconds)
Clique was tried 5 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001273 seconds)
OddWheel was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00285 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001314 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000345 seconds)
TwoMirCuts was tried 5 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.017093 seconds)
ZeroHalf was tried 5 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.007648 seconds)

Result - Optimal solution found
Objective value:                288
Enumerated nodes:               0
Total iterations:               54
Time (CPU seconds):             5.15821
Time (Wallclock seconds):       1.94974
Total time (CPU seconds):       5.16722   (Wallclock seconds):       1.95601
