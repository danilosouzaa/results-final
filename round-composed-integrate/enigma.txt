Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/enigma.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/enigma.txt -quit (default strategy 1)
At line 15 NAME          ENIGMA
At line 16 ROWS
At line 39 COLUMNS
At line 232 RHS
At line 243 BOUNDS
At line 344 ENDATA
Problem ENIGMA has 21 rows, 100 columns and 289 elements
Coin0008I ENIGMA read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.001673 seconds
Cgl0004I processed model has 21 rows, 100 columns (100 integer (100 of which binary)) and 289 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 4.930%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.08365
Cbc0038I Pass   1: suminf.    0.41681 (4) obj. 0 iterations 24
Cbc0038I Pass   2: suminf.    1.84446 (4) obj. 0 iterations 18
Cbc0038I Pass   3: suminf.    1.84446 (4) obj. 0 iterations 10
Cbc0038I Pass   4: suminf.    1.84446 (4) obj. 0 iterations 9
Cbc0038I Pass   5: suminf.    1.84446 (4) obj. 0 iterations 8
Cbc0038I Pass   6: suminf.    0.10359 (4) obj. 7 iterations 38
Cbc0038I Pass   7: suminf.    0.10359 (4) obj. 7 iterations 27
Cbc0038I Pass   8: suminf.    1.92801 (4) obj. 7 iterations 17
Cbc0038I Pass   9: suminf.    1.92801 (4) obj. 7 iterations 7
Cbc0038I Pass  10: suminf.    1.87784 (6) obj. 8 iterations 25
Cbc0038I Pass  11: suminf.    1.25091 (4) obj. 8 iterations 18
Cbc0038I Pass  12: suminf.    1.82723 (4) obj. 8 iterations 19
Cbc0038I Pass  13: suminf.    1.82723 (4) obj. 8 iterations 12
Cbc0038I Pass  14: suminf.    1.65096 (4) obj. 8 iterations 21
Cbc0038I Pass  15: suminf.    1.65096 (4) obj. 8 iterations 14
Cbc0038I Pass  16: suminf.    1.72910 (4) obj. 8 iterations 20
Cbc0038I Pass  17: suminf.    1.72910 (4) obj. 8 iterations 14
Cbc0038I Pass  18: suminf.    2.44783 (12) obj. 7.20399 iterations 18
Cbc0038I Pass  19: suminf.    0.89702 (4) obj. 7 iterations 27
Cbc0038I Pass  20: suminf.    1.96197 (4) obj. 7 iterations 22
Cbc0038I Pass  21: suminf.    1.96197 (4) obj. 7 iterations 18
Cbc0038I Pass  22: suminf.    2.47815 (6) obj. 7 iterations 30
Cbc0038I Pass  23: suminf.    1.91264 (4) obj. 7 iterations 18
Cbc0038I Pass  24: suminf.    1.91264 (4) obj. 7 iterations 19
Cbc0038I Pass  25: suminf.    3.07558 (14) obj. 3.87874 iterations 29
Cbc0038I Pass  26: suminf.    0.87681 (4) obj. 3 iterations 24
Cbc0038I Pass  27: suminf.    1.91796 (4) obj. 3 iterations 13
Cbc0038I Pass  28: suminf.    1.91796 (4) obj. 3 iterations 11
Cbc0038I Pass  29: suminf.    1.44837 (6) obj. 3 iterations 18
Cbc0038I Pass  30: suminf.    0.96387 (4) obj. 3 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 21 rows 100 columns, reduced to 21 rows 63 columns
Cbc0038I Mini branch and bound did not improve solution (3.57 seconds)
Cbc0038I Full problem 22 rows 100 columns, reduced to 22 rows 100 columns
Cbc0038I After 9.31 seconds - Feasibility pump exiting - took 24.39 seconds
Cbc0031I 4 added rows had average density of 56.5
Cbc0013I At root node, 4 cuts changed objective from 0 to 0 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 49 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.556 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 483 row cuts average 97.4 elements, 0 column cuts (0 active)  in 0.301 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 204 row cuts average 24.7 elements, 0 column cuts (0 active)  in 5.494 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 124 row cuts average 87.4 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 72 row cuts average 73.5 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (27.02 seconds)
Cbc0010I After 95 nodes, 10 on tree, 1e+50 best solution, best possible 0 (27.73 seconds)
Cbc0010I After 304 nodes, 5 on tree, 1e+50 best solution, best possible 0 (28.43 seconds)
Cbc0010I After 372 nodes, 8 on tree, 1e+50 best solution, best possible 0 (29.18 seconds)
Cbc0010I After 514 nodes, 7 on tree, 1e+50 best solution, best possible 0 (29.90 seconds)
Cbc0010I After 520 nodes, 7 on tree, 1e+50 best solution, best possible 0 (30.79 seconds)
Cbc0010I After 522 nodes, 8 on tree, 1e+50 best solution, best possible 0 (31.73 seconds)
Cbc0010I After 534 nodes, 7 on tree, 1e+50 best solution, best possible 0 (32.51 seconds)
Cbc0010I After 567 nodes, 9 on tree, 1e+50 best solution, best possible 0 (33.21 seconds)
Cbc0010I After 639 nodes, 4 on tree, 1e+50 best solution, best possible 0 (34.01 seconds)
Cbc0010I After 664 nodes, 5 on tree, 1e+50 best solution, best possible 0 (34.72 seconds)
Cbc0010I After 735 nodes, 4 on tree, 1e+50 best solution, best possible 0 (35.56 seconds)
Cbc0010I After 756 nodes, 9 on tree, 1e+50 best solution, best possible 0 (36.34 seconds)
Cbc0010I After 786 nodes, 10 on tree, 1e+50 best solution, best possible 0 (37.06 seconds)
Cbc0010I After 795 nodes, 7 on tree, 1e+50 best solution, best possible 0 (38.17 seconds)
Cbc0010I After 823 nodes, 6 on tree, 1e+50 best solution, best possible 0 (38.91 seconds)
Cbc0010I After 840 nodes, 8 on tree, 1e+50 best solution, best possible 0 (39.71 seconds)
Cbc0010I After 857 nodes, 6 on tree, 1e+50 best solution, best possible 0 (40.44 seconds)
Cbc0010I After 867 nodes, 10 on tree, 1e+50 best solution, best possible 0 (41.20 seconds)
Cbc0010I After 885 nodes, 8 on tree, 1e+50 best solution, best possible 0 (41.92 seconds)
Cbc0010I After 900 nodes, 9 on tree, 1e+50 best solution, best possible 0 (42.62 seconds)
Cbc0010I After 927 nodes, 6 on tree, 1e+50 best solution, best possible 0 (43.32 seconds)
Cbc0010I After 948 nodes, 7 on tree, 1e+50 best solution, best possible 0 (44.04 seconds)
Cbc0010I After 977 nodes, 7 on tree, 1e+50 best solution, best possible 0 (45.02 seconds)
Cbc0010I After 1002 nodes, 6 on tree, 1e+50 best solution, best possible 0 (46.10 seconds)
Cbc0010I After 1115 nodes, 11 on tree, 1e+50 best solution, best possible 0 (46.82 seconds)
Cbc0010I After 1174 nodes, 14 on tree, 1e+50 best solution, best possible 0 (47.56 seconds)
Cbc0010I After 1183 nodes, 12 on tree, 1e+50 best solution, best possible 0 (48.28 seconds)
Cbc0010I After 1206 nodes, 10 on tree, 1e+50 best solution, best possible 0 (48.98 seconds)
Cbc0010I After 1214 nodes, 15 on tree, 1e+50 best solution, best possible 0 (51.66 seconds)
Cbc0010I After 1227 nodes, 14 on tree, 1e+50 best solution, best possible 0 (52.71 seconds)
Cbc0010I After 1243 nodes, 12 on tree, 1e+50 best solution, best possible 0 (53.44 seconds)
Cbc0010I After 1255 nodes, 9 on tree, 1e+50 best solution, best possible 0 (54.18 seconds)
Cbc0010I After 1309 nodes, 7 on tree, 1e+50 best solution, best possible 0 (54.92 seconds)
Cbc0010I After 1356 nodes, 14 on tree, 1e+50 best solution, best possible 0 (55.74 seconds)
Cbc0010I After 1358 nodes, 15 on tree, 1e+50 best solution, best possible 0 (60.59 seconds)
Cbc0010I After 1368 nodes, 13 on tree, 1e+50 best solution, best possible 0 (61.36 seconds)
Cbc0010I After 1382 nodes, 12 on tree, 1e+50 best solution, best possible 0 (62.07 seconds)
Cbc0010I After 1410 nodes, 10 on tree, 1e+50 best solution, best possible 0 (62.84 seconds)
Cbc0010I After 1421 nodes, 12 on tree, 1e+50 best solution, best possible 0 (63.65 seconds)
Cbc0010I After 1430 nodes, 11 on tree, 1e+50 best solution, best possible 0 (64.39 seconds)
Cbc0010I After 1463 nodes, 12 on tree, 1e+50 best solution, best possible 0 (65.11 seconds)
Cbc0010I After 1485 nodes, 11 on tree, 1e+50 best solution, best possible 0 (65.88 seconds)
Cbc0010I After 1509 nodes, 11 on tree, 1e+50 best solution, best possible 0 (66.62 seconds)
Cbc0010I After 1536 nodes, 12 on tree, 1e+50 best solution, best possible 0 (67.37 seconds)
Cbc0010I After 1555 nodes, 10 on tree, 1e+50 best solution, best possible 0 (68.07 seconds)
Cbc0010I After 1569 nodes, 11 on tree, 1e+50 best solution, best possible 0 (68.83 seconds)
Cbc0010I After 1589 nodes, 9 on tree, 1e+50 best solution, best possible 0 (69.57 seconds)
Cbc0010I After 1611 nodes, 7 on tree, 1e+50 best solution, best possible 0 (70.36 seconds)
Cbc0010I After 1618 nodes, 14 on tree, 1e+50 best solution, best possible 0 (71.09 seconds)
Cbc0010I After 1627 nodes, 14 on tree, 1e+50 best solution, best possible 0 (73.40 seconds)
Cbc0016I Integer solution of 0 found by strong branching after 17161 iterations and 1630 nodes (75.36 seconds)
Cbc0001I Search completed - best objective 0, took 254567 iterations and 27415 nodes (75.37 seconds)
Cbc0032I Strong branching done 4080 times (28355 iterations), fathomed 266 nodes and fixed 337 variables
Cbc0041I Maximum depth 20, 0 variables fixed on reduced cost (complete fathoming 341 times, 25785 nodes taking 237406 iterations)
Cuts at root node changed objective from 0 to 0
Probing was tried 100 times and created 49 cuts of which 0 were active after adding rounds of cuts (0.556173 seconds)
Gomory was tried 100 times and created 483 cuts of which 0 were active after adding rounds of cuts (0.300768 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.16013 seconds)
liftKnapsack was tried 100 times and created 204 cuts of which 0 were active after adding rounds of cuts (5.4941 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043545 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.062867 seconds)
MixedIntegerRounding2 was tried 100 times and created 124 cuts of which 0 were active after adding rounds of cuts (0.189481 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006612 seconds)
TwoMirCuts was tried 100 times and created 72 cuts of which 0 were active after adding rounds of cuts (0.135609 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               27415
Total iterations:               254567
Time (CPU seconds):             194.012
Time (Wallclock seconds):       75.4117
Total time (CPU seconds):       194.079   (Wallclock seconds):       75.451
