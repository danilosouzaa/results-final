Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/pp08a.mps.gz -timeM elapsed -seconds 10800 -solve -solu sol-final-knap/pp08a.txt -quit (default strategy 1)
At line 15 NAME          PP08A
At line 16 ROWS
At line 154 COLUMNS
At line 571 RHS
At line 604 BOUNDS
At line 669 ENDATA
Problem PP08A has 136 rows, 240 columns and 480 elements
Coin0008I PP08A read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 2748.35 - 0.002399 seconds
Cgl0004I processed model has 133 rows, 234 columns (64 integer (64 of which binary)) and 468 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.058%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 9.5081
Cbc0038I Pass   1: suminf.    1.47857 (7) obj. 11190.7 iterations 65
Cbc0038I Pass   2: suminf.    0.42857 (3) obj. 11410 iterations 12
Cbc0038I Solution found of 11830
Cbc0038I Relaxing continuous gives 10900
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 61 continuous
Cbc0038I Full problem 133 rows 234 columns, reduced to 96 rows 136 columns - 5 fixed gives 92, 132 - still too large
Cbc0038I Full problem 133 rows 234 columns, reduced to 90 rows 128 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of 10084.8
Cbc0038I Pass   3: suminf.    3.32055 (13) obj. 10084.8 iterations 5
Cbc0038I Pass   4: suminf.    0.83038 (6) obj. 10084.8 iterations 33
Cbc0038I Pass   5: suminf.    0.10763 (1) obj. 10084.8 iterations 17
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 10084.8 iterations 2
Cbc0038I Solution found of 10084.8
Cbc0038I Relaxing continuous gives 9700
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 59 continuous
Cbc0038I Full problem 133 rows 234 columns, reduced to 97 rows 139 columns - 12 fixed gives 87, 129 - still too large
Cbc0038I Full problem 133 rows 234 columns, reduced to 87 rows 129 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of 8309.67
Cbc0038I Pass   7: suminf.    4.99973 (23) obj. 8309.67 iterations 19
Cbc0038I Pass   8: suminf.    2.33699 (11) obj. 8309.67 iterations 29
Cbc0038I Pass   9: suminf.    0.73125 (6) obj. 8309.67 iterations 39
Cbc0038I Pass  10: suminf.    0.80983 (5) obj. 8309.67 iterations 24
Cbc0038I Pass  11: suminf.    0.69733 (7) obj. 8309.67 iterations 7
Cbc0038I Pass  12: suminf.    1.34184 (7) obj. 8309.67 iterations 20
Cbc0038I Pass  13: suminf.    0.83471 (4) obj. 8309.67 iterations 17
Cbc0038I Pass  14: suminf.    0.59733 (6) obj. 8309.67 iterations 13
Cbc0038I Pass  15: suminf.    1.41184 (8) obj. 8309.67 iterations 19
Cbc0038I Pass  16: suminf.    1.00000 (5) obj. 8309.67 iterations 19
Cbc0038I Pass  17: suminf.    1.59733 (8) obj. 8309.67 iterations 8
Cbc0038I Pass  18: suminf.    1.26573 (9) obj. 8309.67 iterations 8
Cbc0038I Pass  19: suminf.    1.96391 (11) obj. 8309.67 iterations 23
Cbc0038I Pass  20: suminf.    1.90085 (11) obj. 8309.67 iterations 5
Cbc0038I Pass  21: suminf.    2.57610 (14) obj. 8309.67 iterations 29
Cbc0038I Pass  22: suminf.    2.13023 (15) obj. 8309.67 iterations 10
Cbc0038I Pass  23: suminf.    3.01777 (14) obj. 8309.67 iterations 17
Cbc0038I Pass  24: suminf.    2.52110 (15) obj. 8309.67 iterations 10
Cbc0038I Pass  25: suminf.    2.79890 (14) obj. 8309.67 iterations 14
Cbc0038I Pass  26: suminf.    2.31666 (16) obj. 8309.67 iterations 10
Cbc0038I Pass  27: suminf.    2.48777 (16) obj. 8309.67 iterations 7
Cbc0038I Pass  28: suminf.    2.48777 (16) obj. 8309.67 iterations 3
Cbc0038I Pass  29: suminf.    2.53223 (14) obj. 8309.67 iterations 7
Cbc0038I Pass  30: suminf.    2.29666 (16) obj. 8309.67 iterations 9
Cbc0038I Pass  31: suminf.    2.53223 (14) obj. 8309.67 iterations 9
Cbc0038I Pass  32: suminf.    3.14316 (15) obj. 8309.67 iterations 50
Cbc0038I Pass  33: suminf.    2.18488 (15) obj. 8309.67 iterations 9
Cbc0038I Pass  34: suminf.    3.06777 (15) obj. 8309.67 iterations 22
Cbc0038I Pass  35: suminf.    2.85444 (18) obj. 8309.67 iterations 6
Cbc0038I Pass  36: suminf.    3.76206 (18) obj. 8309.67 iterations 25
Cbc0038I Rounding solution of 9050 is better than previous of 9700
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 28 continuous
Cbc0038I Full problem 133 rows 234 columns, reduced to 114 rows 187 columns - 12 fixed gives 102, 175 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I Round again with cutoff of 6641.27
Cbc0038I Pass  36: suminf.    6.50552 (25) obj. 6641.27 iterations 4
Cbc0038I Pass  37: suminf.    3.56490 (19) obj. 6641.27 iterations 32
Cbc0038I Pass  38: suminf.    4.08777 (21) obj. 6641.27 iterations 50
Cbc0038I Pass  39: suminf.    3.55496 (22) obj. 6641.27 iterations 13
Cbc0038I Pass  40: suminf.    4.29814 (21) obj. 6641.27 iterations 19
Cbc0038I Pass  41: suminf.    4.10655 (22) obj. 6641.27 iterations 5
Cbc0038I Pass  42: suminf.    4.64338 (22) obj. 6641.27 iterations 17
Cbc0038I Pass  43: suminf.    4.41005 (23) obj. 6641.27 iterations 6
Cbc0038I Pass  44: suminf.    4.81362 (25) obj. 6641.27 iterations 21
Cbc0038I Pass  45: suminf.    4.31537 (23) obj. 6641.27 iterations 9
Cbc0038I Pass  46: suminf.    4.88296 (18) obj. 6641.27 iterations 15
Cbc0038I Pass  47: suminf.    4.41560 (23) obj. 6641.27 iterations 22
Cbc0038I Pass  48: suminf.    4.34894 (24) obj. 6641.27 iterations 6
Cbc0038I Pass  49: suminf.    4.90067 (22) obj. 6641.27 iterations 19
Cbc0038I Pass  50: suminf.    4.44673 (23) obj. 6641.27 iterations 18
Cbc0038I Pass  51: suminf.    5.36777 (23) obj. 6641.27 iterations 18
Cbc0038I Pass  52: suminf.    5.08777 (25) obj. 6641.27 iterations 8
Cbc0038I Pass  53: suminf.    5.07171 (25) obj. 6641.27 iterations 14
Cbc0038I Pass  54: suminf.    4.71841 (23) obj. 6641.27 iterations 12
Cbc0038I Pass  55: suminf.    5.04909 (21) obj. 6641.27 iterations 13
Cbc0038I Pass  56: suminf.    4.62366 (22) obj. 6641.27 iterations 8
Cbc0038I Pass  57: suminf.    4.06279 (22) obj. 6641.27 iterations 8
Cbc0038I Pass  58: suminf.    4.45348 (21) obj. 6641.27 iterations 10
Cbc0038I Pass  59: suminf.    4.45348 (22) obj. 6641.27 iterations 3
Cbc0038I Pass  60: suminf.    4.79064 (24) obj. 6641.27 iterations 14
Cbc0038I Pass  61: suminf.    4.76064 (24) obj. 6641.27 iterations 5
Cbc0038I Pass  62: suminf.    5.63663 (22) obj. 6641.27 iterations 24
Cbc0038I Pass  63: suminf.    5.02143 (25) obj. 6641.27 iterations 19
Cbc0038I Pass  64: suminf.    5.48206 (19) obj. 6641.27 iterations 16
Cbc0038I Pass  65: suminf.    5.16277 (23) obj. 6641.27 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 39 continuous
Cbc0038I Full problem 133 rows 234 columns, reduced to 111 rows 174 columns - 12 fixed gives 100, 163 - still too large
Cbc0038I Full problem 133 rows 234 columns, reduced to 99 rows 161 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of 9050 - took 0.25 seconds
Cbc0012I Integer solution of 9010 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0012I Integer solution of 8520 found by DiveCoefficient after 707 iterations and 0 nodes (0.79 seconds)
Cbc0031I 75 added rows had average density of 19.653333
Cbc0013I At root node, 75 cuts changed objective from 2748.3452 to 6679.0651 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 248 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 97 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 168 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 8520 best solution, best possible 6679.0651 (0.92 seconds)
Cbc0012I Integer solution of 8360 found by DiveCoefficient after 937 iterations and 1 nodes (1.28 seconds)
Cbc0010I After 5 nodes, 6 on tree, 8360 best solution, best possible 6679.0651 (1.64 seconds)
Cbc0010I After 33 nodes, 23 on tree, 8360 best solution, best possible 6679.0651 (2.36 seconds)
Cbc0004I Integer solution of 7530 found after 2578 iterations and 66 nodes (2.60 seconds)
Cbc0004I Integer solution of 7370 found after 3571 iterations and 111 nodes (3.01 seconds)
Cbc0010I After 126 nodes, 32 on tree, 7370 best solution, best possible 6679.0651 (3.06 seconds)
Cbc0004I Integer solution of 7360 found after 3818 iterations and 132 nodes (3.07 seconds)
Cbc0004I Integer solution of 7350 found after 6729 iterations and 288 nodes (3.71 seconds)
Cbc0010I After 311 nodes, 34 on tree, 7350 best solution, best possible 6679.0651 (3.76 seconds)
Cbc0010I After 426 nodes, 51 on tree, 7350 best solution, best possible 6679.0651 (4.46 seconds)
Cbc0010I After 510 nodes, 50 on tree, 7350 best solution, best possible 6679.0651 (5.30 seconds)
Cbc0010I After 531 nodes, 39 on tree, 7350 best solution, best possible 6679.0651 (6.68 seconds)
Cbc0010I After 544 nodes, 34 on tree, 7350 best solution, best possible 6679.0651 (7.38 seconds)
Cbc0010I After 555 nodes, 29 on tree, 7350 best solution, best possible 6679.0651 (8.15 seconds)
Cbc0010I After 577 nodes, 18 on tree, 7350 best solution, best possible 6679.0651 (8.93 seconds)
Cbc0010I After 618 nodes, 9 on tree, 7350 best solution, best possible 6679.0651 (9.64 seconds)
Cbc0010I After 622 nodes, 9 on tree, 7350 best solution, best possible 6679.0651 (10.47 seconds)
Cbc0010I After 658 nodes, 10 on tree, 7350 best solution, best possible 6679.0651 (11.30 seconds)
Cbc0010I After 684 nodes, 6 on tree, 7350 best solution, best possible 6679.0651 (12.05 seconds)
Cbc0010I After 700 nodes, 9 on tree, 7350 best solution, best possible 6679.0651 (12.79 seconds)
Cbc0010I After 721 nodes, 8 on tree, 7350 best solution, best possible 6679.0651 (13.55 seconds)
Cbc0010I After 756 nodes, 10 on tree, 7350 best solution, best possible 6679.0651 (14.26 seconds)
Cbc0010I After 810 nodes, 5 on tree, 7350 best solution, best possible 6679.0651 (14.96 seconds)
Cbc0010I After 856 nodes, 7 on tree, 7350 best solution, best possible 6679.0651 (15.79 seconds)
Cbc0010I After 879 nodes, 4 on tree, 7350 best solution, best possible 6679.0651 (16.50 seconds)
Cbc0010I After 930 nodes, 5 on tree, 7350 best solution, best possible 6679.0651 (17.21 seconds)
Cbc0010I After 939 nodes, 2 on tree, 7350 best solution, best possible 6983.1451 (17.96 seconds)
Cbc0010I After 958 nodes, 9 on tree, 7350 best solution, best possible 6983.1451 (18.67 seconds)
Cbc0010I After 989 nodes, 4 on tree, 7350 best solution, best possible 6983.1451 (19.37 seconds)
Cbc0010I After 1000 nodes, 6 on tree, 7350 best solution, best possible 6983.1451 (20.11 seconds)
Cbc0010I After 1036 nodes, 1 on tree, 7350 best solution, best possible 7121.7287 (20.86 seconds)
Cbc0001I Search completed - best objective 7350, took 164591 iterations and 9104 nodes (21.48 seconds)
Cbc0032I Strong branching done 2116 times (38284 iterations), fathomed 16 nodes and fixed 82 variables
Cbc0041I Maximum depth 38, 638 variables fixed on reduced cost (complete fathoming 193 times, 8034 nodes taking 127406 iterations)
Cuts at root node changed objective from 2748.35 to 6679.07
Probing was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.046414 seconds)
Gomory was tried 1234 times and created 3137 cuts of which 0 were active after adding rounds of cuts (1.2842 seconds)
Knapsack was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.02379 seconds)
liftKnapsack was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.04873 seconds)
Clique was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000329 seconds)
OddWheel was tried 22 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000321 seconds)
MixedIntegerRounding2 was tried 1234 times and created 1681 cuts of which 0 were active after adding rounds of cuts (0.843581 seconds)
FlowCover was tried 22 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.016116 seconds)
TwoMirCuts was tried 1234 times and created 368 cuts of which 0 were active after adding rounds of cuts (0.324139 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (3e-06 seconds)

Result - Optimal solution found
Objective value:                7350
Enumerated nodes:               9104
Total iterations:               164591
Time (CPU seconds):             19.6928
Time (Wallclock seconds):       21.5038
Total time (CPU seconds):       19.6944   (Wallclock seconds):       21.5088
