Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/22433.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/22433.txt -quit (default strategy 1)
At line 1 NAME   22433
At line 2 ROWS
At line 202 COLUMNS
At line 3614 RHS
At line 3813 BOUNDS
At line 4243 ENDATA
Problem 22433 has 198 rows, 429 columns and 3408 elements
Coin0008I 22433 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 21240.5 - 0.067477 seconds
Cgl0004I processed model has 198 rows, 231 columns (231 integer (231 of which binary)) and 3210 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.216%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 89 integers unsatisfied sum - 27.1102
Cbc0038I Pass   1: suminf.   12.11237 (76) obj. 21626 iterations 161
Cbc0038I Pass   2: suminf.   10.46277 (57) obj. 21626 iterations 121
Cbc0038I Pass   3: suminf.   10.41161 (51) obj. 21626 iterations 17
Cbc0038I Pass   4: suminf.    2.33274 (26) obj. 21626 iterations 118
Cbc0038I Pass   5: suminf.    1.75176 (5) obj. 21626 iterations 54
Cbc0038I Pass   6: suminf.    0.90590 (3) obj. 21626 iterations 63
Cbc0038I Pass   7: suminf.    1.00000 (2) obj. 21454.5 iterations 52
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 21561 iterations 40
Cbc0038I Solution found of 21561
Cbc0038I Rounding solution of 21520 is better than previous of 21561
Cbc0038I Before mini branch and bound, 125 integers at bound fixed and 0 continuous
Cbc0038I Full problem 198 rows 231 columns, reduced to 171 rows 106 columns - 13 fixed gives 135, 81 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I Round again with cutoff of 21491.2
Cbc0038I Reduced cost fixing fixed 58 variables on major pass 2
Cbc0038I Pass   9: suminf.   12.68469 (75) obj. 21491.2 iterations 38
Cbc0038I Pass  10: suminf.   11.46959 (36) obj. 21491.2 iterations 126
Cbc0038I Pass  11: suminf.   10.75305 (80) obj. 21491.2 iterations 33
Cbc0038I Pass  12: suminf.    9.34894 (45) obj. 21491.2 iterations 157
Cbc0038I Pass  13: suminf.    9.21755 (41) obj. 21491.2 iterations 42
Cbc0038I Pass  14: suminf.    9.77044 (38) obj. 21491.2 iterations 58
Cbc0038I Pass  15: suminf.    9.25944 (40) obj. 21491.2 iterations 51
Cbc0038I Pass  16: suminf.    5.24183 (26) obj. 21491.2 iterations 113
Cbc0038I Pass  17: suminf.    1.00000 (3) obj. 21491.2 iterations 127
Cbc0038I Pass  18: suminf.    0.33697 (2) obj. 21491.2 iterations 72
Cbc0038I Solution found of 21477
Cbc0038I Before mini branch and bound, 121 integers at bound fixed and 0 continuous
Cbc0038I Full problem 198 rows 231 columns, reduced to 172 rows 110 columns - 47 fixed gives 40, 42 - ok now
Cbc0038I Full problem 198 rows 231 columns, reduced to 5 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I Round again with cutoff of 21428.9
Cbc0038I Reduced cost fixing fixed 72 variables on major pass 3
Cbc0038I Pass  19: suminf.   11.87644 (36) obj. 21428.9 iterations 4
Cbc0038I Pass  20: suminf.   10.98955 (52) obj. 21428.9 iterations 148
Cbc0038I Pass  21: suminf.    3.04516 (72) obj. 21428.9 iterations 152
Cbc0038I Pass  22: suminf.    2.97514 (67) obj. 21428.9 iterations 22
Cbc0038I Pass  23: suminf.    2.97514 (67) obj. 21428.9 iterations 0
Cbc0038I Pass  24: suminf.   12.64309 (27) obj. 21428.9 iterations 105
Cbc0038I Pass  25: suminf.    4.96884 (43) obj. 21428.9 iterations 98
Cbc0038I Pass  26: suminf.    3.46860 (94) obj. 21428.9 iterations 75
Cbc0038I Pass  27: suminf.    4.26127 (92) obj. 21428.9 iterations 58
Cbc0038I Pass  28: suminf.    3.85275 (93) obj. 21428.9 iterations 113
Cbc0038I Pass  29: suminf.    3.35991 (94) obj. 21428.9 iterations 48
Cbc0038I Pass  30: suminf.   13.19517 (64) obj. 21428.9 iterations 103
Cbc0038I Pass  31: suminf.    3.25185 (65) obj. 21428.9 iterations 91
Cbc0038I Pass  32: suminf.    2.97514 (67) obj. 21428.9 iterations 24
Cbc0038I Pass  33: suminf.    4.34107 (40) obj. 21428.9 iterations 79
Cbc0038I Pass  34: suminf.    2.97514 (67) obj. 21428.9 iterations 66
Cbc0038I Pass  35: suminf.    3.18819 (73) obj. 21428.9 iterations 23
Cbc0038I Pass  36: suminf.    2.97514 (67) obj. 21428.9 iterations 31
Cbc0038I Pass  37: suminf.    5.86279 (44) obj. 21428.9 iterations 96
Cbc0038I Pass  38: suminf.    3.50584 (99) obj. 21428.9 iterations 116
Cbc0038I Pass  39: suminf.    3.35991 (94) obj. 21428.9 iterations 31
Cbc0038I Pass  40: suminf.    7.66479 (69) obj. 21428.9 iterations 83
Cbc0038I Pass  41: suminf.    4.88186 (62) obj. 21428.9 iterations 47
Cbc0038I Pass  42: suminf.    3.04503 (65) obj. 21428.9 iterations 9
Cbc0038I Pass  43: suminf.    2.97514 (67) obj. 21428.9 iterations 15
Cbc0038I Pass  44: suminf.    2.97514 (67) obj. 21428.9 iterations 0
Cbc0038I Pass  45: suminf.    4.82026 (44) obj. 21428.9 iterations 29
Cbc0038I Pass  46: suminf.    6.51364 (103) obj. 21428.9 iterations 94
Cbc0038I Pass  47: suminf.    4.54643 (68) obj. 21428.9 iterations 43
Cbc0038I Pass  48: suminf.    4.52485 (95) obj. 21428.9 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 109 integers at bound fixed and 0 continuous
Cbc0038I Full problem 198 rows 231 columns, reduced to 188 rows 122 columns - 54 fixed gives 25, 32 - ok now
Cbc0038I Full problem 198 rows 231 columns, reduced to 6 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.55 seconds)
Cbc0038I After 0.55 seconds - Feasibility pump exiting with objective of 21477 - took 0.77 seconds
Cbc0012I Integer solution of 21477 found by feasibility pump after 0 iterations and 0 nodes (0.55 seconds)
Cbc0038I Full problem 198 rows 231 columns, reduced to 169 rows 93 columns - 43 fixed gives 14, 20 - ok now
Cbc0031I 11 added rows had average density of 116
Cbc0013I At root node, 11 cuts changed objective from 21240.526 to 21317.411 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.989 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 185 row cuts average 161.2 elements, 0 column cuts (0 active)  in 0.369 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.459 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 21477 best solution, best possible 21317.411 (3.61 seconds)
Cbc0001I Search completed - best objective 21477, took 1152 iterations and 6 nodes (4.03 seconds)
Cbc0032I Strong branching done 268 times (14344 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 147 variables fixed on reduced cost
Cuts at root node changed objective from 21240.5 to 21317.4
Probing was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.037555 seconds)
Gomory was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.085968 seconds)
liftKnapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.989466 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (9.8e-05 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000114 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.074901 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000622 seconds)
TwoMirCuts was tried 10 times and created 185 cuts of which 0 were active after adding rounds of cuts (0.368524 seconds)
ZeroHalf was tried 10 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.458695 seconds)

Result - Optimal solution found
Objective value:                21477
Enumerated nodes:               6
Total iterations:               1152
Time (CPU seconds):             4.57445
Time (Wallclock seconds):       4.0386
Total time (CPU seconds):       4.58374   (Wallclock seconds):       4.04712
