Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/acc-tight5.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/acc-tight5.txt -quit (default strategy 1)
At line 1 NAME          acc-tight5
At line 2 ROWS
At line 3056 COLUMNS
At line 19194 RHS
At line 22247 BOUNDS
At line 23587 ENDATA
Problem acc-tight5 has 3052 rows, 1339 columns and 16134 elements
Coin0008I acc-tight5 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 1.13984 seconds
Cgl0002I 4 variables fixed
Cgl0003I 206 fixed, 0 tightened bounds, 1208 strengthened rows, 152 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 684 strengthened rows, 0 substitutions
Cgl0003I 10 fixed, 0 tightened bounds, 1135 strengthened rows, 29 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 579 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 1061 strengthened rows, 7 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 102 strengthened rows, 0 substitutions
Cgl0003I 5 fixed, 0 tightened bounds, 950 strengthened rows, 18 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 5 fixed, 0 tightened bounds, 730 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 3 fixed, 0 tightened bounds, 402 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 152 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0004I processed model has 2400 rows, 976 columns (976 integer (976 of which binary)) and 18467 elements
Coin3009W Conflict graph built in 0.019 seconds, density: 1.229%
Cgl0015I Clique Strengthening extended 7 cliques, 7 were dominated
After applying Clique Strengthening continuous objective value is 1
Cbc0045I No integer variables out of 976 objects (976 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 318 integers unsatisfied sum - 79.0815
Cbc0038I Pass   1: suminf.   57.02548 (250) obj. 1 iterations 2617
Cbc0038I Pass   2: suminf.   46.15394 (314) obj. 1 iterations 1964
Cbc0038I Pass   3: suminf.   45.13271 (337) obj. 1 iterations 604
Cbc0038I Pass   4: suminf.   45.07463 (329) obj. 1 iterations 1034
Cbc0038I Pass   5: suminf.   41.44566 (325) obj. 1 iterations 876
Cbc0038I Pass   6: suminf.   41.00387 (321) obj. 1 iterations 379
Cbc0038I Pass   7: suminf.   41.11456 (276) obj. 1 iterations 1194
Cbc0038I Pass   8: suminf.   38.73129 (300) obj. 1 iterations 970
Cbc0038I Pass   9: suminf.   36.07757 (283) obj. 1 iterations 926
Cbc0038I Pass  10: suminf.   33.94064 (280) obj. 1 iterations 846
Cbc0038I Pass  11: suminf.   33.12267 (311) obj. 1 iterations 639
Cbc0038I Pass  12: suminf.   32.61678 (302) obj. 1 iterations 444
Cbc0038I Pass  13: suminf.   32.33678 (291) obj. 1 iterations 330
Cbc0038I Pass  14: suminf.   33.87892 (292) obj. 1 iterations 1020
Cbc0038I Pass  15: suminf.   31.96856 (265) obj. 1 iterations 1158
Cbc0038I Pass  16: suminf.   31.86957 (270) obj. 1 iterations 470
Cbc0038I Pass  17: suminf.   33.39744 (253) obj. 1 iterations 1058
Cbc0038I Pass  18: suminf.   32.49808 (259) obj. 1 iterations 1217
Cbc0038I Pass  19: suminf.   33.09077 (279) obj. 1 iterations 938
Cbc0038I Pass  20: suminf.   35.70359 (270) obj. 1 iterations 1322
Cbc0038I Pass  21: suminf.   32.70956 (270) obj. 1 iterations 1070
Cbc0038I Pass  22: suminf.   51.15805 (305) obj. 1 iterations 1879
Cbc0038I Pass  23: suminf.   33.19469 (284) obj. 1 iterations 2238
Cbc0038I Pass  24: suminf.   32.16396 (294) obj. 1 iterations 640
Cbc0038I Pass  25: suminf.   31.89340 (294) obj. 1 iterations 541
Cbc0038I Pass  26: suminf.   31.86957 (270) obj. 1 iterations 254
Cbc0038I Pass  27: suminf.   33.46621 (280) obj. 1 iterations 918
Cbc0038I Pass  28: suminf.   36.40835 (292) obj. 1 iterations 970
Cbc0038I Pass  29: suminf.   32.46614 (279) obj. 1 iterations 916
Cbc0038I Pass  30: suminf.   41.17858 (305) obj. 1 iterations 1517
Cbc0038I Pass  31: suminf.   33.44516 (277) obj. 1 iterations 1917
Cbc0038I Pass  32: suminf.   32.49808 (259) obj. 1 iterations 835
Cbc0038I Pass  33: suminf.   34.49459 (276) obj. 1 iterations 1083
Cbc0038I Pass  34: suminf.   33.08035 (277) obj. 1 iterations 862
Cbc0038I Pass  35: suminf.   32.16396 (294) obj. 1 iterations 805
Cbc0038I Pass  36: suminf.   31.89340 (294) obj. 1 iterations 564
Cbc0038I Pass  37: suminf.   31.86957 (270) obj. 1 iterations 241
Cbc0038I Pass  38: suminf.   32.51457 (271) obj. 1 iterations 852
Cbc0038I Pass  39: suminf.   32.49808 (259) obj. 1 iterations 337
Cbc0038I Pass  40: suminf.   34.49660 (273) obj. 1 iterations 1111
Cbc0038I Pass  41: suminf.   33.08035 (277) obj. 1 iterations 669
Cbc0038I Pass  42: suminf.   32.16396 (294) obj. 1 iterations 850
Cbc0038I Pass  43: suminf.   31.89340 (294) obj. 1 iterations 598
Cbc0038I Pass  44: suminf.   31.86957 (270) obj. 1 iterations 221
Cbc0038I Pass  45: suminf.   33.27557 (292) obj. 1 iterations 1224
Cbc0038I Pass  46: suminf.   32.49808 (259) obj. 1 iterations 649
Cbc0038I Pass  47: suminf.   32.79608 (286) obj. 1 iterations 923
Cbc0038I Pass  48: suminf.   38.31433 (266) obj. 1 iterations 1754
Cbc0038I Pass  49: suminf.   33.39352 (267) obj. 1 iterations 1972
Cbc0038I Pass  50: suminf.   32.16396 (294) obj. 1 iterations 831
Cbc0038I Pass  51: suminf.   31.89340 (294) obj. 1 iterations 461
Cbc0038I Pass  52: suminf.   31.86957 (270) obj. 1 iterations 274
Cbc0038I Pass  53: suminf.   33.10984 (292) obj. 1 iterations 950
Cbc0038I Pass  54: suminf.   32.61345 (299) obj. 1 iterations 708
Cbc0038I Pass  55: suminf.   32.49808 (259) obj. 1 iterations 506
Cbc0038I Pass  56: suminf.   31.88257 (294) obj. 1 iterations 978
Cbc0038I Pass  57: suminf.   31.86957 (270) obj. 1 iterations 154
Cbc0038I Pass  58: suminf.   33.01589 (265) obj. 1 iterations 1358
Cbc0038I Pass  59: suminf.   64.46875 (278) obj. 1 iterations 1932
Cbc0038I Pass  60: suminf.   46.66667 (140) obj. 1 iterations 1706
Cbc0038I Pass  61: suminf.   46.66667 (140) obj. 1 iterations 423
Cbc0038I Pass  62: suminf.   46.66667 (140) obj. 1 iterations 261
Cbc0038I Pass  63: suminf.   54.11470 (268) obj. 1 iterations 1783
Cbc0038I Pass  64: suminf.   45.68778 (258) obj. 1 iterations 1371
Cbc0038I Pass  65: suminf.   44.57520 (299) obj. 1 iterations 785
Cbc0038I Pass  66: suminf.   45.91457 (276) obj. 1 iterations 912
Cbc0038I Pass  67: suminf.   45.15453 (314) obj. 1 iterations 849
Cbc0038I Pass  68: suminf.   44.73119 (315) obj. 1 iterations 273
Cbc0038I Pass  69: suminf.   44.62255 (288) obj. 1 iterations 275
Cbc0038I Pass  70: suminf.   45.15720 (265) obj. 1 iterations 768
Cbc0038I Pass  71: suminf.   44.71654 (233) obj. 1 iterations 581
Cbc0038I Pass  72: suminf.   40.45562 (304) obj. 1 iterations 1119
Cbc0038I Pass  73: suminf.   37.52649 (313) obj. 1 iterations 592
Cbc0038I Pass  74: suminf.   35.87597 (285) obj. 1 iterations 636
Cbc0038I Pass  75: suminf.   35.32524 (285) obj. 1 iterations 248
Cbc0038I Pass  76: suminf.   35.50000 (71) obj. 1 iterations 1727
Cbc0038I Pass  77: suminf.   35.50000 (71) obj. 1 iterations 347
Cbc0038I Pass  78: suminf.   35.50000 (71) obj. 1 iterations 565
Cbc0038I Pass  79: suminf.   31.51925 (313) obj. 1 iterations 927
Cbc0038I Pass  80: suminf.   27.50392 (274) obj. 1 iterations 1380
Cbc0038I Pass  81: suminf.   27.13235 (253) obj. 1 iterations 270
Cbc0038I Pass  82: suminf.   27.00281 (278) obj. 1 iterations 230
Cbc0038I Pass  83: suminf.   25.89823 (281) obj. 1 iterations 754
Cbc0038I Pass  84: suminf.   25.77159 (276) obj. 1 iterations 293
Cbc0038I Pass  85: suminf.   26.66124 (276) obj. 1 iterations 500
Cbc0038I Pass  86: suminf.   25.59207 (285) obj. 1 iterations 551
Cbc0038I Pass  87: suminf.   26.04721 (284) obj. 1 iterations 470
Cbc0038I Pass  88: suminf.   47.41615 (307) obj. 1 iterations 1528
Cbc0038I Pass  89: suminf.   26.42654 (280) obj. 1 iterations 1634
Cbc0038I Pass  90: suminf.   25.77159 (276) obj. 1 iterations 646
Cbc0038I Pass  91: suminf.   28.35094 (290) obj. 1 iterations 943
Cbc0038I Pass  92: suminf.   27.00000 (240) obj. 1 iterations 541
Cbc0038I Pass  93: suminf.   27.00281 (278) obj. 1 iterations 80
Cbc0038I Pass  94: suminf.   25.83654 (272) obj. 1 iterations 996
Cbc0038I Pass  95: suminf.   25.77159 (276) obj. 1 iterations 207
Cbc0038I Pass  96: suminf.   26.32156 (288) obj. 1 iterations 706
Cbc0038I Pass  97: suminf.   34.67221 (303) obj. 1 iterations 1472
Cbc0038I Pass  98: suminf.   25.73639 (290) obj. 1 iterations 1500
Cbc0038I Pass  99: suminf.   25.59207 (285) obj. 1 iterations 204
Cbc0038I Pass 100: suminf.   31.46788 (336) obj. 1 iterations 1194
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2400 rows 976 columns, reduced to 2285 rows 896 columns - too large
Cbc0038I Mini branch and bound did not improve solution (93.91 seconds)
Cbc0038I After 93.91 seconds - Feasibility pump exiting - took 81.70 seconds
Cbc0031I 17 added rows had average density of 500.58824
Cbc0013I At root node, 17 cuts changed objective from 1 to 1 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.572 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 140 row cuts average 953.9 elements, 0 column cuts (0 active)  in 5.218 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 11.453 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 5 row cuts average 5.6 elements, 0 column cuts (0 active)  in 1.697 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (134.49 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (137.97 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (140.39 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (142.49 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (144.43 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (146.60 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (148.53 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1 (150.14 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 1 (151.69 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible 1 (153.77 seconds)
Cbc0010I After 12 nodes, 11 on tree, 1e+50 best solution, best possible 1 (154.55 seconds)
Cbc0010I After 15 nodes, 12 on tree, 1e+50 best solution, best possible 1 (155.52 seconds)
Cbc0010I After 17 nodes, 12 on tree, 1e+50 best solution, best possible 1 (156.30 seconds)
Cbc0010I After 19 nodes, 12 on tree, 1e+50 best solution, best possible 1 (157.11 seconds)
Cbc0010I After 20 nodes, 13 on tree, 1e+50 best solution, best possible 1 (158.59 seconds)
Cbc0010I After 24 nodes, 14 on tree, 1e+50 best solution, best possible 1 (159.63 seconds)
Cbc0010I After 27 nodes, 13 on tree, 1e+50 best solution, best possible 1 (160.56 seconds)
Cbc0010I After 28 nodes, 12 on tree, 1e+50 best solution, best possible 1 (162.20 seconds)
Cbc0010I After 29 nodes, 12 on tree, 1e+50 best solution, best possible 1 (163.65 seconds)
Cbc0010I After 32 nodes, 13 on tree, 1e+50 best solution, best possible 1 (164.38 seconds)
Cbc0010I After 35 nodes, 12 on tree, 1e+50 best solution, best possible 1 (165.35 seconds)
Cbc0010I After 38 nodes, 13 on tree, 1e+50 best solution, best possible 1 (166.06 seconds)
Cbc0010I After 39 nodes, 14 on tree, 1e+50 best solution, best possible 1 (167.11 seconds)
Cbc0010I After 42 nodes, 13 on tree, 1e+50 best solution, best possible 1 (167.88 seconds)
Cbc0010I After 45 nodes, 11 on tree, 1e+50 best solution, best possible 1 (168.59 seconds)
Cbc0010I After 46 nodes, 12 on tree, 1e+50 best solution, best possible 1 (170.18 seconds)
Cbc0010I After 48 nodes, 12 on tree, 1e+50 best solution, best possible 1 (171.25 seconds)
Cbc0010I After 49 nodes, 12 on tree, 1e+50 best solution, best possible 1 (172.74 seconds)
Cbc0010I After 52 nodes, 13 on tree, 1e+50 best solution, best possible 1 (173.46 seconds)
Cbc0010I After 54 nodes, 13 on tree, 1e+50 best solution, best possible 1 (175.67 seconds)
Cbc0010I After 58 nodes, 15 on tree, 1e+50 best solution, best possible 1 (176.73 seconds)
Cbc0010I After 60 nodes, 15 on tree, 1e+50 best solution, best possible 1 (177.70 seconds)
Cbc0010I After 63 nodes, 15 on tree, 1e+50 best solution, best possible 1 (179.70 seconds)
Cbc0010I After 64 nodes, 15 on tree, 1e+50 best solution, best possible 1 (180.45 seconds)
Cbc0010I After 65 nodes, 15 on tree, 1e+50 best solution, best possible 1 (181.78 seconds)
Cbc0010I After 67 nodes, 15 on tree, 1e+50 best solution, best possible 1 (182.53 seconds)
Cbc0010I After 70 nodes, 15 on tree, 1e+50 best solution, best possible 1 (184.51 seconds)
Cbc0010I After 73 nodes, 15 on tree, 1e+50 best solution, best possible 1 (185.31 seconds)
Cbc0010I After 76 nodes, 15 on tree, 1e+50 best solution, best possible 1 (186.68 seconds)
Cbc0010I After 80 nodes, 15 on tree, 1e+50 best solution, best possible 1 (187.48 seconds)
Cbc0010I After 83 nodes, 14 on tree, 1e+50 best solution, best possible 1 (189.54 seconds)
Cbc0010I After 86 nodes, 14 on tree, 1e+50 best solution, best possible 1 (190.95 seconds)
Cbc0010I After 87 nodes, 14 on tree, 1e+50 best solution, best possible 1 (192.30 seconds)
Cbc0010I After 90 nodes, 12 on tree, 1e+50 best solution, best possible 1 (193.71 seconds)
Cbc0010I After 91 nodes, 12 on tree, 1e+50 best solution, best possible 1 (195.30 seconds)
Cbc0010I After 94 nodes, 13 on tree, 1e+50 best solution, best possible 1 (196.84 seconds)
Cbc0010I After 97 nodes, 15 on tree, 1e+50 best solution, best possible 1 (197.68 seconds)
Cbc0010I After 100 nodes, 13 on tree, 1e+50 best solution, best possible 1 (198.81 seconds)
Cbc0010I After 105 nodes, 13 on tree, 1e+50 best solution, best possible 1 (199.70 seconds)
Cbc0010I After 110 nodes, 13 on tree, 1e+50 best solution, best possible 1 (200.60 seconds)
Cbc0010I After 113 nodes, 12 on tree, 1e+50 best solution, best possible 1 (201.78 seconds)
Cbc0010I After 115 nodes, 12 on tree, 1e+50 best solution, best possible 1 (202.63 seconds)
Cbc0010I After 122 nodes, 16 on tree, 1e+50 best solution, best possible 1 (203.33 seconds)
Cbc0010I After 126 nodes, 18 on tree, 1e+50 best solution, best possible 1 (204.05 seconds)
Cbc0010I After 133 nodes, 19 on tree, 1e+50 best solution, best possible 1 (205.72 seconds)
Cbc0010I After 136 nodes, 17 on tree, 1e+50 best solution, best possible 1 (206.53 seconds)
Cbc0010I After 138 nodes, 15 on tree, 1e+50 best solution, best possible 1 (207.43 seconds)
Cbc0010I After 140 nodes, 13 on tree, 1e+50 best solution, best possible 1 (208.39 seconds)
Cbc0010I After 141 nodes, 13 on tree, 1e+50 best solution, best possible 1 (210.24 seconds)
Cbc0010I After 143 nodes, 13 on tree, 1e+50 best solution, best possible 1 (211.96 seconds)
Cbc0010I After 146 nodes, 11 on tree, 1e+50 best solution, best possible 1 (212.90 seconds)
Cbc0010I After 147 nodes, 12 on tree, 1e+50 best solution, best possible 1 (214.23 seconds)
Cbc0010I After 148 nodes, 13 on tree, 1e+50 best solution, best possible 1 (214.98 seconds)
Cbc0010I After 153 nodes, 15 on tree, 1e+50 best solution, best possible 1 (217.07 seconds)
Cbc0004I Integer solution of 1 found after 68639 iterations and 158 nodes (217.61 seconds)
Cbc0001I Search completed - best objective 1, took 68639 iterations and 158 nodes (217.61 seconds)
Cbc0032I Strong branching done 1444 times (69446 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 30, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1 to 1
Probing was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.571807 seconds)
Gomory was tried 10 times and created 140 cuts of which 0 were active after adding rounds of cuts (5.21814 seconds)
liftKnapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (11.4535 seconds)
Clique was tried 10 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.139828 seconds)
OddWheel was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (1.69657 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.19015 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005597 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.50315 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.066391 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               158
Total iterations:               68639
Time (CPU seconds):             329.632
Time (Wallclock seconds):       218.568
Total time (CPU seconds):       329.777   (Wallclock seconds):       218.627
