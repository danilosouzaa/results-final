Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/neos-791021.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/neos-791021.txt -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 3698 COLUMNS
At line 33433 RHS
At line 34388 BOUNDS
At line 43837 ENDATA
Problem file has 3694 rows, 9448 columns and 29708 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 10.6667 - 2.30209 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0004I processed model has 3608 rows, 9362 columns (9362 integer (9362 of which binary)) and 31966 elements
Coin3009W Conflict graph built in 0.163 seconds, density: 0.151%
Cgl0015I Clique Strengthening extended 9 cliques, 9 were dominated
After applying Clique Strengthening continuous objective value is 10.6667
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 24 integer variables out of 9362 objects (9362 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 819 integers unsatisfied sum - 258.524
Cbc0038I Pass   1: (12.88 seconds) suminf.   21.83333 (55) obj. 12.1667 iterations 1070
Cbc0038I Pass   2: (13.02 seconds) suminf.   18.00000 (46) obj. 12.6667 iterations 262
Cbc0038I Pass   3: (13.07 seconds) suminf.   16.00000 (42) obj. 12.6667 iterations 92
Cbc0038I Pass   4: (13.13 seconds) suminf.   16.00000 (42) obj. 12.6667 iterations 94
Cbc0038I Pass   5: (13.20 seconds) suminf.   12.75000 (35) obj. 14.4167 iterations 155
Cbc0038I Pass   6: (13.27 seconds) suminf.   12.75000 (35) obj. 14.4167 iterations 163
Cbc0038I Pass   7: (13.36 seconds) suminf.    9.08333 (24) obj. 19.0833 iterations 186
Cbc0038I Pass   8: (13.47 seconds) suminf.    9.08333 (24) obj. 19.0833 iterations 224
Cbc0038I Pass   9: (13.51 seconds) suminf.    9.08333 (24) obj. 19.0833 iterations 27
Cbc0038I Pass  10: (13.60 seconds) suminf.    9.08333 (24) obj. 19.0833 iterations 202
Cbc0038I Pass  11: (13.78 seconds) suminf.    9.08333 (24) obj. 19.0833 iterations 368
Cbc0038I Pass  12: (13.94 seconds) suminf.    9.08333 (24) obj. 19.0833 iterations 388
Cbc0038I Pass  13: (14.03 seconds) suminf.    8.16667 (19) obj. 23.1667 iterations 202
Cbc0038I Pass  14: (14.13 seconds) suminf.    8.16667 (19) obj. 23.1667 iterations 214
Cbc0038I Pass  15: (14.17 seconds) suminf.    8.16667 (19) obj. 23.1667 iterations 12
Cbc0038I Pass  16: (14.39 seconds) suminf.    8.33333 (19) obj. 23.6667 iterations 470
Cbc0038I Pass  17: (14.67 seconds) suminf.    8.00000 (18) obj. 24 iterations 479
Cbc0038I Pass  18: (14.79 seconds) suminf.    8.00000 (18) obj. 24 iterations 225
Cbc0038I Pass  19: (15.06 seconds) suminf.    8.33333 (19) obj. 23.6667 iterations 459
Cbc0038I Pass  20: (15.36 seconds) suminf.    8.00000 (18) obj. 24 iterations 485
Cbc0038I Pass  21: (15.53 seconds) suminf.    8.00000 (18) obj. 24 iterations 275
Cbc0038I Pass  22: (15.94 seconds) suminf.    8.66667 (20) obj. 22.6667 iterations 517
Cbc0038I Pass  23: (16.45 seconds) suminf.    8.66667 (20) obj. 22.6667 iterations 664
Cbc0038I Pass  24: (16.60 seconds) suminf.    8.66667 (20) obj. 22.6667 iterations 216
Cbc0038I Pass  25: (17.16 seconds) suminf.   12.33333 (27) obj. 23.3333 iterations 644
Cbc0038I Pass  26: (17.73 seconds) suminf.   10.33333 (23) obj. 23.3333 iterations 658
Cbc0038I Pass  27: (17.83 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 81
Cbc0038I Pass  28: (17.84 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 0
Cbc0038I Pass  29: (17.99 seconds) suminf.    8.00000 (18) obj. 24 iterations 233
Cbc0038I Pass  30: (18.19 seconds) suminf.    8.00000 (18) obj. 24 iterations 310
Cbc0038I Pass  31: (18.35 seconds) suminf.    8.00000 (18) obj. 24 iterations 214
Cbc0038I Pass  32: (18.85 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 631
Cbc0038I Pass  33: (19.30 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 665
Cbc0038I Pass  34: (19.48 seconds) suminf.    8.00000 (18) obj. 24 iterations 276
Cbc0038I Pass  35: (19.67 seconds) suminf.    8.00000 (18) obj. 24 iterations 279
Cbc0038I Pass  36: (19.85 seconds) suminf.    8.00000 (18) obj. 24 iterations 295
Cbc0038I Pass  37: (20.40 seconds) suminf.   11.16667 (25) obj. 22.1667 iterations 640
Cbc0038I Pass  38: (21.01 seconds) suminf.   10.66667 (24) obj. 22.6667 iterations 655
Cbc0038I Pass  39: (21.22 seconds) suminf.    8.66667 (20) obj. 22.6667 iterations 249
Cbc0038I Pass  40: (21.49 seconds) suminf.    8.66667 (20) obj. 22.6667 iterations 283
Cbc0038I Pass  41: (21.73 seconds) suminf.    8.00000 (18) obj. 24 iterations 288
Cbc0038I Pass  42: (21.99 seconds) suminf.    8.00000 (18) obj. 24 iterations 302
Cbc0038I Pass  43: (22.80 seconds) suminf.    8.50000 (20) obj. 23.1667 iterations 767
Cbc0038I Pass  44: (23.53 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 707
Cbc0038I Pass  45: (23.56 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 5
Cbc0038I Pass  46: (23.79 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 272
Cbc0038I Pass  47: (24.50 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 722
Cbc0038I Pass  48: (25.15 seconds) suminf.    8.33333 (19) obj. 23.3333 iterations 724
Cbc0038I Pass  49: (25.37 seconds) suminf.    8.00000 (18) obj. 24 iterations 275
Cbc0038I Pass  50: (25.63 seconds) suminf.    8.00000 (18) obj. 24 iterations 321
Cbc0038I Pass  51: (25.88 seconds) suminf.    8.00000 (18) obj. 24 iterations 307
Cbc0038I Pass  52: (26.15 seconds) suminf.    8.00000 (18) obj. 24 iterations 306
Cbc0038I Pass  53: (26.41 seconds) suminf.    8.00000 (18) obj. 24 iterations 309
Cbc0038I Pass  54: (27.14 seconds) suminf.    8.00000 (18) obj. 24 iterations 710
Cbc0038I Pass  55: (28.08 seconds) suminf.    8.00000 (18) obj. 24 iterations 970
Cbc0038I Pass  56: (29.15 seconds) suminf.    8.00000 (18) obj. 24 iterations 1004
Cbc0038I Pass  57: (30.05 seconds) suminf.    8.00000 (18) obj. 24 iterations 885
Cbc0038I Pass  58: (30.26 seconds) suminf.    8.00000 (18) obj. 24 iterations 227
Cbc0038I Pass  59: (31.18 seconds) suminf.    8.00000 (18) obj. 24 iterations 867
Cbc0038I Pass  60: (32.46 seconds) suminf.    8.50000 (19) obj. 23.5 iterations 1162
Cbc0038I Pass  61: (33.39 seconds) suminf.    8.00000 (18) obj. 24 iterations 871
Cbc0038I Pass  62: (33.45 seconds) suminf.    8.00000 (18) obj. 24 iterations 34
Cbc0038I Pass  63: (33.78 seconds) suminf.    8.00000 (18) obj. 24 iterations 312
Cbc0038I Pass  64: (34.70 seconds) suminf.    8.41667 (19) obj. 23.4167 iterations 823
Cbc0038I Pass  65: (35.83 seconds) suminf.    8.41667 (19) obj. 23.4167 iterations 985
Cbc0038I Pass  66: (35.93 seconds) suminf.    8.41667 (19) obj. 23.4167 iterations 65
Cbc0038I Pass  67: (37.19 seconds) suminf.    8.66667 (20) obj. 22.6667 iterations 1076
Cbc0038I Pass  68: (38.41 seconds) suminf.    8.66667 (20) obj. 22.6667 iterations 1045
Cbc0038I Pass  69: (38.53 seconds) suminf.    8.66667 (20) obj. 22.6667 iterations 91
Cbc0038I Pass  70: (39.79 seconds) suminf.    8.83333 (20) obj. 22.8333 iterations 1089
Cbc0038I Pass  71: (40.94 seconds) suminf.    8.83333 (20) obj. 22.8333 iterations 1017
Cbc0038I Pass  72: (41.24 seconds) suminf.    8.83333 (20) obj. 22.8333 iterations 286
Cbc0038I Pass  73: (42.58 seconds) suminf.    8.83333 (20) obj. 22.8333 iterations 1177
Cbc0038I Pass  74: (43.82 seconds) suminf.    8.83333 (20) obj. 22.8333 iterations 1081
Cbc0038I Pass  75: (43.89 seconds) suminf.    8.83333 (20) obj. 22.8333 iterations 50
Cbc0038I Pass  76: (44.17 seconds) suminf.    8.83333 (20) obj. 22.8333 iterations 234
Cbc0038I Pass  77: (45.41 seconds) suminf.    8.00000 (18) obj. 24 iterations 1137
Cbc0038I Pass  78: (46.60 seconds) suminf.    8.00000 (18) obj. 24 iterations 1081
Cbc0038I Pass  79: (46.99 seconds) suminf.    8.00000 (18) obj. 24 iterations 381
Cbc0038I Pass  80: (48.21 seconds) suminf.    8.00000 (18) obj. 24 iterations 1083
Cbc0038I Pass  81: (49.33 seconds) suminf.    8.00000 (18) obj. 24 iterations 981
Cbc0038I Pass  82: (49.68 seconds) suminf.    8.00000 (18) obj. 24 iterations 332
Cbc0038I Pass  83: (51.06 seconds) suminf.    9.50000 (21) obj. 24 iterations 1114
Cbc0038I Pass  84: (52.30 seconds) suminf.    7.50000 (17) obj. 24 iterations 1033
Cbc0038I Pass  85: (52.39 seconds) suminf.    7.50000 (17) obj. 24 iterations 59
Cbc0038I Pass  86: (52.44 seconds) suminf.    7.50000 (17) obj. 24 iterations 23
Cbc0038I Pass  87: (52.75 seconds) suminf.    7.50000 (17) obj. 24 iterations 281
Cbc0038I Pass  88: (54.03 seconds) suminf.    7.50000 (17) obj. 24 iterations 1099
Cbc0038I Pass  89: (55.60 seconds) suminf.    8.16667 (19) obj. 22.6667 iterations 1360
Cbc0038I Pass  90: (56.78 seconds) suminf.    8.16667 (19) obj. 22.6667 iterations 1003
Cbc0038I Pass  91: (57.11 seconds) suminf.    7.50000 (17) obj. 24 iterations 318
Cbc0038I Pass  92: (57.50 seconds) suminf.    7.50000 (17) obj. 24 iterations 341
Cbc0038I Pass  93: (57.60 seconds) suminf.    7.50000 (17) obj. 24 iterations 55
Cbc0038I Pass  94: (57.86 seconds) suminf.    7.50000 (17) obj. 24 iterations 201
Cbc0038I Pass  95: (58.18 seconds) suminf.    7.50000 (17) obj. 24 iterations 244
Cbc0038I Pass  96: (59.61 seconds) suminf.    7.00000 (16) obj. 24 iterations 1133
Cbc0038I Pass  97: (60.91 seconds) suminf.    7.00000 (16) obj. 24 iterations 1096
Cbc0038I Pass  98: (61.22 seconds) suminf.    7.00000 (16) obj. 24 iterations 241
Cbc0038I Pass  99: (61.61 seconds) suminf.    7.00000 (16) obj. 24 iterations 356
Cbc0038I Pass 100: (63.07 seconds) suminf.    7.00000 (16) obj. 24 iterations 1167
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8438 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (63.10 seconds)
Cbc0038I Full problem 3609 rows 9362 columns, reduced to 3609 rows 9362 columns - too large
Cbc0038I After 66.93 seconds - Feasibility pump exiting - took 54.63 seconds
Cbc0031I 75 added rows had average density of 19.52
Cbc0013I At root node, 75 cuts changed objective from 10.666667 to 15 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 2104 row cuts average 2.2 elements, 0 column cuts (0 active)  in 5.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 219 row cuts average 542.9 elements, 0 column cuts (0 active)  in 5.730 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 917 row cuts average 7.5 elements, 0 column cuts (0 active)  in 5.730 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.752 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 6.2 elements, 0 column cuts (0 active)  in 31.276 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 104 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 853 row cuts average 111.5 elements, 0 column cuts (0 active)  in 3.586 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 26 row cuts average 51.8 elements, 0 column cuts (0 active)  in 5.725 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 15 (139.37 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 15 (141.89 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 15 (143.16 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 15 (144.16 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 15 (145.15 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 15 (146.05 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 15 (146.99 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 15 (147.99 seconds)
Cbc0010I After 11 nodes, 11 on tree, 1e+50 best solution, best possible 15 (148.84 seconds)
Cbc0010I After 13 nodes, 13 on tree, 1e+50 best solution, best possible 15 (149.62 seconds)
Cbc0010I After 15 nodes, 15 on tree, 1e+50 best solution, best possible 15 (150.36 seconds)
Cbc0010I After 17 nodes, 16 on tree, 1e+50 best solution, best possible 15 (151.13 seconds)
Cbc0010I After 20 nodes, 18 on tree, 1e+50 best solution, best possible 15 (152.20 seconds)
Cbc0010I After 22 nodes, 19 on tree, 1e+50 best solution, best possible 15 (153.02 seconds)
Cbc0010I After 24 nodes, 20 on tree, 1e+50 best solution, best possible 15 (153.73 seconds)
Cbc0010I After 27 nodes, 23 on tree, 1e+50 best solution, best possible 15 (154.74 seconds)
Cbc0004I Integer solution of 15 found after 10176 iterations and 29 nodes (155.32 seconds)
Cbc0001I Search completed - best objective 15, took 10176 iterations and 29 nodes (155.33 seconds)
Cbc0032I Strong branching done 226 times (3439 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 22, 0 variables fixed on reduced cost
Cuts at root node changed objective from 10.6667 to 15
Probing was tried 49 times and created 2909 cuts of which 0 were active after adding rounds of cuts (5.54867 seconds)
Gomory was tried 49 times and created 225 cuts of which 0 were active after adding rounds of cuts (6.94095 seconds)
liftKnapsack was tried 49 times and created 1478 cuts of which 0 were active after adding rounds of cuts (12.0269 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.75162 seconds)
OddWheel was tried 15 times and created 8 cuts of which 0 were active after adding rounds of cuts (31.2765 seconds)
MixedIntegerRounding2 was tried 49 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.353801 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018697 seconds)
TwoMirCuts was tried 49 times and created 902 cuts of which 0 were active after adding rounds of cuts (4.45744 seconds)
ZeroHalf was tried 15 times and created 26 cuts of which 0 were active after adding rounds of cuts (5.72543 seconds)

Result - Optimal solution found
Objective value:                15
Enumerated nodes:               29
Total iterations:               10176
Time (CPU seconds):             155.441
Time (Wallclock seconds):       155.68
Total time (CPU seconds):       155.62   (Wallclock seconds):       155.772
