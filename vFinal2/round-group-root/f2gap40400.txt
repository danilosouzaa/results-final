Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/f2gap40400.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/f2gap40400.txt -quit (default strategy 1)
At line 2 NAME          f2gap40400
At line 3 ROWS
At line 45 COLUMNS
At line 1245 RHS
At line 1286 BOUNDS
At line 1687 ENDATA
Problem f2gap40400 has 40 rows, 400 columns and 800 elements
Coin0008I f2gap40400 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 20650.9 - 0.009563 seconds
Cgl0004I processed model has 40 rows, 400 columns (400 integer (400 of which binary)) and 800 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.125%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 36 integers unsatisfied sum - 3.25358
Cbc0038I Solution found of 20772
Cbc0038I Before mini branch and bound, 364 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 400 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (1.11 seconds)
Cbc0038I Round again with cutoff of 20759
Cbc0038I Pass   1: suminf.    0.13663 (5) obj. 20759 iterations 79
Cbc0038I Pass   2: suminf.    0.16177 (5) obj. 20756.5 iterations 2
Cbc0038I Pass   3: suminf.    2.83165 (36) obj. 20682.2 iterations 53
Cbc0038I Pass   4: suminf.    1.31362 (23) obj. 20709.6 iterations 49
Cbc0038I Pass   5: suminf.    1.77862 (20) obj. 20753.4 iterations 24
Cbc0038I Pass   6: suminf.    3.24725 (38) obj. 20667.5 iterations 44
Cbc0038I Pass   7: suminf.    3.33575 (38) obj. 20667.6 iterations 36
Cbc0038I Pass   8: suminf.    3.34144 (35) obj. 20669.7 iterations 37
Cbc0038I Pass   9: suminf.    3.72387 (37) obj. 20666.7 iterations 38
Cbc0038I Pass  10: suminf.    2.61062 (35) obj. 20684.1 iterations 38
Cbc0038I Pass  11: suminf.    1.25245 (22) obj. 20719.5 iterations 56
Cbc0038I Pass  12: suminf.    2.07026 (26) obj. 20708.4 iterations 18
Cbc0038I Pass  13: suminf.    1.07775 (20) obj. 20718.9 iterations 30
Cbc0038I Pass  14: suminf.    1.56432 (22) obj. 20736.7 iterations 20
Cbc0038I Pass  15: suminf.    0.13663 (5) obj. 20759 iterations 55
Cbc0038I Pass  16: suminf.    0.16177 (5) obj. 20756.5 iterations 4
Cbc0038I Pass  17: suminf.    3.49186 (35) obj. 20667.1 iterations 48
Cbc0038I Pass  18: suminf.    4.48897 (37) obj. 20673.8 iterations 35
Cbc0038I Pass  19: suminf.    0.55657 (7) obj. 20759 iterations 57
Cbc0038I Pass  20: suminf.    3.14277 (38) obj. 20667.3 iterations 46
Cbc0038I Pass  21: suminf.    3.21584 (36) obj. 20664.6 iterations 36
Cbc0038I Pass  22: suminf.    5.21530 (37) obj. 20668.9 iterations 30
Cbc0038I Pass  23: suminf.    1.38074 (12) obj. 20744.2 iterations 57
Cbc0038I Pass  24: suminf.    2.86873 (35) obj. 20673 iterations 36
Cbc0038I Pass  25: suminf.    1.66891 (21) obj. 20707.6 iterations 41
Cbc0038I Pass  26: suminf.    1.81295 (23) obj. 20727.5 iterations 16
Cbc0038I Pass  27: suminf.    0.13663 (5) obj. 20759 iterations 51
Cbc0038I Pass  28: suminf.    0.16177 (5) obj. 20756.5 iterations 4
Cbc0038I Pass  29: suminf.    2.99225 (38) obj. 20677.9 iterations 55
Cbc0038I Pass  30: suminf.    1.15733 (21) obj. 20718.7 iterations 58
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 400 columns, reduced to 39 rows 229 columns
Cbc0038I Mini branch and bound did not improve solution (102.44 seconds)
Cbc0038I Round again with cutoff of 20737.4
Cbc0038I Pass  30: suminf.    0.37334 (10) obj. 20737.4 iterations 6
Cbc0038I Pass  31: suminf.    0.45142 (11) obj. 20731.1 iterations 6
Cbc0038I Pass  32: suminf.    3.98678 (37) obj. 20674.1 iterations 53
Cbc0038I Pass  33: suminf.    4.09330 (35) obj. 20666.4 iterations 39
Cbc0038I Pass  34: suminf.    1.07685 (11) obj. 20737.4 iterations 65
Cbc0038I Pass  35: suminf.    4.42834 (37) obj. 20671.4 iterations 54
Cbc0038I Pass  36: suminf.    0.47642 (12) obj. 20737.4 iterations 65
Cbc0038I Pass  37: suminf.    4.83037 (36) obj. 20667.5 iterations 54
Cbc0038I Pass  38: suminf.    0.63877 (13) obj. 20737.4 iterations 70
Cbc0038I Pass  39: suminf.    0.37334 (10) obj. 20737.4 iterations 8
Cbc0038I Pass  40: suminf.    0.45142 (11) obj. 20731.1 iterations 7
Cbc0038I Pass  41: suminf.    4.61624 (38) obj. 20676.4 iterations 58
Cbc0038I Pass  42: suminf.    4.20392 (38) obj. 20672.6 iterations 34
Cbc0038I Pass  43: suminf.    3.35952 (37) obj. 20672.2 iterations 33
Cbc0038I Pass  44: suminf.    2.39992 (34) obj. 20674.5 iterations 23
Cbc0038I Pass  45: suminf.    2.40755 (31) obj. 20693.2 iterations 27
Cbc0038I Pass  46: suminf.    1.25245 (22) obj. 20719.5 iterations 45
Cbc0038I Pass  47: suminf.    2.07026 (26) obj. 20708.4 iterations 31
Cbc0038I Pass  48: suminf.    1.07775 (20) obj. 20718.9 iterations 33
Cbc0038I Pass  49: suminf.    2.12933 (28) obj. 20683.5 iterations 30
Cbc0038I Pass  50: suminf.    1.25901 (24) obj. 20700.3 iterations 34
Cbc0038I Pass  51: suminf.    2.33535 (25) obj. 20699 iterations 20
Cbc0038I Pass  52: suminf.    3.24688 (37) obj. 20674.1 iterations 44
Cbc0038I Pass  53: suminf.    0.37334 (10) obj. 20737.4 iterations 68
Cbc0038I Pass  54: suminf.    0.45142 (11) obj. 20731.1 iterations 4
Cbc0038I Pass  55: suminf.    3.37108 (38) obj. 20666 iterations 54
Cbc0038I Pass  56: suminf.    3.87849 (38) obj. 20671.9 iterations 45
Cbc0038I Pass  57: suminf.    5.16990 (37) obj. 20674.4 iterations 33
Cbc0038I Pass  58: suminf.    1.85542 (16) obj. 20737.4 iterations 60
Cbc0038I Pass  59: suminf.    4.38972 (37) obj. 20670.2 iterations 55
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 400 columns, reduced to 40 rows 224 columns
Cbc0038I Mini branch and bound did not improve solution (252.32 seconds)
Cbc0038I After 252.32 seconds - Feasibility pump exiting with objective of 20772 - took 520.01 seconds
Cbc0012I Integer solution of 20772 found by feasibility pump after 0 iterations and 0 nodes (252.56 seconds)
Cbc0031I 51 added rows had average density of 19.431373
Cbc0013I At root node, 232 cuts changed objective from 20650.898 to 20772 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 74.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 60 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.309 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 31 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 84 row cuts average 66.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 23.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective 20772, took 0 iterations and 0 nodes (256.95 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 20650.9 to 20772
Probing was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003164 seconds)
Gomory was tried 1 times and created 36 cuts of which 0 were active after adding rounds of cuts (0.025684 seconds)
liftKnapsack was tried 1 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.309293 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (2.6e-05 seconds)
OddWheel was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (3.2e-05 seconds)
MixedIntegerRounding2 was tried 1 times and created 31 cuts of which 0 were active after adding rounds of cuts (0.002206 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (5.9e-05 seconds)
TwoMirCuts was tried 1 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.016187 seconds)
ZeroHalf was tried 1 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.002866 seconds)

Result - Optimal solution found
Objective value:                20772
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             529.487
Time (Wallclock seconds):       257.631
Total time (CPU seconds):       529.508   (Wallclock seconds):       257.664
