Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/hgms30.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/hgms30.txt -quit (default strategy 1)
At line 1 NAME          hgms30
At line 2 ROWS
At line 281922 COLUMNS
At line 1136010 RHS
At line 1404609 BOUNDS
At line 1410498 ENDATA
Problem hgms30 has 281917 rows, 23797 columns and 850486 elements
Coin0008I hgms30 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -53349.2 - 1712.81 seconds
Cgl0003I 10 fixed, 0 tightened bounds, 20818 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 54930 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 68036 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 68926 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 51474 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 55185 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 50744 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60272 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 44427 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11163 strengthened rows, 0 substitutions
Cgl0004I processed model has 275519 rows, 17349 columns (459 integer (459 of which binary)) and 1157614 elements
Coin3009W Conflict graph built in 0.052 seconds, density: 0.001%
Cgl0015I Clique Strengthening extended 3 cliques, 5 were dominated
After applying Clique Strengthening continuous objective value is -53225.7
Cbc0038I Initial state - 192 integers unsatisfied sum - 52.4799
Cbc0038I Pass   1: (4017.33 seconds) suminf.    9.50000 (30) obj. -40434.9 iterations 11428
Cbc0038I Pass   2: (4055.71 seconds) suminf.    4.33333 (12) obj. -38082.5 iterations 2077
Cbc0038I Pass   3: (4059.09 seconds) suminf.    4.33333 (12) obj. -38082.5 iterations 33
Cbc0038I Pass   4: (4061.80 seconds) suminf.    4.33333 (12) obj. -38082.5 iterations 12
Cbc0038I Pass   5: (4063.56 seconds) suminf.    4.33333 (12) obj. -38082.5 iterations 38
Cbc0038I Pass   6: (4168.02 seconds) suminf.    7.83333 (18) obj. -33544.5 iterations 6364
Cbc0038I Pass   7: (4172.41 seconds) suminf.    7.83333 (18) obj. -33544.5 iterations 347
Cbc0038I Pass   8: (4173.22 seconds) suminf.    7.83333 (18) obj. -33544.5 iterations 5
Cbc0038I Pass   9: (4174.07 seconds) suminf.    7.83333 (18) obj. -33544.5 iterations 1
Cbc0038I Pass  10: (4175.06 seconds) suminf.    7.83333 (18) obj. -33544.5 iterations 16
Cbc0038I Pass  11: (4177.71 seconds) suminf.    6.83333 (16) obj. -33544.1 iterations 172
Cbc0038I Pass  12: (4178.99 seconds) suminf.    6.83333 (16) obj. -33544.1 iterations 13
Cbc0038I Pass  13: (4182.37 seconds) suminf.    7.16667 (16) obj. -33485.6 iterations 312
Cbc0038I Pass  14: (4183.75 seconds) suminf.    7.16667 (16) obj. -33485.6 iterations 109
Cbc0038I Pass  15: (4184.56 seconds) suminf.    7.16667 (16) obj. -33485.6 iterations 9
Cbc0038I Pass  16: (4185.81 seconds) suminf.    7.16667 (16) obj. -33485.6 iterations 21
Cbc0038I Pass  17: (4263.35 seconds) suminf.   12.50000 (34) obj. -33405.9 iterations 4460
Cbc0038I Pass  18: (4276.53 seconds) suminf.   10.16667 (26) obj. -33054.7 iterations 747
Cbc0038I Pass  19: (4277.61 seconds) suminf.   10.16667 (26) obj. -33054.7 iterations 34
Cbc0038I Pass  20: (4279.58 seconds) suminf.    9.66667 (26) obj. -32865.3 iterations 319
Cbc0038I Pass  21: (4281.37 seconds) suminf.    9.66667 (26) obj. -32865.3 iterations 66
Cbc0038I Pass  22: (4282.89 seconds) suminf.    9.66667 (26) obj. -32865.3 iterations 64
Cbc0038I Pass  23: (4287.00 seconds) suminf.   10.00000 (26) obj. -32451.1 iterations 481
Cbc0038I Pass  24: (4289.12 seconds) suminf.   10.00000 (26) obj. -32451.1 iterations 89
Cbc0038I Pass  25: (4290.07 seconds) suminf.   10.00000 (26) obj. -32451.1 iterations 48
Cbc0038I Pass  26: (4291.00 seconds) suminf.   10.00000 (26) obj. -32451.1 iterations 24
Cbc0038I Pass  27: (4292.14 seconds) suminf.   10.00000 (26) obj. -32451.1 iterations 28
Cbc0038I Pass  28: (4377.03 seconds) suminf.   14.33333 (32) obj. -30571.3 iterations 5668
Cbc0038I Pass  29: (4383.75 seconds) suminf.   13.66667 (32) obj. -30204 iterations 746
Cbc0038I Pass  30: (4387.26 seconds) suminf.   13.66667 (32) obj. -30204 iterations 305
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 205 integers at bound fixed and 3678 continuous
Cbc0038I Full problem 275517 rows 17349 columns, reduced to 213541 rows 12511 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4432.13 seconds)
Cbc0038I Full problem 275518 rows 17349 columns, reduced to 275516 rows 17349 columns - too large
Cbc0038I After 4973.88 seconds - Feasibility pump exiting - took 1078.00 seconds
Cbc0031I 1243 added rows had average density of 4.9026549
Cbc0013I At root node, 1243 cuts changed objective from -53225.739 to -52935.964 in 35 passes
Cbc0014I Cut generator 0 (Probing) - 826 row cuts average 7.8 elements, 0 column cuts (419 active)  in 18.390 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 743 row cuts average 21.5 elements, 0 column cuts (0 active)  in 39.379 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 64 row cuts average 4.9 elements, 0 column cuts (0 active)  in 142.184 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 35 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.453 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27380 row cuts average 3.2 elements, 0 column cuts (0 active)  in 60.207 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 78 row cuts average 2.6 elements, 0 column cuts (0 active)  in 24.180 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 395 row cuts average 35.0 elements, 0 column cuts (0 active)  in 154.855 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -52935.964 (8131.45 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible -52935.964 (8429.86 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible -52935.964 (8482.96 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible -52935.964 (8661.45 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible -52935.964 (8745.33 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible -52935.964 (8815.52 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible -52935.964 (8877.22 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible -52935.964 (8926.93 seconds)
Cbc0010I After 8 nodes, 8 on tree, 1e+50 best solution, best possible -52935.964 (9054.09 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible -52935.964 (9131.36 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible -52935.964 (9179.21 seconds)
Cbc0010I After 11 nodes, 11 on tree, 1e+50 best solution, best possible -52935.964 (9231.38 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible -52935.964 (9288.38 seconds)
Cbc0010I After 13 nodes, 13 on tree, 1e+50 best solution, best possible -52935.964 (9333.25 seconds)
Cbc0010I After 14 nodes, 13 on tree, 1e+50 best solution, best possible -52935.964 (9431.32 seconds)
Cbc0010I After 15 nodes, 14 on tree, 1e+50 best solution, best possible -52935.964 (9468.98 seconds)
Cbc0010I After 16 nodes, 15 on tree, 1e+50 best solution, best possible -52935.964 (9509.78 seconds)
Cbc0010I After 17 nodes, 16 on tree, 1e+50 best solution, best possible -52935.964 (9541.06 seconds)
Cbc0010I After 18 nodes, 16 on tree, 1e+50 best solution, best possible -52935.964 (9583.45 seconds)
Cbc0010I After 19 nodes, 17 on tree, 1e+50 best solution, best possible -52935.964 (9602.70 seconds)
Cbc0010I After 20 nodes, 17 on tree, 1e+50 best solution, best possible -52935.964 (9657.84 seconds)
Cbc0010I After 21 nodes, 18 on tree, 1e+50 best solution, best possible -52935.964 (9711.44 seconds)
Cbc0010I After 22 nodes, 19 on tree, 1e+50 best solution, best possible -52935.964 (9758.15 seconds)
Cbc0010I After 23 nodes, 20 on tree, 1e+50 best solution, best possible -52935.964 (9806.74 seconds)
Cbc0010I After 24 nodes, 20 on tree, 1e+50 best solution, best possible -52935.964 (9858.81 seconds)
Cbc0010I After 25 nodes, 20 on tree, 1e+50 best solution, best possible -52935.964 (9917.07 seconds)
Cbc0010I After 26 nodes, 21 on tree, 1e+50 best solution, best possible -52935.964 (10073.95 seconds)
Cbc0010I After 27 nodes, 22 on tree, 1e+50 best solution, best possible -52935.964 (10222.33 seconds)
Cbc0010I After 28 nodes, 23 on tree, 1e+50 best solution, best possible -52935.964 (10349.03 seconds)
Cbc0010I After 29 nodes, 24 on tree, 1e+50 best solution, best possible -52935.964 (10407.76 seconds)
Cbc0010I After 30 nodes, 25 on tree, 1e+50 best solution, best possible -52935.964 (10461.25 seconds)
Cbc0010I After 31 nodes, 26 on tree, 1e+50 best solution, best possible -52935.964 (10546.19 seconds)
Cbc0010I After 32 nodes, 27 on tree, 1e+50 best solution, best possible -52935.964 (10591.86 seconds)
Cbc0010I After 33 nodes, 27 on tree, 1e+50 best solution, best possible -52935.964 (10660.72 seconds)
Cbc0010I After 34 nodes, 28 on tree, 1e+50 best solution, best possible -52935.964 (10690.41 seconds)
Cbc0010I After 35 nodes, 29 on tree, 1e+50 best solution, best possible -52935.964 (10714.25 seconds)
Cbc0010I After 36 nodes, 30 on tree, 1e+50 best solution, best possible -52935.964 (10754.15 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -52935.964), took 262737 iterations and 37 nodes (10806.33 seconds)
Cbc0032I Strong branching done 766 times (70301 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 30, 0 variables fixed on reduced cost
Cuts at root node changed objective from -53225.7 to -52936
Probing was tried 60 times and created 1150 cuts of which 419 were active after adding rounds of cuts (24.1925 seconds)
Gomory was tried 35 times and created 743 cuts of which 0 were active after adding rounds of cuts (39.3795 seconds)
liftKnapsack was tried 35 times and created 64 cuts of which 0 were active after adding rounds of cuts (142.184 seconds)
Clique was tried 35 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.133034 seconds)
OddWheel was tried 35 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.452855 seconds)
MixedIntegerRounding2 was tried 60 times and created 40469 cuts of which 0 were active after adding rounds of cuts (99.427 seconds)
FlowCover was tried 35 times and created 78 cuts of which 0 were active after adding rounds of cuts (24.1802 seconds)
TwoMirCuts was tried 35 times and created 395 cuts of which 0 were active after adding rounds of cuts (154.855 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.053426 seconds)

Result - Stopped on time limit
No feasible solution found
Lower bound:                    -52936
Enumerated nodes:               37
Total iterations:               262737
Time (CPU seconds):             9664.58
Time (Wallclock seconds):       10806.4
Total time (CPU seconds):       9666.69   (Wallclock seconds):       10808.5
