Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/app3.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/app3.txt -quit (default strategy 1)
At line 1 NAME          app3
At line 2 ROWS
At line 770 COLUMNS
At line 10609 RHS
At line 10726 BOUNDS
At line 13807 ENDATA
Problem app3 has 766 rows, 3080 columns and 14707 elements
Coin0008I app3 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 5.62741e+06 - 0.154522 seconds
Cgl0008I 5 inequality constraints converted to equality constraints
Cgl0005I 4 SOS with 84 members
Cgl0004I processed model has 371 rows, 1396 columns (84 integer (84 of which binary)) and 5265 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 0.024%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 3.14249
Cbc0038I Pass   1: suminf.    0.00858 (1) obj. 3.10727e+09 iterations 315
Cbc0038I Solution found of 3.10727e+09
Cbc0038I Relaxing continuous gives 5.96193e+06
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 1104 continuous
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I Round again with cutoff of 5.92848e+06
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.52012 (2) obj. 5.92848e+06 iterations 294
Cbc0038I Pass   3: suminf.    0.10233 (2) obj. 5.92848e+06 iterations 13
Cbc0038I Pass   4: suminf.    0.62160 (2) obj. 5.92848e+06 iterations 87
Cbc0038I Pass   5: suminf.    0.12411 (3) obj. 5.92848e+06 iterations 76
Cbc0038I Pass   6: suminf.    0.62154 (2) obj. 5.92848e+06 iterations 52
Cbc0038I Pass   7: suminf.    0.71576 (2) obj. 5.92848e+06 iterations 88
Cbc0038I Pass   8: suminf.    0.15949 (2) obj. 5.92848e+06 iterations 148
Cbc0038I Pass   9: suminf.    0.89317 (2) obj. 5.92848e+06 iterations 70
Cbc0038I Pass  10: suminf.    0.80828 (6) obj. 5.92848e+06 iterations 112
Cbc0038I Pass  11: suminf.    0.71347 (7) obj. 5.92848e+06 iterations 31
Cbc0038I Pass  12: suminf.    1.14017 (6) obj. 5.92848e+06 iterations 186
Cbc0038I Pass  13: suminf.    0.86836 (5) obj. 5.92848e+06 iterations 14
Cbc0038I Pass  14: suminf.    0.20782 (2) obj. 5.92848e+06 iterations 120
Cbc0038I Pass  15: suminf.    0.03512 (2) obj. 5.92848e+06 iterations 88
Cbc0038I Pass  16: suminf.    0.25427 (2) obj. 5.92848e+06 iterations 32
Cbc0038I Pass  17: suminf.    0.95409 (2) obj. 5.92848e+06 iterations 161
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 5.92848e+06 iterations 84
Cbc0038I Solution found of 5.92848e+06
Cbc0038I Relaxing continuous gives 5.89772e+06
Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 889 continuous
Cbc0038I Full problem 371 rows 1396 columns, reduced to 206 rows 449 columns - 1 fixed gives 193, 426 - still too large
Cbc0038I Full problem 371 rows 1396 columns, reduced to 181 rows 418 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
Cbc0038I Freeing continuous variables gives a solution of 5.89772e+06
Cbc0038I Round again with cutoff of 5.84366e+06
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  19: suminf.    0.85869 (4) obj. 5.84366e+06 iterations 8
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 5.84366e+06 iterations 36
Cbc0038I Solution found of 5.84366e+06
Cbc0038I Relaxing continuous gives 5.79766e+06
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 1144 continuous
Cbc0038I Full problem 371 rows 1396 columns, reduced to 65 rows 116 columns
Cbc0038I Mini branch and bound did not improve solution (0.44 seconds)
Cbc0038I Freeing continuous variables gives a solution of 5.79766e+06
Cbc0038I Round again with cutoff of 5.74659e+06
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 4
Cbc0038I Pass  21: suminf.    1.06481 (7) obj. 5.74659e+06 iterations 29
Cbc0038I Pass  22: suminf.    1.80103 (7) obj. 5.74659e+06 iterations 136
Cbc0038I Pass  23: suminf.    1.22169 (6) obj. 5.74659e+06 iterations 73
Cbc0038I Pass  24: suminf.    1.17472 (6) obj. 5.74659e+06 iterations 44
Cbc0038I Pass  25: suminf.    1.50247 (6) obj. 5.74659e+06 iterations 112
Cbc0038I Pass  26: suminf.    1.06477 (7) obj. 5.74659e+06 iterations 116
Cbc0038I Pass  27: suminf.    1.80089 (7) obj. 5.74659e+06 iterations 128
Cbc0038I Pass  28: suminf.    1.22169 (6) obj. 5.74659e+06 iterations 62
Cbc0038I Pass  29: suminf.    1.17472 (6) obj. 5.74659e+06 iterations 44
Cbc0038I Pass  30: suminf.    1.50247 (6) obj. 5.74659e+06 iterations 113
Cbc0038I Pass  31: suminf.    1.06477 (7) obj. 5.74659e+06 iterations 106
Cbc0038I Pass  32: suminf.    1.80089 (7) obj. 5.74659e+06 iterations 128
Cbc0038I Pass  33: suminf.    1.22169 (6) obj. 5.74659e+06 iterations 66
Cbc0038I Pass  34: suminf.    1.17472 (6) obj. 5.74659e+06 iterations 44
Cbc0038I Pass  35: suminf.    1.50247 (6) obj. 5.74659e+06 iterations 113
Cbc0038I Pass  36: suminf.    1.06477 (7) obj. 5.74659e+06 iterations 97
Cbc0038I Pass  37: suminf.    1.80089 (7) obj. 5.74659e+06 iterations 132
Cbc0038I Pass  38: suminf.    1.22169 (6) obj. 5.74659e+06 iterations 62
Cbc0038I Pass  39: suminf.    1.17472 (6) obj. 5.74659e+06 iterations 44
Cbc0038I Pass  40: suminf.    1.50247 (6) obj. 5.74659e+06 iterations 113
Cbc0038I Pass  41: suminf.    1.06477 (7) obj. 5.74659e+06 iterations 106
Cbc0038I Pass  42: suminf.    1.80089 (7) obj. 5.74659e+06 iterations 132
Cbc0038I Pass  43: suminf.    1.22169 (6) obj. 5.74659e+06 iterations 66
Cbc0038I Pass  44: suminf.    1.17472 (6) obj. 5.74659e+06 iterations 44
Cbc0038I Pass  45: suminf.    1.50247 (6) obj. 5.74659e+06 iterations 113
Cbc0038I Pass  46: suminf.    1.06477 (7) obj. 5.74659e+06 iterations 97
Cbc0038I Pass  47: suminf.    1.80089 (7) obj. 5.74659e+06 iterations 130
Cbc0038I Pass  48: suminf.    1.22169 (6) obj. 5.74659e+06 iterations 62
Cbc0038I Pass  49: suminf.    1.17472 (6) obj. 5.74659e+06 iterations 44
Cbc0038I Pass  50: suminf.    1.50247 (6) obj. 5.74659e+06 iterations 113
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 1051 continuous
Cbc0038I Full problem 371 rows 1396 columns, reduced to 158 rows 280 columns - 1 fixed gives 145, 262 - still too large
Cbc0038I Full problem 371 rows 1396 columns, reduced to 122 rows 237 columns
Cbc0038I Mini branch and bound did not improve solution (0.69 seconds)
Cbc0038I After 0.69 seconds - Feasibility pump exiting with objective of 5.79766e+06 - took 0.55 seconds
Cbc0012I Integer solution of 5797663.7 found by feasibility pump after 0 iterations and 0 nodes (0.72 seconds)
Cbc0038I Full problem 371 rows 1396 columns, reduced to 255 rows 823 columns - 1 fixed gives 245, 782 - still too large
Cbc0038I Full problem 371 rows 1396 columns, reduced to 245 rows 782 columns - too large
Cbc0012I Integer solution of 5760687.3 found by DiveCoefficient after 1427 iterations and 0 nodes (2.29 seconds)
Cbc0031I 138 added rows had average density of 42.311594
Cbc0013I At root node, 138 cuts changed objective from 5627412.3 to 5687156.8 in 28 passes
Cbc0014I Cut generator 0 (Probing) - 260 row cuts average 42.4 elements, 1 column cuts (1 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 92.5 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.211 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 436 row cuts average 91.1 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 50 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 130.9 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 5760687.3 best solution, best possible 5687156.8 (2.47 seconds)
Cbc0010I After 3 nodes, 2 on tree, 5760687.3 best solution, best possible 5687156.8 (3.45 seconds)
Cbc0010I After 8 nodes, 1 on tree, 5760687.3 best solution, best possible 5693292 (4.57 seconds)
Cbc0010I After 16 nodes, 1 on tree, 5760687.3 best solution, best possible 5702074.1 (5.54 seconds)
Cbc0010I After 22 nodes, 1 on tree, 5760687.3 best solution, best possible 5718205.8 (6.44 seconds)
Cbc0004I Integer solution of 5751714.3 found after 8291 iterations and 27 nodes (6.76 seconds)
Cbc0001I Search completed - best objective 5751714.328909636, took 8931 iterations and 34 nodes (6.96 seconds)
Cbc0032I Strong branching done 124 times (8367 iterations), fathomed 4 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 43 variables fixed on reduced cost
Cuts at root node changed objective from 5.62741e+06 to 5.68716e+06
Probing was tried 129 times and created 540 cuts of which 0 were active after adding rounds of cuts (0.204889 seconds)
Gomory was tried 28 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.125414 seconds)
liftKnapsack was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.210532 seconds)
Clique was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003311 seconds)
OddWheel was tried 28 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005041 seconds)
MixedIntegerRounding2 was tried 129 times and created 1337 cuts of which 0 were active after adding rounds of cuts (0.439954 seconds)
FlowCover was tried 129 times and created 153 cuts of which 0 were active after adding rounds of cuts (0.208746 seconds)
TwoMirCuts was tried 28 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.025344 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.0006 seconds)

Result - Optimal solution found
Objective value:                5751714.32891
Enumerated nodes:               34
Total iterations:               8931
Time (CPU seconds):             7.16205
Time (Wallclock seconds):       7.10023
Total time (CPU seconds):       7.25729   (Wallclock seconds):       7.13153
