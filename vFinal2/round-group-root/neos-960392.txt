Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/neos-960392.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/neos-960392.txt -quit (default strategy 1)
At line 1 NAME          neos-960392
At line 2 ROWS
At line 4748 COLUMNS
At line 195829 RHS
At line 197754 BOUNDS
At line 257131 ENDATA
Problem neos-960392 has 4744 rows, 59376 columns and 189503 elements
Coin0008I neos-960392 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -238 - 22.5052 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 911 strengthened rows, 0 substitutions
Cgl0003I 198 fixed, 0 tightened bounds, 819 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 202 strengthened rows, 0 substitutions
Cgl0003I 15 fixed, 0 tightened bounds, 582 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 119 strengthened rows, 0 substitutions
Cgl0003I 171 fixed, 0 tightened bounds, 533 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 38 fixed, 0 tightened bounds, 485 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 16 fixed, 0 tightened bounds, 478 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 16 fixed, 0 tightened bounds, 471 strengthened rows, 0 substitutions
Cgl0003I 16 fixed, 0 tightened bounds, 471 strengthened rows, 0 substitutions
Cgl0003I 16 fixed, 0 tightened bounds, 470 strengthened rows, 0 substitutions
Cgl0004I processed model has 3958 rows, 58811 columns (58811 integer (58811 of which binary)) and 189722 elements
Coin3009W Conflict graph built in 5.794 seconds, density: 0.175%
Cgl0015I Clique Strengthening extended 59 cliques, 93 were dominated
After applying Clique Strengthening continuous objective value is -238
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 1020 integers unsatisfied sum - 269.915
Cbc0038I Pass   1: (89.13 seconds) suminf.    9.74298 (64) obj. -220.618 iterations 5124
Cbc0038I Pass   2: (92.42 seconds) suminf.    0.37736 (4) obj. -219.811 iterations 1782
Cbc0038I Pass   3: (93.13 seconds) suminf.    1.16936 (6) obj. -219.604 iterations 486
Cbc0038I Pass   4: (96.04 seconds) suminf.    4.37464 (17) obj. -220.604 iterations 2186
Cbc0038I Pass   5: (102.88 seconds) suminf.    0.37736 (4) obj. -220.811 iterations 3298
Cbc0038I Pass   6: (103.62 seconds) suminf.    0.79200 (4) obj. -220.604 iterations 401
Cbc0038I Pass   7: (107.46 seconds) suminf.    8.61679 (59) obj. -221.604 iterations 2627
Cbc0038I Pass   8: (111.65 seconds) suminf.    0.75472 (8) obj. -221.623 iterations 3015
Cbc0038I Pass   9: (112.25 seconds) suminf.    2.86747 (13) obj. -221.604 iterations 568
Cbc0038I Pass  10: (113.73 seconds) suminf.    0.75472 (8) obj. -221.623 iterations 952
Cbc0038I Pass  11: (116.29 seconds) suminf.    1.73313 (28) obj. -220.604 iterations 2261
Cbc0038I Pass  12: (121.25 seconds) suminf.    0.75472 (8) obj. -220.623 iterations 2884
Cbc0038I Pass  13: (122.05 seconds) suminf.    2.86747 (13) obj. -220.604 iterations 543
Cbc0038I Pass  14: (125.43 seconds) suminf.    1.77268 (13) obj. -222.604 iterations 2335
Cbc0038I Pass  15: (132.03 seconds) suminf.    0.75472 (8) obj. -222.623 iterations 3195
Cbc0038I Pass  16: (132.61 seconds) suminf.    1.16936 (10) obj. -222.604 iterations 457
Cbc0038I Pass  17: (138.21 seconds) suminf.   13.71970 (39) obj. -224.104 iterations 2577
Cbc0038I Pass  18: (144.06 seconds) suminf.    0.79200 (10) obj. -223.604 iterations 3103
Cbc0038I Pass  19: (145.42 seconds) suminf.    0.75472 (8) obj. -223.623 iterations 466
Cbc0038I Pass  20: (146.24 seconds) suminf.    1.16936 (10) obj. -223.604 iterations 497
Cbc0038I Pass  21: (152.91 seconds) suminf.    1.69585 (16) obj. -223.604 iterations 2669
Cbc0038I Pass  22: (158.24 seconds) suminf.    0.75472 (8) obj. -223.623 iterations 2733
Cbc0038I Pass  23: (158.96 seconds) suminf.    1.16936 (10) obj. -223.604 iterations 442
Cbc0038I Pass  24: (164.16 seconds) suminf.    3.00289 (52) obj. -223.604 iterations 2962
Cbc0038I Pass  25: (168.76 seconds) suminf.    0.75472 (8) obj. -223.623 iterations 2955
Cbc0038I Pass  26: (169.35 seconds) suminf.    1.16936 (10) obj. -223.604 iterations 435
Cbc0038I Pass  27: (175.02 seconds) suminf.    0.82928 (12) obj. -223.604 iterations 2803
Cbc0038I Pass  28: (179.25 seconds) suminf.    0.75472 (8) obj. -223.623 iterations 2624
Cbc0038I Pass  29: (179.94 seconds) suminf.    1.16936 (10) obj. -223.604 iterations 466
Cbc0038I Pass  30: (185.13 seconds) suminf.    2.93525 (55) obj. -223.604 iterations 2856
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57355 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3924 rows 58811 columns, reduced to 1537 rows 1108 columns
Cbc0038I Mini branch and bound did not improve solution (200.92 seconds)
Cbc0038I Full problem 3925 rows 58811 columns, reduced to 3905 rows 58785 columns - too large
Cbc0038I After 237.38 seconds - Feasibility pump exiting - took 154.06 seconds
Cbc0012I Integer solution of -208 found by DiveCoefficient after 3311 iterations and 0 nodes (376.35 seconds)
Cbc0031I 15 added rows had average density of 333.26667
Cbc0013I At root node, 15 cuts changed objective from -238 to -238 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 2.3 elements, 1 column cuts (1 active)  in 37.316 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 525.0 elements, 0 column cuts (0 active)  in 3.073 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 19 row cuts average 9.7 elements, 0 column cuts (0 active)  in 31.052 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.091 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 12.776 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 443.7 elements, 0 column cuts (0 active)  in 0.690 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 19 row cuts average 80.0 elements, 0 column cuts (0 active)  in 16.300 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 60.6 elements, 0 column cuts (0 active)  in 11.222 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -208 best solution, best possible -238 (389.96 seconds)
Cbc0010I After 1 nodes, 2 on tree, -208 best solution, best possible -238 (397.15 seconds)
Cbc0010I After 2 nodes, 3 on tree, -208 best solution, best possible -238 (413.97 seconds)
Cbc0010I After 3 nodes, 4 on tree, -208 best solution, best possible -238 (426.29 seconds)
Cbc0010I After 4 nodes, 5 on tree, -208 best solution, best possible -238 (437.90 seconds)
Cbc0010I After 5 nodes, 6 on tree, -208 best solution, best possible -238 (448.14 seconds)
Cbc0010I After 6 nodes, 7 on tree, -208 best solution, best possible -238 (457.35 seconds)
Cbc0010I After 7 nodes, 8 on tree, -208 best solution, best possible -238 (460.16 seconds)
Cbc0010I After 8 nodes, 9 on tree, -208 best solution, best possible -238 (463.27 seconds)
Cbc0010I After 9 nodes, 10 on tree, -208 best solution, best possible -238 (466.96 seconds)
Cbc0010I After 10 nodes, 11 on tree, -208 best solution, best possible -238 (469.98 seconds)
Cbc0010I After 11 nodes, 12 on tree, -208 best solution, best possible -238 (476.95 seconds)
Cbc0010I After 12 nodes, 13 on tree, -208 best solution, best possible -238 (479.41 seconds)
Cbc0010I After 13 nodes, 14 on tree, -208 best solution, best possible -238 (481.33 seconds)
Cbc0010I After 14 nodes, 15 on tree, -208 best solution, best possible -238 (483.70 seconds)
Cbc0010I After 15 nodes, 15 on tree, -208 best solution, best possible -238 (487.43 seconds)
Cbc0010I After 16 nodes, 16 on tree, -208 best solution, best possible -238 (489.36 seconds)
Cbc0010I After 17 nodes, 17 on tree, -208 best solution, best possible -238 (493.68 seconds)
Cbc0010I After 18 nodes, 18 on tree, -208 best solution, best possible -238 (496.31 seconds)
Cbc0010I After 19 nodes, 19 on tree, -208 best solution, best possible -238 (498.65 seconds)
Cbc0010I After 20 nodes, 19 on tree, -208 best solution, best possible -238 (500.26 seconds)
Cbc0010I After 21 nodes, 20 on tree, -208 best solution, best possible -238 (502.79 seconds)
Cbc0010I After 22 nodes, 20 on tree, -208 best solution, best possible -238 (505.49 seconds)
Cbc0010I After 23 nodes, 21 on tree, -208 best solution, best possible -238 (507.42 seconds)
Cbc0010I After 24 nodes, 21 on tree, -208 best solution, best possible -238 (509.66 seconds)
Cbc0010I After 25 nodes, 22 on tree, -208 best solution, best possible -238 (514.15 seconds)
Cbc0010I After 26 nodes, 23 on tree, -208 best solution, best possible -238 (516.95 seconds)
Cbc0010I After 27 nodes, 24 on tree, -208 best solution, best possible -238 (518.73 seconds)
Cbc0010I After 28 nodes, 24 on tree, -208 best solution, best possible -238 (520.65 seconds)
Cbc0010I After 29 nodes, 25 on tree, -208 best solution, best possible -238 (522.76 seconds)
Cbc0010I After 30 nodes, 25 on tree, -208 best solution, best possible -238 (524.70 seconds)
Cbc0010I After 32 nodes, 27 on tree, -208 best solution, best possible -238 (529.24 seconds)
Cbc0010I After 33 nodes, 27 on tree, -208 best solution, best possible -238 (533.60 seconds)
Cbc0010I After 34 nodes, 28 on tree, -208 best solution, best possible -238 (534.86 seconds)
Cbc0010I After 35 nodes, 28 on tree, -208 best solution, best possible -238 (537.03 seconds)
Cbc0010I After 36 nodes, 29 on tree, -208 best solution, best possible -238 (538.76 seconds)
Cbc0010I After 37 nodes, 29 on tree, -208 best solution, best possible -238 (540.58 seconds)
Cbc0010I After 38 nodes, 30 on tree, -208 best solution, best possible -238 (542.41 seconds)
Cbc0010I After 39 nodes, 31 on tree, -208 best solution, best possible -238 (543.75 seconds)
Cbc0010I After 40 nodes, 32 on tree, -208 best solution, best possible -238 (547.09 seconds)
Cbc0010I After 41 nodes, 33 on tree, -208 best solution, best possible -238 (548.16 seconds)
Cbc0010I After 42 nodes, 33 on tree, -208 best solution, best possible -238 (551.69 seconds)
Cbc0010I After 43 nodes, 34 on tree, -208 best solution, best possible -238 (553.70 seconds)
Cbc0010I After 44 nodes, 34 on tree, -208 best solution, best possible -238 (556.35 seconds)
Cbc0010I After 45 nodes, 34 on tree, -208 best solution, best possible -238 (562.22 seconds)
Cbc0010I After 46 nodes, 34 on tree, -208 best solution, best possible -238 (564.02 seconds)
Cbc0010I After 47 nodes, 35 on tree, -208 best solution, best possible -238 (567.53 seconds)
Cbc0010I After 48 nodes, 36 on tree, -208 best solution, best possible -238 (571.81 seconds)
Cbc0010I After 49 nodes, 36 on tree, -208 best solution, best possible -238 (575.72 seconds)
Cbc0010I After 50 nodes, 36 on tree, -208 best solution, best possible -238 (581.76 seconds)
Cbc0010I After 51 nodes, 37 on tree, -208 best solution, best possible -238 (585.00 seconds)
Cbc0010I After 52 nodes, 37 on tree, -208 best solution, best possible -238 (586.60 seconds)
Cbc0010I After 53 nodes, 38 on tree, -208 best solution, best possible -238 (588.75 seconds)
Cbc0010I After 54 nodes, 39 on tree, -208 best solution, best possible -238 (591.18 seconds)
Cbc0010I After 55 nodes, 39 on tree, -208 best solution, best possible -238 (593.22 seconds)
Cbc0010I After 56 nodes, 40 on tree, -208 best solution, best possible -238 (594.57 seconds)
Cbc0004I Integer solution of -238 found after 29169 iterations and 57 nodes (597.63 seconds)
Cbc0001I Search completed - best objective -238, took 29169 iterations and 57 nodes (597.68 seconds)
Cbc0032I Strong branching done 472 times (6673 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 35, 0 variables fixed on reduced cost
Cuts at root node changed objective from -238 to -238
Probing was tried 28 times and created 20 cuts of which 0 were active after adding rounds of cuts (38.1246 seconds)
Gomory was tried 8 times and created 7 cuts of which 0 were active after adding rounds of cuts (3.07272 seconds)
liftKnapsack was tried 28 times and created 31 cuts of which 0 were active after adding rounds of cuts (82.8434 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.09076 seconds)
OddWheel was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (12.7761 seconds)
MixedIntegerRounding2 was tried 28 times and created 19 cuts of which 0 were active after adding rounds of cuts (2.00232 seconds)
FlowCover was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045821 seconds)
TwoMirCuts was tried 8 times and created 19 cuts of which 0 were active after adding rounds of cuts (16.2999 seconds)
ZeroHalf was tried 8 times and created 36 cuts of which 0 were active after adding rounds of cuts (11.2224 seconds)

Result - Optimal solution found
Objective value:                -238
Enumerated nodes:               57
Total iterations:               29169
Time (CPU seconds):             598.262
Time (Wallclock seconds):       599.672
Total time (CPU seconds):       598.671   (Wallclock seconds):       599.986
