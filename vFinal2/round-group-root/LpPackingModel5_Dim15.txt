Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/LpPackingModel5_Dim15.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/LpPackingModel5_Dim15.txt -quit (default strategy 1)
At line 2 NAME          LpPackingModel5_Dim15.lp
At line 3 ROWS
At line 163434 COLUMNS
At line 968267 RHS
At line 1131652 BOUNDS
At line 1179786 ENDATA
Problem LpPackingModel5_Dim15.lp has 163429 rows, 48163 columns and 804740 elements
Coin0008I LpPackingModel5_Dim15.lp read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -6.60301e+07 - 2.30037 seconds
Cgl0003I 3 fixed, 0 tightened bounds, 8755 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15924 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11248 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10084 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10399 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11128 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13124 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16686 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16212 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14299 strengthened rows, 0 substitutions
Cgl0004I processed model has 149879 rows, 43807 columns (43777 integer (43777 of which binary)) and 858865 elements
Coin3009W Conflict graph built in 0.045 seconds, density: 0.001%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 211 integers unsatisfied sum - 37.2503
Cbc0038I Pass   1: (746.20 seconds) suminf.   15.55314 (449) obj. -5.29188e+07 iterations 1761
Cbc0038I Pass   2: (747.01 seconds) suminf.   15.41515 (118) obj. -4.90631e+07 iterations 26
Cbc0038I Pass   3: (749.35 seconds) suminf.    8.03040 (85) obj. -2.31659e+07 iterations 142
Cbc0038I Pass   4: (750.29 seconds) suminf.    6.93582 (80) obj. -2.16437e+07 iterations 47
Cbc0038I Pass   5: (751.82 seconds) suminf.    3.10877 (62) obj. -1.06436e+07 iterations 87
Cbc0038I Pass   6: (752.48 seconds) suminf.    2.96228 (59) obj. -1.06674e+07 iterations 18
Cbc0038I Pass   7: (753.92 seconds) suminf.    0.26192 (20) obj. -7.28798e+06 iterations 108
Cbc0038I Pass   8: (754.30 seconds) suminf.    0.26192 (20) obj. -7.28798e+06 iterations 4
Cbc0038I Pass   9: (755.09 seconds) suminf.    0.06439 (10) obj. -7.28751e+06 iterations 50
Cbc0038I Pass  10: (755.59 seconds) suminf.    0.00687 (4) obj. -7.28825e+06 iterations 21
Cbc0038I Pass  11: (756.02 seconds) suminf.    0.00575 (3) obj. -7.28826e+06 iterations 8
Cbc0038I Pass  12: (756.41 seconds) suminf.    0.00080 (1) obj. -7.28832e+06 iterations 8
Cbc0038I Pass  13: (756.57 seconds) suminf.    0.00080 (1) obj. -7.28832e+06 iterations 0
Cbc0038I Pass  14: (768.34 seconds) suminf.  149.35827 (815) obj. -1.43368e+07 iterations 1692
Cbc0038I Pass  15: (769.26 seconds) suminf.  146.98787 (810) obj. -1.52866e+07 iterations 49
Cbc0038I Pass  16: (770.72 seconds) suminf.  136.34394 (784) obj. -1.53299e+07 iterations 83
Cbc0038I Pass  17: (771.34 seconds) suminf.  129.90393 (766) obj. -1.52388e+07 iterations 39
Cbc0038I Pass  18: (772.52 seconds) suminf.  120.99392 (744) obj. -1.51478e+07 iterations 81
Cbc0038I Pass  19: (773.85 seconds) suminf.  114.13176 (723) obj. -1.52411e+07 iterations 83
Cbc0038I Pass  20: (774.93 seconds) suminf.  105.98981 (699) obj. -1.52919e+07 iterations 69
Cbc0038I Pass  21: (776.14 seconds) suminf.   97.61074 (667) obj. -1.52069e+07 iterations 82
Cbc0038I Pass  22: (776.65 seconds) suminf.   97.59439 (666) obj. -1.51547e+07 iterations 10
Cbc0038I Pass  23: (777.69 seconds) suminf.   94.09082 (654) obj. -1.5029e+07 iterations 54
Cbc0038I Pass  24: (778.16 seconds) suminf.   94.08233 (653) obj. -1.50975e+07 iterations 11
Cbc0038I Pass  25: (779.19 seconds) suminf.   90.71706 (641) obj. -1.47463e+07 iterations 55
Cbc0038I Pass  26: (779.88 seconds) suminf.   90.68931 (640) obj. -1.49288e+07 iterations 21
Cbc0038I Pass  27: (781.05 seconds) suminf.   85.56030 (623) obj. -1.47361e+07 iterations 65
Cbc0038I Pass  28: (781.89 seconds) suminf.   85.53032 (623) obj. -1.48907e+07 iterations 32
Cbc0038I Pass  29: (782.87 seconds) suminf.   82.05953 (608) obj. -1.47086e+07 iterations 57
Cbc0038I Pass  30: (783.60 seconds) suminf.   82.04150 (609) obj. -1.47408e+07 iterations 24
Cbc0038I Rounding solution of -7.28832e+06 is better than previous of 1e+50
Cbc0038I Before mini branch and bound, 42155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 149879 rows 43807 columns, reduced to 70831 rows 705 columns - too large
Cbc0038I Mini branch and bound did not improve solution (794.77 seconds)
Cbc0038I Round again with cutoff of -1.31625e+07
Cbc0038I Pass  30: (795.54 seconds) suminf.   15.55235 (119) obj. -5.29189e+07 iterations 13
Cbc0038I Pass  31: (796.93 seconds) suminf.   15.41515 (118) obj. -4.90631e+07 iterations 65
Cbc0038I Pass  32: (799.01 seconds) suminf.    8.41095 (87) obj. -2.42182e+07 iterations 134
Cbc0038I Pass  33: (800.18 seconds) suminf.    7.63698 (83) obj. -2.366e+07 iterations 64
Cbc0038I Pass  34: (801.55 seconds) suminf.    4.40532 (70) obj. -1.84864e+07 iterations 81
Cbc0038I Pass  35: (803.39 seconds) suminf.    2.83449 (58) obj. -1.31625e+07 iterations 136
Cbc0038I Pass  36: (804.55 seconds) suminf.    2.59220 (57) obj. -1.31625e+07 iterations 48
Cbc0038I Pass  37: (806.28 seconds) suminf.    1.11470 (34) obj. -1.31625e+07 iterations 122
Cbc0038I Pass  38: (808.11 seconds) suminf.    2.13216 (14) obj. -3.28338e+07 iterations 101
Cbc0038I Pass  39: (808.48 seconds) suminf.    0.46527 (9) obj. -2.36462e+07 iterations 5
Cbc0038I Pass  40: (809.09 seconds) suminf.    0.00000 (0) obj. -2.36445e+07 iterations 38
Cbc0038I Solution found of -2.36445e+07
Cbc0038I Relaxing continuous gives -2.36471e+07
Cbc0038I Before mini branch and bound, 43538 integers at bound fixed and 1 continuous
Cbc0038I Full problem 149879 rows 43807 columns, reduced to 36734 rows 268 columns - 7 fixed gives 20776, 254 - ok now
Cbc0038I Full problem 149879 rows 43807 columns, reduced to 19441 rows 251 columns
Cbc0038I Mini branch and bound did not improve solution (876.99 seconds)
Cbc0038I Round again with cutoff of -3.21236e+07
Cbc0038I Pass  41: (878.70 seconds) suminf.   15.55235 (119) obj. -5.29189e+07 iterations 0
Cbc0038I Pass  42: (880.09 seconds) suminf.   15.41515 (118) obj. -4.90631e+07 iterations 65
Cbc0038I Pass  43: (881.79 seconds) suminf.   11.15283 (107) obj. -3.21236e+07 iterations 105
Cbc0038I Pass  44: (883.37 seconds) suminf.   10.97097 (107) obj. -3.21236e+07 iterations 84
Cbc0038I Pass  45: (885.55 seconds) suminf.    9.16100 (96) obj. -3.21236e+07 iterations 141
Cbc0038I Pass  46: (886.84 seconds) suminf.    8.35236 (100) obj. -3.21236e+07 iterations 72
Cbc0038I Pass  47: (888.33 seconds) suminf.    7.33498 (78) obj. -3.21236e+07 iterations 96
Cbc0038I Pass  48: (888.83 seconds) suminf.    6.62186 (79) obj. -3.21236e+07 iterations 34
Cbc0038I Pass  49: (890.03 seconds) suminf.    5.28270 (59) obj. -3.21236e+07 iterations 82
Cbc0038I Pass  50: (890.40 seconds) suminf.    4.57967 (57) obj. -3.21236e+07 iterations 7
Cbc0038I Pass  51: (891.02 seconds) suminf.    2.76012 (38) obj. -3.21236e+07 iterations 45
Cbc0038I Pass  52: (891.38 seconds) suminf.    2.68134 (38) obj. -3.21236e+07 iterations 1
Cbc0038I Pass  53: (892.31 seconds) suminf.    1.68063 (26) obj. -3.21236e+07 iterations 53
Cbc0038I Pass  54: (892.68 seconds) suminf.    1.59467 (26) obj. -3.21236e+07 iterations 2
Cbc0038I Pass  55: (893.31 seconds) suminf.    1.46996 (6) obj. -3.21236e+07 iterations 42
Cbc0038I Pass  56: (893.69 seconds) suminf.    1.38400 (6) obj. -3.21236e+07 iterations 6
Cbc0038I Pass  57: (894.02 seconds) suminf.    1.46995 (6) obj. -3.21236e+07 iterations 7
Cbc0038I Pass  58: (894.36 seconds) suminf.    1.38400 (6) obj. -3.21236e+07 iterations 1
Cbc0038I Pass  59: (911.12 seconds) suminf.  151.63602 (824) obj. -3.21236e+07 iterations 2313
Cbc0038I Pass  60: (911.66 seconds) suminf.  150.67642 (822) obj. -3.21236e+07 iterations 22
Cbc0038I Pass  61: (912.69 seconds) suminf.  146.08304 (812) obj. -3.21236e+07 iterations 61
Cbc0038I Pass  62: (914.06 seconds) suminf.  137.33393 (789) obj. -3.21236e+07 iterations 88
Cbc0038I Pass  63: (915.65 seconds) suminf.  129.88404 (769) obj. -3.21236e+07 iterations 97
Cbc0038I Pass  64: (917.33 seconds) suminf.  120.32700 (742) obj. -3.21236e+07 iterations 123
Cbc0038I Pass  65: (917.90 seconds) suminf.  120.29466 (742) obj. -3.21236e+07 iterations 17
Cbc0038I Pass  66: (919.30 seconds) suminf.  111.73792 (715) obj. -3.21236e+07 iterations 107
Cbc0038I Pass  67: (920.08 seconds) suminf.  111.71576 (715) obj. -3.21236e+07 iterations 29
Cbc0038I Pass  68: (921.56 seconds) suminf.  105.60818 (693) obj. -3.21236e+07 iterations 92
Cbc0038I Pass  69: (922.21 seconds) suminf.  105.59999 (693) obj. -3.21236e+07 iterations 21
Cbc0038I Pass  70: (923.43 seconds) suminf.   99.80250 (674) obj. -3.21236e+07 iterations 81
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42735 integers at bound fixed and 0 continuous
Cbc0038I Full problem 149879 rows 43807 columns, reduced to 69963 rows 409 columns - 7 fixed gives 37228, 324 - still too large
Cbc0038I Full problem 149879 rows 43807 columns, reduced to 36400 rows 317 columns - too large
Cbc0038I Mini branch and bound did not improve solution (942.32 seconds)
Cbc0038I After 942.32 seconds - Feasibility pump exiting with objective of -2.36471e+07 - took 201.53 seconds
Cbc0012I Integer solution of -23647062 found by feasibility pump after 0 iterations and 0 nodes (942.82 seconds)
Cbc0038I Full problem 149879 rows 43807 columns, reduced to 60110 rows 255 columns - 18 fixed gives 19895, 219 - ok now
Cbc0038I Full problem 149879 rows 43807 columns, reduced to 19550 rows 215 columns
Cbc0012I Integer solution of -32833965 found by RINS after 0 iterations and 0 nodes (995.72 seconds)
Cbc0031I 3055 added rows had average density of 5.511293
Cbc0013I At root node, 3055 cuts changed objective from -66029981 to -66029892 in 40 passes
Cbc0014I Cut generator 0 (Probing) - 248383 row cuts average 6.1 elements, 0 column cuts (0 active)  in 2581.404 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2263 row cuts average 56.8 elements, 0 column cuts (0 active)  in 251.078 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 12 row cuts average 2.8 elements, 0 column cuts (0 active)  in 45.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23802 row cuts average 3.6 elements, 0 column cuts (0 active)  in 68.899 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 11.070 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6062 row cuts average 4.2 elements, 0 column cuts (0 active)  in 15.399 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -32833965 best solution, best possible -66029892 (8530.14 seconds)
Cbc0010I After 1 nodes, 2 on tree, -32833965 best solution, best possible -66029892 (9085.56 seconds)
Cbc0010I After 2 nodes, 3 on tree, -32833965 best solution, best possible -66029892 (9763.25 seconds)
Cbc0010I After 3 nodes, 4 on tree, -32833965 best solution, best possible -66029892 (9909.04 seconds)
Cbc0010I After 4 nodes, 5 on tree, -32833965 best solution, best possible -66029892 (10017.94 seconds)
Cbc0010I After 5 nodes, 6 on tree, -32833965 best solution, best possible -66029892 (10141.73 seconds)
Cbc0010I After 6 nodes, 7 on tree, -32833965 best solution, best possible -66029892 (10279.93 seconds)
Cbc0010I After 7 nodes, 8 on tree, -32833965 best solution, best possible -66029892 (10297.72 seconds)
Cbc0010I After 8 nodes, 9 on tree, -32833965 best solution, best possible -66029892 (10312.44 seconds)
Cbc0010I After 9 nodes, 10 on tree, -32833965 best solution, best possible -66029892 (10369.92 seconds)
Cbc0010I After 10 nodes, 10 on tree, -32833965 best solution, best possible -66029892 (10417.77 seconds)
Cbc0010I After 11 nodes, 10 on tree, -32833965 best solution, best possible -66029892 (10470.92 seconds)
Cbc0010I After 12 nodes, 11 on tree, -32833965 best solution, best possible -66029892 (10521.91 seconds)
Cbc0010I After 13 nodes, 10 on tree, -32833965 best solution, best possible -66029892 (10540.40 seconds)
Cbc0010I After 14 nodes, 11 on tree, -32833965 best solution, best possible -66029892 (10599.36 seconds)
Cbc0010I After 15 nodes, 12 on tree, -32833965 best solution, best possible -66029892 (10647.50 seconds)
Cbc0010I After 16 nodes, 12 on tree, -32833965 best solution, best possible -66029892 (10707.21 seconds)
Cbc0010I After 17 nodes, 13 on tree, -32833965 best solution, best possible -66029892 (10722.13 seconds)
Cbc0010I After 18 nodes, 14 on tree, -32833965 best solution, best possible -66029892 (10780.86 seconds)
Cbc0010I After 19 nodes, 13 on tree, -32833965 best solution, best possible -66029892 (10784.89 seconds)
Cbc0010I After 20 nodes, 12 on tree, -32833965 best solution, best possible -66029892 (10792.66 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective -32833965 (best possible -66029892), took 428765 iterations and 21 nodes (10812.55 seconds)
Cbc0032I Strong branching done 398 times (22245 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 14, 0 variables fixed on reduced cost
Cuts at root node changed objective from -6.603e+07 to -6.60299e+07
Probing was tried 65 times and created 382480 cuts of which 0 were active after adding rounds of cuts (2632.4 seconds)
Gomory was tried 65 times and created 2559 cuts of which 0 were active after adding rounds of cuts (283.892 seconds)
liftKnapsack was tried 40 times and created 12 cuts of which 0 were active after adding rounds of cuts (45.0368 seconds)
Clique was tried 40 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031604 seconds)
OddWheel was tried 40 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.056436 seconds)
MixedIntegerRounding2 was tried 65 times and created 46249 cuts of which 0 were active after adding rounds of cuts (116.635 seconds)
FlowCover was tried 40 times and created 0 cuts of which 0 were active after adding rounds of cuts (11.0696 seconds)
TwoMirCuts was tried 40 times and created 6062 cuts of which 0 were active after adding rounds of cuts (15.399 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.079394 seconds)

Result - Stopped on time limit
Objective value:                -32833964.6296
Lower bound:                    -6.60299e+07
Gap:                            0.502741
Enumerated nodes:               21
Total iterations:               428765
Time (CPU seconds):             10679.4
Time (Wallclock seconds):       10989.6
Total time (CPU seconds):       10683.1   (Wallclock seconds):       10993.2
