Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/lseu.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/lseu.txt -quit (default strategy 1)
At line 15 NAME          LSEU
At line 16 ROWS
At line 46 COLUMNS
At line 266 RHS
At line 281 BOUNDS
At line 371 ENDATA
Problem LSEU has 28 rows, 89 columns and 309 elements
Coin0008I LSEU read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 834.682 - 0.001941 seconds
Cgl0004I processed model has 27 rows, 88 columns (88 integer (88 of which binary)) and 261 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.258%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 8 integers unsatisfied sum - 2.00643
Cbc0038I Pass   1: suminf.    0.69474 (3) obj. 1031.39 iterations 14
Cbc0038I Pass   2: suminf.    0.45714 (1) obj. 1400.8 iterations 4
Cbc0038I Pass   3: suminf.    0.45714 (1) obj. 1400.8 iterations 0
Cbc0038I Pass   4: suminf.    0.35238 (1) obj. 1399.47 iterations 1
Cbc0038I Pass   5: suminf.    1.25907 (6) obj. 2848.14 iterations 27
Cbc0038I Pass   6: suminf.    0.50550 (2) obj. 2809.85 iterations 7
Cbc0038I Pass   7: suminf.    0.01053 (1) obj. 2407.88 iterations 4
Cbc0038I Pass   8: suminf.    0.01053 (1) obj. 2407.88 iterations 0
Cbc0038I Pass   9: suminf.    0.72902 (2) obj. 2536.08 iterations 2
Cbc0038I Pass  10: suminf.    0.03750 (1) obj. 4203.08 iterations 17
Cbc0038I Pass  11: suminf.    0.03750 (1) obj. 4203.07 iterations 3
Cbc0038I Pass  12: suminf.    0.45714 (1) obj. 3900.8 iterations 2
Cbc0038I Pass  13: suminf.    0.26667 (1) obj. 3902.13 iterations 1
Cbc0038I Pass  14: suminf.    0.26316 (1) obj. 3320.89 iterations 25
Cbc0038I Pass  15: suminf.    0.26316 (1) obj. 3320.89 iterations 5
Cbc0038I Pass  16: suminf.    0.47619 (1) obj. 3192.33 iterations 2
Cbc0038I Pass  17: suminf.    0.33333 (1) obj. 3193.67 iterations 1
Cbc0038I Pass  18: suminf.    1.78000 (6) obj. 3604.58 iterations 14
Cbc0038I Pass  19: suminf.    0.71492 (2) obj. 3602.27 iterations 9
Cbc0038I Pass  20: suminf.    0.41905 (1) obj. 3600.93 iterations 2
Cbc0038I Pass  21: suminf.    0.39048 (1) obj. 3602.27 iterations 1
Cbc0038I Pass  22: suminf.    0.42353 (1) obj. 3613.19 iterations 15
Cbc0038I Pass  23: suminf.    0.15238 (1) obj. 3546.07 iterations 2
Cbc0038I Pass  24: suminf.    0.34286 (1) obj. 3547.4 iterations 1
Cbc0038I Pass  25: suminf.    0.71276 (3) obj. 3511.3 iterations 24
Cbc0038I Solution found of 3509
Cbc0038I Rounding solution of 1318 is better than previous of 3509
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 88 columns, reduced to 21 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 1318 to 1280 (7.65 seconds)
Cbc0038I Round again with cutoff of 1245.58
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  26: suminf.    0.69474 (3) obj. 1031.39 iterations 0
Cbc0038I Pass  27: suminf.    0.68100 (2) obj. 1245.58 iterations 7
Cbc0038I Pass  28: suminf.    0.35627 (3) obj. 1245.58 iterations 2
Cbc0038I Pass  29: suminf.    1.25518 (5) obj. 1095.74 iterations 6
Cbc0038I Pass  30: suminf.    0.94220 (2) obj. 1222.63 iterations 2
Cbc0038I Pass  31: suminf.    0.79715 (2) obj. 1245.58 iterations 5
Cbc0038I Pass  32: suminf.    1.34732 (6) obj. 1245.58 iterations 7
Cbc0038I Pass  33: suminf.    0.91721 (5) obj. 1245.58 iterations 6
Cbc0038I Pass  34: suminf.    1.24750 (4) obj. 1245.58 iterations 7
Cbc0038I Pass  35: suminf.    1.04229 (3) obj. 1245.58 iterations 5
Cbc0038I Pass  36: suminf.    0.89630 (3) obj. 1245.58 iterations 8
Cbc0038I Pass  37: suminf.    0.82592 (3) obj. 1245.58 iterations 4
Cbc0038I Pass  38: suminf.    0.45312 (2) obj. 1198.77 iterations 3
Cbc0038I Pass  39: suminf.    0.98420 (3) obj. 1245.58 iterations 5
Cbc0038I Pass  40: suminf.    0.60872 (2) obj. 1241.79 iterations 5
Cbc0038I Pass  41: suminf.    0.72231 (2) obj. 1177.57 iterations 2
Cbc0038I Pass  42: suminf.    2.52791 (9) obj. 1245.58 iterations 17
Cbc0038I Pass  43: suminf.    1.07829 (5) obj. 1245.58 iterations 7
Cbc0038I Pass  44: suminf.    1.07829 (5) obj. 1245.58 iterations 0
Cbc0038I Pass  45: suminf.    2.07731 (6) obj. 1245.58 iterations 9
Cbc0038I Pass  46: suminf.    1.73311 (5) obj. 1245.58 iterations 3
Cbc0038I Pass  47: suminf.    1.27188 (6) obj. 1245.58 iterations 4
Cbc0038I Pass  48: suminf.    2.04660 (7) obj. 1245.58 iterations 8
Cbc0038I Pass  49: suminf.    1.82942 (7) obj. 1245.58 iterations 4
Cbc0038I Pass  50: suminf.    1.46983 (6) obj. 1245.58 iterations 14
Cbc0038I Pass  51: suminf.    0.78396 (3) obj. 1245.58 iterations 9
Cbc0038I Pass  52: suminf.    0.78396 (3) obj. 1245.58 iterations 0
Cbc0038I Pass  53: suminf.    1.25041 (5) obj. 1245.58 iterations 8
Cbc0038I Pass  54: suminf.    1.97033 (9) obj. 1245.58 iterations 8
Cbc0038I Pass  55: suminf.    0.85693 (5) obj. 1245.58 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 27 rows 88 columns, reduced to 19 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (9.70 seconds)
Cbc0038I After 9.70 seconds - Feasibility pump exiting with objective of 1280 - took 27.42 seconds
Cbc0012I Integer solution of 1280 found by feasibility pump after 0 iterations and 0 nodes (9.75 seconds)
Cbc0038I Full problem 27 rows 88 columns, reduced to 12 rows 16 columns
Cbc0012I Integer solution of 1153 found by RINS after 0 iterations and 0 nodes (9.83 seconds)
Cbc0012I Integer solution of 1145 found by DiveCoefficient after 222 iterations and 0 nodes (12.55 seconds)
Cbc0031I 14 added rows had average density of 28.428571
Cbc0013I At root node, 14 cuts changed objective from 944.75408 to 1046.688 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 37 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 30.8 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 90 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1145 best solution, best possible 1046.688 (12.58 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1145 best solution, best possible 1046.688 (14.90 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1145 best solution, best possible 1046.688 (16.47 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1145 best solution, best possible 1046.688 (17.28 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1145 best solution, best possible 1046.688 (18.13 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1145 best solution, best possible 1046.688 (19.30 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1145 best solution, best possible 1046.688 (20.85 seconds)
Cbc0010I After 8 nodes, 8 on tree, 1145 best solution, best possible 1046.688 (22.33 seconds)
Cbc0010I After 9 nodes, 8 on tree, 1145 best solution, best possible 1046.688 (23.15 seconds)
Cbc0010I After 12 nodes, 8 on tree, 1145 best solution, best possible 1046.688 (23.88 seconds)
Cbc0004I Integer solution of 1128 found after 782 iterations and 13 nodes (24.11 seconds)
Cbc0010I After 14 nodes, 6 on tree, 1128 best solution, best possible 1046.688 (24.61 seconds)
Cbc0010I After 16 nodes, 4 on tree, 1128 best solution, best possible 1046.688 (26.07 seconds)
Cbc0010I After 17 nodes, 3 on tree, 1128 best solution, best possible 1046.688 (28.29 seconds)
Cbc0010I After 19 nodes, 1 on tree, 1128 best solution, best possible 1046.688 (29.27 seconds)
Cbc0010I After 20 nodes, 1 on tree, 1128 best solution, best possible 1076.6955 (30.77 seconds)
Cbc0010I After 21 nodes, 1 on tree, 1128 best solution, best possible 1076.6955 (32.51 seconds)
Cbc0010I After 22 nodes, 1 on tree, 1128 best solution, best possible 1077.7991 (35.71 seconds)
Cbc0010I After 23 nodes, 2 on tree, 1128 best solution, best possible 1077.7991 (37.73 seconds)
Cbc0004I Integer solution of 1120 found after 1637 iterations and 24 nodes (38.51 seconds)
Cbc0010I After 24 nodes, 2 on tree, 1120 best solution, best possible 1077.7991 (38.51 seconds)
Cbc0010I After 26 nodes, 1 on tree, 1120 best solution, best possible 1098.9665 (41.87 seconds)
Cbc0010I After 27 nodes, 2 on tree, 1120 best solution, best possible 1098.9665 (42.67 seconds)
Cbc0010I After 32 nodes, 4 on tree, 1120 best solution, best possible 1098.9665 (43.39 seconds)
Cbc0001I Search completed - best objective 1120, took 1939 iterations and 36 nodes (44.09 seconds)
Cbc0032I Strong branching done 584 times (5178 iterations), fathomed 5 nodes and fixed 7 variables
Cbc0035I Maximum depth 8, 317 variables fixed on reduced cost
Cuts at root node changed objective from 944.754 to 1046.69
Probing was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038841 seconds)
Gomory was tried 17 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.048378 seconds)
liftKnapsack was tried 180 times and created 422 cuts of which 0 were active after adding rounds of cuts (5.32571 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044432 seconds)
OddWheel was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022759 seconds)
MixedIntegerRounding2 was tried 180 times and created 542 cuts of which 0 were active after adding rounds of cuts (0.426967 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001906 seconds)
TwoMirCuts was tried 180 times and created 485 cuts of which 0 were active after adding rounds of cuts (0.487975 seconds)
ZeroHalf was tried 180 times and created 80 cuts of which 0 were active after adding rounds of cuts (0.398593 seconds)

Result - Optimal solution found
Objective value:                1120
Enumerated nodes:               36
Total iterations:               1939
Time (CPU seconds):             135.127
Time (Wallclock seconds):       44.0977
Total time (CPU seconds):       135.137   (Wallclock seconds):       44.1031
