Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 12 2022
command line - -import /home/danilo/cbc-test-set/khb05250.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root-2/khb05250.txt -quit (default strategy 1)
At line 15 NAME          khb05250
At line 16 ROWS
At line 119 COLUMNS
At line 2745 RHS
At line 2746 BOUNDS
At line 2822 ENDATA
Problem khb05250 has 101 rows, 1350 columns and 2700 elements
Coin0008I khb05250 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 9.59195e+07 - 0.012154 seconds
Cgl0004I processed model has 99 rows, 1298 columns (24 integer (24 of which binary)) and 2619 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 0.001%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.906
Cbc0038I Pass   1: suminf.    0.65360 (3) obj. 1.41516e+08 iterations 51
Cbc0038I Pass   2: suminf.    0.65360 (3) obj. 1.41516e+08 iterations 1
Cbc0038I Solution found of 1.47382e+08
Cbc0038I Relaxing continuous gives 1.10036e+08
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 1196 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of 1.08624e+08
Cbc0038I Pass   3: suminf.    0.76389 (5) obj. 1.08624e+08 iterations 69
Cbc0038I Pass   4: suminf.    0.10921 (1) obj. 1.08624e+08 iterations 19
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 1.08624e+08 iterations 2
Cbc0038I Solution found of 1.08624e+08
Cbc0038I Relaxing continuous gives 1.07979e+08
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 1188 continuous
Cbc0038I Full problem 99 rows 1298 columns, reduced to 31 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (1.68 seconds)
Cbc0038I Freeing continuous variables gives a solution of 1.07979e+08
Cbc0038I Round again with cutoff of 1.05567e+08
Cbc0038I Pass   6: suminf.    1.21680 (5) obj. 1.05567e+08 iterations 0
Cbc0038I Pass   7: suminf.    0.65360 (2) obj. 1.05567e+08 iterations 29
Cbc0038I Pass   8: suminf.    0.60562 (6) obj. 1.05567e+08 iterations 24
Cbc0038I Pass   9: suminf.    2.07322 (7) obj. 1.05567e+08 iterations 36
Cbc0038I Pass  10: suminf.    1.99127 (8) obj. 1.05567e+08 iterations 8
Cbc0038I Pass  11: suminf.    2.41840 (11) obj. 1.05567e+08 iterations 46
Cbc0038I Pass  12: suminf.    1.37924 (9) obj. 1.05567e+08 iterations 18
Cbc0038I Pass  13: suminf.    2.67340 (9) obj. 1.05567e+08 iterations 36
Cbc0038I Pass  14: suminf.    1.61964 (9) obj. 1.05567e+08 iterations 50
Cbc0038I Pass  15: suminf.    2.96711 (10) obj. 1.05567e+08 iterations 39
Cbc0038I Pass  16: suminf.    1.81145 (8) obj. 1.05567e+08 iterations 38
Cbc0038I Pass  17: suminf.    1.17499 (6) obj. 1.05567e+08 iterations 13
Cbc0038I Pass  18: suminf.    2.07444 (6) obj. 1.05567e+08 iterations 29
Cbc0038I Pass  19: suminf.    2.09810 (8) obj. 1.05567e+08 iterations 32
Cbc0038I Pass  20: suminf.    1.66747 (9) obj. 1.05567e+08 iterations 25
Cbc0038I Pass  21: suminf.    2.15821 (11) obj. 1.05567e+08 iterations 56
Cbc0038I Pass  22: suminf.    1.95169 (10) obj. 1.05567e+08 iterations 6
Cbc0038I Pass  23: suminf.    1.86741 (11) obj. 1.05567e+08 iterations 8
Cbc0038I Pass  24: suminf.    2.74388 (11) obj. 1.05567e+08 iterations 40
Cbc0038I Pass  25: suminf.    2.15775 (12) obj. 1.05567e+08 iterations 36
Cbc0038I Pass  26: suminf.    2.45706 (9) obj. 1.05567e+08 iterations 49
Cbc0038I Pass  27: suminf.    1.68568 (10) obj. 1.05567e+08 iterations 40
Cbc0038I Pass  28: suminf.    2.61783 (10) obj. 1.05567e+08 iterations 42
Cbc0038I Pass  29: suminf.    1.78260 (9) obj. 1.05567e+08 iterations 35
Cbc0038I Pass  30: suminf.    2.39157 (10) obj. 1.05567e+08 iterations 41
Cbc0038I Pass  31: suminf.    1.78404 (10) obj. 1.05567e+08 iterations 29
Cbc0038I Pass  32: suminf.    2.73912 (10) obj. 1.05567e+08 iterations 44
Cbc0038I Pass  33: suminf.    1.61167 (9) obj. 1.05567e+08 iterations 20
Cbc0038I Pass  34: suminf.    1.60114 (10) obj. 1.05567e+08 iterations 3
Cbc0038I Pass  35: suminf.    2.15322 (9) obj. 1.05567e+08 iterations 56
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 1110 continuous
Cbc0038I Full problem 99 rows 1298 columns, reduced to 67 rows 164 columns
Cbc0038I Mini branch and bound improved solution from 1.07979e+08 to 1.07347e+08 (1.95 seconds)
Cbc0038I Round again with cutoff of 1.02673e+08
Cbc0038I Pass  35: suminf.    1.80880 (7) obj. 1.02673e+08 iterations 19
Cbc0038I Pass  36: suminf.    1.31839 (8) obj. 1.02673e+08 iterations 21
Cbc0038I Pass  37: suminf.    2.75370 (11) obj. 1.02673e+08 iterations 36
Cbc0038I Pass  38: suminf.    2.51586 (10) obj. 1.02673e+08 iterations 6
Cbc0038I Pass  39: suminf.    2.16428 (10) obj. 1.02673e+08 iterations 8
Cbc0038I Pass  40: suminf.    2.89674 (13) obj. 1.02673e+08 iterations 53
Cbc0038I Pass  41: suminf.    2.60752 (12) obj. 1.02673e+08 iterations 3
Cbc0038I Pass  42: suminf.    2.08258 (12) obj. 1.02673e+08 iterations 8
Cbc0038I Pass  43: suminf.    4.06475 (14) obj. 1.02673e+08 iterations 33
Cbc0038I Pass  44: suminf.    2.60690 (13) obj. 1.02673e+08 iterations 23
Cbc0038I Pass  45: suminf.    2.43421 (12) obj. 1.02673e+08 iterations 2
Cbc0038I Pass  46: suminf.    3.72804 (12) obj. 1.02673e+08 iterations 42
Cbc0038I Pass  47: suminf.    3.13144 (12) obj. 1.02673e+08 iterations 26
Cbc0038I Pass  48: suminf.    3.37524 (12) obj. 1.02673e+08 iterations 40
Cbc0038I Pass  49: suminf.    2.99543 (11) obj. 1.02673e+08 iterations 45
Cbc0038I Pass  50: suminf.    2.56378 (10) obj. 1.02673e+08 iterations 6
Cbc0038I Pass  51: suminf.    2.01429 (10) obj. 1.02673e+08 iterations 6
Cbc0038I Pass  52: suminf.    2.35567 (10) obj. 1.02673e+08 iterations 59
Cbc0038I Pass  53: suminf.    1.99668 (12) obj. 1.02673e+08 iterations 29
Cbc0038I Pass  54: suminf.    2.64243 (13) obj. 1.02673e+08 iterations 45
Cbc0038I Pass  55: suminf.    2.10650 (10) obj. 1.02673e+08 iterations 39
Cbc0038I Pass  56: suminf.    3.04956 (11) obj. 1.02673e+08 iterations 35
Cbc0038I Pass  57: suminf.    2.26634 (11) obj. 1.02673e+08 iterations 31
Cbc0038I Pass  58: suminf.    1.96704 (12) obj. 1.02673e+08 iterations 4
Cbc0038I Pass  59: suminf.    3.32520 (12) obj. 1.02673e+08 iterations 61
Cbc0038I Pass  60: suminf.    2.94747 (12) obj. 1.02673e+08 iterations 24
Cbc0038I Pass  61: suminf.    3.37524 (12) obj. 1.02673e+08 iterations 36
Cbc0038I Pass  62: suminf.    2.43421 (12) obj. 1.02673e+08 iterations 34
Cbc0038I Pass  63: suminf.    3.72804 (12) obj. 1.02673e+08 iterations 42
Cbc0038I Pass  64: suminf.    3.13144 (12) obj. 1.02673e+08 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 1119 continuous
Cbc0038I Full problem 99 rows 1298 columns, reduced to 60 rows 149 columns
Cbc0038I Mini branch and bound did not improve solution (2.18 seconds)
Cbc0038I After 2.18 seconds - Feasibility pump exiting with objective of 1.07347e+08 - took 5.18 seconds
Cbc0012I Integer solution of 1.0734713e+08 found by feasibility pump after 0 iterations and 0 nodes (2.18 seconds)
Cbc0038I Full problem 99 rows 1298 columns, reduced to 93 rows 1242 columns - 7 fixed gives 87, 1235 - still too large
Cbc0012I Integer solution of 1.0694023e+08 found by DiveCoefficient after 241 iterations and 0 nodes (2.66 seconds)
Cbc0031I 84 added rows had average density of 24.321429
Cbc0013I At root node, 84 cuts changed objective from 95919464 to 1.0692841e+08 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 140 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 90.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 1 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 70 row cuts average 68.4 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 30 row cuts average 96.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0001I Search completed - best objective 106940226, took 300 iterations and 0 nodes (2.75 seconds)
Cbc0032I Strong branching done 2 times (47 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Cuts at root node changed objective from 9.59195e+07 to 1.08077e+08
Probing was tried 14 times and created 141 cuts of which 0 were active after adding rounds of cuts (0.029688 seconds)
Gomory was tried 14 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.021805 seconds)
liftKnapsack was tried 14 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.076289 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000909 seconds)
OddWheel was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000888 seconds)
MixedIntegerRounding2 was tried 14 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.040668 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042203 seconds)
TwoMirCuts was tried 14 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.02572 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.2e-05 seconds)

Result - Optimal solution found
Objective value:                106940226
Enumerated nodes:               0
Total iterations:               300
Time (CPU seconds):             5.82072
Time (Wallclock seconds):       2.81334
Total time (CPU seconds):       5.85133   (Wallclock seconds):       2.91716
