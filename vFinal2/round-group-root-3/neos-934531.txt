Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/cbc-test-set/neos-934531.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root-3/neos-934531.txt -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 47082 COLUMNS
At line 183213 RHS
At line 225791 BOUNDS
At line 226874 ENDATA
Problem file has 47078 rows, 1082 columns and 136119 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 2.00007 - 2.06151 seconds
Cgl0003I 153 fixed, 0 tightened bounds, 31536 strengthened rows, 30 substitutions
Cgl0003I 81 fixed, 0 tightened bounds, 12169 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17066 strengthened rows, 0 substitutions
Cgl0003I 6 fixed, 0 tightened bounds, 22738 strengthened rows, 20 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 25781 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25467 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25742 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24802 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 24161 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24315 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23211 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21943 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22263 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20961 strengthened rows, 0 substitutions
Cgl0004I processed model has 32695 rows, 819 columns (819 integer (819 of which binary)) and 395124 elements
Coin3009W Conflict graph built in 0.331 seconds, density: 2.911%
Cgl0015I Clique Strengthening extended 689 cliques, 4384 were dominated
After applying Clique Strengthening continuous objective value is 6
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 5 integer variables out of 819 objects (819 integer) have costs - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 166 integers unsatisfied sum - 38.1158
Cbc0038I Pass   1: (324.23 seconds) suminf.   25.54918 (158) obj. 6.04407 iterations 2582
Cbc0038I Pass   2: (327.54 seconds) suminf.   22.72938 (190) obj. 6.04733 iterations 841
Cbc0038I Pass   3: (330.67 seconds) suminf.   21.73723 (210) obj. 6.04629 iterations 793
Cbc0038I Pass   4: (332.89 seconds) suminf.   21.54665 (238) obj. 6.04637 iterations 542
Cbc0038I Pass   5: (334.58 seconds) suminf.   17.14440 (135) obj. 6.06883 iterations 437
Cbc0038I Pass   6: (346.34 seconds) suminf.   16.46464 (464) obj. 6.17457 iterations 2934
Cbc0038I Pass   7: (355.74 seconds) suminf.   12.01333 (63) obj. 6.10667 iterations 2622
Cbc0038I Pass   8: (362.73 seconds) suminf.    7.15625 (71) obj. 6.125 iterations 1607
Cbc0038I Pass   9: (368.82 seconds) suminf.    6.56265 (72) obj. 6.11944 iterations 1398
Cbc0038I Pass  10: (374.62 seconds) suminf.    5.72222 (36) obj. 6.11111 iterations 1301
Cbc0038I Pass  11: (381.56 seconds) suminf.    4.73093 (94) obj. 6.11999 iterations 1596
Cbc0038I Pass  12: (395.22 seconds) suminf.    9.60000 (37) obj. 6.1 iterations 3142
Cbc0038I Pass  13: (409.66 seconds) suminf.    4.82291 (92) obj. 6.13983 iterations 3594
Cbc0038I Pass  14: (422.34 seconds) suminf.   21.09272 (135) obj. 6.35227 iterations 3247
Cbc0038I Pass  15: (436.44 seconds) suminf.    3.86154 (51) obj. 6.23077 iterations 3938
Cbc0038I Pass  16: (459.96 seconds) suminf.    1.63824 (251) obj. 6.42334 iterations 6041
Cbc0038I Pass  17: (475.08 seconds) suminf.   11.15903 (90) obj. 9.35619 iterations 3804
Cbc0038I Pass  18: (480.16 seconds) suminf.   10.28593 (84) obj. 9 iterations 1213
Cbc0038I Pass  19: (495.38 seconds) suminf.    0.40000 (2) obj. 6.8 iterations 3841
Cbc0038I Pass  20: (498.80 seconds) suminf.    0.40000 (2) obj. 6.8 iterations 700
Cbc0038I Pass  21: (499.60 seconds) suminf.    0.66667 (2) obj. 8.66667 iterations 120
Cbc0038I Pass  22: (518.15 seconds) suminf.   22.51389 (86) obj. 7.83333 iterations 4367
Cbc0038I Pass  23: (529.45 seconds) suminf.   14.66038 (64) obj. 7.22013 iterations 3168
Cbc0038I Pass  24: (536.08 seconds) suminf.    9.29345 (158) obj. 7.20889 iterations 1621
Cbc0038I Pass  25: (547.69 seconds) suminf.    6.32143 (46) obj. 7.25 iterations 2995
Cbc0038I Pass  26: (553.91 seconds) suminf.    6.13043 (46) obj. 7.21739 iterations 1373
Cbc0038I Pass  27: (579.41 seconds) suminf.    2.40000 (12) obj. 6.4 iterations 5466
Cbc0038I Pass  28: (620.03 seconds) suminf.    1.52983 (618) obj. 6.32476 iterations 9663
Cbc0038I Pass  29: (629.57 seconds) suminf.    6.55699 (48) obj. 7.70538 iterations 2229
Cbc0038I Pass  30: (637.47 seconds) suminf.    4.82222 (41) obj. 7.42778 iterations 2030
Cbc0038I Pass  31: (645.37 seconds) suminf.    8.00000 (36) obj. 6.4 iterations 1730
Cbc0038I Pass  32: (646.24 seconds) suminf.    7.90000 (32) obj. 6.4 iterations 161
Cbc0038I Pass  33: (648.89 seconds) suminf.    7.20000 (31) obj. 6.4 iterations 601
Cbc0038I Pass  34: (651.84 seconds) suminf.    6.52950 (54) obj. 6.4 iterations 615
Cbc0038I Pass  35: (654.45 seconds) suminf.    5.80000 (27) obj. 6.4 iterations 566
Cbc0038I Pass  36: (659.41 seconds) suminf.    0.80000 (2) obj. 7.2 iterations 1022
Cbc0038I Pass  37: (662.07 seconds) suminf.    0.80000 (2) obj. 7.2 iterations 410
Cbc0038I Pass  38: (662.58 seconds) suminf.    0.40000 (2) obj. 6.4 iterations 71
Cbc0038I Pass  39: (676.54 seconds) suminf.   19.86290 (98) obj. 6.3871 iterations 3166
Cbc0038I Pass  40: (699.04 seconds) suminf.    9.61429 (53) obj. 6.8 iterations 5693
Cbc0038I Pass  41: (710.63 seconds) suminf.    5.20000 (26) obj. 6.4 iterations 2729
Cbc0038I Pass  42: (719.41 seconds) suminf.    4.51667 (64) obj. 6.3 iterations 2030
Cbc0038I Pass  43: (725.62 seconds) suminf.   10.12000 (39) obj. 7.69333 iterations 1456
Cbc0038I Pass  44: (729.48 seconds) suminf.    5.63257 (49) obj. 7.40292 iterations 957
Cbc0038I Pass  45: (734.29 seconds) suminf.    4.73333 (45) obj. 7.46667 iterations 973
Cbc0038I Pass  46: (738.79 seconds) suminf.    6.44762 (28) obj. 6.2 iterations 1013
Cbc0038I Pass  47: (740.77 seconds) suminf.    5.80000 (26) obj. 6.2 iterations 337
Cbc0038I Pass  48: (743.31 seconds) suminf.    5.60000 (26) obj. 6.2 iterations 424
Cbc0038I Pass  49: (748.21 seconds) suminf.    7.00000 (21) obj. 7 iterations 974
Cbc0038I Pass  50: (752.31 seconds) suminf.    5.66667 (17) obj. 6.33333 iterations 751
Cbc0038I Pass  51: (756.42 seconds) suminf.    5.40000 (17) obj. 6.2 iterations 697
Cbc0038I Pass  52: (760.98 seconds) suminf.    6.06667 (19) obj. 6.2 iterations 745
Cbc0038I Pass  53: (764.96 seconds) suminf.    6.06667 (19) obj. 6.2 iterations 626
Cbc0038I Pass  54: (770.93 seconds) suminf.    2.90000 (17) obj. 6.2 iterations 1080
Cbc0038I Pass  55: (804.25 seconds) suminf.    1.45421 (594) obj. 6.43688 iterations 7955
Cbc0038I Pass  56: (819.49 seconds) suminf.    9.02857 (48) obj. 9.1 iterations 3892
Cbc0038I Pass  57: (832.16 seconds) suminf.    0.60000 (2) obj. 8.8 iterations 2733
Cbc0038I Pass  58: (833.82 seconds) suminf.    0.60000 (2) obj. 8.8 iterations 251
Cbc0038I Pass  59: (834.22 seconds) suminf.    0.40000 (2) obj. 6.8 iterations 52
Cbc0038I Pass  60: (847.95 seconds) suminf.   19.71667 (103) obj. 6.38889 iterations 2966
Cbc0038I Pass  61: (861.21 seconds) suminf.    4.40000 (10) obj. 6.8 iterations 3437
Cbc0038I Pass  62: (865.44 seconds) suminf.    4.40000 (10) obj. 6.8 iterations 760
Cbc0038I Pass  63: (867.19 seconds) suminf.    4.40000 (10) obj. 6.8 iterations 311
Cbc0038I Pass  64: (869.22 seconds) suminf.    4.40000 (10) obj. 6.8 iterations 310
Cbc0038I Pass  65: (870.74 seconds) suminf.    4.40000 (10) obj. 6.8 iterations 263
Cbc0038I Pass  66: (871.99 seconds) suminf.    4.40000 (10) obj. 6.8 iterations 184
Cbc0038I Pass  67: (873.76 seconds) suminf.    4.40000 (10) obj. 6.8 iterations 256
Cbc0038I Pass  68: (875.27 seconds) suminf.    4.40000 (10) obj. 6.8 iterations 269
Cbc0038I Pass  69: (878.30 seconds) suminf.    0.40000 (2) obj. 6.8 iterations 440
Cbc0038I Pass  70: (878.55 seconds) suminf.    0.40000 (2) obj. 6.8 iterations 29
Cbc0038I Pass  71: (878.95 seconds) suminf.    0.40000 (2) obj. 9.2 iterations 54
Cbc0038I Pass  72: (890.39 seconds) suminf.   20.47696 (91) obj. 9.05991 iterations 2538
Cbc0038I Pass  73: (900.61 seconds) suminf.   11.16296 (95) obj. 9.48333 iterations 2818
Cbc0038I Pass  74: (905.11 seconds) suminf.   10.74868 (225) obj. 9.34112 iterations 1165
Cbc0038I Pass  75: (910.73 seconds) suminf.    5.40000 (16) obj. 9.2 iterations 1240
Cbc0038I Pass  76: (913.64 seconds) suminf.    0.40000 (2) obj. 9.2 iterations 442
Cbc0038I Pass  77: (915.70 seconds) suminf.    0.40000 (2) obj. 9.2 iterations 295
Cbc0038I Pass  78: (916.37 seconds) suminf.    0.40000 (2) obj. 6.8 iterations 92
Cbc0038I Pass  79: (934.24 seconds) suminf.   17.63167 (368) obj. 6.52987 iterations 4300
Cbc0038I Pass  80: (950.54 seconds) suminf.    0.40000 (2) obj. 6.8 iterations 4012
Cbc0038I Pass  81: (953.42 seconds) suminf.    0.40000 (2) obj. 6.8 iterations 482
Cbc0038I Pass  82: (954.00 seconds) suminf.    0.60000 (2) obj. 8.8 iterations 85
Cbc0038I Pass  83: (966.51 seconds) suminf.   19.80172 (97) obj. 8.75862 iterations 2774
Cbc0038I Pass  84: (985.32 seconds) suminf.   10.23333 (47) obj. 9.2 iterations 4737
Cbc0038I Pass  85: (987.51 seconds) suminf.   10.06667 (47) obj. 9.2 iterations 363
Cbc0038I Pass  86: (989.37 seconds) suminf.    5.56667 (31) obj. 9.2 iterations 291
Cbc0038I Pass  87: (991.62 seconds) suminf.    5.56667 (31) obj. 9.2 iterations 363
Cbc0038I Pass  88: (1008.81 seconds) suminf.    4.41667 (17) obj. 7.33333 iterations 3614
Cbc0038I Pass  89: (1014.23 seconds) suminf.    4.16667 (20) obj. 7.33333 iterations 990
Cbc0038I Pass  90: (1015.02 seconds) suminf.    4.16667 (20) obj. 7.33333 iterations 119
Cbc0038I Pass  91: (1020.16 seconds) suminf.    0.40000 (2) obj. 6.4 iterations 891
Cbc0038I Pass  92: (1021.84 seconds) suminf.    0.40000 (2) obj. 6.4 iterations 235
Cbc0038I Pass  93: (1022.34 seconds) suminf.    0.66667 (2) obj. 7.33333 iterations 69
Cbc0038I Pass  94: (1040.29 seconds) suminf.   29.23661 (165) obj. 7.86596 iterations 4154
Cbc0038I Pass  95: (1047.79 seconds) suminf.   17.67051 (114) obj. 7.68414 iterations 2404
Cbc0038I Pass  96: (1050.60 seconds) suminf.   17.58240 (108) obj. 7.61299 iterations 686
Cbc0038I Pass  97: (1053.60 seconds) suminf.   17.13842 (155) obj. 7.68306 iterations 755
Cbc0038I Pass  98: (1055.58 seconds) suminf.   16.94591 (151) obj. 7.69467 iterations 399
Cbc0038I Pass  99: (1064.58 seconds) suminf.   14.93333 (79) obj. 7.49524 iterations 2696
Cbc0038I Pass 100: (1074.88 seconds) suminf.   15.09128 (210) obj. 8.11068 iterations 3110
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 29000 rows 819 columns, reduced to 28779 rows 815 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1076.06 seconds)
Cbc0038I Full problem 29001 rows 819 columns, reduced to 28814 rows 819 columns - too large
Cbc0038I After 1204.62 seconds - Feasibility pump exiting - took 889.88 seconds
Cbc0031I 26 added rows had average density of 21.769231
Cbc0013I At root node, 26 cuts changed objective from 6 to 6 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 247 row cuts average 15.4 elements, 0 column cuts (0 active)  in 11.729 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 181 row cuts average 568.0 elements, 0 column cuts (0 active)  in 2.839 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 28.884 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 5 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.314 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.931 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 358.6 elements, 0 column cuts (0 active)  in 2.280 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 20.3 elements, 0 column cuts (0 active)  in 27.583 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 6 (1418.74 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 6 (1438.50 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 6 (1460.24 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 6 (1469.78 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 6 (1478.99 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 6 (1490.02 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 6 (1499.21 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 6 (1505.25 seconds)
Cbc0016I Integer solution of 6 found by strong branching after 35991 iterations and 8 nodes (1506.02 seconds)
Cbc0001I Search completed - best objective 6, took 36046 iterations and 8 nodes (1506.21 seconds)
Cbc0032I Strong branching done 154 times (13135 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 7, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6 to 6
Probing was tried 21 times and created 1889 cuts of which 0 were active after adding rounds of cuts (14.5319 seconds)
Gomory was tried 21 times and created 181 cuts of which 0 were active after adding rounds of cuts (3.33982 seconds)
liftKnapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (28.8838 seconds)
Clique was tried 10 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.030147 seconds)
OddWheel was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.313852 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.930714 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.066118 seconds)
TwoMirCuts was tried 10 times and created 146 cuts of which 0 were active after adding rounds of cuts (2.27982 seconds)
ZeroHalf was tried 10 times and created 57 cuts of which 0 were active after adding rounds of cuts (27.5826 seconds)

Result - Optimal solution found
Objective value:                6
Enumerated nodes:               8
Total iterations:               36046
Time (CPU seconds):             1513.88
Time (Wallclock seconds):       1514.83
Total time (CPU seconds):       1514.18   (Wallclock seconds):       1515.02
