Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/nexp-150-20-1-5.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 1 NAME           nexp-150-20-1-5
At line 2 ROWS
At line 4624 COLUMNS
At line 13567 RHS
At line 14732 BOUNDS
At line 16968 ENDATA
Problem nexp-150-20-1-5 has 4620 rows, 4470 columns and 11175 elements
Coin0008I nexp-150-20-1-5 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 56.3333 - 0.027434 seconds
Cgl0004I processed model has 2198 rows, 4096 columns (2048 integer (2048 of which binary)) and 8192 elements
Coin3009W Conflict graph built in 0.003 seconds, density: 0.006%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 58 integers unsatisfied sum - 17.3333
Cbc0038I Pass   1: suminf.    7.75000 (29) obj. 59.75 iterations 152
Cbc0038I Pass   2: suminf.    0.41667 (4) obj. 76.4167 iterations 73
Cbc0038I Solution found of 80
Cbc0038I Relaxing continuous gives 80
Cbc0038I Rounding solution of 79 is better than previous of 80
Cbc0038I Before mini branch and bound, 1968 integers at bound fixed and 1965 continuous
Cbc0038I Full problem 2198 rows 4096 columns, reduced to 81 rows 103 columns
Cbc0038I Mini branch and bound improved solution from 79 to 74 (0.67 seconds)
Cbc0038I Round again with cutoff of 71.3334
Cbc0038I Pass   3: suminf.    7.75000 (29) obj. 59.75 iterations 0
Cbc0038I Pass   4: suminf.    2.16658 (11) obj. 71.3334 iterations 64
Cbc0038I Pass   5: suminf.    1.66658 (9) obj. 71.3334 iterations 5
Cbc0038I Pass   6: suminf.    2.33342 (8) obj. 71.3334 iterations 31
Cbc0038I Pass   7: suminf.    1.91667 (8) obj. 70.9167 iterations 20
Cbc0038I Pass   8: suminf.    2.16658 (9) obj. 71.3334 iterations 21
Cbc0038I Pass   9: suminf.    1.66658 (7) obj. 71.3334 iterations 15
Cbc0038I Pass  10: suminf.    1.83342 (8) obj. 71.3334 iterations 21
Cbc0038I Pass  11: suminf.    1.83324 (8) obj. 71.3334 iterations 10
Cbc0038I Pass  12: suminf.    2.16658 (9) obj. 71.3334 iterations 21
Cbc0038I Pass  13: suminf.   11.83306 (47) obj. 71.3334 iterations 221
Cbc0038I Pass  14: suminf.    7.66658 (30) obj. 71.3334 iterations 156
Cbc0038I Pass  15: suminf.    7.66658 (28) obj. 71.3334 iterations 4
Cbc0038I Pass  16: suminf.    5.99991 (24) obj. 71.3334 iterations 68
Cbc0038I Pass  17: suminf.    5.33324 (22) obj. 71.3334 iterations 26
Cbc0038I Pass  18: suminf.    6.16676 (24) obj. 71.3334 iterations 54
Cbc0038I Pass  19: suminf.    5.16658 (23) obj. 71.3334 iterations 58
Cbc0038I Pass  20: suminf.    5.16658 (20) obj. 71.3334 iterations 94
Cbc0038I Pass  21: suminf.    5.16658 (21) obj. 71.3334 iterations 54
Cbc0038I Pass  22: suminf.    5.66676 (20) obj. 71.3334 iterations 38
Cbc0038I Pass  23: suminf.   12.83306 (50) obj. 71.3334 iterations 217
Cbc0038I Pass  24: suminf.    7.16658 (30) obj. 71.3334 iterations 169
Cbc0038I Pass  25: suminf.    7.16658 (28) obj. 71.3334 iterations 20
Cbc0038I Pass  26: suminf.    5.66658 (24) obj. 71.3334 iterations 84
Cbc0038I Pass  27: suminf.    4.99991 (21) obj. 71.3334 iterations 32
Cbc0038I Pass  28: suminf.    5.33324 (21) obj. 71.3334 iterations 87
Cbc0038I Pass  29: suminf.    5.33324 (22) obj. 71.3334 iterations 41
Cbc0038I Pass  30: suminf.    5.66694 (22) obj. 71.3334 iterations 68
Cbc0038I Pass  31: suminf.    5.33324 (23) obj. 71.3334 iterations 48
Cbc0038I Pass  32: suminf.    5.66694 (21) obj. 71.3334 iterations 60
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1839 integers at bound fixed and 1838 continuous
Cbc0038I Full problem 2198 rows 4096 columns, reduced to 282 rows 382 columns
Cbc0038I Mini branch and bound improved solution from 74 to 70 (2.47 seconds)
Cbc0038I Round again with cutoff of 66.4667
Cbc0038I Pass  32: suminf.    7.75000 (29) obj. 59.75 iterations 0
Cbc0038I Pass  33: suminf.    3.36659 (15) obj. 66.4667 iterations 72
Cbc0038I Pass  34: suminf.    3.36659 (15) obj. 66.4667 iterations 19
Cbc0038I Pass  35: suminf.    3.53325 (16) obj. 66.4667 iterations 45
Cbc0038I Pass  36: suminf.    3.53325 (16) obj. 66.4667 iterations 27
Cbc0038I Pass  37: suminf.    4.53325 (18) obj. 66.4667 iterations 38
Cbc0038I Pass  38: suminf.    4.03325 (17) obj. 66.4667 iterations 17
Cbc0038I Pass  39: suminf.    3.69992 (16) obj. 66.4667 iterations 29
Cbc0038I Pass  40: suminf.    3.53325 (17) obj. 66.4667 iterations 16
Cbc0038I Pass  41: suminf.    4.53325 (17) obj. 66.4667 iterations 22
Cbc0038I Pass  42: suminf.    3.69992 (17) obj. 66.4667 iterations 15
Cbc0038I Pass  43: suminf.    3.69992 (17) obj. 66.4667 iterations 0
Cbc0038I Pass  44: suminf.    4.36659 (16) obj. 66.4667 iterations 37
Cbc0038I Pass  45: suminf.    4.36659 (17) obj. 66.4667 iterations 16
Cbc0038I Pass  46: suminf.    4.03325 (16) obj. 66.4667 iterations 34
Cbc0038I Pass  47: suminf.    3.53325 (17) obj. 66.4667 iterations 18
Cbc0038I Pass  48: suminf.    4.46675 (17) obj. 66.4667 iterations 26
Cbc0038I Pass  49: suminf.    4.25000 (16) obj. 66.4167 iterations 22
Cbc0038I Pass  50: suminf.    3.86659 (16) obj. 66.4667 iterations 5
Cbc0038I Pass  51: suminf.    3.96675 (15) obj. 66.4667 iterations 30
Cbc0038I Pass  52: suminf.   15.03325 (55) obj. 66.4667 iterations 205
Cbc0038I Pass  53: suminf.   12.36659 (45) obj. 66.4667 iterations 119
Cbc0038I Pass  54: suminf.   10.46675 (40) obj. 66.4667 iterations 25
Cbc0038I Pass  55: suminf.    9.53325 (38) obj. 66.4667 iterations 8
Cbc0038I Pass  56: suminf.    9.03325 (35) obj. 66.4667 iterations 57
Cbc0038I Pass  57: suminf.    8.36659 (34) obj. 66.4667 iterations 17
Cbc0038I Pass  58: suminf.    6.86659 (25) obj. 66.4667 iterations 73
Cbc0038I Pass  59: suminf.    5.69992 (27) obj. 66.4667 iterations 38
Cbc0038I Pass  60: suminf.    5.69992 (28) obj. 66.4667 iterations 24
Cbc0038I Pass  61: suminf.    6.46675 (30) obj. 66.4667 iterations 38
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1885 integers at bound fixed and 1889 continuous
Cbc0038I Full problem 2198 rows 4096 columns, reduced to 225 rows 290 columns
Cbc0038I Mini branch and bound did not improve solution (4.11 seconds)
Cbc0038I After 4.11 seconds - Feasibility pump exiting with objective of 70 - took 3.93 seconds
Cbc0012I Integer solution of 70 found by feasibility pump after 0 iterations and 0 nodes (4.15 seconds)
Cbc0038I Full problem 2198 rows 4096 columns, reduced to 100 rows 123 columns
Cbc0012I Integer solution of 69 found by RINS after 0 iterations and 0 nodes (4.66 seconds)
Cbc0031I 251 added rows had average density of 42.76494
Cbc0013I At root node, 251 cuts changed objective from 56.333333 to 65.453574 in 48 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 16.2 elements, 0 column cuts (50 active)  in 0.361 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 979 row cuts average 271.7 elements, 0 column cuts (0 active)  in 1.621 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 161 row cuts average 24.0 elements, 0 column cuts (0 active)  in 1.398 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1206 row cuts average 40.9 elements, 0 column cuts (0 active)  in 0.565 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 47 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 275 row cuts average 134.9 elements, 0 column cuts (0 active)  in 0.302 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 69 best solution, best possible 65.453574 (19.22 seconds)
Cbc0010I After 1 nodes, 2 on tree, 69 best solution, best possible 65.453574 (21.44 seconds)
Cbc0010I After 2 nodes, 3 on tree, 69 best solution, best possible 65.453574 (23.46 seconds)
Cbc0010I After 3 nodes, 4 on tree, 69 best solution, best possible 65.453574 (24.60 seconds)
Cbc0010I After 5 nodes, 6 on tree, 69 best solution, best possible 65.453574 (25.66 seconds)
Cbc0010I After 6 nodes, 7 on tree, 69 best solution, best possible 65.453574 (26.93 seconds)
Cbc0010I After 7 nodes, 8 on tree, 69 best solution, best possible 65.453574 (27.78 seconds)
Cbc0010I After 9 nodes, 9 on tree, 69 best solution, best possible 65.453574 (28.95 seconds)
Cbc0010I After 11 nodes, 11 on tree, 69 best solution, best possible 65.453574 (29.93 seconds)
Cbc0010I After 13 nodes, 12 on tree, 69 best solution, best possible 65.453574 (30.72 seconds)
Cbc0010I After 15 nodes, 13 on tree, 69 best solution, best possible 65.453574 (31.68 seconds)
Cbc0010I After 18 nodes, 15 on tree, 69 best solution, best possible 65.453574 (32.54 seconds)
Cbc0010I After 21 nodes, 16 on tree, 69 best solution, best possible 65.453574 (33.27 seconds)
Cbc0010I After 24 nodes, 18 on tree, 69 best solution, best possible 65.453574 (34.36 seconds)
Cbc0010I After 27 nodes, 20 on tree, 69 best solution, best possible 65.453574 (35.16 seconds)
Cbc0010I After 32 nodes, 21 on tree, 69 best solution, best possible 65.453574 (35.91 seconds)
Cbc0010I After 36 nodes, 23 on tree, 69 best solution, best possible 65.453574 (36.90 seconds)
Cbc0016I Integer solution of 67 found by strong branching after 14927 iterations and 40 nodes (37.38 seconds)
Cbc0010I After 42 nodes, 10 on tree, 67 best solution, best possible 65.453574 (37.68 seconds)
Cbc0016I Integer solution of 66 found by strong branching after 15136 iterations and 49 nodes (38.25 seconds)
Cbc0001I Search completed - best objective 66, took 15136 iterations and 49 nodes (38.26 seconds)
Cbc0032I Strong branching done 832 times (26169 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 20, 68 variables fixed on reduced cost
Cuts at root node changed objective from 56.3333 to 65.4536
Probing was tried 48 times and created 53 cuts of which 50 were active after adding rounds of cuts (0.360534 seconds)
Gomory was tried 114 times and created 1007 cuts of which 0 were active after adding rounds of cuts (2.03339 seconds)
Knapsack was tried 114 times and created 233 cuts of which 0 were active after adding rounds of cuts (2.68561 seconds)
Clique was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003546 seconds)
OddWheel was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005662 seconds)
MixedIntegerRounding2 was tried 114 times and created 1842 cuts of which 0 were active after adding rounds of cuts (0.977253 seconds)
FlowCover was tried 48 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.154014 seconds)
TwoMirCuts was tried 114 times and created 318 cuts of which 0 were active after adding rounds of cuts (0.652934 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (1e-05 seconds)

Result - Optimal solution found
Objective value:                66
Enumerated nodes:               49
Total iterations:               15136
Time (CPU seconds):             38.3939
Time (Wallclock seconds):       38.4776
Total time (CPU seconds):       38.4217   (Wallclock seconds):       38.5343
