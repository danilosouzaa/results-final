Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/nursesched-sprint02.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 2 NAME          nursesched-sprint02
At line 3 ROWS
At line 3527 COLUMNS
At line 214455 RHS
At line 217128 BOUNDS
At line 227379 ENDATA
Problem nursesched-sprint02 has 3522 rows, 10250 columns and 204000 elements
Coin0008I nursesched-sprint02 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 54.4167 - 0.982024 seconds
Cgl0002I 10 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 490 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 435 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 314 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 197 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 187 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 187 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 187 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 187 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 187 strengthened rows, 0 substitutions
Cgl0004I processed model has 3472 rows, 10210 columns (10210 integer (10190 of which binary)) and 206064 elements
Coin3009W Conflict graph built in 3.538 seconds, density: 1.206%
Cgl0015I Clique Strengthening extended 1262 cliques, 1262 were dominated
After applying Clique Strengthening continuous objective value is 56.1667
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 276 integers unsatisfied sum - 99.8095
Cbc0038I Pass   1: (61.02 seconds) suminf.   26.00000 (52) obj. 72 iterations 2966
Cbc0038I Pass   2: (61.43 seconds) suminf.   13.00000 (26) obj. 73 iterations 247
Cbc0038I Pass   3: (61.59 seconds) suminf.   13.00000 (26) obj. 73 iterations 59
Cbc0038I Pass   4: (62.37 seconds) suminf.   13.00000 (26) obj. 73 iterations 333
Cbc0038I Pass   5: (66.82 seconds) suminf.   13.00000 (26) obj. 99 iterations 1248
Cbc0038I Pass   6: (70.20 seconds) suminf.   13.00000 (26) obj. 99 iterations 1157
Cbc0038I Pass   7: (70.53 seconds) suminf.   13.00000 (26) obj. 99 iterations 164
Cbc0038I Pass   8: (75.09 seconds) suminf.   15.00000 (30) obj. 117 iterations 1310
Cbc0038I Pass   9: (78.81 seconds) suminf.   13.00000 (26) obj. 119 iterations 1244
Cbc0038I Pass  10: (78.91 seconds) suminf.   13.00000 (26) obj. 119 iterations 6
Cbc0038I Pass  11: (79.38 seconds) suminf.   13.00000 (26) obj. 119 iterations 246
Cbc0038I Pass  12: (83.50 seconds) suminf.   13.00000 (26) obj. 144 iterations 1140
Cbc0038I Pass  13: (86.51 seconds) suminf.   13.00000 (26) obj. 144 iterations 1101
Cbc0038I Pass  14: (87.14 seconds) suminf.   13.00000 (26) obj. 144 iterations 270
Cbc0038I Pass  15: (91.36 seconds) suminf.   13.00000 (26) obj. 155 iterations 1135
Cbc0038I Pass  16: (94.18 seconds) suminf.   13.00000 (26) obj. 155 iterations 969
Cbc0038I Pass  17: (94.52 seconds) suminf.   13.00000 (26) obj. 155 iterations 172
Cbc0038I Pass  18: (98.27 seconds) suminf.   13.00000 (26) obj. 165 iterations 1093
Cbc0038I Pass  19: (101.30 seconds) suminf.   12.00000 (24) obj. 162 iterations 1054
Cbc0038I Pass  20: (101.50 seconds) suminf.   12.00000 (24) obj. 162 iterations 88
Cbc0038I Pass  21: (101.99 seconds) suminf.   12.00000 (24) obj. 162 iterations 241
Cbc0038I Pass  22: (105.93 seconds) suminf.   12.00000 (24) obj. 176 iterations 1155
Cbc0038I Pass  23: (108.69 seconds) suminf.   12.00000 (24) obj. 176 iterations 943
Cbc0038I Pass  24: (109.03 seconds) suminf.   12.00000 (24) obj. 176 iterations 142
Cbc0038I Pass  25: (112.98 seconds) suminf.   12.00000 (24) obj. 184 iterations 1199
Cbc0038I Pass  26: (116.34 seconds) suminf.   12.00000 (24) obj. 184 iterations 1129
Cbc0038I Pass  27: (116.89 seconds) suminf.   12.00000 (24) obj. 184 iterations 309
Cbc0038I Pass  28: (121.05 seconds) suminf.   12.00000 (24) obj. 202 iterations 1121
Cbc0038I Pass  29: (124.02 seconds) suminf.   12.00000 (24) obj. 202 iterations 1047
Cbc0038I Pass  30: (124.62 seconds) suminf.   12.00000 (24) obj. 202 iterations 279
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9732 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (124.93 seconds)
Cbc0038I After 124.94 seconds - Feasibility pump exiting - took 72.30 seconds
Cbc0031I 14 added rows had average density of 221.28571
Cbc0013I At root node, 14 cuts changed objective from 56.166667 to 57.6 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 16.669 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 619.5 elements, 0 column cuts (0 active)  in 5.846 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.376 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.570 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 54 row cuts average 307.1 elements, 0 column cuts (0 active)  in 6.521 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.789 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 57.6 (166.45 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 57.6 (170.45 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 57.6 (173.07 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 57.6 (174.62 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 57.6 (175.34 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 57.6 (177.25 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 57.6 (178.13 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 57.6 (179.16 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 57.6 (180.27 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible 57.6 (181.06 seconds)
Cbc0010I After 12 nodes, 11 on tree, 1e+50 best solution, best possible 57.6 (182.07 seconds)
Cbc0010I After 13 nodes, 12 on tree, 1e+50 best solution, best possible 57.6 (183.28 seconds)
Cbc0010I After 15 nodes, 14 on tree, 1e+50 best solution, best possible 57.6 (184.21 seconds)
Cbc0010I After 16 nodes, 14 on tree, 1e+50 best solution, best possible 57.6 (185.05 seconds)
Cbc0010I After 18 nodes, 16 on tree, 1e+50 best solution, best possible 57.6 (186.16 seconds)
Cbc0010I After 20 nodes, 17 on tree, 1e+50 best solution, best possible 57.6 (188.91 seconds)
Cbc0010I After 21 nodes, 17 on tree, 1e+50 best solution, best possible 57.6 (190.38 seconds)
Cbc0010I After 23 nodes, 18 on tree, 1e+50 best solution, best possible 57.6 (191.52 seconds)
Cbc0010I After 24 nodes, 19 on tree, 1e+50 best solution, best possible 57.6 (192.81 seconds)
Cbc0010I After 26 nodes, 20 on tree, 1e+50 best solution, best possible 57.6 (194.00 seconds)
Cbc0010I After 28 nodes, 21 on tree, 1e+50 best solution, best possible 57.6 (195.34 seconds)
Cbc0010I After 29 nodes, 21 on tree, 1e+50 best solution, best possible 57.6 (196.32 seconds)
Cbc0010I After 30 nodes, 22 on tree, 1e+50 best solution, best possible 57.6 (197.63 seconds)
Cbc0010I After 31 nodes, 22 on tree, 1e+50 best solution, best possible 57.6 (198.63 seconds)
Cbc0010I After 33 nodes, 23 on tree, 1e+50 best solution, best possible 57.6 (200.94 seconds)
Cbc0010I After 35 nodes, 25 on tree, 1e+50 best solution, best possible 57.6 (201.70 seconds)
Cbc0004I Integer solution of 58 found after 11404 iterations and 36 nodes (202.11 seconds)
Cbc0001I Search completed - best objective 58, took 11404 iterations and 36 nodes (202.12 seconds)
Cbc0032I Strong branching done 302 times (4899 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 20, 0 variables fixed on reduced cost
Cuts at root node changed objective from 56.1667 to 57.6
Probing was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (16.6692 seconds)
Gomory was tried 23 times and created 36 cuts of which 0 were active after adding rounds of cuts (6.67287 seconds)
Knapsack was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.115491 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045231 seconds)
OddWheel was tried 6 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.375714 seconds)
MixedIntegerRounding2 was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.569779 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.063422 seconds)
TwoMirCuts was tried 23 times and created 54 cuts of which 0 were active after adding rounds of cuts (9.31301 seconds)
ZeroHalf was tried 23 times and created 54 cuts of which 0 were active after adding rounds of cuts (2.95184 seconds)

Result - Optimal solution found
Objective value:                58
Enumerated nodes:               36
Total iterations:               11404
Time (CPU seconds):             202.673
Time (Wallclock seconds):       202.999
Total time (CPU seconds):       203.117   (Wallclock seconds):       203.451
