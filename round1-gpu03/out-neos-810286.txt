Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/neos-810286.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 2679 COLUMNS
At line 74348 RHS
At line 77024 BOUNDS
At line 79940 ENDATA
Problem file has 2675 rows, 2915 columns and 69952 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 2877 - 1.10617 seconds
Cgl0003I 218 fixed, 0 tightened bounds, 713 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 476 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 623 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 608 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 608 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 608 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 608 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 608 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 608 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 607 strengthened rows, 0 substitutions
Cgl0004I processed model has 2511 rows, 2697 columns (2697 integer (2697 of which binary)) and 69802 elements
Coin3009W Conflict graph built in 0.064 seconds, density: 0.655%
Cgl0015I Clique Strengthening extended 56 cliques, 607 were dominated
After applying Clique Strengthening continuous objective value is 2877
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 440 integers unsatisfied sum - 121.714
Cbc0038I Pass   1: suminf.   46.60119 (188) obj. 3154.61 iterations 1791
Cbc0038I Pass   2: suminf.   32.08785 (228) obj. 3169.68 iterations 1484
Cbc0038I Pass   3: suminf.   27.96241 (247) obj. 3164.23 iterations 607
Cbc0038I Pass   4: suminf.   25.90780 (260) obj. 3162.01 iterations 336
Cbc0038I Pass   5: suminf.   24.61343 (247) obj. 3168.99 iterations 296
Cbc0038I Pass   6: suminf.   21.88845 (252) obj. 3162.03 iterations 329
Cbc0038I Pass   7: suminf.   19.02866 (240) obj. 3173.81 iterations 647
Cbc0038I Pass   8: suminf.   19.02651 (241) obj. 3173.15 iterations 40
Cbc0038I Pass   9: suminf.   18.24525 (234) obj. 3200.39 iterations 927
Cbc0038I Pass  10: suminf.   14.39860 (257) obj. 3182.06 iterations 487
Cbc0038I Pass  11: suminf.   11.33333 (37) obj. 3191.17 iterations 1618
Cbc0038I Pass  12: suminf.   10.00000 (20) obj. 3221.5 iterations 403
Cbc0038I Pass  13: suminf.   10.00000 (20) obj. 3221.5 iterations 303
Cbc0038I Pass  14: suminf.   10.00000 (20) obj. 3221.5 iterations 624
Cbc0038I Pass  15: suminf.   10.00000 (20) obj. 3221.5 iterations 640
Cbc0038I Pass  16: suminf.   10.00000 (20) obj. 3221.5 iterations 384
Cbc0038I Pass  17: suminf.   10.00000 (20) obj. 3221.5 iterations 314
Cbc0038I Pass  18: suminf.   10.00000 (20) obj. 3221.5 iterations 417
Cbc0038I Pass  19: suminf.   10.00000 (20) obj. 3221.5 iterations 235
Cbc0038I Pass  20: suminf.   10.00000 (20) obj. 3221.5 iterations 296
Cbc0038I Pass  21: suminf.   10.00000 (20) obj. 3221.5 iterations 345
Cbc0038I Pass  22: suminf.   10.00000 (20) obj. 3221.5 iterations 317
Cbc0038I Pass  23: suminf.   10.00000 (20) obj. 3221.5 iterations 381
Cbc0038I Pass  24: suminf.   10.00000 (20) obj. 3221.5 iterations 549
Cbc0038I Pass  25: suminf.   10.00000 (20) obj. 3221.5 iterations 257
Cbc0038I Pass  26: suminf.   10.00000 (20) obj. 3221.5 iterations 498
Cbc0038I Pass  27: suminf.   10.00000 (20) obj. 3221.5 iterations 273
Cbc0038I Pass  28: suminf.   10.00000 (20) obj. 3221.5 iterations 256
Cbc0038I Pass  29: suminf.   10.00000 (20) obj. 3221.5 iterations 588
Cbc0038I Pass  30: suminf.   10.00000 (20) obj. 3221.5 iterations 525
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1786 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1960 rows 2697 columns, reduced to 1496 rows 887 columns - too large
Cbc0038I Mini branch and bound did not improve solution (30.65 seconds)
Cbc0038I Full problem 1961 rows 2697 columns, reduced to 1913 rows 2697 columns - too large
Cbc0038I After 44.59 seconds - Feasibility pump exiting - took 31.50 seconds
Cbc0031I 12 added rows had average density of 5.5
Cbc0013I At root node, 12 cuts changed objective from 2877 to 2877 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 1.128 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.858 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.133 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 7 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.425 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2877 (52.15 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2877 (52.93 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2877 (54.09 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 2877 (55.42 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 2877 (56.33 seconds)
Cbc0010I After 10 nodes, 11 on tree, 1e+50 best solution, best possible 2877 (57.18 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible 2877 (57.96 seconds)
Cbc0010I After 15 nodes, 14 on tree, 1e+50 best solution, best possible 2877 (58.78 seconds)
Cbc0010I After 19 nodes, 17 on tree, 1e+50 best solution, best possible 2877 (59.68 seconds)
Cbc0010I After 21 nodes, 17 on tree, 1e+50 best solution, best possible 2877 (60.43 seconds)
Cbc0010I After 24 nodes, 19 on tree, 1e+50 best solution, best possible 2877 (61.19 seconds)
Cbc0010I After 27 nodes, 21 on tree, 1e+50 best solution, best possible 2877 (61.96 seconds)
Cbc0010I After 31 nodes, 24 on tree, 1e+50 best solution, best possible 2877 (62.96 seconds)
Cbc0010I After 34 nodes, 26 on tree, 1e+50 best solution, best possible 2877 (63.85 seconds)
Cbc0010I After 39 nodes, 28 on tree, 1e+50 best solution, best possible 2877 (64.61 seconds)
Cbc0010I After 42 nodes, 30 on tree, 1e+50 best solution, best possible 2877 (65.70 seconds)
Cbc0010I After 46 nodes, 34 on tree, 1e+50 best solution, best possible 2877 (66.41 seconds)
Cbc0010I After 49 nodes, 36 on tree, 1e+50 best solution, best possible 2877 (67.25 seconds)
Cbc0010I After 53 nodes, 40 on tree, 1e+50 best solution, best possible 2877 (67.96 seconds)
Cbc0010I After 59 nodes, 44 on tree, 1e+50 best solution, best possible 2877 (68.72 seconds)
Cbc0010I After 62 nodes, 46 on tree, 1e+50 best solution, best possible 2877 (69.43 seconds)
Cbc0010I After 67 nodes, 49 on tree, 1e+50 best solution, best possible 2877 (70.17 seconds)
Cbc0010I After 74 nodes, 54 on tree, 1e+50 best solution, best possible 2877 (71.01 seconds)
Cbc0004I Integer solution of 2877 found after 16111 iterations and 82 nodes (71.79 seconds)
Cbc0001I Search completed - best objective 2877, took 16111 iterations and 82 nodes (71.80 seconds)
Cbc0032I Strong branching done 668 times (8531 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 55, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2877 to 2877
Probing was tried 5 times and created 1 cuts of which 0 were active after adding rounds of cuts (1.12817 seconds)
Gomory was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.85792 seconds)
Knapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.13288 seconds)
Clique was tried 36 times and created 172 cuts of which 0 were active after adding rounds of cuts (0.33994 seconds)
OddWheel was tried 36 times and created 59 cuts of which 0 were active after adding rounds of cuts (2.06899 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.10978 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008314 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.296312 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.161918 seconds)

Result - Optimal solution found
Objective value:                2877
Enumerated nodes:               82
Total iterations:               16111
Time (CPU seconds):             72.0168
Time (Wallclock seconds):       72.1391
Total time (CPU seconds):       72.0824   (Wallclock seconds):       72.3133
