Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/sprint_hidden06_j.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 2 NAME          sprint_hidden06_j.lp
At line 3 ROWS
At line 3699 COLUMNS
At line 214086 RHS
At line 217011 BOUNDS
At line 227222 ENDATA
Problem sprint_hidden06_j.lp has 3694 rows, 10210 columns and 202140 elements
Coin0008I sprint_hidden06_j.lp read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 100.93 - 1.45574 seconds
Cgl0002I 10 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 530 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 412 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 360 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 260 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 250 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 250 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 250 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 250 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 250 strengthened rows, 0 substitutions
Cgl0004I processed model has 3620 rows, 10170 columns (10170 integer (10150 of which binary)) and 204560 elements
Coin3009W Conflict graph built in 3.606 seconds, density: 1.194%
Cgl0015I Clique Strengthening extended 1270 cliques, 1270 were dominated
After applying Clique Strengthening continuous objective value is 125.333
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 399 integers unsatisfied sum - 113.056
Cbc0038I Pass   1: (72.23 seconds) suminf.    4.50000 (9) obj. 209.5 iterations 6397
Cbc0038I Pass   2: (72.97 seconds) suminf.    4.50000 (9) obj. 209.5 iterations 304
Cbc0038I Pass   3: (73.31 seconds) suminf.    4.00000 (8) obj. 210 iterations 124
Cbc0038I Pass   4: (73.56 seconds) suminf.    4.00000 (8) obj. 210 iterations 63
Cbc0038I Pass   5: (79.28 seconds) suminf.    4.00000 (8) obj. 257 iterations 1462
Cbc0038I Pass   6: (84.24 seconds) suminf.    4.00000 (8) obj. 257 iterations 1306
Cbc0038I Pass   7: (84.54 seconds) suminf.    4.00000 (8) obj. 257 iterations 76
Cbc0038I Pass   8: (91.97 seconds) suminf.    0.00000 (0) obj. 303 iterations 1689
Cbc0038I Solution found of 303
Cbc0038I Cleaned solution of 303
Cbc0038I Rounding solution of 211 is better than previous of 303
Cbc0038I Before mini branch and bound, 9684 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3620 rows 10170 columns, reduced to 331 rows 165 columns
Cbc0038I Mini branch and bound did not improve solution (93.57 seconds)
Cbc0038I Round again with cutoff of 201.533
Cbc0038I Reduced cost fixing fixed 931 variables on major pass 2
Cbc0038I Pass   9: (96.70 seconds) suminf.    9.31010 (30) obj. 201.533 iterations 1091
Cbc0038I Pass  10: (107.78 seconds) suminf.    3.99237 (30) obj. 201.533 iterations 2304
Cbc0038I Pass  11: (107.97 seconds) suminf.    3.99237 (30) obj. 201.533 iterations 28
Cbc0038I Pass  12: (129.66 seconds) suminf.    0.10668 (1) obj. 201.533 iterations 4737
Cbc0038I Solution found of 201.533
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3621 rows 10170 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 156
Cbc0038I Before mini branch and bound, 9725 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3620 rows 10170 columns, reduced to 339 rows 164 columns
Cbc0038I Mini branch and bound did not improve solution (134.09 seconds)
Cbc0038I Round again with cutoff of 149.067
Cbc0038I Reduced cost fixing fixed 4198 variables on major pass 3
Cbc0038I Pass  13: (138.41 seconds) suminf.   47.52216 (177) obj. 149.067 iterations 1913
Cbc0038I Pass  14: (147.00 seconds) suminf.   20.07032 (58) obj. 149.067 iterations 1785
Cbc0038I Pass  15: (150.73 seconds) suminf.    0.14684 (11) obj. 149.067 iterations 753
Cbc0038I Solution found of 149.067
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3621 rows 10170 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 149
Cbc0038I Before mini branch and bound, 9680 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3620 rows 10170 columns, reduced to 551 rows 281 columns
Cbc0038I Mini branch and bound improved solution from 149 to 148 (156.48 seconds)
Cbc0038I Round again with cutoff of 140.5
Cbc0038I Reduced cost fixing fixed 5168 variables on major pass 4
Cbc0038I Pass  16: (157.37 seconds) suminf.   61.99993 (132) obj. 140.5 iterations 361
Cbc0038I Pass  17: (166.13 seconds) suminf.   46.91618 (121) obj. 140.5 iterations 2198
Cbc0038I Pass  18: (171.07 seconds) suminf.   29.06240 (90) obj. 140.5 iterations 1112
Cbc0038I Pass  19: (172.26 seconds) suminf.   26.81233 (87) obj. 140.5 iterations 239
Cbc0038I Pass  20: (174.42 seconds) suminf.   24.49984 (53) obj. 140.5 iterations 445
Cbc0038I Pass  21: (175.19 seconds) suminf.   23.99984 (62) obj. 140.5 iterations 141
Cbc0038I Pass  22: (175.60 seconds) suminf.   11.16650 (27) obj. 140.5 iterations 72
Cbc0038I Pass  23: (175.91 seconds) suminf.   11.16650 (27) obj. 140.5 iterations 55
Cbc0038I Pass  24: (176.11 seconds) suminf.   11.16650 (27) obj. 140.5 iterations 26
Cbc0038I Pass  25: (176.31 seconds) suminf.    5.83317 (14) obj. 140.5 iterations 20
Cbc0038I Pass  26: (176.46 seconds) suminf.    5.83317 (14) obj. 140.5 iterations 3
Cbc0038I Pass  27: (190.29 seconds) suminf.    0.29999 (1) obj. 140.5 iterations 3321
Cbc0038I Solution found of 140.5
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3621 rows 10170 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 137
Cbc0038I Before mini branch and bound, 9686 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3620 rows 10170 columns, reduced to 464 rows 240 columns
Cbc0038I Mini branch and bound improved solution from 137 to 135 (194.92 seconds)
Cbc0038I Round again with cutoff of 131.4
Cbc0038I Reduced cost fixing fixed 6663 variables on major pass 5
Cbc0038I Pass  28: (197.02 seconds) suminf.   70.37825 (330) obj. 131.4 iterations 1068
Cbc0038I Pass  29: (200.82 seconds) suminf.   53.25848 (292) obj. 131.4 iterations 1238
Cbc0038I Pass  30: (204.10 seconds) suminf.   16.82388 (303) obj. 131.4 iterations 1136
Cbc0038I Pass  31: (205.24 seconds) suminf.   15.78617 (377) obj. 131.4 iterations 481
Cbc0038I Pass  32: (209.11 seconds) suminf.   13.28526 (61) obj. 131.4 iterations 966
Cbc0038I Pass  33: (211.22 seconds) suminf.   11.76339 (370) obj. 131.4 iterations 476
Cbc0038I Pass  34: (211.48 seconds) suminf.   11.67422 (371) obj. 131.4 iterations 95
Cbc0038I Pass  35: (213.61 seconds) suminf.   15.19977 (77) obj. 131.4 iterations 494
Cbc0038I Pass  36: (215.43 seconds) suminf.   14.46735 (87) obj. 131.4 iterations 376
Cbc0038I Pass  37: (217.36 seconds) suminf.   10.39972 (72) obj. 131.4 iterations 417
Cbc0038I Pass  38: (219.30 seconds) suminf.    9.54562 (71) obj. 131.4 iterations 423
Cbc0038I Pass  39: (220.38 seconds) suminf.    9.44763 (66) obj. 131.4 iterations 222
Cbc0038I Pass  40: (222.27 seconds) suminf.    8.10369 (68) obj. 131.4 iterations 398
Cbc0038I Pass  41: (232.20 seconds) suminf.   15.58001 (32) obj. 131.4 iterations 2275
Cbc0038I Pass  42: (237.17 seconds) suminf.   15.09993 (31) obj. 131.4 iterations 1110
Cbc0038I Pass  43: (237.63 seconds) suminf.   15.09993 (31) obj. 131.4 iterations 89
Cbc0038I Pass  44: (238.16 seconds) suminf.   15.09993 (31) obj. 131.4 iterations 103
Cbc0038I Pass  45: (240.48 seconds) suminf.   12.55985 (36) obj. 131.4 iterations 481
Cbc0038I Pass  46: (240.89 seconds) suminf.   12.09990 (39) obj. 131.4 iterations 75
Cbc0038I Pass  47: (241.74 seconds) suminf.   12.04434 (39) obj. 131.4 iterations 155
Cbc0038I Pass  48: (250.00 seconds) suminf.   17.68001 (36) obj. 131.4 iterations 1802
Cbc0038I Pass  49: (253.37 seconds) suminf.   15.77498 (36) obj. 131.4 iterations 790
Cbc0038I Pass  50: (257.33 seconds) suminf.   10.79979 (47) obj. 131.4 iterations 867
Cbc0038I Pass  51: (259.64 seconds) suminf.   10.26648 (47) obj. 131.4 iterations 462
Cbc0038I Pass  52: (260.18 seconds) suminf.    9.37102 (39) obj. 131.4 iterations 112
Cbc0038I Pass  53: (264.09 seconds) suminf.    7.66198 (364) obj. 131.4 iterations 983
Cbc0038I Pass  54: (265.02 seconds) suminf.    8.21981 (323) obj. 131.4 iterations 399
Cbc0038I Pass  55: (265.86 seconds) suminf.    7.95002 (371) obj. 131.4 iterations 323
Cbc0038I Pass  56: (266.25 seconds) suminf.    7.85063 (364) obj. 131.4 iterations 165
Cbc0038I Pass  57: (266.75 seconds) suminf.    7.88921 (360) obj. 131.4 iterations 223
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9385 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3620 rows 10170 columns, reduced to 1263 rows 686 columns
Cbc0038I Mini branch and bound improved solution from 135 to 131 (268.20 seconds)
Cbc0038I Round again with cutoff of 128.133
Cbc0038I Reduced cost fixing fixed 7221 variables on major pass 6
Cbc0038I Pass  57: (269.30 seconds) suminf.   75.65508 (328) obj. 128.133 iterations 629
Cbc0038I Pass  58: (271.32 seconds) suminf.   57.49437 (291) obj. 128.133 iterations 710
Cbc0038I Pass  59: (272.51 seconds) suminf.   46.28756 (288) obj. 128.133 iterations 325
Cbc0038I Pass  60: (273.22 seconds) suminf.   39.59964 (161) obj. 128.133 iterations 162
Cbc0038I Pass  61: (274.07 seconds) suminf.   38.92707 (239) obj. 128.133 iterations 169
Cbc0038I Pass  62: (275.39 seconds) suminf.   38.32643 (231) obj. 128.133 iterations 337
Cbc0038I Pass  63: (275.61 seconds) suminf.   37.56671 (226) obj. 128.133 iterations 41
Cbc0038I Pass  64: (275.98 seconds) suminf.   37.56631 (202) obj. 128.133 iterations 79
Cbc0038I Pass  65: (276.01 seconds) suminf.   37.56631 (202) obj. 128.133 iterations 0
Cbc0038I Pass  66: (276.91 seconds) suminf.   37.68779 (226) obj. 128.133 iterations 179
Cbc0038I Pass  67: (277.27 seconds) suminf.   37.68779 (227) obj. 128.133 iterations 94
Cbc0038I Pass  68: (277.36 seconds) suminf.   37.68779 (227) obj. 128.133 iterations 4
Cbc0038I Pass  69: (277.47 seconds) suminf.   37.68779 (227) obj. 128.133 iterations 13
Cbc0038I Pass  70: (277.68 seconds) suminf.   37.68779 (226) obj. 128.133 iterations 40
Cbc0038I Pass  71: (277.88 seconds) suminf.   37.68779 (226) obj. 128.133 iterations 41
Cbc0038I Pass  72: (278.52 seconds) suminf.   38.30536 (224) obj. 128.133 iterations 183
Cbc0038I Pass  73: (279.27 seconds) suminf.   37.21907 (215) obj. 128.133 iterations 200
Cbc0038I Pass  74: (279.53 seconds) suminf.   37.19203 (218) obj. 128.133 iterations 72
Cbc0038I Pass  75: (279.81 seconds) suminf.   37.06067 (220) obj. 128.133 iterations 69
Cbc0038I Pass  76: (280.64 seconds) suminf.   37.18811 (219) obj. 128.133 iterations 186
Cbc0038I Pass  77: (281.31 seconds) suminf.   33.09381 (225) obj. 128.133 iterations 162
Cbc0038I Pass  78: (281.53 seconds) suminf.   32.70085 (221) obj. 128.133 iterations 63
Cbc0038I Pass  79: (281.64 seconds) suminf.   32.70085 (221) obj. 128.133 iterations 13
Cbc0038I Pass  80: (281.78 seconds) suminf.   32.70085 (221) obj. 128.133 iterations 19
Cbc0038I Pass  81: (281.87 seconds) suminf.   32.70085 (221) obj. 128.133 iterations 4
Cbc0038I Pass  82: (282.01 seconds) suminf.   32.66274 (219) obj. 128.133 iterations 22
Cbc0038I Pass  83: (282.29 seconds) suminf.   32.62623 (227) obj. 128.133 iterations 75
Cbc0038I Pass  84: (282.64 seconds) suminf.   33.06625 (228) obj. 128.133 iterations 106
Cbc0038I Pass  85: (283.13 seconds) suminf.   32.70085 (221) obj. 128.133 iterations 127
Cbc0038I Pass  86: (283.23 seconds) suminf.   32.70085 (221) obj. 128.133 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9582 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3620 rows 10170 columns, reduced to 768 rows 387 columns
Cbc0038I Mini branch and bound did not improve solution (284.73 seconds)
Cbc0038I After 284.73 seconds - Feasibility pump exiting with objective of 131 - took 233.90 seconds
Cbc0012I Integer solution of 131 found by feasibility pump after 0 iterations and 0 nodes (284.75 seconds)
Cbc0031I 46 added rows had average density of 60.391304
Cbc0013I At root node, 46 cuts changed objective from 125.33333 to 127.33333 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 257 row cuts average 4.5 elements, 750 column cuts (750 active)  in 1.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 12.0 elements, 0 column cuts (0 active)  in 4.603 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 4.741 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.849 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.527 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 22 row cuts average 23.8 elements, 0 column cuts (0 active)  in 9.773 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 245.2 elements, 0 column cuts (0 active)  in 2.426 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 131 best solution, best possible 127.33333 (316.85 seconds)
Cbc0010I After 1 nodes, 2 on tree, 131 best solution, best possible 127.33333 (324.55 seconds)
Cbc0010I After 2 nodes, 3 on tree, 131 best solution, best possible 127.33333 (326.22 seconds)
Cbc0010I After 3 nodes, 4 on tree, 131 best solution, best possible 127.33333 (328.15 seconds)
Cbc0016I Integer solution of 130 found by strong branching after 2283 iterations and 4 nodes (328.35 seconds)
Cbc0010I After 5 nodes, 3 on tree, 130 best solution, best possible 127.33333 (329.34 seconds)
Cbc0010I After 6 nodes, 4 on tree, 130 best solution, best possible 127.33333 (330.14 seconds)
Cbc0010I After 8 nodes, 6 on tree, 130 best solution, best possible 127.33333 (331.05 seconds)
Cbc0010I After 11 nodes, 4 on tree, 130 best solution, best possible 127.33333 (331.88 seconds)
Cbc0010I After 13 nodes, 3 on tree, 130 best solution, best possible 127.33333 (333.31 seconds)
Cbc0010I After 14 nodes, 4 on tree, 130 best solution, best possible 127.33333 (334.20 seconds)
Cbc0010I After 18 nodes, 3 on tree, 130 best solution, best possible 127.33333 (334.99 seconds)
Cbc0010I After 20 nodes, 2 on tree, 130 best solution, best possible 127.33333 (335.89 seconds)
Cbc0010I After 23 nodes, 2 on tree, 130 best solution, best possible 127.33333 (336.64 seconds)
Cbc0010I After 27 nodes, 1 on tree, 130 best solution, best possible 127.33333 (343.08 seconds)
Cbc0010I After 28 nodes, 2 on tree, 130 best solution, best possible 127.33333 (343.90 seconds)
Cbc0010I After 30 nodes, 2 on tree, 130 best solution, best possible 127.33333 (345.55 seconds)
Cbc0010I After 31 nodes, 3 on tree, 130 best solution, best possible 127.33333 (346.35 seconds)
Cbc0010I After 33 nodes, 4 on tree, 130 best solution, best possible 127.33333 (347.08 seconds)
Cbc0001I Search completed - best objective 130, took 8104 iterations and 37 nodes (347.94 seconds)
Cbc0032I Strong branching done 188 times (3466 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 6, 10930 variables fixed on reduced cost
Cuts at root node changed objective from 125.333 to 127.333
Probing was tried 45 times and created 1878 cuts of which 0 were active after adding rounds of cuts (1.54933 seconds)
Gomory was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (4.60301 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (4.7406 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.165724 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.84864 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.527402 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.089698 seconds)
TwoMirCuts was tried 45 times and created 22 cuts of which 0 were active after adding rounds of cuts (17.9672 seconds)
ZeroHalf was tried 45 times and created 71 cuts of which 0 were active after adding rounds of cuts (9.1423 seconds)

Result - Optimal solution found
Objective value:                130
Enumerated nodes:               37
Total iterations:               8104
Time (CPU seconds):             348.907
Time (Wallclock seconds):       349.301
Total time (CPU seconds):       349.352   (Wallclock seconds):       349.783
