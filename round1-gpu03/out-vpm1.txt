Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/vpm1.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 15 NAME          VPM1
At line 16 ROWS
At line 252 COLUMNS
At line 801 RHS
At line 826 BOUNDS
At line 1247 ENDATA
Problem VPM1 has 234 rows, 378 columns and 749 elements
Coin0008I VPM1 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 15.4167 - 0.003063 seconds
Cgl0004I processed model has 168 rows, 257 columns (120 integer (120 of which binary)) and 514 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.091%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.6
Cbc0038I Pass   1: suminf.    1.76667 (6) obj. 17.7667 iterations 23
Cbc0038I Solution found of 22
Cbc0038I Relaxing continuous gives 22
Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 117 continuous
Cbc0038I Full problem 168 rows 257 columns, reduced to 6 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 22 to 21 (0.03 seconds)
Cbc0038I Round again with cutoff of 19.6434
Cbc0038I Pass   2: suminf.    1.76667 (6) obj. 17.7667 iterations 0
Cbc0038I Pass   3: suminf.    1.52324 (5) obj. 19.6434 iterations 27
Cbc0038I Pass   4: suminf.    1.52324 (5) obj. 19.6434 iterations 1
Cbc0038I Pass   5: suminf.    0.85658 (4) obj. 19.6434 iterations 12
Cbc0038I Pass   6: suminf.    0.85658 (3) obj. 19.6434 iterations 1
Cbc0038I Pass   7: suminf.    0.72324 (4) obj. 19.6434 iterations 1
Cbc0038I Pass   8: suminf.    1.52324 (5) obj. 19.6434 iterations 3
Cbc0038I Pass   9: suminf.    1.52324 (5) obj. 19.6434 iterations 0
Cbc0038I Pass  10: suminf.    0.85658 (4) obj. 19.6434 iterations 10
Cbc0038I Pass  11: suminf.    0.85658 (3) obj. 19.6434 iterations 1
Cbc0038I Pass  12: suminf.    0.72324 (4) obj. 19.6434 iterations 1
Cbc0038I Pass  13: suminf.    1.52324 (5) obj. 19.6434 iterations 3
Cbc0038I Pass  14: suminf.    1.52324 (5) obj. 19.6434 iterations 0
Cbc0038I Pass  15: suminf.    0.85658 (4) obj. 19.6434 iterations 13
Cbc0038I Pass  16: suminf.    0.85658 (3) obj. 19.6434 iterations 1
Cbc0038I Pass  17: suminf.    0.72324 (4) obj. 19.6434 iterations 1
Cbc0038I Pass  18: suminf.    1.52324 (5) obj. 19.6434 iterations 4
Cbc0038I Pass  19: suminf.    1.52324 (5) obj. 19.6434 iterations 0
Cbc0038I Pass  20: suminf.    0.85658 (4) obj. 19.6434 iterations 6
Cbc0038I Pass  21: suminf.    0.85658 (3) obj. 19.6434 iterations 1
Cbc0038I Pass  22: suminf.    0.72324 (4) obj. 19.6434 iterations 1
Cbc0038I Pass  23: suminf.    1.52324 (5) obj. 19.6434 iterations 3
Cbc0038I Pass  24: suminf.    1.52324 (5) obj. 19.6434 iterations 0
Cbc0038I Pass  25: suminf.    0.85658 (4) obj. 19.6434 iterations 6
Cbc0038I Pass  26: suminf.    0.85658 (3) obj. 19.6434 iterations 1
Cbc0038I Pass  27: suminf.    0.72324 (4) obj. 19.6434 iterations 1
Cbc0038I Pass  28: suminf.    1.52324 (5) obj. 19.6434 iterations 3
Cbc0038I Pass  29: suminf.    1.52324 (5) obj. 19.6434 iterations 0
Cbc0038I Pass  30: suminf.    0.85658 (4) obj. 19.6434 iterations 11
Cbc0038I Pass  31: suminf.    0.85658 (3) obj. 19.6434 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 104 integers at bound fixed and 112 continuous
Cbc0038I Full problem 168 rows 257 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 21 to 20 (0.09 seconds)
Cbc0038I Round again with cutoff of 18.4867
Cbc0038I Pass  31: suminf.    1.76667 (6) obj. 17.7667 iterations 0
Cbc0038I Pass  32: suminf.    2.14659 (7) obj. 18.4867 iterations 20
Cbc0038I Pass  33: suminf.    1.54659 (6) obj. 18.4867 iterations 3
Cbc0038I Pass  34: suminf.    2.47992 (7) obj. 18.4867 iterations 16
Cbc0038I Pass  35: suminf.    1.54659 (6) obj. 18.4867 iterations 6
Cbc0038I Pass  36: suminf.    5.45049 (18) obj. 18.4867 iterations 58
Cbc0038I Pass  37: suminf.    4.51325 (15) obj. 18.4867 iterations 17
Cbc0038I Pass  38: suminf.    3.84659 (13) obj. 18.4867 iterations 33
Cbc0038I Pass  39: suminf.    2.67992 (10) obj. 18.4867 iterations 6
Cbc0038I Pass  40: suminf.    2.82008 (9) obj. 18.4867 iterations 28
Cbc0038I Pass  41: suminf.    2.01325 (7) obj. 18.4867 iterations 16
Cbc0038I Pass  42: suminf.    2.84659 (9) obj. 18.4867 iterations 14
Cbc0038I Pass  43: suminf.    2.34659 (8) obj. 18.4867 iterations 21
Cbc0038I Pass  44: suminf.    2.51452 (9) obj. 18.4867 iterations 14
Cbc0038I Pass  45: suminf.    6.67992 (18) obj. 18.4867 iterations 40
Cbc0038I Pass  46: suminf.    3.81325 (16) obj. 18.4867 iterations 26
Cbc0038I Pass  47: suminf.    3.81325 (16) obj. 18.4867 iterations 0
Cbc0038I Pass  48: suminf.    3.31325 (11) obj. 18.4867 iterations 16
Cbc0038I Pass  49: suminf.    3.21325 (13) obj. 18.4867 iterations 7
Cbc0038I Pass  50: suminf.    3.71325 (11) obj. 18.4867 iterations 20
Cbc0038I Pass  51: suminf.    3.21325 (11) obj. 18.4867 iterations 10
Cbc0038I Pass  52: suminf.    3.21325 (11) obj. 18.4867 iterations 1
Cbc0038I Pass  53: suminf.    2.47992 (7) obj. 18.4867 iterations 22
Cbc0038I Pass  54: suminf.    2.04659 (7) obj. 18.4867 iterations 12
Cbc0038I Pass  55: suminf.    2.04659 (8) obj. 18.4867 iterations 4
Cbc0038I Pass  56: suminf.    2.54659 (9) obj. 18.4867 iterations 18
Cbc0038I Pass  57: suminf.    2.54659 (9) obj. 18.4867 iterations 7
Cbc0038I Pass  58: suminf.    2.54659 (8) obj. 18.4867 iterations 10
Cbc0038I Pass  59: suminf.    2.54659 (9) obj. 18.4867 iterations 11
Cbc0038I Pass  60: suminf.    4.04659 (15) obj. 18.4867 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 72 continuous
Cbc0038I Full problem 168 rows 257 columns, reduced to 86 rows 111 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I After 0.23 seconds - Feasibility pump exiting with objective of 20 - took 0.21 seconds
Cbc0012I Integer solution of 20 found by feasibility pump after 0 iterations and 0 nodes (0.23 seconds)
Cbc0038I Full problem 168 rows 257 columns, reduced to 12 rows 16 columns
Cbc0031I 17 added rows had average density of 6.2941176
Cbc0013I At root node, 48 cuts changed objective from 16.433333 to 19.25 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 7 (TwoMirCuts) - 13 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective 20, took 0 iterations and 0 nodes (0.26 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 16.4333 to 19.25
Probing was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000327 seconds)
Gomory was tried 1 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.000546 seconds)
Knapsack was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001164 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (4.2e-05 seconds)
OddWheel was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (2.9e-05 seconds)
MixedIntegerRounding2 was tried 1 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.000575 seconds)
FlowCover was tried 1 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000277 seconds)
TwoMirCuts was tried 1 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.000761 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (4e-06 seconds)

Result - Optimal solution found
Objective value:                20
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.270419
Time (Wallclock seconds):       0.271313
Total time (CPU seconds):       0.274098   (Wallclock seconds):       0.302457
