Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/neos-912015.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 621 COLUMNS
At line 15408 RHS
At line 16026 BOUNDS
At line 16713 ENDATA
Problem file has 617 rows, 686 columns and 14742 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -14 - 0.09755 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 609 rows, 686 columns (686 integer (686 of which binary)) and 14726 elements
Coin3009W Conflict graph built in 0.010 seconds, density: 1.536%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 164 integers unsatisfied sum - 41.8339
Cbc0038I Pass   1: suminf.   16.83333 (80) obj. -13.8333 iterations 384
Cbc0038I Pass   2: suminf.   13.14286 (72) obj. -13.6071 iterations 194
Cbc0038I Pass   3: suminf.   11.63030 (89) obj. -13.297 iterations 194
Cbc0038I Pass   4: suminf.   11.46512 (75) obj. -13.5814 iterations 68
Cbc0038I Pass   5: suminf.   11.73276 (89) obj. -13.3362 iterations 166
Cbc0038I Pass   6: suminf.   11.55172 (82) obj. -13.5345 iterations 81
Cbc0038I Pass   7: suminf.   10.60000 (69) obj. -13.6 iterations 65
Cbc0038I Pass   8: suminf.   10.57895 (72) obj. -13.6842 iterations 98
Cbc0038I Pass   9: suminf.   10.57895 (72) obj. -13.6842 iterations 2
Cbc0038I Pass  10: suminf.   10.44554 (82) obj. -13.7657 iterations 61
Cbc0038I Pass  11: suminf.   10.83721 (78) obj. -13.6047 iterations 322
Cbc0038I Pass  12: suminf.    9.66486 (105) obj. -13.5881 iterations 242
Cbc0038I Pass  13: suminf.    9.45098 (95) obj. -13.8529 iterations 54
Cbc0038I Pass  14: suminf.    9.26933 (114) obj. -13.7733 iterations 120
Cbc0038I Pass  15: suminf.    9.23323 (103) obj. -13.9068 iterations 65
Cbc0038I Pass  16: suminf.    9.89792 (106) obj. -13.7513 iterations 244
Cbc0038I Pass  17: suminf.    9.03355 (83) obj. -13.6552 iterations 79
Cbc0038I Pass  18: suminf.    9.84639 (111) obj. -13.6606 iterations 198
Cbc0038I Pass  19: suminf.    9.15848 (126) obj. -13.6092 iterations 79
Cbc0038I Pass  20: suminf.   10.53381 (116) obj. -13.9893 iterations 212
Cbc0038I Pass  21: suminf.    9.15848 (126) obj. -13.6092 iterations 226
Cbc0038I Pass  22: suminf.    9.48862 (114) obj. -13.739 iterations 168
Cbc0038I Pass  23: suminf.    9.03355 (83) obj. -13.6552 iterations 145
Cbc0038I Pass  24: suminf.   10.12802 (131) obj. -13.7712 iterations 175
Cbc0038I Pass  25: suminf.    9.15848 (126) obj. -13.6092 iterations 144
Cbc0038I Pass  26: suminf.    9.96374 (110) obj. -13.8903 iterations 199
Cbc0038I Pass  27: suminf.    8.99775 (109) obj. -13.6607 iterations 159
Cbc0038I Pass  28: suminf.    9.99575 (125) obj. -13.6416 iterations 212
Cbc0038I Pass  29: suminf.    9.31129 (116) obj. -13.5945 iterations 159
Cbc0038I Pass  30: suminf.    9.15848 (126) obj. -13.6092 iterations 90
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 26 continuous
Cbc0038I Full problem 609 rows 686 columns, reduced to 602 rows 340 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.06 seconds)
Cbc0038I After 3.51 seconds - Feasibility pump exiting - took 2.04 seconds
Cbc0031I 19 added rows had average density of 84.210526
Cbc0013I At root node, 19 cuts changed objective from -14 to -14 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 32 row cuts average 22.1 elements, 0 column cuts (0 active)  in 0.450 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 208 row cuts average 592.6 elements, 0 column cuts (0 active)  in 1.035 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 130 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.347 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 71 row cuts average 271.3 elements, 0 column cuts (0 active)  in 0.496 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.361 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -14 (14.68 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible -14 (16.00 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible -14 (16.90 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible -14 (17.64 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible -14 (18.94 seconds)
Cbc0010I After 13 nodes, 13 on tree, 1e+50 best solution, best possible -14 (19.75 seconds)
Cbc0010I After 21 nodes, 18 on tree, 1e+50 best solution, best possible -14 (20.57 seconds)
Cbc0010I After 30 nodes, 23 on tree, 1e+50 best solution, best possible -14 (21.28 seconds)
Cbc0010I After 45 nodes, 25 on tree, 1e+50 best solution, best possible -14 (22.03 seconds)
Cbc0004I Integer solution of -11 found after 12269 iterations and 48 nodes (22.14 seconds)
Cbc0010I After 58 nodes, 27 on tree, -11 best solution, best possible -14 (22.74 seconds)
Cbc0010I After 69 nodes, 33 on tree, -11 best solution, best possible -14 (23.49 seconds)
Cbc0010I After 87 nodes, 32 on tree, -11 best solution, best possible -14 (24.20 seconds)
Cbc0010I After 99 nodes, 33 on tree, -11 best solution, best possible -14 (24.92 seconds)
Cbc0010I After 122 nodes, 46 on tree, -11 best solution, best possible -14 (25.68 seconds)
Cbc0010I After 138 nodes, 49 on tree, -11 best solution, best possible -14 (26.42 seconds)
Cbc0004I Integer solution of -13 found after 26853 iterations and 156 nodes (26.97 seconds)
Cbc0010I After 163 nodes, 18 on tree, -13 best solution, best possible -14 (27.13 seconds)
Cbc0010I After 187 nodes, 22 on tree, -13 best solution, best possible -14 (27.85 seconds)
Cbc0010I After 214 nodes, 21 on tree, -13 best solution, best possible -14 (28.55 seconds)
Cbc0010I After 237 nodes, 20 on tree, -13 best solution, best possible -14 (29.28 seconds)
Cbc0010I After 244 nodes, 22 on tree, -13 best solution, best possible -14 (29.99 seconds)
Cbc0010I After 259 nodes, 22 on tree, -13 best solution, best possible -14 (30.79 seconds)
Cbc0010I After 279 nodes, 20 on tree, -13 best solution, best possible -14 (31.61 seconds)
Cbc0010I After 290 nodes, 25 on tree, -13 best solution, best possible -14 (32.31 seconds)
Cbc0010I After 308 nodes, 23 on tree, -13 best solution, best possible -14 (33.01 seconds)
Cbc0010I After 321 nodes, 22 on tree, -13 best solution, best possible -14 (33.88 seconds)
Cbc0010I After 340 nodes, 24 on tree, -13 best solution, best possible -14 (34.61 seconds)
Cbc0010I After 353 nodes, 20 on tree, -13 best solution, best possible -14 (35.47 seconds)
Cbc0010I After 365 nodes, 21 on tree, -13 best solution, best possible -14 (36.23 seconds)
Cbc0010I After 377 nodes, 21 on tree, -13 best solution, best possible -14 (37.14 seconds)
Cbc0010I After 391 nodes, 24 on tree, -13 best solution, best possible -14 (37.94 seconds)
Cbc0010I After 409 nodes, 18 on tree, -13 best solution, best possible -14 (38.64 seconds)
Cbc0010I After 427 nodes, 21 on tree, -13 best solution, best possible -14 (39.37 seconds)
Cbc0010I After 435 nodes, 18 on tree, -13 best solution, best possible -14 (40.07 seconds)
Cbc0010I After 448 nodes, 18 on tree, -13 best solution, best possible -14 (40.81 seconds)
Cbc0010I After 457 nodes, 15 on tree, -13 best solution, best possible -14 (41.53 seconds)
Cbc0010I After 466 nodes, 20 on tree, -13 best solution, best possible -14 (42.26 seconds)
Cbc0010I After 479 nodes, 17 on tree, -13 best solution, best possible -14 (42.96 seconds)
Cbc0010I After 492 nodes, 19 on tree, -13 best solution, best possible -14 (43.69 seconds)
Cbc0010I After 505 nodes, 16 on tree, -13 best solution, best possible -14 (44.40 seconds)
Cbc0010I After 521 nodes, 17 on tree, -13 best solution, best possible -14 (45.11 seconds)
Cbc0010I After 532 nodes, 17 on tree, -13 best solution, best possible -14 (45.83 seconds)
Cbc0010I After 542 nodes, 16 on tree, -13 best solution, best possible -14 (46.55 seconds)
Cbc0010I After 551 nodes, 21 on tree, -13 best solution, best possible -14 (47.29 seconds)
Cbc0010I After 559 nodes, 22 on tree, -13 best solution, best possible -14 (48.00 seconds)
Cbc0010I After 574 nodes, 22 on tree, -13 best solution, best possible -14 (48.81 seconds)
Cbc0010I After 590 nodes, 26 on tree, -13 best solution, best possible -14 (49.53 seconds)
Cbc0010I After 605 nodes, 22 on tree, -13 best solution, best possible -14 (50.26 seconds)
Cbc0010I After 616 nodes, 20 on tree, -13 best solution, best possible -14 (51.06 seconds)
Cbc0010I After 630 nodes, 17 on tree, -13 best solution, best possible -14 (51.79 seconds)
Cbc0010I After 645 nodes, 22 on tree, -13 best solution, best possible -14 (52.62 seconds)
Cbc0010I After 660 nodes, 23 on tree, -13 best solution, best possible -14 (53.36 seconds)
Cbc0010I After 674 nodes, 25 on tree, -13 best solution, best possible -14 (54.17 seconds)
Cbc0010I After 687 nodes, 20 on tree, -13 best solution, best possible -14 (54.93 seconds)
Cbc0010I After 694 nodes, 19 on tree, -13 best solution, best possible -14 (55.65 seconds)
Cbc0010I After 714 nodes, 19 on tree, -13 best solution, best possible -14 (56.36 seconds)
Cbc0010I After 722 nodes, 17 on tree, -13 best solution, best possible -14 (57.06 seconds)
Cbc0010I After 726 nodes, 17 on tree, -13 best solution, best possible -14 (57.80 seconds)
Cbc0010I After 751 nodes, 18 on tree, -13 best solution, best possible -14 (58.59 seconds)
Cbc0010I After 768 nodes, 18 on tree, -13 best solution, best possible -14 (59.37 seconds)
Cbc0010I After 781 nodes, 21 on tree, -13 best solution, best possible -14 (60.10 seconds)
Cbc0010I After 802 nodes, 18 on tree, -13 best solution, best possible -14 (60.83 seconds)
Cbc0010I After 815 nodes, 20 on tree, -13 best solution, best possible -14 (61.56 seconds)
Cbc0010I After 823 nodes, 19 on tree, -13 best solution, best possible -14 (62.27 seconds)
Cbc0010I After 844 nodes, 18 on tree, -13 best solution, best possible -14 (62.98 seconds)
Cbc0010I After 858 nodes, 23 on tree, -13 best solution, best possible -14 (63.80 seconds)
Cbc0004I Integer solution of -14 found after 109428 iterations and 869 nodes (64.29 seconds)
Cbc0001I Search completed - best objective -14, took 109428 iterations and 869 nodes (64.29 seconds)
Cbc0032I Strong branching done 3508 times (109545 iterations), fathomed 13 nodes and fixed 19 variables
Cbc0035I Maximum depth 38, 235 variables fixed on reduced cost
Cuts at root node changed objective from -14 to -14
Probing was tried 160 times and created 894 cuts of which 0 were active after adding rounds of cuts (1.20491 seconds)
Gomory was tried 150 times and created 228 cuts of which 0 were active after adding rounds of cuts (1.75725 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.097107 seconds)
Clique was tried 150 times and created 1042 cuts of which 0 were active after adding rounds of cuts (0.312666 seconds)
OddWheel was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.347031 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.075991 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003857 seconds)
TwoMirCuts was tried 10 times and created 71 cuts of which 0 were active after adding rounds of cuts (0.495564 seconds)
ZeroHalf was tried 10 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.360921 seconds)

Result - Optimal solution found
Objective value:                -14
Enumerated nodes:               869
Total iterations:               109428
Time (CPU seconds):             63.9125
Time (Wallclock seconds):       64.3437
Total time (CPU seconds):       63.9249   (Wallclock seconds):       64.3893
