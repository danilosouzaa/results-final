Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/splice1k1.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 1 NAME splice1k1
At line 3 ROWS
At line 6510 COLUMNS
At line 1767530 RHS
At line 1774035 BOUNDS
At line 1777290 ENDATA
Problem splice1k1 has 6505 rows, 3253 columns and 1761016 elements
Coin0008I splice1k1 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -1646.78 - 109.712 seconds
Cgl0004I processed model has 6504 rows, 3252 columns (3252 integer (3252 of which binary)) and 1758012 elements
Coin3009W Conflict graph built in 0.847 seconds, density: 2.685%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 1908 integers unsatisfied sum - 9.20731
Cbc0038I Pass   1: (634.85 seconds) suminf.    8.98713 (1905) obj. -1646.02 iterations 66
Cbc0038I Pass   2: (660.05 seconds) suminf.    8.51282 (1892) obj. -1644.8 iterations 398
Cbc0038I Pass   3: (671.96 seconds) suminf.    8.50742 (1892) obj. -1644.8 iterations 108
Cbc0038I Pass   4: (679.63 seconds) suminf.    8.50742 (1892) obj. -1644.8 iterations 2
Cbc0038I Pass   5: (1502.47 seconds) suminf.    9.46528 (1719) obj. -1402.19 iterations 19621
Cbc0038I Pass   6: (1531.50 seconds) suminf.    8.40868 (1793) obj. -1402.88 iterations 705
Cbc0038I Pass   7: (1550.85 seconds) suminf.    8.70827 (1683) obj. -1402.74 iterations 496
Cbc0038I Pass   8: (1591.84 seconds) suminf.    8.93066 (1694) obj. -1212.38 iterations 1405
Cbc0038I Pass   9: (1618.22 seconds) suminf.    8.18923 (1621) obj. -1212.64 iterations 620
Cbc0038I Pass  10: (1660.88 seconds) suminf.    8.16694 (1603) obj. -1212.64 iterations 1177
Cbc0038I Pass  11: (1680.49 seconds) suminf.    8.10506 (1604) obj. -1212.64 iterations 482
Cbc0038I Pass  12: (1719.62 seconds) suminf.    8.15265 (1599) obj. -1208.65 iterations 1064
Cbc0038I Pass  13: (1741.34 seconds) suminf.    8.08332 (1600) obj. -1208.65 iterations 568
Cbc0038I Pass  14: (1777.08 seconds) suminf.    8.07976 (1580) obj. -1189.74 iterations 1243
Cbc0038I Pass  15: (1800.60 seconds) suminf.    7.98006 (1581) obj. -1189.74 iterations 684
Cbc0038I Pass  16: (1830.11 seconds) suminf.    8.00269 (1560) obj. -1193.72 iterations 987
Cbc0038I Pass  17: (1854.78 seconds) suminf.    7.88400 (1562) obj. -1193.72 iterations 729
Cbc0038I Pass  18: (1886.30 seconds) suminf.    7.95989 (1549) obj. -1182.77 iterations 1070
Cbc0038I Pass  19: (1908.76 seconds) suminf.    7.82421 (1551) obj. -1182.77 iterations 651
Cbc0038I Pass  20: (1939.45 seconds) suminf.    7.92675 (1540) obj. -1173.81 iterations 1027
Cbc0038I Pass  21: (1962.04 seconds) suminf.    7.77529 (1542) obj. -1173.81 iterations 643
Cbc0038I Pass  22: (1994.58 seconds) suminf.    7.90401 (1534) obj. -1167.83 iterations 1065
Cbc0038I Pass  23: (2016.43 seconds) suminf.    7.74268 (1536) obj. -1167.83 iterations 625
Cbc0038I Pass  24: (2049.11 seconds) suminf.    7.87353 (1526) obj. -1159.87 iterations 1070
Cbc0038I Pass  25: (2073.27 seconds) suminf.    7.69920 (1528) obj. -1159.87 iterations 715
Cbc0038I Pass  26: (2108.47 seconds) suminf.    7.86912 (1525) obj. -1158.87 iterations 1146
Cbc0038I Pass  27: (2133.56 seconds) suminf.    7.69377 (1527) obj. -1158.87 iterations 770
Cbc0038I Pass  28: (2166.90 seconds) suminf.    7.84280 (1518) obj. -1151.9 iterations 1095
Cbc0038I Pass  29: (2186.74 seconds) suminf.    7.65572 (1520) obj. -1151.9 iterations 595
Cbc0038I Pass  30: (2218.24 seconds) suminf.    7.79807 (1505) obj. -1139.96 iterations 1032
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 813 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6504 rows 3252 columns, reduced to 5691 rows 2439 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2250.10 seconds)
Cbc0038I Full problem 6505 rows 3252 columns, reduced to 6505 rows 3252 columns - too large
Cbc0038I After 2287.49 seconds - Feasibility pump exiting - took 1656.25 seconds
Cbc0031I 548 added rows had average density of 2
Cbc0013I At root node, 548 cuts changed objective from -1646.1147 to -1646.095 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 2258 row cuts average 2.0 elements, 0 column cuts (0 active)  in 61.348 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 16.946 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.237 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 24.349 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 38.108 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1646.095 (6654.68 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible -1646.095 (6726.93 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible -1646.095 (6804.00 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible -1646.095 (6893.83 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible -1646.095 (6974.63 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible -1646.095 (7076.58 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible -1646.095 (7217.43 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible -1646.095 (7240.50 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible -1646.095 (7267.24 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible -1646.095 (7294.11 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible -1646.095 (7826.81 seconds)
Cbc0010I After 11 nodes, 11 on tree, 1e+50 best solution, best possible -1646.095 (7850.37 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible -1646.095 (7880.03 seconds)
Cbc0010I After 13 nodes, 12 on tree, 1e+50 best solution, best possible -1646.095 (7912.57 seconds)
Cbc0010I After 14 nodes, 13 on tree, 1e+50 best solution, best possible -1646.095 (7925.04 seconds)
Cbc0010I After 15 nodes, 14 on tree, 1e+50 best solution, best possible -1646.095 (7942.58 seconds)
Cbc0010I After 16 nodes, 15 on tree, 1e+50 best solution, best possible -1646.095 (7957.12 seconds)
Cbc0010I After 17 nodes, 16 on tree, 1e+50 best solution, best possible -1646.095 (7971.78 seconds)
Cbc0010I After 18 nodes, 16 on tree, 1e+50 best solution, best possible -1646.095 (7980.45 seconds)
Cbc0010I After 19 nodes, 17 on tree, 1e+50 best solution, best possible -1646.095 (7985.84 seconds)
Cbc0010I After 20 nodes, 17 on tree, 1e+50 best solution, best possible -1646.095 (7989.56 seconds)
Cbc0010I After 21 nodes, 18 on tree, 1e+50 best solution, best possible -1646.095 (7990.53 seconds)
Cbc0010I After 22 nodes, 19 on tree, 1e+50 best solution, best possible -1646.095 (7991.41 seconds)
Cbc0010I After 23 nodes, 19 on tree, 1e+50 best solution, best possible -1646.095 (7992.41 seconds)
Cbc0004I Integer solution of -8 found after 19085 iterations and 24 nodes (7992.72 seconds)
Cbc0010I After 25 nodes, 19 on tree, -8 best solution, best possible -1646.095 (8364.41 seconds)
Cbc0010I After 26 nodes, 20 on tree, -8 best solution, best possible -1646.095 (8449.80 seconds)
Cbc0010I After 27 nodes, 20 on tree, -8 best solution, best possible -1646.095 (8723.22 seconds)
Cbc0010I After 28 nodes, 21 on tree, -8 best solution, best possible -1646.095 (8806.52 seconds)
Cbc0010I After 29 nodes, 22 on tree, -8 best solution, best possible -1646.095 (8878.01 seconds)
Cbc0010I After 30 nodes, 22 on tree, -8 best solution, best possible -1646.095 (9069.16 seconds)
Cbc0010I After 31 nodes, 22 on tree, -8 best solution, best possible -1646.095 (9400.01 seconds)
Cbc0010I After 32 nodes, 23 on tree, -8 best solution, best possible -1646.095 (9471.08 seconds)
Cbc0010I After 33 nodes, 24 on tree, -8 best solution, best possible -1646.095 (9545.17 seconds)
Cbc0010I After 34 nodes, 24 on tree, -8 best solution, best possible -1646.095 (9725.27 seconds)
Cbc0010I After 35 nodes, 25 on tree, -8 best solution, best possible -1646.095 (9790.85 seconds)
Cbc0010I After 36 nodes, 26 on tree, -8 best solution, best possible -1646.095 (9861.03 seconds)
Cbc0010I After 39 nodes, 25 on tree, -8 best solution, best possible -1646.095 (9921.21 seconds)
Cbc0010I After 40 nodes, 26 on tree, -8 best solution, best possible -1646.095 (10005.79 seconds)
Cbc0010I After 41 nodes, 27 on tree, -8 best solution, best possible -1646.095 (10074.77 seconds)
Cbc0010I After 42 nodes, 27 on tree, -8 best solution, best possible -1646.095 (10280.97 seconds)
Cbc0010I After 43 nodes, 28 on tree, -8 best solution, best possible -1646.095 (10369.05 seconds)
Cbc0010I After 44 nodes, 29 on tree, -8 best solution, best possible -1646.095 (10465.57 seconds)
Cbc0010I After 45 nodes, 30 on tree, -8 best solution, best possible -1646.095 (10568.16 seconds)
Cbc0010I After 46 nodes, 31 on tree, -8 best solution, best possible -1646.095 (10710.47 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective -8 (best possible -1646.095), took 64066 iterations and 47 nodes (10807.30 seconds)
Cbc0032I Strong branching done 990 times (62226 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 24, 0 variables fixed on reduced cost
Cuts at root node changed objective from -1646.11 to -1646.1
Probing was tried 17 times and created 2258 cuts of which 0 were active after adding rounds of cuts (70.6643 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (16.9457 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047042 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.23725 seconds)
OddWheel was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (24.3489 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (38.1081 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.081068 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (7.32432 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (3949.9 seconds)

Result - Stopped on time limit
Objective value:                -8
Lower bound:                    -1646.1
Gap:                            0.99514
Enumerated nodes:               47
Total iterations:               64066
Time (CPU seconds):             10938.3
Time (Wallclock seconds):       10964.7
Total time (CPU seconds):       10940.2   (Wallclock seconds):       10966.7
