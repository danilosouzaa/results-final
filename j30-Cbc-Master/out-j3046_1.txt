Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3046/j3046_1.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.68678 - 0.226319 seconds
Cgl0002I 7 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 312 rows, 752 columns (752 integer (751 of which binary)) and 11168 elements
Coin3009W Conflict graph built in 0.027 seconds, density: 1.061%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 752 objects (752 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 117 integers unsatisfied sum - 30.8588
Cbc0038I Pass   1: suminf.   14.62488 (67) obj. 4 iterations 207
Cbc0038I Pass   2: suminf.   11.70948 (51) obj. 4 iterations 113
Cbc0038I Pass   3: suminf.   11.73374 (52) obj. 4 iterations 11
Cbc0038I Pass   4: suminf.    8.88538 (47) obj. 4 iterations 129
Cbc0038I Pass   5: suminf.    7.36108 (41) obj. 4 iterations 75
Cbc0038I Pass   6: suminf.    7.37878 (36) obj. 4 iterations 78
Cbc0038I Pass   7: suminf.    6.48915 (38) obj. 4 iterations 75
Cbc0038I Pass   8: suminf.    6.29519 (37) obj. 4 iterations 26
Cbc0038I Pass   9: suminf.    9.54183 (39) obj. 4 iterations 92
Cbc0038I Pass  10: suminf.    8.32587 (37) obj. 4 iterations 77
Cbc0038I Pass  11: suminf.    7.21529 (38) obj. 4 iterations 63
Cbc0038I Pass  12: suminf.    7.07520 (38) obj. 4 iterations 28
Cbc0038I Pass  13: suminf.    7.08486 (49) obj. 4 iterations 108
Cbc0038I Pass  14: suminf.    6.52508 (31) obj. 4 iterations 76
Cbc0038I Pass  15: suminf.    5.67688 (29) obj. 4 iterations 37
Cbc0038I Pass  16: suminf.    6.78396 (26) obj. 4 iterations 97
Cbc0038I Pass  17: suminf.    6.09285 (26) obj. 4 iterations 52
Cbc0038I Pass  18: suminf.    8.16411 (32) obj. 4 iterations 66
Cbc0038I Pass  19: suminf.    6.37032 (29) obj. 4 iterations 81
Cbc0038I Pass  20: suminf.    8.58842 (30) obj. 4 iterations 75
Cbc0038I Pass  21: suminf.    6.52098 (32) obj. 4 iterations 57
Cbc0038I Pass  22: suminf.    6.51680 (32) obj. 4 iterations 5
Cbc0038I Pass  23: suminf.    8.91970 (31) obj. 4 iterations 121
Cbc0038I Pass  24: suminf.    7.28779 (29) obj. 4 iterations 65
Cbc0038I Pass  25: suminf.    6.35238 (31) obj. 4 iterations 42
Cbc0038I Pass  26: suminf.    5.83492 (25) obj. 4 iterations 13
Cbc0038I Pass  27: suminf.    5.78503 (26) obj. 4 iterations 16
Cbc0038I Pass  28: suminf.    5.37556 (29) obj. 4 iterations 37
Cbc0038I Pass  29: suminf.    5.37493 (26) obj. 4 iterations 66
Cbc0038I Pass  30: suminf.    5.07272 (28) obj. 4 iterations 34
Cbc0038I Pass  31: suminf.    4.89325 (28) obj. 4 iterations 28
Cbc0038I Pass  32: suminf.    9.38573 (31) obj. 4 iterations 109
Cbc0038I Pass  33: suminf.    6.39048 (27) obj. 4 iterations 89
Cbc0038I Pass  34: suminf.    5.91469 (27) obj. 4 iterations 33
Cbc0038I Pass  35: suminf.    7.38004 (29) obj. 4 iterations 92
Cbc0038I Pass  36: suminf.    6.45219 (26) obj. 4 iterations 59
Cbc0038I Pass  37: suminf.    6.45219 (28) obj. 4 iterations 15
Cbc0038I Pass  38: suminf.    4.61699 (23) obj. 4 iterations 74
Cbc0038I Pass  39: suminf.    4.61699 (23) obj. 4 iterations 25
Cbc0038I Pass  40: suminf.    7.59241 (31) obj. 4 iterations 122
Cbc0038I Pass  41: suminf.    3.37767 (20) obj. 4 iterations 165
Cbc0038I Pass  42: suminf.    3.37755 (20) obj. 4 iterations 6
Cbc0038I Pass  43: suminf.    4.04126 (18) obj. 4 iterations 89
Cbc0038I Pass  44: suminf.    2.37755 (15) obj. 4 iterations 127
Cbc0038I Pass  45: suminf.    4.69951 (18) obj. 4 iterations 96
Cbc0038I Pass  46: suminf.    3.01488 (14) obj. 4 iterations 119
Cbc0038I Pass  47: suminf.    2.61905 (15) obj. 4 iterations 20
Cbc0038I Pass  48: suminf.    2.50000 (15) obj. 4 iterations 34
Cbc0038I Pass  49: suminf.    4.92460 (17) obj. 4 iterations 97
Cbc0038I Pass  50: suminf.    3.41667 (16) obj. 4 iterations 87
Cbc0038I Pass  51: suminf.    3.20145 (17) obj. 4 iterations 36
Cbc0038I Pass  52: suminf.    4.73413 (18) obj. 4 iterations 78
Cbc0038I Pass  53: suminf.    2.70238 (16) obj. 4 iterations 111
Cbc0038I Pass  54: suminf.    2.49674 (16) obj. 4 iterations 36
Cbc0038I Pass  55: suminf.    4.59575 (19) obj. 4 iterations 101
Cbc0038I Pass  56: suminf.    3.53788 (18) obj. 4 iterations 75
Cbc0038I Pass  57: suminf.    3.04067 (18) obj. 4 iterations 69
Cbc0038I Pass  58: suminf.    5.70964 (20) obj. 4 iterations 94
Cbc0038I Pass  59: suminf.    4.03265 (21) obj. 4 iterations 115
Cbc0038I Pass  60: suminf.    7.02242 (31) obj. 4 iterations 113
Cbc0038I Pass  61: suminf.    4.49690 (21) obj. 4 iterations 121
Cbc0038I Pass  62: suminf.    3.85219 (18) obj. 4 iterations 106
Cbc0038I Pass  63: suminf.    3.58209 (17) obj. 4 iterations 36
Cbc0038I Pass  64: suminf.    4.91513 (23) obj. 4 iterations 73
Cbc0038I Pass  65: suminf.    3.92804 (23) obj. 4 iterations 77
Cbc0038I Pass  66: suminf.    3.27372 (19) obj. 4 iterations 45
Cbc0038I Pass  67: suminf.    5.46632 (21) obj. 4 iterations 133
Cbc0038I Pass  68: suminf.    4.29882 (18) obj. 4 iterations 67
Cbc0038I Pass  69: suminf.    4.54371 (21) obj. 4 iterations 112
Cbc0038I Pass  70: suminf.    3.25893 (16) obj. 4 iterations 77
Cbc0038I Pass  71: suminf.    5.55385 (20) obj. 4 iterations 77
Cbc0038I Pass  72: suminf.    3.76531 (19) obj. 4 iterations 136
Cbc0038I Pass  73: suminf.    5.77181 (23) obj. 4 iterations 137
Cbc0038I Pass  74: suminf.    5.03978 (20) obj. 4 iterations 81
Cbc0038I Pass  75: suminf.    2.90267 (16) obj. 4 iterations 51
Cbc0038I Pass  76: suminf.    2.82179 (19) obj. 4 iterations 29
Cbc0038I Pass  77: suminf.    6.26132 (26) obj. 4 iterations 117
Cbc0038I Pass  78: suminf.    4.55730 (24) obj. 4 iterations 76
Cbc0038I Pass  79: suminf.    6.03580 (27) obj. 4 iterations 125
Cbc0038I Pass  80: suminf.    4.79658 (28) obj. 4 iterations 78
Cbc0038I Pass  81: suminf.    6.36691 (25) obj. 4 iterations 150
Cbc0038I Pass  82: suminf.    4.16683 (23) obj. 4 iterations 124
Cbc0038I Pass  83: suminf.    5.70263 (20) obj. 4 iterations 74
Cbc0038I Pass  84: suminf.    4.07772 (25) obj. 4 iterations 77
Cbc0038I Pass  85: suminf.    3.57213 (27) obj. 4 iterations 29
Cbc0038I Pass  86: suminf.    5.03385 (20) obj. 4 iterations 83
Cbc0038I Pass  87: suminf.    3.45277 (25) obj. 4 iterations 75
Cbc0038I Pass  88: suminf.    5.84933 (26) obj. 4 iterations 85
Cbc0038I Pass  89: suminf.    3.86078 (18) obj. 4 iterations 96
Cbc0038I Pass  90: suminf.    3.79412 (16) obj. 4 iterations 15
Cbc0038I Pass  91: suminf.    4.47299 (25) obj. 4 iterations 83
Cbc0038I Pass  92: suminf.    3.57213 (27) obj. 4 iterations 72
Cbc0038I Pass  93: suminf.    5.22562 (24) obj. 4 iterations 108
Cbc0038I Pass  94: suminf.    3.45277 (25) obj. 4 iterations 98
Cbc0038I Pass  95: suminf.    4.74938 (18) obj. 4 iterations 122
Cbc0038I Pass  96: suminf.    3.67606 (21) obj. 4 iterations 43
Cbc0038I Pass  97: suminf.   14.00073 (58) obj. 4 iterations 159
Cbc0038I Pass  98: suminf.    6.31566 (28) obj. 4 iterations 144
Cbc0038I Pass  99: suminf.    5.30335 (30) obj. 4 iterations 49
Cbc0038I Pass 100: suminf.   11.09912 (52) obj. 4 iterations 149
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 464 integers at bound fixed and 0 continuous
Cbc0038I Full problem 312 rows 752 columns, reduced to 210 rows 252 columns
Cbc0038I Mini branch and bound did not improve solution (4.21 seconds)
Cbc0038I After 4.21 seconds - Feasibility pump exiting - took 3.19 seconds
Cbc0031I 54 added rows had average density of 80.981481
Cbc0013I At root node, 54 cuts changed objective from 1.686784 to 2.9997454 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 252 row cuts average 7.4 elements, 0 column cuts (17 active)  in 0.628 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 362 row cuts average 739.6 elements, 0 column cuts (0 active)  in 1.747 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 274 row cuts average 44.5 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 91 row cuts average 46.9 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 196 row cuts average 60.9 elements, 0 column cuts (0 active)  in 0.266 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2.9997454 (9.93 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2.9997454 (11.01 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 2.9997454 (11.78 seconds)
Cbc0010I After 9 nodes, 8 on tree, 1e+50 best solution, best possible 2.9997454 (12.50 seconds)
Cbc0010I After 14 nodes, 9 on tree, 1e+50 best solution, best possible 2.9997454 (13.21 seconds)
Cbc0010I After 19 nodes, 10 on tree, 1e+50 best solution, best possible 2.9997454 (14.08 seconds)
Cbc0010I After 26 nodes, 5 on tree, 1e+50 best solution, best possible 2.9997454 (14.86 seconds)
Cbc0010I After 30 nodes, 3 on tree, 1e+50 best solution, best possible 2.9997454 (15.59 seconds)
Cbc0010I After 34 nodes, 3 on tree, 1e+50 best solution, best possible 2.9997454 (16.49 seconds)
Cbc0010I After 36 nodes, 5 on tree, 1e+50 best solution, best possible 2.9997454 (17.22 seconds)
Cbc0010I After 42 nodes, 9 on tree, 1e+50 best solution, best possible 2.9997454 (17.96 seconds)
Cbc0010I After 55 nodes, 9 on tree, 1e+50 best solution, best possible 2.9997454 (18.76 seconds)
Cbc0010I After 68 nodes, 9 on tree, 1e+50 best solution, best possible 2.9997454 (19.47 seconds)
Cbc0010I After 74 nodes, 10 on tree, 1e+50 best solution, best possible 2.9997454 (20.19 seconds)
Cbc0010I After 84 nodes, 10 on tree, 1e+50 best solution, best possible 2.9997454 (20.89 seconds)
Cbc0010I After 99 nodes, 14 on tree, 1e+50 best solution, best possible 2.9997454 (21.64 seconds)
Cbc0010I After 118 nodes, 14 on tree, 1e+50 best solution, best possible 2.9997454 (22.34 seconds)
Cbc0010I After 140 nodes, 13 on tree, 1e+50 best solution, best possible 2.9997454 (23.05 seconds)
Cbc0010I After 166 nodes, 17 on tree, 1e+50 best solution, best possible 2.9997454 (23.77 seconds)
Cbc0010I After 186 nodes, 12 on tree, 1e+50 best solution, best possible 2.9997454 (24.52 seconds)
Cbc0010I After 200 nodes, 15 on tree, 1e+50 best solution, best possible 2.9997454 (25.23 seconds)
Cbc0010I After 219 nodes, 11 on tree, 1e+50 best solution, best possible 2.9997454 (26.07 seconds)
Cbc0010I After 240 nodes, 13 on tree, 1e+50 best solution, best possible 2.9997454 (26.83 seconds)
Cbc0010I After 255 nodes, 12 on tree, 1e+50 best solution, best possible 2.9997454 (27.55 seconds)
Cbc0010I After 275 nodes, 9 on tree, 1e+50 best solution, best possible 2.9997454 (28.32 seconds)
Cbc0010I After 286 nodes, 11 on tree, 1e+50 best solution, best possible 2.9997454 (29.18 seconds)
Cbc0010I After 307 nodes, 12 on tree, 1e+50 best solution, best possible 2.9997454 (29.96 seconds)
Cbc0010I After 327 nodes, 10 on tree, 1e+50 best solution, best possible 2.9997454 (30.70 seconds)
Cbc0010I After 341 nodes, 17 on tree, 1e+50 best solution, best possible 2.9997454 (31.40 seconds)
Cbc0010I After 365 nodes, 15 on tree, 1e+50 best solution, best possible 2.9997454 (32.10 seconds)
Cbc0010I After 383 nodes, 16 on tree, 1e+50 best solution, best possible 2.9997454 (32.84 seconds)
Cbc0010I After 409 nodes, 12 on tree, 1e+50 best solution, best possible 2.9997454 (33.56 seconds)
Cbc0010I After 426 nodes, 15 on tree, 1e+50 best solution, best possible 2.9997454 (34.29 seconds)
Cbc0010I After 443 nodes, 14 on tree, 1e+50 best solution, best possible 2.9997454 (35.01 seconds)
Cbc0010I After 463 nodes, 13 on tree, 1e+50 best solution, best possible 2.9997454 (35.76 seconds)
Cbc0010I After 476 nodes, 12 on tree, 1e+50 best solution, best possible 2.9997454 (36.53 seconds)
Cbc0010I After 491 nodes, 15 on tree, 1e+50 best solution, best possible 2.9997454 (37.24 seconds)
Cbc0010I After 503 nodes, 14 on tree, 1e+50 best solution, best possible 2.9997454 (38.02 seconds)
Cbc0010I After 519 nodes, 11 on tree, 1e+50 best solution, best possible 2.9997454 (38.87 seconds)
Cbc0010I After 530 nodes, 10 on tree, 1e+50 best solution, best possible 2.9997454 (39.59 seconds)
Cbc0004I Integer solution of 4 found after 83392 iterations and 554 nodes (40.21 seconds)
Cbc0001I Search completed - best objective 4, took 83392 iterations and 555 nodes (40.22 seconds)
Cbc0032I Strong branching done 2544 times (83516 iterations), fathomed 11 nodes and fixed 28 variables
Cbc0035I Maximum depth 27, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.68678 to 2.99975
Probing was tried 417 times and created 2577 cuts of which 17 were active after adding rounds of cuts (1.71738 seconds)
Gomory was tried 24 times and created 362 cuts of which 0 were active after adding rounds of cuts (1.74748 seconds)
Knapsack was tried 403 times and created 379 cuts of which 0 were active after adding rounds of cuts (2.10085 seconds)
Clique was tried 24 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.036549 seconds)
OddWheel was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.153947 seconds)
MixedIntegerRounding2 was tried 403 times and created 1712 cuts of which 0 were active after adding rounds of cuts (1.05532 seconds)
FlowCover was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005696 seconds)
TwoMirCuts was tried 403 times and created 1091 cuts of which 0 were active after adding rounds of cuts (0.559067 seconds)
ZeroHalf was tried 403 times and created 2794 cuts of which 0 were active after adding rounds of cuts (1.90207 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               555
Total iterations:               83392
Time (CPU seconds):             40.2712
Time (Wallclock seconds):       40.2684
Total time (CPU seconds):       40.3173   (Wallclock seconds):       40.286
