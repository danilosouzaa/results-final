Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3043/j3043_3.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 4.16708 - 0.12852 seconds
Cgl0002I 3 variables fixed
Cgl0003I 3 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 305 rows, 750 columns (750 integer (749 of which binary)) and 7970 elements
Coin3009W Conflict graph built in 0.015 seconds, density: 0.864%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 750 objects (750 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 74 integers unsatisfied sum - 19.4147
Cbc0038I Pass   1: suminf.    9.88654 (44) obj. 6 iterations 70
Cbc0038I Pass   2: suminf.    9.49108 (45) obj. 6 iterations 4
Cbc0038I Pass   3: suminf.    9.15774 (45) obj. 6 iterations 3
Cbc0038I Pass   4: suminf.    9.94039 (40) obj. 6 iterations 32
Cbc0038I Pass   5: suminf.    7.25216 (36) obj. 6 iterations 21
Cbc0038I Pass   6: suminf.    7.23878 (33) obj. 6 iterations 4
Cbc0038I Pass   7: suminf.    7.64619 (33) obj. 6 iterations 13
Cbc0038I Pass   8: suminf.    7.58755 (33) obj. 6 iterations 11
Cbc0038I Pass   9: suminf.    8.73896 (33) obj. 6 iterations 9
Cbc0038I Pass  10: suminf.    6.74452 (31) obj. 6 iterations 12
Cbc0038I Pass  11: suminf.    6.42706 (31) obj. 6 iterations 5
Cbc0038I Pass  12: suminf.    6.42706 (31) obj. 6 iterations 0
Cbc0038I Pass  13: suminf.    7.23896 (31) obj. 6 iterations 9
Cbc0038I Pass  14: suminf.   15.46029 (60) obj. 6 iterations 104
Cbc0038I Pass  15: suminf.   10.41549 (39) obj. 6 iterations 61
Cbc0038I Pass  16: suminf.    8.54698 (39) obj. 6 iterations 10
Cbc0038I Pass  17: suminf.    7.06515 (31) obj. 6 iterations 15
Cbc0038I Pass  18: suminf.    6.87468 (31) obj. 6 iterations 3
Cbc0038I Pass  19: suminf.    8.29319 (30) obj. 6 iterations 22
Cbc0038I Pass  20: suminf.    7.99690 (31) obj. 6 iterations 18
Cbc0038I Pass  21: suminf.    8.29319 (30) obj. 6 iterations 15
Cbc0038I Pass  22: suminf.   12.36077 (48) obj. 6 iterations 71
Cbc0038I Pass  23: suminf.    8.74312 (40) obj. 6 iterations 49
Cbc0038I Pass  24: suminf.    7.90855 (37) obj. 6 iterations 9
Cbc0038I Pass  25: suminf.    7.84450 (31) obj. 6 iterations 18
Cbc0038I Pass  26: suminf.    6.38857 (25) obj. 6 iterations 12
Cbc0038I Pass  27: suminf.    6.38857 (25) obj. 6 iterations 2
Cbc0038I Pass  28: suminf.    9.14345 (27) obj. 6 iterations 30
Cbc0038I Pass  29: suminf.    7.79397 (25) obj. 6 iterations 18
Cbc0038I Pass  30: suminf.    8.05317 (24) obj. 6 iterations 21
Cbc0038I Pass  31: suminf.    7.29397 (25) obj. 6 iterations 24
Cbc0038I Pass  32: suminf.    7.81508 (24) obj. 6 iterations 18
Cbc0038I Pass  33: suminf.   11.83141 (39) obj. 6 iterations 102
Cbc0038I Pass  34: suminf.    7.93889 (26) obj. 6 iterations 84
Cbc0038I Pass  35: suminf.    6.32762 (22) obj. 6 iterations 19
Cbc0038I Pass  36: suminf.    6.98000 (23) obj. 6 iterations 38
Cbc0038I Pass  37: suminf.    6.41022 (24) obj. 6 iterations 25
Cbc0038I Pass  38: suminf.    6.77830 (23) obj. 6 iterations 20
Cbc0038I Pass  39: suminf.   15.57912 (65) obj. 5.30509 iterations 113
Cbc0038I Pass  40: suminf.   11.30204 (56) obj. 5.43667 iterations 75
Cbc0038I Pass  41: suminf.   11.30204 (56) obj. 5.43667 iterations 3
Cbc0038I Pass  42: suminf.    8.93319 (42) obj. 6 iterations 25
Cbc0038I Pass  43: suminf.    7.13548 (38) obj. 6 iterations 13
Cbc0038I Pass  44: suminf.    6.19199 (33) obj. 6 iterations 2
Cbc0038I Pass  45: suminf.    7.64707 (29) obj. 6 iterations 41
Cbc0038I Pass  46: suminf.    5.69478 (25) obj. 6 iterations 33
Cbc0038I Pass  47: suminf.    5.69478 (25) obj. 6 iterations 6
Cbc0038I Pass  48: suminf.    8.73110 (31) obj. 6 iterations 30
Cbc0038I Pass  49: suminf.    5.52344 (22) obj. 6 iterations 25
Cbc0038I Pass  50: suminf.    5.52344 (22) obj. 6 iterations 6
Cbc0038I Pass  51: suminf.    6.65960 (25) obj. 6 iterations 19
Cbc0038I Pass  52: suminf.    6.02138 (23) obj. 6 iterations 19
Cbc0038I Pass  53: suminf.    7.67626 (28) obj. 6 iterations 18
Cbc0038I Pass  54: suminf.    5.52344 (22) obj. 6 iterations 21
Cbc0038I Pass  55: suminf.    5.52344 (22) obj. 6 iterations 7
Cbc0038I Pass  56: suminf.    6.52222 (25) obj. 6 iterations 30
Cbc0038I Pass  57: suminf.    5.83956 (21) obj. 6 iterations 22
Cbc0038I Pass  58: suminf.    7.49444 (26) obj. 6 iterations 21
Cbc0038I Pass  59: suminf.    5.34162 (20) obj. 6 iterations 16
Cbc0038I Pass  60: suminf.    5.34162 (20) obj. 6 iterations 7
Cbc0038I Pass  61: suminf.    6.47778 (23) obj. 6 iterations 19
Cbc0038I Pass  62: suminf.    5.83956 (21) obj. 6 iterations 18
Cbc0038I Pass  63: suminf.    7.49444 (26) obj. 6 iterations 20
Cbc0038I Pass  64: suminf.    5.34162 (20) obj. 6 iterations 19
Cbc0038I Pass  65: suminf.    5.34162 (20) obj. 6 iterations 5
Cbc0038I Pass  66: suminf.    6.47778 (23) obj. 6 iterations 19
Cbc0038I Pass  67: suminf.    5.83956 (21) obj. 6 iterations 20
Cbc0038I Pass  68: suminf.    7.49444 (26) obj. 6 iterations 22
Cbc0038I Pass  69: suminf.    5.34162 (20) obj. 6 iterations 20
Cbc0038I Pass  70: suminf.    5.34162 (20) obj. 6 iterations 5
Cbc0038I Pass  71: suminf.    7.05829 (26) obj. 6 iterations 25
Cbc0038I Pass  72: suminf.   11.96058 (40) obj. 6 iterations 90
Cbc0038I Pass  73: suminf.    9.97660 (38) obj. 6 iterations 77
Cbc0038I Pass  74: suminf.    7.14617 (36) obj. 6 iterations 30
Cbc0038I Pass  75: suminf.    7.14708 (35) obj. 6 iterations 10
Cbc0038I Pass  76: suminf.    6.55682 (29) obj. 6 iterations 20
Cbc0038I Pass  77: suminf.    6.49293 (27) obj. 6 iterations 14
Cbc0038I Pass  78: suminf.    6.20960 (27) obj. 6 iterations 3
Cbc0038I Pass  79: suminf.    9.41010 (30) obj. 6 iterations 37
Cbc0038I Pass  80: suminf.    6.85960 (24) obj. 6 iterations 18
Cbc0038I Pass  81: suminf.    6.63779 (27) obj. 6 iterations 16
Cbc0038I Pass  82: suminf.    7.51237 (29) obj. 6 iterations 17
Cbc0038I Pass  83: suminf.    6.63779 (27) obj. 6 iterations 19
Cbc0038I Pass  84: suminf.   17.43468 (64) obj. 6 iterations 95
Cbc0038I Pass  85: suminf.   12.03781 (44) obj. 6 iterations 70
Cbc0038I Pass  86: suminf.   11.21963 (44) obj. 6 iterations 10
Cbc0038I Pass  87: suminf.   10.17785 (38) obj. 6 iterations 49
Cbc0038I Pass  88: suminf.    8.65627 (36) obj. 6 iterations 15
Cbc0038I Pass  89: suminf.    8.65627 (36) obj. 6 iterations 1
Cbc0038I Pass  90: suminf.   10.82928 (36) obj. 6 iterations 25
Cbc0038I Pass  91: suminf.   10.10706 (36) obj. 6 iterations 15
Cbc0038I Pass  92: suminf.   10.10706 (36) obj. 6 iterations 0
Cbc0038I Pass  93: suminf.   10.97785 (35) obj. 6 iterations 21
Cbc0038I Pass  94: suminf.    9.59737 (35) obj. 6 iterations 23
Cbc0038I Pass  95: suminf.    9.21817 (34) obj. 6 iterations 8
Cbc0038I Pass  96: suminf.    9.21817 (34) obj. 6 iterations 1
Cbc0038I Pass  97: suminf.   10.21192 (37) obj. 6 iterations 20
Cbc0038I Pass  98: suminf.    9.21817 (34) obj. 6 iterations 12
Cbc0038I Pass  99: suminf.    9.21817 (34) obj. 6 iterations 0
Cbc0038I Pass 100: suminf.   13.58648 (49) obj. 6 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 474 integers at bound fixed and 0 continuous
Cbc0038I Full problem 305 rows 750 columns, reduced to 228 rows 249 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.27 seconds)
Cbc0038I After 2.27 seconds - Feasibility pump exiting - took 0.59 seconds
Cbc0031I 46 added rows had average density of 40.826087
Cbc0013I At root node, 46 cuts changed objective from 4.1670839 to 5 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 213 row cuts average 5.8 elements, 5 column cuts (5 active)  in 0.394 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 207 row cuts average 529.2 elements, 0 column cuts (0 active)  in 0.419 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 20.3 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 125 row cuts average 46.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 286 row cuts average 197.8 elements, 0 column cuts (0 active)  in 0.391 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 98 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 5 (4.83 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 5 (5.72 seconds)
Cbc0010I After 9 nodes, 2 on tree, 1e+50 best solution, best possible 5 (6.59 seconds)
Cbc0010I After 13 nodes, 2 on tree, 1e+50 best solution, best possible 6 (7.34 seconds)
Cbc0010I After 17 nodes, 6 on tree, 1e+50 best solution, best possible 6 (8.21 seconds)
Cbc0016I Integer solution of 6 found by strong branching after 5213 iterations and 22 nodes (8.42 seconds)
Cbc0001I Search completed - best objective 6, took 5232 iterations and 22 nodes (8.43 seconds)
Cbc0032I Strong branching done 582 times (15812 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 9, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.16708 to 5
Probing was tried 40 times and created 751 cuts of which 0 were active after adding rounds of cuts (0.509064 seconds)
Gomory was tried 40 times and created 225 cuts of which 0 were active after adding rounds of cuts (0.492358 seconds)
Knapsack was tried 40 times and created 95 cuts of which 0 were active after adding rounds of cuts (0.302642 seconds)
Clique was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.009037 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.053241 seconds)
MixedIntegerRounding2 was tried 40 times and created 390 cuts of which 0 were active after adding rounds of cuts (0.128079 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003727 seconds)
TwoMirCuts was tried 40 times and created 482 cuts of which 0 were active after adding rounds of cuts (0.482124 seconds)
ZeroHalf was tried 40 times and created 314 cuts of which 0 were active after adding rounds of cuts (0.191745 seconds)

Result - Optimal solution found
Objective value:                6
Enumerated nodes:               22
Total iterations:               5232
Time (CPU seconds):             8.43128
Time (Wallclock seconds):       8.45915
Total time (CPU seconds):       8.45508   (Wallclock seconds):       8.48215
