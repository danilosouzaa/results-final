Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3030/j3030_10.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.048684 seconds
Cgl0002I 25 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 177 rows, 273 columns (273 integer (271 of which binary)) and 3479 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 1.217%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 273 objects (273 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.62435
Cbc0038I Pass   1: suminf.    6.75297 (34) obj. 0.12205 iterations 59
Cbc0038I Pass   2: suminf.    7.06810 (34) obj. 0.263242 iterations 48
Cbc0038I Pass   3: suminf.    5.91456 (30) obj. 0.503889 iterations 32
Cbc0038I Pass   4: suminf.    5.04883 (23) obj. 1 iterations 16
Cbc0038I Pass   5: suminf.    7.20808 (22) obj. 1 iterations 45
Cbc0038I Pass   6: suminf.    3.88783 (18) obj. 1 iterations 32
Cbc0038I Pass   7: suminf.    3.88783 (18) obj. 1 iterations 0
Cbc0038I Pass   8: suminf.    4.95952 (19) obj. 1 iterations 38
Cbc0038I Pass   9: suminf.    3.76508 (15) obj. 1 iterations 36
Cbc0038I Pass  10: suminf.    5.24153 (18) obj. 1 iterations 29
Cbc0038I Pass  11: suminf.    3.55079 (17) obj. 1 iterations 30
Cbc0038I Pass  12: suminf.    5.01071 (19) obj. 1 iterations 52
Cbc0038I Pass  13: suminf.    4.22382 (20) obj. 1 iterations 29
Cbc0038I Pass  14: suminf.    4.73825 (19) obj. 1 iterations 32
Cbc0038I Pass  15: suminf.    3.34233 (16) obj. 1 iterations 25
Cbc0038I Pass  16: suminf.    5.15759 (20) obj. 1 iterations 33
Cbc0038I Pass  17: suminf.    4.24127 (18) obj. 1 iterations 33
Cbc0038I Pass  18: suminf.    3.98953 (20) obj. 1 iterations 11
Cbc0038I Pass  19: suminf.    4.58698 (25) obj. 1 iterations 45
Cbc0038I Pass  20: suminf.    3.76195 (24) obj. 1 iterations 27
Cbc0038I Pass  21: suminf.    3.83753 (18) obj. 1 iterations 52
Cbc0038I Pass  22: suminf.    2.75218 (15) obj. 1 iterations 24
Cbc0038I Pass  23: suminf.    2.71801 (15) obj. 1 iterations 13
Cbc0038I Pass  24: suminf.    3.70183 (21) obj. 1 iterations 28
Cbc0038I Pass  25: suminf.    3.10202 (18) obj. 1 iterations 30
Cbc0038I Pass  26: suminf.    3.26964 (15) obj. 1 iterations 22
Cbc0038I Pass  27: suminf.    3.05714 (11) obj. 1 iterations 31
Cbc0038I Pass  28: suminf.    3.18837 (14) obj. 1 iterations 35
Cbc0038I Pass  29: suminf.    2.83413 (15) obj. 1 iterations 19
Cbc0038I Pass  30: suminf.    3.89583 (17) obj. 1 iterations 39
Cbc0038I Pass  31: suminf.    3.05714 (11) obj. 1 iterations 27
Cbc0038I Pass  32: suminf.    3.05714 (11) obj. 1 iterations 8
Cbc0038I Pass  33: suminf.    3.18837 (14) obj. 1 iterations 40
Cbc0038I Pass  34: suminf.    2.83413 (15) obj. 1 iterations 28
Cbc0038I Pass  35: suminf.    3.89583 (17) obj. 1 iterations 35
Cbc0038I Pass  36: suminf.    3.05714 (11) obj. 1 iterations 28
Cbc0038I Pass  37: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  38: suminf.    3.18837 (14) obj. 1 iterations 38
Cbc0038I Pass  39: suminf.    2.83413 (15) obj. 1 iterations 34
Cbc0038I Pass  40: suminf.    3.89583 (17) obj. 1 iterations 38
Cbc0038I Pass  41: suminf.    3.05714 (11) obj. 1 iterations 26
Cbc0038I Pass  42: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  43: suminf.    3.18837 (14) obj. 1 iterations 35
Cbc0038I Pass  44: suminf.    2.83413 (15) obj. 1 iterations 25
Cbc0038I Pass  45: suminf.    3.30000 (14) obj. 1 iterations 38
Cbc0038I Pass  46: suminf.    3.05714 (11) obj. 1 iterations 21
Cbc0038I Pass  47: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  48: suminf.    3.18837 (14) obj. 1 iterations 31
Cbc0038I Pass  49: suminf.    2.83413 (15) obj. 1 iterations 25
Cbc0038I Pass  50: suminf.    3.89583 (17) obj. 1 iterations 40
Cbc0038I Pass  51: suminf.    3.05714 (11) obj. 1 iterations 25
Cbc0038I Pass  52: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  53: suminf.    3.18837 (14) obj. 1 iterations 32
Cbc0038I Pass  54: suminf.    2.83413 (15) obj. 1 iterations 29
Cbc0038I Pass  55: suminf.    3.89583 (17) obj. 1 iterations 35
Cbc0038I Pass  56: suminf.    3.05714 (11) obj. 1 iterations 25
Cbc0038I Pass  57: suminf.    3.05714 (11) obj. 1 iterations 6
Cbc0038I Pass  58: suminf.    3.18837 (14) obj. 1 iterations 43
Cbc0038I Pass  59: suminf.    2.83413 (15) obj. 1 iterations 34
Cbc0038I Pass  60: suminf.    3.89583 (17) obj. 1 iterations 43
Cbc0038I Pass  61: suminf.    3.05714 (11) obj. 1 iterations 24
Cbc0038I Pass  62: suminf.    3.05714 (11) obj. 1 iterations 6
Cbc0038I Pass  63: suminf.    3.18837 (14) obj. 1 iterations 34
Cbc0038I Pass  64: suminf.    2.83413 (15) obj. 1 iterations 28
Cbc0038I Pass  65: suminf.    3.89583 (17) obj. 1 iterations 37
Cbc0038I Pass  66: suminf.    3.05714 (11) obj. 1 iterations 26
Cbc0038I Pass  67: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  68: suminf.    3.18837 (14) obj. 1 iterations 34
Cbc0038I Pass  69: suminf.    2.83413 (15) obj. 1 iterations 26
Cbc0038I Pass  70: suminf.    3.21872 (14) obj. 1 iterations 51
Cbc0038I Pass  71: suminf.    2.93864 (15) obj. 1 iterations 25
Cbc0038I Pass  72: suminf.    3.19015 (15) obj. 1 iterations 44
Cbc0038I Pass  73: suminf.    2.94921 (17) obj. 1 iterations 23
Cbc0038I Pass  74: suminf.    3.52365 (15) obj. 1 iterations 43
Cbc0038I Pass  75: suminf.   12.06716 (39) obj. 1 iterations 85
Cbc0038I Pass  76: suminf.    3.48612 (17) obj. 1 iterations 59
Cbc0038I Pass  77: suminf.    3.03536 (18) obj. 1 iterations 22
Cbc0038I Pass  78: suminf.    4.53242 (15) obj. 1 iterations 42
Cbc0038I Pass  79: suminf.    3.05523 (11) obj. 1 iterations 31
Cbc0038I Pass  80: suminf.    2.64186 (11) obj. 1 iterations 3
Cbc0038I Pass  81: suminf.    2.52857 (12) obj. 1 iterations 30
Cbc0038I Pass  82: suminf.    2.46250 (14) obj. 1 iterations 11
Cbc0038I Pass  83: suminf.    4.32857 (14) obj. 1 iterations 49
Cbc0038I Pass  84: suminf.    3.53968 (11) obj. 1 iterations 29
Cbc0038I Pass  85: suminf.    3.18413 (11) obj. 1 iterations 3
Cbc0038I Pass  86: suminf.    2.81429 (12) obj. 1 iterations 28
Cbc0038I Pass  87: suminf.    2.46250 (14) obj. 1 iterations 13
Cbc0038I Pass  88: suminf.    4.32857 (14) obj. 1 iterations 52
Cbc0038I Pass  89: suminf.    6.78044 (27) obj. 1 iterations 71
Cbc0038I Pass  90: suminf.    3.15714 (15) obj. 1 iterations 54
Cbc0038I Pass  91: suminf.    2.11640 (11) obj. 1 iterations 35
Cbc0038I Pass  92: suminf.    2.11640 (13) obj. 1 iterations 18
Cbc0038I Pass  93: suminf.    4.29027 (20) obj. 1 iterations 39
Cbc0038I Pass  94: suminf.    2.14286 (7) obj. 1 iterations 27
Cbc0038I Pass  95: suminf.    1.85714 (7) obj. 1 iterations 34
Cbc0038I Pass  96: suminf.    1.85714 (7) obj. 1 iterations 18
Cbc0038I Pass  97: suminf.    5.24614 (21) obj. 1 iterations 74
Cbc0038I Pass  98: suminf.    3.18372 (18) obj. 1 iterations 55
Cbc0038I Pass  99: suminf.    3.18372 (18) obj. 1 iterations 5
Cbc0038I Pass 100: suminf.    8.77940 (41) obj. 1 iterations 66
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 133 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 273 columns, reduced to 149 rows 136 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.39 seconds)
Cbc0038I Full problem 178 rows 273 columns, reduced to 174 rows 273 columns - too large
Cbc0038I After 1.43 seconds - Feasibility pump exiting - took 1.04 seconds
Cbc0031I 32 added rows had average density of 96.53125
Cbc0013I At root node, 32 cuts changed objective from 0 to 1 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 319 row cuts average 4.0 elements, 0 column cuts (3 active)  in 1.256 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1877 row cuts average 268.8 elements, 0 column cuts (0 active)  in 2.304 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.424 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 99 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.193 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 488 row cuts average 88.8 elements, 0 column cuts (0 active)  in 0.384 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 358 row cuts average 45.1 elements, 0 column cuts (0 active)  in 0.340 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (10.43 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (11.24 seconds)
Cbc0010I After 13 nodes, 6 on tree, 1e+50 best solution, best possible 1 (11.95 seconds)
Cbc0010I After 21 nodes, 6 on tree, 1e+50 best solution, best possible 1 (12.71 seconds)
Cbc0010I After 51 nodes, 15 on tree, 1e+50 best solution, best possible 1 (13.41 seconds)
Cbc0010I After 89 nodes, 11 on tree, 1e+50 best solution, best possible 1 (14.12 seconds)
Cbc0010I After 134 nodes, 12 on tree, 1e+50 best solution, best possible 1 (14.82 seconds)
Cbc0010I After 183 nodes, 8 on tree, 1e+50 best solution, best possible 1 (15.52 seconds)
Cbc0010I After 237 nodes, 13 on tree, 1e+50 best solution, best possible 1 (16.24 seconds)
Cbc0010I After 299 nodes, 14 on tree, 1e+50 best solution, best possible 1 (16.94 seconds)
Cbc0010I After 348 nodes, 13 on tree, 1e+50 best solution, best possible 1 (17.65 seconds)
Cbc0010I After 383 nodes, 9 on tree, 1e+50 best solution, best possible 1 (18.40 seconds)
Cbc0010I After 415 nodes, 8 on tree, 1e+50 best solution, best possible 1 (19.11 seconds)
Cbc0010I After 436 nodes, 5 on tree, 1e+50 best solution, best possible 1 (19.83 seconds)
Cbc0010I After 466 nodes, 9 on tree, 1e+50 best solution, best possible 1 (20.55 seconds)
Cbc0010I After 502 nodes, 5 on tree, 1e+50 best solution, best possible 1 (21.67 seconds)
Cbc0010I After 503 nodes, 5 on tree, 1e+50 best solution, best possible 1 (22.66 seconds)
Cbc0010I After 513 nodes, 8 on tree, 1e+50 best solution, best possible 1 (23.40 seconds)
Cbc0010I After 540 nodes, 5 on tree, 1e+50 best solution, best possible 1 (24.12 seconds)
Cbc0010I After 544 nodes, 4 on tree, 1e+50 best solution, best possible 1 (25.33 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 33142 iterations and 568 nodes (26.04 seconds)
Cbc0001I Search completed - best objective 1, took 71917 iterations and 2792 nodes (26.04 seconds)
Cbc0032I Strong branching done 1520 times (33287 iterations), fathomed 19 nodes and fixed 37 variables
Cbc0041I Maximum depth 50, 0 variables fixed on reduced cost (complete fathoming 24 times, 2224 nodes taking 38767 iterations)
Cuts at root node changed objective from 0 to 1
Probing was tried 525 times and created 1526 cuts of which 3 were active after adding rounds of cuts (1.68905 seconds)
Gomory was tried 503 times and created 1904 cuts of which 0 were active after adding rounds of cuts (2.75349 seconds)
Knapsack was tried 503 times and created 659 cuts of which 0 were active after adding rounds of cuts (1.7829 seconds)
Clique was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.03134 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.093302 seconds)
MixedIntegerRounding2 was tried 503 times and created 486 cuts of which 0 were active after adding rounds of cuts (0.720775 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.141092 seconds)
TwoMirCuts was tried 503 times and created 1588 cuts of which 0 were active after adding rounds of cuts (0.768916 seconds)
ZeroHalf was tried 503 times and created 2090 cuts of which 0 were active after adding rounds of cuts (1.31486 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               2792
Total iterations:               71917
Time (CPU seconds):             26.074
Time (Wallclock seconds):       26.1215
Total time (CPU seconds):       26.1686   (Wallclock seconds):       26.1889
