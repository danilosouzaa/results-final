Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3041/j3041_6.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.35124 - 0.230699 seconds
Cgl0002I 4 variables fixed
Cgl0003I 2 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 323 rows, 871 columns (871 integer (870 of which binary)) and 9607 elements
Coin3009W Conflict graph built in 0.105 seconds, density: 1.449%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 871 objects (871 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 127 integers unsatisfied sum - 32.4637
Cbc0038I Pass   1: suminf.   21.01585 (90) obj. 2.46331 iterations 193
Cbc0038I Pass   2: suminf.   15.84296 (75) obj. 3.07781 iterations 87
Cbc0038I Pass   3: suminf.   11.48953 (49) obj. 5 iterations 84
Cbc0038I Pass   4: suminf.    9.59343 (48) obj. 5 iterations 26
Cbc0038I Pass   5: suminf.    8.46352 (42) obj. 5 iterations 26
Cbc0038I Pass   6: suminf.    9.28559 (44) obj. 5 iterations 101
Cbc0038I Pass   7: suminf.    7.65286 (38) obj. 5 iterations 77
Cbc0038I Pass   8: suminf.    6.19202 (40) obj. 5 iterations 40
Cbc0038I Pass   9: suminf.    6.91259 (40) obj. 5 iterations 61
Cbc0038I Pass  10: suminf.    6.88600 (41) obj. 5 iterations 19
Cbc0038I Pass  11: suminf.    8.00983 (46) obj. 5 iterations 111
Cbc0038I Pass  12: suminf.    6.53763 (35) obj. 5 iterations 67
Cbc0038I Pass  13: suminf.    6.31539 (34) obj. 5 iterations 9
Cbc0038I Pass  14: suminf.    6.03066 (30) obj. 5 iterations 10
Cbc0038I Pass  15: suminf.    5.55744 (31) obj. 5 iterations 65
Cbc0038I Pass  16: suminf.    4.42210 (30) obj. 5 iterations 32
Cbc0038I Pass  17: suminf.   10.61361 (42) obj. 5 iterations 114
Cbc0038I Pass  18: suminf.    5.91716 (31) obj. 5 iterations 78
Cbc0038I Pass  19: suminf.    5.72893 (33) obj. 5 iterations 30
Cbc0038I Pass  20: suminf.    5.51255 (30) obj. 5 iterations 32
Cbc0038I Pass  21: suminf.    8.47747 (32) obj. 5 iterations 96
Cbc0038I Pass  22: suminf.    6.64282 (23) obj. 5 iterations 58
Cbc0038I Pass  23: suminf.    6.12410 (34) obj. 5 iterations 34
Cbc0038I Pass  24: suminf.    5.97719 (34) obj. 5 iterations 14
Cbc0038I Pass  25: suminf.    5.12787 (34) obj. 5 iterations 4
Cbc0038I Pass  26: suminf.    5.12492 (34) obj. 5 iterations 7
Cbc0038I Pass  27: suminf.    5.12492 (34) obj. 5 iterations 2
Cbc0038I Pass  28: suminf.    5.01230 (35) obj. 5 iterations 11
Cbc0038I Pass  29: suminf.    7.27785 (35) obj. 5 iterations 82
Cbc0038I Pass  30: suminf.    6.53542 (30) obj. 5 iterations 75
Cbc0038I Pass  31: suminf.    5.54792 (27) obj. 5 iterations 49
Cbc0038I Pass  32: suminf.    5.38929 (27) obj. 5 iterations 34
Cbc0038I Pass  33: suminf.    5.68564 (29) obj. 5 iterations 60
Cbc0038I Pass  34: suminf.    4.81786 (26) obj. 5 iterations 44
Cbc0038I Pass  35: suminf.   10.01714 (35) obj. 5 iterations 73
Cbc0038I Pass  36: suminf.    4.84067 (26) obj. 5 iterations 62
Cbc0038I Pass  37: suminf.    4.30565 (24) obj. 5 iterations 35
Cbc0038I Pass  38: suminf.    9.10054 (40) obj. 5 iterations 80
Cbc0038I Pass  39: suminf.    6.51579 (28) obj. 5 iterations 81
Cbc0038I Pass  40: suminf.    4.41968 (26) obj. 5 iterations 37
Cbc0038I Pass  41: suminf.   17.16438 (71) obj. 5 iterations 156
Cbc0038I Pass  42: suminf.    9.04491 (52) obj. 5 iterations 127
Cbc0038I Pass  43: suminf.    8.21482 (46) obj. 5 iterations 1
Cbc0038I Pass  44: suminf.    7.79725 (36) obj. 5 iterations 83
Cbc0038I Pass  45: suminf.    6.97778 (37) obj. 5 iterations 77
Cbc0038I Pass  46: suminf.    5.42970 (39) obj. 5 iterations 39
Cbc0038I Pass  47: suminf.    4.76714 (24) obj. 5 iterations 26
Cbc0038I Pass  48: suminf.    4.76714 (24) obj. 5 iterations 6
Cbc0038I Pass  49: suminf.    5.86813 (26) obj. 5 iterations 58
Cbc0038I Pass  50: suminf.    4.94432 (19) obj. 5 iterations 45
Cbc0038I Pass  51: suminf.    5.54751 (32) obj. 5 iterations 93
Cbc0038I Pass  52: suminf.    4.70065 (42) obj. 5 iterations 48
Cbc0038I Pass  53: suminf.    5.98605 (20) obj. 5 iterations 81
Cbc0038I Pass  54: suminf.    3.87813 (17) obj. 5 iterations 34
Cbc0038I Pass  55: suminf.    3.63758 (22) obj. 5 iterations 20
Cbc0038I Pass  56: suminf.    3.34055 (22) obj. 5 iterations 9
Cbc0038I Pass  57: suminf.    8.02926 (37) obj. 5 iterations 90
Cbc0038I Pass  58: suminf.    5.89849 (23) obj. 5 iterations 46
Cbc0038I Pass  59: suminf.    5.37902 (20) obj. 5 iterations 43
Cbc0038I Pass  60: suminf.    4.90283 (22) obj. 5 iterations 25
Cbc0038I Pass  61: suminf.    6.91330 (25) obj. 5 iterations 95
Cbc0038I Pass  62: suminf.    4.98126 (28) obj. 5 iterations 57
Cbc0038I Pass  63: suminf.    9.61576 (45) obj. 5 iterations 78
Cbc0038I Pass  64: suminf.    9.23871 (44) obj. 5 iterations 28
Cbc0038I Pass  65: suminf.    9.01880 (35) obj. 5 iterations 68
Cbc0038I Pass  66: suminf.    6.69151 (33) obj. 5 iterations 41
Cbc0038I Pass  67: suminf.    6.64848 (33) obj. 5 iterations 19
Cbc0038I Pass  68: suminf.    8.67969 (40) obj. 5 iterations 81
Cbc0038I Pass  69: suminf.    4.83847 (29) obj. 5 iterations 79
Cbc0038I Pass  70: suminf.    4.78070 (28) obj. 5 iterations 15
Cbc0038I Pass  71: suminf.    9.66997 (47) obj. 5 iterations 120
Cbc0038I Pass  72: suminf.    9.41237 (44) obj. 5 iterations 46
Cbc0038I Pass  73: suminf.   10.15868 (38) obj. 5 iterations 96
Cbc0038I Pass  74: suminf.    8.57418 (49) obj. 5 iterations 66
Cbc0038I Pass  75: suminf.    8.26609 (45) obj. 5 iterations 17
Cbc0038I Pass  76: suminf.    9.16468 (32) obj. 5 iterations 111
Cbc0038I Pass  77: suminf.    6.87932 (30) obj. 5 iterations 52
Cbc0038I Pass  78: suminf.    5.81465 (30) obj. 5 iterations 23
Cbc0038I Pass  79: suminf.    5.68979 (30) obj. 5 iterations 6
Cbc0038I Pass  80: suminf.    7.87089 (37) obj. 5 iterations 87
Cbc0038I Pass  81: suminf.    6.20383 (34) obj. 5 iterations 57
Cbc0038I Pass  82: suminf.    5.90519 (33) obj. 5 iterations 8
Cbc0038I Pass  83: suminf.    8.06893 (36) obj. 5 iterations 92
Cbc0038I Pass  84: suminf.    7.32801 (39) obj. 5 iterations 60
Cbc0038I Pass  85: suminf.    7.00280 (34) obj. 5 iterations 29
Cbc0038I Pass  86: suminf.    8.60744 (32) obj. 5 iterations 86
Cbc0038I Pass  87: suminf.    6.67068 (33) obj. 5 iterations 82
Cbc0038I Pass  88: suminf.    6.13639 (29) obj. 5 iterations 22
Cbc0038I Pass  89: suminf.    8.41005 (34) obj. 5 iterations 104
Cbc0038I Pass  90: suminf.    5.80501 (37) obj. 5 iterations 74
Cbc0038I Pass  91: suminf.    5.26618 (30) obj. 5 iterations 37
Cbc0038I Pass  92: suminf.    5.38062 (33) obj. 5 iterations 79
Cbc0038I Pass  93: suminf.    5.23968 (34) obj. 5 iterations 16
Cbc0038I Pass  94: suminf.    7.69488 (37) obj. 5 iterations 104
Cbc0038I Pass  95: suminf.    5.73103 (30) obj. 5 iterations 65
Cbc0038I Pass  96: suminf.    5.73103 (31) obj. 5 iterations 9
Cbc0038I Pass  97: suminf.    8.96558 (38) obj. 5 iterations 84
Cbc0038I Pass  98: suminf.    8.59429 (38) obj. 5 iterations 53
Cbc0038I Pass  99: suminf.   10.94738 (43) obj. 5 iterations 128
Cbc0038I Pass 100: suminf.   18.07669 (69) obj. 5 iterations 162
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 536 integers at bound fixed and 0 continuous
Cbc0038I Full problem 323 rows 871 columns, reduced to 225 rows 301 columns
Cbc0038I Mini branch and bound did not improve solution (6.30 seconds)
Cbc0038I After 6.30 seconds - Feasibility pump exiting - took 3.16 seconds
Cbc0031I 84 added rows had average density of 31.821429
Cbc0013I At root node, 84 cuts changed objective from 1.4241566 to 3 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 175 row cuts average 9.5 elements, 3 column cuts (3 active)  in 0.733 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 145 row cuts average 802.4 elements, 0 column cuts (0 active)  in 1.160 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 95 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 146 row cuts average 50.3 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 45.4 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 213 row cuts average 62.7 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 3 (11.52 seconds)
Cbc0010I After 1 nodes, 1 on tree, 1e+50 best solution, best possible 3 (12.24 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 4 (14.35 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 4 (15.07 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 4 (16.50 seconds)
Cbc0010I After 8 nodes, 7 on tree, 1e+50 best solution, best possible 4 (17.59 seconds)
Cbc0010I After 11 nodes, 8 on tree, 1e+50 best solution, best possible 4 (18.55 seconds)
Cbc0010I After 13 nodes, 10 on tree, 1e+50 best solution, best possible 4 (19.36 seconds)
Cbc0010I After 15 nodes, 11 on tree, 1e+50 best solution, best possible 4 (20.17 seconds)
Cbc0010I After 19 nodes, 11 on tree, 1e+50 best solution, best possible 4 (21.16 seconds)
Cbc0010I After 23 nodes, 9 on tree, 1e+50 best solution, best possible 4 (22.04 seconds)
Cbc0010I After 25 nodes, 11 on tree, 1e+50 best solution, best possible 4 (22.80 seconds)
Cbc0010I After 27 nodes, 12 on tree, 1e+50 best solution, best possible 4 (23.54 seconds)
Cbc0010I After 29 nodes, 13 on tree, 1e+50 best solution, best possible 4 (24.26 seconds)
Cbc0010I After 31 nodes, 15 on tree, 1e+50 best solution, best possible 4 (25.10 seconds)
Cbc0010I After 35 nodes, 15 on tree, 1e+50 best solution, best possible 4 (26.13 seconds)
Cbc0010I After 39 nodes, 18 on tree, 1e+50 best solution, best possible 4 (26.94 seconds)
Cbc0010I After 43 nodes, 17 on tree, 1e+50 best solution, best possible 4 (27.65 seconds)
Cbc0010I After 49 nodes, 15 on tree, 1e+50 best solution, best possible 4 (28.43 seconds)
Cbc0010I After 54 nodes, 14 on tree, 1e+50 best solution, best possible 4 (29.31 seconds)
Cbc0010I After 59 nodes, 14 on tree, 1e+50 best solution, best possible 4 (30.24 seconds)
Cbc0010I After 63 nodes, 13 on tree, 1e+50 best solution, best possible 4 (30.97 seconds)
Cbc0010I After 66 nodes, 15 on tree, 1e+50 best solution, best possible 4 (31.73 seconds)
Cbc0010I After 70 nodes, 17 on tree, 1e+50 best solution, best possible 4 (32.48 seconds)
Cbc0010I After 74 nodes, 19 on tree, 1e+50 best solution, best possible 4 (33.44 seconds)
Cbc0010I After 79 nodes, 20 on tree, 1e+50 best solution, best possible 4 (34.32 seconds)
Cbc0010I After 82 nodes, 21 on tree, 1e+50 best solution, best possible 4 (35.04 seconds)
Cbc0010I After 86 nodes, 19 on tree, 1e+50 best solution, best possible 4 (35.77 seconds)
Cbc0010I After 88 nodes, 20 on tree, 1e+50 best solution, best possible 4 (36.60 seconds)
Cbc0010I After 92 nodes, 20 on tree, 1e+50 best solution, best possible 4 (37.37 seconds)
Cbc0010I After 97 nodes, 18 on tree, 1e+50 best solution, best possible 4 (38.11 seconds)
Cbc0010I After 105 nodes, 18 on tree, 1e+50 best solution, best possible 4 (38.84 seconds)
Cbc0010I After 114 nodes, 17 on tree, 1e+50 best solution, best possible 4 (39.61 seconds)
Cbc0010I After 122 nodes, 17 on tree, 1e+50 best solution, best possible 4 (40.41 seconds)
Cbc0010I After 129 nodes, 20 on tree, 1e+50 best solution, best possible 4 (41.18 seconds)
Cbc0010I After 138 nodes, 18 on tree, 1e+50 best solution, best possible 4 (42.26 seconds)
Cbc0010I After 143 nodes, 19 on tree, 1e+50 best solution, best possible 4 (43.06 seconds)
Cbc0010I After 147 nodes, 19 on tree, 1e+50 best solution, best possible 4 (44.03 seconds)
Cbc0010I After 150 nodes, 18 on tree, 1e+50 best solution, best possible 4 (44.93 seconds)
Cbc0010I After 153 nodes, 19 on tree, 1e+50 best solution, best possible 4 (45.65 seconds)
Cbc0010I After 157 nodes, 18 on tree, 1e+50 best solution, best possible 4 (46.36 seconds)
Cbc0010I After 161 nodes, 17 on tree, 1e+50 best solution, best possible 4 (47.16 seconds)
Cbc0010I After 165 nodes, 17 on tree, 1e+50 best solution, best possible 4 (48.01 seconds)
Cbc0010I After 170 nodes, 17 on tree, 1e+50 best solution, best possible 4 (48.95 seconds)
Cbc0010I After 176 nodes, 15 on tree, 1e+50 best solution, best possible 4 (49.68 seconds)
Cbc0010I After 181 nodes, 14 on tree, 1e+50 best solution, best possible 4 (50.64 seconds)
Cbc0010I After 184 nodes, 14 on tree, 1e+50 best solution, best possible 4 (51.34 seconds)
Cbc0010I After 188 nodes, 12 on tree, 1e+50 best solution, best possible 4 (52.19 seconds)
Cbc0010I After 194 nodes, 10 on tree, 1e+50 best solution, best possible 4 (53.13 seconds)
Cbc0010I After 198 nodes, 10 on tree, 1e+50 best solution, best possible 4 (54.25 seconds)
Cbc0010I After 200 nodes, 11 on tree, 1e+50 best solution, best possible 4 (55.37 seconds)
Cbc0010I After 203 nodes, 11 on tree, 1e+50 best solution, best possible 4 (56.47 seconds)
Cbc0010I After 207 nodes, 12 on tree, 1e+50 best solution, best possible 4 (57.77 seconds)
Cbc0010I After 210 nodes, 12 on tree, 1e+50 best solution, best possible 4 (58.52 seconds)
Cbc0010I After 213 nodes, 12 on tree, 1e+50 best solution, best possible 4 (59.25 seconds)
Cbc0010I After 217 nodes, 11 on tree, 1e+50 best solution, best possible 4 (60.29 seconds)
Cbc0010I After 221 nodes, 11 on tree, 1e+50 best solution, best possible 4 (61.03 seconds)
Cbc0010I After 223 nodes, 12 on tree, 1e+50 best solution, best possible 4 (61.77 seconds)
Cbc0010I After 227 nodes, 13 on tree, 1e+50 best solution, best possible 4 (62.53 seconds)
Cbc0010I After 231 nodes, 11 on tree, 1e+50 best solution, best possible 4 (63.45 seconds)
Cbc0010I After 233 nodes, 13 on tree, 1e+50 best solution, best possible 4 (64.19 seconds)
Cbc0010I After 240 nodes, 11 on tree, 1e+50 best solution, best possible 4 (64.96 seconds)
Cbc0010I After 243 nodes, 12 on tree, 1e+50 best solution, best possible 4 (65.70 seconds)
Cbc0010I After 249 nodes, 8 on tree, 1e+50 best solution, best possible 4 (66.51 seconds)
Cbc0010I After 252 nodes, 8 on tree, 1e+50 best solution, best possible 4 (67.21 seconds)
Cbc0010I After 256 nodes, 7 on tree, 1e+50 best solution, best possible 4 (67.96 seconds)
Cbc0010I After 258 nodes, 8 on tree, 1e+50 best solution, best possible 4 (68.71 seconds)
Cbc0010I After 260 nodes, 10 on tree, 1e+50 best solution, best possible 4 (69.57 seconds)
Cbc0010I After 264 nodes, 7 on tree, 1e+50 best solution, best possible 4 (70.34 seconds)
Cbc0010I After 267 nodes, 6 on tree, 1e+50 best solution, best possible 4 (71.44 seconds)
Cbc0010I After 271 nodes, 3 on tree, 1e+50 best solution, best possible 4 (72.20 seconds)
Cbc0010I After 274 nodes, 1 on tree, 1e+50 best solution, best possible 5 (73.23 seconds)
Cbc0010I After 276 nodes, 3 on tree, 1e+50 best solution, best possible 5 (74.42 seconds)
Cbc0010I After 277 nodes, 4 on tree, 1e+50 best solution, best possible 5 (75.17 seconds)
Cbc0010I After 279 nodes, 6 on tree, 1e+50 best solution, best possible 5 (76.17 seconds)
Cbc0010I After 284 nodes, 5 on tree, 1e+50 best solution, best possible 5 (76.90 seconds)
Cbc0010I After 287 nodes, 4 on tree, 1e+50 best solution, best possible 5 (77.65 seconds)
Cbc0010I After 290 nodes, 3 on tree, 1e+50 best solution, best possible 5 (78.40 seconds)
Cbc0010I After 297 nodes, 7 on tree, 1e+50 best solution, best possible 5 (79.12 seconds)
Cbc0010I After 304 nodes, 11 on tree, 1e+50 best solution, best possible 5 (79.88 seconds)
Cbc0010I After 312 nodes, 16 on tree, 1e+50 best solution, best possible 5 (80.62 seconds)
Cbc0004I Integer solution of 5 found after 102945 iterations and 319 nodes (80.92 seconds)
Cbc0001I Search completed - best objective 5, took 102945 iterations and 319 nodes (80.92 seconds)
Cbc0032I Strong branching done 2682 times (103233 iterations), fathomed 1 nodes and fixed 26 variables
Cbc0035I Maximum depth 32, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.42416 to 3
Probing was tried 250 times and created 2316 cuts of which 0 were active after adding rounds of cuts (3.06448 seconds)
Gomory was tried 249 times and created 152 cuts of which 0 were active after adding rounds of cuts (2.36527 seconds)
Knapsack was tried 249 times and created 403 cuts of which 0 were active after adding rounds of cuts (2.52177 seconds)
Clique was tried 249 times and created 1200 cuts of which 0 were active after adding rounds of cuts (0.72264 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.15761 seconds)
MixedIntegerRounding2 was tried 249 times and created 2150 cuts of which 0 were active after adding rounds of cuts (1.43278 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003411 seconds)
TwoMirCuts was tried 249 times and created 1315 cuts of which 0 were active after adding rounds of cuts (0.781625 seconds)
ZeroHalf was tried 249 times and created 2456 cuts of which 0 were active after adding rounds of cuts (3.70973 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               319
Total iterations:               102945
Time (CPU seconds):             80.8214
Time (Wallclock seconds):       80.9754
Total time (CPU seconds):       80.8462   (Wallclock seconds):       80.991
