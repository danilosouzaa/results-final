Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_3.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.27338 - 0.110725 seconds
Cgl0002I 4 variables fixed
Cgl0003I 10 fixed, 0 tightened bounds, 7 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 310 rows, 925 columns (925 integer (924 of which binary)) and 11512 elements
Coin3009W Conflict graph built in 0.037 seconds, density: 1.033%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 925 objects (925 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 65 integers unsatisfied sum - 18.7752
Cbc0038I Pass   1: suminf.    9.65878 (48) obj. 5 iterations 100
Cbc0038I Pass   2: suminf.    8.65418 (45) obj. 5 iterations 30
Cbc0038I Pass   3: suminf.   12.12550 (37) obj. 5 iterations 48
Cbc0038I Pass   4: suminf.   11.23703 (39) obj. 5 iterations 13
Cbc0038I Pass   5: suminf.   10.49882 (37) obj. 5 iterations 5
Cbc0038I Pass   6: suminf.    9.07240 (34) obj. 5 iterations 15
Cbc0038I Pass   7: suminf.    8.97716 (34) obj. 5 iterations 6
Cbc0038I Pass   8: suminf.    8.87331 (39) obj. 5 iterations 8
Cbc0038I Pass   9: suminf.    9.40573 (34) obj. 5 iterations 11
Cbc0038I Pass  10: suminf.    9.40573 (34) obj. 5 iterations 5
Cbc0038I Pass  11: suminf.    9.40573 (34) obj. 5 iterations 4
Cbc0038I Pass  12: suminf.    9.33503 (34) obj. 5 iterations 19
Cbc0038I Pass  13: suminf.    8.95178 (46) obj. 5 iterations 13
Cbc0038I Pass  14: suminf.   11.85170 (39) obj. 5 iterations 25
Cbc0038I Pass  15: suminf.    9.73387 (36) obj. 5 iterations 13
Cbc0038I Pass  16: suminf.    8.67481 (46) obj. 5 iterations 12
Cbc0038I Pass  17: suminf.    8.67481 (46) obj. 5 iterations 1
Cbc0038I Pass  18: suminf.   10.25151 (34) obj. 5 iterations 22
Cbc0038I Pass  19: suminf.    9.33820 (34) obj. 5 iterations 13
Cbc0038I Pass  20: suminf.    8.55178 (44) obj. 5 iterations 9
Cbc0038I Pass  21: suminf.    8.55178 (44) obj. 5 iterations 1
Cbc0038I Pass  22: suminf.    9.58484 (34) obj. 5 iterations 20
Cbc0038I Pass  23: suminf.    8.67154 (34) obj. 5 iterations 11
Cbc0038I Pass  24: suminf.    8.27481 (44) obj. 5 iterations 5
Cbc0038I Pass  25: suminf.    8.27481 (44) obj. 5 iterations 1
Cbc0038I Pass  26: suminf.   12.61806 (39) obj. 5 iterations 47
Cbc0038I Pass  27: suminf.    9.91411 (33) obj. 5 iterations 42
Cbc0038I Pass  28: suminf.    9.25249 (32) obj. 5 iterations 6
Cbc0038I Pass  29: suminf.    8.50278 (42) obj. 5 iterations 7
Cbc0038I Pass  30: suminf.    9.53394 (38) obj. 5 iterations 32
Cbc0038I Pass  31: suminf.    6.23080 (28) obj. 5 iterations 19
Cbc0038I Pass  32: suminf.    5.77020 (31) obj. 5 iterations 5
Cbc0038I Pass  33: suminf.    9.31444 (34) obj. 5 iterations 57
Cbc0038I Pass  34: suminf.    7.68111 (35) obj. 5 iterations 16
Cbc0038I Pass  35: suminf.    9.62409 (34) obj. 5 iterations 31
Cbc0038I Pass  36: suminf.    6.40095 (32) obj. 5 iterations 20
Cbc0038I Pass  37: suminf.    6.40095 (32) obj. 5 iterations 7
Cbc0038I Pass  38: suminf.   10.03630 (31) obj. 5 iterations 20
Cbc0038I Pass  39: suminf.    7.40967 (36) obj. 5 iterations 22
Cbc0038I Pass  40: suminf.    8.07116 (35) obj. 5 iterations 26
Cbc0038I Pass  41: suminf.    7.76346 (35) obj. 5 iterations 10
Cbc0038I Pass  42: suminf.    6.70865 (32) obj. 5 iterations 24
Cbc0038I Pass  43: suminf.    6.40095 (32) obj. 5 iterations 6
Cbc0038I Pass  44: suminf.    9.94703 (33) obj. 5 iterations 37
Cbc0038I Pass  45: suminf.    8.72758 (30) obj. 5 iterations 23
Cbc0038I Pass  46: suminf.    7.00967 (34) obj. 5 iterations 33
Cbc0038I Pass  47: suminf.   10.43202 (32) obj. 5 iterations 42
Cbc0038I Pass  48: suminf.   10.27818 (32) obj. 5 iterations 9
Cbc0038I Pass  49: suminf.    9.34194 (33) obj. 5 iterations 55
Cbc0038I Pass  50: suminf.    7.04829 (31) obj. 5 iterations 53
Cbc0038I Pass  51: suminf.    6.95306 (31) obj. 5 iterations 2
Cbc0038I Pass  52: suminf.    7.14371 (26) obj. 5 iterations 39
Cbc0038I Pass  53: suminf.    4.85462 (25) obj. 5 iterations 21
Cbc0038I Pass  54: suminf.    4.58090 (23) obj. 5 iterations 31
Cbc0038I Pass  55: suminf.    7.30621 (31) obj. 5 iterations 38
Cbc0038I Pass  56: suminf.    6.09625 (30) obj. 5 iterations 38
Cbc0038I Pass  57: suminf.    5.71648 (22) obj. 5 iterations 19
Cbc0038I Pass  58: suminf.    5.60638 (43) obj. 5 iterations 8
Cbc0038I Pass  59: suminf.    7.76227 (31) obj. 5 iterations 42
Cbc0038I Pass  60: suminf.    7.04625 (30) obj. 5 iterations 31
Cbc0038I Pass  61: suminf.    6.69172 (32) obj. 5 iterations 17
Cbc0038I Pass  62: suminf.    6.59648 (32) obj. 5 iterations 6
Cbc0038I Pass  63: suminf.    7.66513 (28) obj. 5 iterations 49
Cbc0038I Pass  64: suminf.    7.51129 (28) obj. 5 iterations 12
Cbc0038I Pass  65: suminf.    8.55085 (23) obj. 5 iterations 32
Cbc0038I Pass  66: suminf.    7.36367 (26) obj. 5 iterations 16
Cbc0038I Pass  67: suminf.    7.07796 (26) obj. 5 iterations 2
Cbc0038I Pass  68: suminf.    7.09656 (27) obj. 5 iterations 29
Cbc0038I Pass  69: suminf.    5.98034 (27) obj. 5 iterations 23
Cbc0038I Pass  70: suminf.    7.73180 (26) obj. 5 iterations 30
Cbc0038I Pass  71: suminf.    7.41129 (26) obj. 5 iterations 10
Cbc0038I Pass  72: suminf.    7.37942 (25) obj. 5 iterations 22
Cbc0038I Pass  73: suminf.    6.00891 (25) obj. 5 iterations 16
Cbc0038I Pass  74: suminf.    8.63180 (26) obj. 5 iterations 18
Cbc0038I Pass  75: suminf.    8.07796 (26) obj. 5 iterations 15
Cbc0038I Pass  76: suminf.    7.04371 (25) obj. 5 iterations 21
Cbc0038I Pass  77: suminf.    5.58986 (21) obj. 5 iterations 13
Cbc0038I Pass  78: suminf.    8.21593 (25) obj. 5 iterations 48
Cbc0038I Pass  79: suminf.    6.82736 (29) obj. 5 iterations 13
Cbc0038I Pass  80: suminf.    6.64986 (30) obj. 5 iterations 4
Cbc0038I Pass  81: suminf.    5.98034 (27) obj. 5 iterations 5
Cbc0038I Pass  82: suminf.    7.56513 (27) obj. 5 iterations 29
Cbc0038I Pass  83: suminf.    7.41129 (27) obj. 5 iterations 9
Cbc0038I Pass  84: suminf.    8.12704 (25) obj. 5 iterations 13
Cbc0038I Pass  85: suminf.    7.04224 (26) obj. 5 iterations 10
Cbc0038I Pass  86: suminf.    7.02942 (25) obj. 5 iterations 22
Cbc0038I Pass  87: suminf.    6.16129 (23) obj. 5 iterations 13
Cbc0038I Pass  88: suminf.    8.85085 (26) obj. 5 iterations 25
Cbc0038I Pass  89: suminf.    8.69700 (26) obj. 5 iterations 11
Cbc0038I Pass  90: suminf.    6.16275 (25) obj. 5 iterations 26
Cbc0038I Pass  91: suminf.    6.00891 (25) obj. 5 iterations 15
Cbc0038I Pass  92: suminf.    7.25621 (29) obj. 5 iterations 25
Cbc0038I Pass  93: suminf.    6.52415 (30) obj. 5 iterations 18
Cbc0038I Pass  94: suminf.    8.89847 (26) obj. 5 iterations 25
Cbc0038I Pass  95: suminf.    8.74462 (26) obj. 5 iterations 9
Cbc0038I Pass  96: suminf.    6.73418 (25) obj. 5 iterations 24
Cbc0038I Pass  97: suminf.    6.00891 (25) obj. 5 iterations 14
Cbc0038I Pass  98: suminf.    6.15799 (30) obj. 5 iterations 40
Cbc0038I Pass  99: suminf.    5.98034 (27) obj. 5 iterations 13
Cbc0038I Pass 100: suminf.   12.80446 (50) obj. 5 iterations 95
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 782 integers at bound fixed and 0 continuous
Cbc0038I Full problem 310 rows 925 columns, reduced to 175 rows 115 columns
Cbc0038I Mini branch and bound did not improve solution (2.84 seconds)
Cbc0038I After 2.84 seconds - Feasibility pump exiting - took 0.63 seconds
Cbc0031I 60 added rows had average density of 61.95
Cbc0013I At root node, 60 cuts changed objective from 3.2733813 to 5 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 175 row cuts average 3.4 elements, 21 column cuts (21 active)  in 0.582 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 85 row cuts average 449.7 elements, 0 column cuts (0 active)  in 0.325 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 123 row cuts average 61.7 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 213 row cuts average 192.9 elements, 0 column cuts (0 active)  in 0.222 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 119 row cuts average 66.9 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 5 (6.68 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 5 (7.81 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 5 (8.93 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 5 (9.69 seconds)
Cbc0016I Integer solution of 5 found by strong branching after 2791 iterations and 18 nodes (10.39 seconds)
Cbc0001I Search completed - best objective 5, took 2791 iterations and 18 nodes (10.39 seconds)
Cbc0032I Strong branching done 558 times (15860 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.27338 to 5
Probing was tried 31 times and created 347 cuts of which 0 were active after adding rounds of cuts (0.71508 seconds)
Gomory was tried 31 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.408488 seconds)
Knapsack was tried 31 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.284611 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007589 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043629 seconds)
MixedIntegerRounding2 was tried 31 times and created 197 cuts of which 0 were active after adding rounds of cuts (0.174927 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003609 seconds)
TwoMirCuts was tried 31 times and created 240 cuts of which 0 were active after adding rounds of cuts (0.285597 seconds)
ZeroHalf was tried 31 times and created 165 cuts of which 0 were active after adding rounds of cuts (0.241923 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               18
Total iterations:               2791
Time (CPU seconds):             10.4408
Time (Wallclock seconds):       10.4386
Total time (CPU seconds):       10.4928   (Wallclock seconds):       10.4864
