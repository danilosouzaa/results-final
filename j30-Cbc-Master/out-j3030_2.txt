Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3030/j3030_2.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.55271e-15 - 0.059438 seconds
Cgl0002I 19 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 250 rows, 490 columns (490 integer (489 of which binary)) and 7555 elements
Coin3009W Conflict graph built in 0.026 seconds, density: 1.539%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 490 objects (490 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 68 integers unsatisfied sum - 16.5272
Cbc0038I Pass   1: suminf.    9.40791 (44) obj. 7.10543e-15 iterations 132
Cbc0038I Pass   2: suminf.    8.63645 (47) obj. 0.0544432 iterations 48
Cbc0038I Pass   3: suminf.    8.54263 (42) obj. 1.06581e-14 iterations 15
Cbc0038I Pass   4: suminf.    9.25417 (33) obj. -7.10543e-15 iterations 106
Cbc0038I Pass   5: suminf.    8.16394 (29) obj. -7.10543e-15 iterations 34
Cbc0038I Pass   6: suminf.    8.06448 (30) obj. -7.10543e-15 iterations 32
Cbc0038I Pass   7: suminf.    8.18828 (33) obj. -7.10543e-15 iterations 90
Cbc0038I Pass   8: suminf.    7.37382 (34) obj. 1.06581e-14 iterations 44
Cbc0038I Pass   9: suminf.    6.76214 (28) obj. 1.06581e-14 iterations 37
Cbc0038I Pass  10: suminf.    5.94245 (27) obj. 1.06581e-14 iterations 20
Cbc0038I Pass  11: suminf.    7.02446 (37) obj. 0.0208108 iterations 64
Cbc0038I Pass  12: suminf.    6.51980 (28) obj. -7.10543e-15 iterations 69
Cbc0038I Pass  13: suminf.    5.77737 (29) obj. 7.10543e-15 iterations 48
Cbc0038I Pass  14: suminf.    6.46769 (24) obj. -7.10543e-15 iterations 100
Cbc0038I Pass  15: suminf.    5.58782 (25) obj. 7.10543e-15 iterations 65
Cbc0038I Pass  16: suminf.    5.37849 (26) obj. 7.10543e-15 iterations 33
Cbc0038I Pass  17: suminf.    6.47078 (27) obj. 0 iterations 73
Cbc0038I Pass  18: suminf.    5.34807 (29) obj. 7.10543e-15 iterations 53
Cbc0038I Pass  19: suminf.    5.24622 (32) obj. 7.10543e-15 iterations 23
Cbc0038I Pass  20: suminf.    5.77834 (25) obj. 0 iterations 83
Cbc0038I Pass  21: suminf.    5.13730 (28) obj. 7.10543e-15 iterations 50
Cbc0038I Pass  22: suminf.    5.08472 (27) obj. 7.10543e-15 iterations 3
Cbc0038I Pass  23: suminf.    7.47427 (32) obj. -7.10543e-15 iterations 110
Cbc0038I Pass  24: suminf.    6.23048 (31) obj. -7.10543e-15 iterations 66
Cbc0038I Pass  25: suminf.    6.23048 (31) obj. -7.10543e-15 iterations 2
Cbc0038I Pass  26: suminf.    9.20738 (33) obj. -7.10543e-15 iterations 86
Cbc0038I Pass  27: suminf.    7.16385 (35) obj. -7.10543e-15 iterations 66
Cbc0038I Pass  28: suminf.    7.59406 (37) obj. -7.10543e-15 iterations 98
Cbc0038I Pass  29: suminf.    6.83746 (31) obj. -7.10543e-15 iterations 92
Cbc0038I Pass  30: suminf.    6.69946 (36) obj. -7.10543e-15 iterations 15
Cbc0038I Pass  31: suminf.    6.65728 (36) obj. -7.10543e-15 iterations 12
Cbc0038I Pass  32: suminf.    7.47899 (33) obj. -7.10543e-15 iterations 43
Cbc0038I Pass  33: suminf.    6.81106 (34) obj. -7.10543e-15 iterations 49
Cbc0038I Pass  34: suminf.    6.62677 (36) obj. -7.10543e-15 iterations 11
Cbc0038I Pass  35: suminf.    6.62029 (38) obj. -7.10543e-15 iterations 72
Cbc0038I Pass  36: suminf.    6.33404 (37) obj. -7.10543e-15 iterations 37
Cbc0038I Pass  37: suminf.   10.48864 (39) obj. -7.10543e-15 iterations 108
Cbc0038I Pass  38: suminf.    7.67690 (33) obj. -7.10543e-15 iterations 67
Cbc0038I Pass  39: suminf.    6.90553 (42) obj. -7.10543e-15 iterations 65
Cbc0038I Pass  40: suminf.    7.18179 (38) obj. -7.10543e-15 iterations 64
Cbc0038I Pass  41: suminf.    6.65915 (49) obj. 0.0239283 iterations 59
Cbc0038I Pass  42: suminf.    9.25588 (39) obj. -7.10543e-15 iterations 75
Cbc0038I Pass  43: suminf.    7.90692 (41) obj. -7.10543e-15 iterations 64
Cbc0038I Pass  44: suminf.    7.48561 (40) obj. -7.10543e-15 iterations 16
Cbc0038I Pass  45: suminf.    7.31467 (41) obj. -7.10543e-15 iterations 16
Cbc0038I Pass  46: suminf.    6.91838 (35) obj. -7.10543e-15 iterations 43
Cbc0038I Pass  47: suminf.    6.81996 (35) obj. -7.10543e-15 iterations 3
Cbc0038I Pass  48: suminf.    6.81440 (38) obj. -7.10543e-15 iterations 10
Cbc0038I Pass  49: suminf.    7.25886 (36) obj. -7.10543e-15 iterations 57
Cbc0038I Pass  50: suminf.    6.78046 (38) obj. -7.10543e-15 iterations 34
Cbc0038I Pass  51: suminf.    7.16034 (37) obj. -7.10543e-15 iterations 64
Cbc0038I Pass  52: suminf.    6.91838 (36) obj. -7.10543e-15 iterations 29
Cbc0038I Pass  53: suminf.    6.89118 (37) obj. -7.10543e-15 iterations 7
Cbc0038I Pass  54: suminf.   14.07236 (53) obj. 1.83223 iterations 117
Cbc0038I Pass  55: suminf.    6.58458 (34) obj. 2 iterations 119
Cbc0038I Pass  56: suminf.    6.10075 (35) obj. 2 iterations 38
Cbc0038I Pass  57: suminf.    5.69866 (33) obj. 2 iterations 22
Cbc0038I Pass  58: suminf.    6.45452 (29) obj. 2 iterations 132
Cbc0038I Pass  59: suminf.    4.34155 (29) obj. 2 iterations 37
Cbc0038I Pass  60: suminf.    3.75339 (22) obj. 2 iterations 29
Cbc0038I Pass  61: suminf.    4.11625 (18) obj. 2 iterations 102
Cbc0038I Pass  62: suminf.    4.02828 (15) obj. 2 iterations 13
Cbc0038I Pass  63: suminf.    3.25429 (16) obj. 2 iterations 39
Cbc0038I Pass  64: suminf.    2.73175 (19) obj. 2 iterations 67
Cbc0038I Pass  65: suminf.    3.71252 (18) obj. 2 iterations 106
Cbc0038I Pass  66: suminf.    2.95663 (19) obj. 2 iterations 45
Cbc0038I Pass  67: suminf.    2.91847 (19) obj. 2 iterations 11
Cbc0038I Pass  68: suminf.    5.21696 (18) obj. 2 iterations 50
Cbc0038I Pass  69: suminf.    3.49697 (16) obj. 2 iterations 61
Cbc0038I Pass  70: suminf.    2.69135 (16) obj. 2 iterations 31
Cbc0038I Pass  71: suminf.    2.61099 (17) obj. 2 iterations 4
Cbc0038I Pass  72: suminf.    6.12576 (21) obj. 2 iterations 60
Cbc0038I Pass  73: suminf.    2.81679 (16) obj. 2 iterations 56
Cbc0038I Pass  74: suminf.    2.61099 (17) obj. 2 iterations 16
Cbc0038I Pass  75: suminf.    8.63292 (37) obj. 2 iterations 103
Cbc0038I Pass  76: suminf.    3.14762 (20) obj. 2 iterations 85
Cbc0038I Pass  77: suminf.    2.74603 (17) obj. 2 iterations 17
Cbc0038I Pass  78: suminf.    3.64288 (15) obj. 2 iterations 62
Cbc0038I Pass  79: suminf.    2.52778 (13) obj. 2 iterations 20
Cbc0038I Pass  80: suminf.    1.55556 (9) obj. 2 iterations 14
Cbc0038I Pass  81: suminf.    2.68547 (11) obj. 2 iterations 45
Cbc0038I Pass  82: suminf.    1.63932 (12) obj. 2 iterations 25
Cbc0038I Pass  83: suminf.    1.63077 (11) obj. 2 iterations 1
Cbc0038I Pass  84: suminf.    3.49231 (13) obj. 2 iterations 78
Cbc0038I Pass  85: suminf.    3.34630 (14) obj. 2 iterations 22
Cbc0038I Pass  86: suminf.    3.24444 (14) obj. 2 iterations 8
Cbc0038I Pass  87: suminf.    3.40687 (17) obj. 2 iterations 72
Cbc0038I Pass  88: suminf.    2.37411 (15) obj. 2 iterations 22
Cbc0038I Pass  89: suminf.    4.51277 (20) obj. 2 iterations 49
Cbc0038I Pass  90: suminf.    4.25741 (20) obj. 2 iterations 21
Cbc0038I Pass  91: suminf.    3.66111 (20) obj. 2 iterations 17
Cbc0038I Pass  92: suminf.    3.21497 (21) obj. 2 iterations 35
Cbc0038I Pass  93: suminf.    7.04285 (24) obj. 2 iterations 109
Cbc0038I Pass  94: suminf.    5.81271 (30) obj. 2 iterations 49
Cbc0038I Pass  95: suminf.    6.55302 (26) obj. 2 iterations 98
Cbc0038I Pass  96: suminf.    4.81190 (21) obj. 2 iterations 42
Cbc0038I Pass  97: suminf.    4.26429 (21) obj. 2 iterations 34
Cbc0038I Pass  98: suminf.    3.84074 (23) obj. 2 iterations 49
Cbc0038I Pass  99: suminf.    5.02845 (21) obj. 2 iterations 82
Cbc0038I Pass 100: suminf.    8.15303 (33) obj. 2 iterations 90
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 250 rows 490 columns, reduced to 179 rows 211 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.21 seconds)
Cbc0038I After 3.21 seconds - Feasibility pump exiting - took 0.97 seconds
Cbc0031I 62 added rows had average density of 104.12903
Cbc0013I At root node, 62 cuts changed objective from 0 to 0.27780638 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 248 row cuts average 5.9 elements, 0 column cuts (0 active)  in 4.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2138 row cuts average 474.3 elements, 0 column cuts (0 active)  in 5.931 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.798 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.412 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 179 row cuts average 41.2 elements, 0 column cuts (0 active)  in 0.399 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 373 row cuts average 206.7 elements, 0 column cuts (0 active)  in 0.904 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 289 row cuts average 58.8 elements, 0 column cuts (0 active)  in 0.971 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (42.77 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (44.22 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (45.26 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (45.96 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (46.76 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (47.68 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (48.40 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 1 (49.24 seconds)
Cbc0010I After 12 nodes, 11 on tree, 1e+50 best solution, best possible 1 (49.98 seconds)
Cbc0010I After 16 nodes, 9 on tree, 1e+50 best solution, best possible 1 (50.95 seconds)
Cbc0010I After 19 nodes, 11 on tree, 1e+50 best solution, best possible 1 (51.73 seconds)
Cbc0010I After 25 nodes, 9 on tree, 1e+50 best solution, best possible 1 (52.46 seconds)
Cbc0010I After 27 nodes, 10 on tree, 1e+50 best solution, best possible 1 (53.18 seconds)
Cbc0010I After 32 nodes, 11 on tree, 1e+50 best solution, best possible 1 (54.01 seconds)
Cbc0010I After 36 nodes, 12 on tree, 1e+50 best solution, best possible 1 (54.72 seconds)
Cbc0010I After 44 nodes, 12 on tree, 1e+50 best solution, best possible 1 (55.59 seconds)
Cbc0010I After 50 nodes, 10 on tree, 1e+50 best solution, best possible 1 (56.48 seconds)
Cbc0010I After 55 nodes, 11 on tree, 1e+50 best solution, best possible 1 (57.24 seconds)
Cbc0010I After 59 nodes, 11 on tree, 1e+50 best solution, best possible 1 (57.99 seconds)
Cbc0010I After 65 nodes, 13 on tree, 1e+50 best solution, best possible 1 (58.89 seconds)
Cbc0010I After 74 nodes, 10 on tree, 1e+50 best solution, best possible 1 (59.67 seconds)
Cbc0010I After 77 nodes, 12 on tree, 1e+50 best solution, best possible 1 (60.54 seconds)
Cbc0010I After 84 nodes, 10 on tree, 1e+50 best solution, best possible 1 (61.64 seconds)
Cbc0010I After 89 nodes, 11 on tree, 1e+50 best solution, best possible 1 (62.42 seconds)
Cbc0010I After 97 nodes, 12 on tree, 1e+50 best solution, best possible 1 (63.18 seconds)
Cbc0010I After 115 nodes, 7 on tree, 1e+50 best solution, best possible 1 (64.02 seconds)
Cbc0010I After 126 nodes, 9 on tree, 1e+50 best solution, best possible 1 (64.81 seconds)
Cbc0010I After 139 nodes, 8 on tree, 1e+50 best solution, best possible 1 (65.56 seconds)
Cbc0010I After 152 nodes, 8 on tree, 1e+50 best solution, best possible 1 (66.34 seconds)
Cbc0010I After 161 nodes, 8 on tree, 1e+50 best solution, best possible 1 (67.04 seconds)
Cbc0010I After 172 nodes, 6 on tree, 1e+50 best solution, best possible 1 (67.82 seconds)
Cbc0010I After 177 nodes, 7 on tree, 1e+50 best solution, best possible 1 (68.53 seconds)
Cbc0010I After 187 nodes, 8 on tree, 1e+50 best solution, best possible 1 (69.23 seconds)
Cbc0010I After 198 nodes, 6 on tree, 1e+50 best solution, best possible 1 (69.97 seconds)
Cbc0010I After 204 nodes, 3 on tree, 1e+50 best solution, best possible 1 (71.02 seconds)
Cbc0010I After 208 nodes, 3 on tree, 1e+50 best solution, best possible 1 (72.06 seconds)
Cbc0010I After 218 nodes, 2 on tree, 1e+50 best solution, best possible 1 (72.76 seconds)
Cbc0010I After 220 nodes, 1 on tree, 1e+50 best solution, best possible 2 (73.47 seconds)
Cbc0010I After 222 nodes, 3 on tree, 1e+50 best solution, best possible 2 (74.34 seconds)
Cbc0010I After 238 nodes, 11 on tree, 1e+50 best solution, best possible 2 (75.06 seconds)
Cbc0004I Integer solution of 2 found after 47667 iterations and 278 nodes (75.71 seconds)
Cbc0001I Search completed - best objective 2, took 47667 iterations and 278 nodes (75.71 seconds)
Cbc0032I Strong branching done 1474 times (48740 iterations), fathomed 3 nodes and fixed 19 variables
Cbc0035I Maximum depth 22, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 350 times and created 1281 cuts of which 0 were active after adding rounds of cuts (5.21463 seconds)
Gomory was tried 346 times and created 2146 cuts of which 0 were active after adding rounds of cuts (6.63711 seconds)
Knapsack was tried 346 times and created 332 cuts of which 0 were active after adding rounds of cuts (2.25777 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.113887 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.411543 seconds)
MixedIntegerRounding2 was tried 346 times and created 821 cuts of which 0 were active after adding rounds of cuts (1.18555 seconds)
FlowCover was tried 100 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.129255 seconds)
TwoMirCuts was tried 346 times and created 1210 cuts of which 0 were active after adding rounds of cuts (1.45414 seconds)
ZeroHalf was tried 346 times and created 1716 cuts of which 0 were active after adding rounds of cuts (2.46704 seconds)

Result - Optimal solution found
Objective value:                2
Enumerated nodes:               278
Total iterations:               47667
Time (CPU seconds):             49.4407
Time (Wallclock seconds):       75.9862
Total time (CPU seconds):       49.4606   (Wallclock seconds):       76.0265
