Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3033/j3033_5.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 8.24509 - 0.701918 seconds
Cgl0003I 3 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 363 rows, 1843 columns (1843 integer (1842 of which binary)) and 22880 elements
Coin3009W Conflict graph built in 1.245 seconds, density: 1.554%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1843 objects (1843 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 129 integers unsatisfied sum - 24.2702
Cbc0038I Pass   1: suminf.   17.04262 (89) obj. 9 iterations 286
Cbc0038I Pass   2: suminf.   15.04384 (87) obj. 10.467 iterations 120
Cbc0038I Pass   3: suminf.   13.10915 (74) obj. 12 iterations 96
Cbc0038I Pass   4: suminf.   12.82750 (73) obj. 12 iterations 73
Cbc0038I Pass   5: suminf.   12.72787 (78) obj. 12 iterations 173
Cbc0038I Pass   6: suminf.   11.75202 (77) obj. 12 iterations 112
Cbc0038I Pass   7: suminf.   11.37913 (80) obj. 12 iterations 29
Cbc0038I Pass   8: suminf.   11.65414 (74) obj. 12 iterations 78
Cbc0038I Pass   9: suminf.   11.32654 (76) obj. 12 iterations 77
Cbc0038I Pass  10: suminf.   11.26317 (72) obj. 12 iterations 18
Cbc0038I Pass  11: suminf.   14.58113 (74) obj. 12 iterations 258
Cbc0038I Pass  12: suminf.   12.67258 (76) obj. 12 iterations 138
Cbc0038I Pass  13: suminf.   12.64788 (77) obj. 12 iterations 29
Cbc0038I Pass  14: suminf.   12.33753 (67) obj. 12 iterations 181
Cbc0038I Pass  15: suminf.   11.23002 (64) obj. 12 iterations 115
Cbc0038I Pass  16: suminf.   10.91804 (59) obj. 12 iterations 44
Cbc0038I Pass  17: suminf.   11.32936 (56) obj. 12 iterations 81
Cbc0038I Pass  18: suminf.    9.84076 (49) obj. 12 iterations 67
Cbc0038I Pass  19: suminf.    9.75619 (52) obj. 12 iterations 30
Cbc0038I Pass  20: suminf.   11.43054 (68) obj. 12 iterations 108
Cbc0038I Pass  21: suminf.   10.47117 (73) obj. 12 iterations 30
Cbc0038I Pass  22: suminf.   13.02916 (61) obj. 12 iterations 243
Cbc0038I Pass  23: suminf.   11.20752 (59) obj. 12 iterations 94
Cbc0038I Pass  24: suminf.   11.11291 (60) obj. 12 iterations 23
Cbc0038I Pass  25: suminf.   12.35144 (62) obj. 12 iterations 131
Cbc0038I Pass  26: suminf.   11.47095 (61) obj. 12 iterations 111
Cbc0038I Pass  27: suminf.   10.70031 (56) obj. 12 iterations 23
Cbc0038I Pass  28: suminf.    9.42243 (58) obj. 12 iterations 62
Cbc0038I Pass  29: suminf.   12.40254 (56) obj. 12 iterations 143
Cbc0038I Pass  30: suminf.    9.91388 (64) obj. 12 iterations 118
Cbc0038I Pass  31: suminf.    9.83077 (63) obj. 12 iterations 15
Cbc0038I Pass  32: suminf.   10.59721 (59) obj. 12 iterations 94
Cbc0038I Pass  33: suminf.    8.75113 (61) obj. 12 iterations 81
Cbc0038I Pass  34: suminf.    8.22172 (61) obj. 12 iterations 29
Cbc0038I Pass  35: suminf.   11.24264 (62) obj. 12 iterations 122
Cbc0038I Pass  36: suminf.    9.39529 (50) obj. 12 iterations 105
Cbc0038I Pass  37: suminf.    8.88688 (51) obj. 12 iterations 54
Cbc0038I Pass  38: suminf.    8.54849 (53) obj. 12 iterations 62
Cbc0038I Pass  39: suminf.    8.78085 (53) obj. 12 iterations 145
Cbc0038I Pass  40: suminf.    8.24978 (52) obj. 12 iterations 70
Cbc0038I Pass  41: suminf.   10.30946 (54) obj. 12 iterations 154
Cbc0038I Pass  42: suminf.    9.42152 (51) obj. 12 iterations 68
Cbc0038I Pass  43: suminf.    9.35720 (52) obj. 12 iterations 35
Cbc0038I Pass  44: suminf.    9.29330 (53) obj. 12 iterations 59
Cbc0038I Pass  45: suminf.   11.02380 (55) obj. 12 iterations 114
Cbc0038I Pass  46: suminf.   10.55363 (51) obj. 12 iterations 130
Cbc0038I Pass  47: suminf.    9.27672 (56) obj. 12 iterations 90
Cbc0038I Pass  48: suminf.    9.21467 (56) obj. 12 iterations 135
Cbc0038I Pass  49: suminf.    8.54804 (57) obj. 12 iterations 94
Cbc0038I Pass  50: suminf.    8.14977 (56) obj. 12 iterations 9
Cbc0038I Pass  51: suminf.    9.90967 (53) obj. 12 iterations 72
Cbc0038I Pass  52: suminf.    8.54412 (61) obj. 12 iterations 63
Cbc0038I Pass  53: suminf.    8.42584 (62) obj. 12 iterations 13
Cbc0038I Pass  54: suminf.   11.79790 (62) obj. 12 iterations 165
Cbc0038I Pass  55: suminf.    8.78824 (50) obj. 12 iterations 101
Cbc0038I Pass  56: suminf.    8.73755 (51) obj. 12 iterations 12
Cbc0038I Pass  57: suminf.   10.05405 (58) obj. 12 iterations 109
Cbc0038I Pass  58: suminf.    9.23429 (58) obj. 12 iterations 56
Cbc0038I Pass  59: suminf.    9.21210 (53) obj. 12 iterations 27
Cbc0038I Pass  60: suminf.   10.96852 (59) obj. 12 iterations 112
Cbc0038I Pass  61: suminf.    9.85692 (54) obj. 12 iterations 74
Cbc0038I Pass  62: suminf.    9.07153 (52) obj. 12 iterations 86
Cbc0038I Pass  63: suminf.    8.73755 (51) obj. 12 iterations 10
Cbc0038I Pass  64: suminf.   12.04067 (52) obj. 12 iterations 154
Cbc0038I Pass  65: suminf.   11.39962 (50) obj. 12 iterations 72
Cbc0038I Pass  66: suminf.   11.13967 (46) obj. 12 iterations 86
Cbc0038I Pass  67: suminf.   10.62431 (50) obj. 12 iterations 10
Cbc0038I Pass  68: suminf.    8.96743 (56) obj. 12 iterations 88
Cbc0038I Pass  69: suminf.    8.55095 (58) obj. 12 iterations 40
Cbc0038I Pass  70: suminf.   10.13492 (52) obj. 12 iterations 169
Cbc0038I Pass  71: suminf.    9.08566 (56) obj. 12 iterations 135
Cbc0038I Pass  72: suminf.    9.59551 (49) obj. 12 iterations 109
Cbc0038I Pass  73: suminf.    8.64849 (58) obj. 12 iterations 81
Cbc0038I Pass  74: suminf.    9.57909 (56) obj. 12 iterations 81
Cbc0038I Pass  75: suminf.    8.99095 (63) obj. 12 iterations 57
Cbc0038I Pass  76: suminf.    8.99095 (63) obj. 12 iterations 3
Cbc0038I Pass  77: suminf.   10.55753 (52) obj. 12 iterations 125
Cbc0038I Pass  78: suminf.    9.52622 (56) obj. 12 iterations 85
Cbc0038I Pass  79: suminf.    9.50357 (54) obj. 12 iterations 9
Cbc0038I Pass  80: suminf.   10.54152 (52) obj. 12 iterations 140
Cbc0038I Pass  81: suminf.    9.23108 (53) obj. 12 iterations 105
Cbc0038I Pass  82: suminf.    8.83201 (53) obj. 12 iterations 29
Cbc0038I Pass  83: suminf.   10.43472 (56) obj. 12 iterations 111
Cbc0038I Pass  84: suminf.    9.36105 (56) obj. 12 iterations 64
Cbc0038I Pass  85: suminf.    8.67516 (53) obj. 12 iterations 45
Cbc0038I Pass  86: suminf.    8.60969 (52) obj. 12 iterations 12
Cbc0038I Pass  87: suminf.    9.14095 (57) obj. 12 iterations 140
Cbc0038I Pass  88: suminf.    8.47302 (60) obj. 12 iterations 89
Cbc0038I Pass  89: suminf.   10.30523 (51) obj. 12 iterations 93
Cbc0038I Pass  90: suminf.    8.60556 (57) obj. 12 iterations 67
Cbc0038I Pass  91: suminf.   12.14268 (62) obj. 12 iterations 147
Cbc0038I Pass  92: suminf.    8.97110 (56) obj. 12 iterations 116
Cbc0038I Pass  93: suminf.    8.46754 (60) obj. 12 iterations 33
Cbc0038I Pass  94: suminf.    9.94179 (59) obj. 12 iterations 127
Cbc0038I Pass  95: suminf.    7.51099 (55) obj. 12 iterations 100
Cbc0038I Pass  96: suminf.    7.41375 (58) obj. 12 iterations 30
Cbc0038I Pass  97: suminf.   11.07306 (48) obj. 12 iterations 151
Cbc0038I Pass  98: suminf.    8.45156 (49) obj. 12 iterations 89
Cbc0038I Pass  99: suminf.    9.12669 (50) obj. 12 iterations 80
Cbc0038I Pass 100: suminf.   19.08616 (89) obj. 10.0423 iterations 263
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1454 integers at bound fixed and 0 continuous
Cbc0038I Full problem 363 rows 1843 columns, reduced to 262 rows 360 columns
Cbc0038I Mini branch and bound did not improve solution (7.31 seconds)
Cbc0038I After 7.31 seconds - Feasibility pump exiting - took 2.72 seconds
Cbc0031I 185 added rows had average density of 84.216216
Cbc0013I At root node, 185 cuts changed objective from 8.4185608 to 10.434362 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 509 row cuts average 20.9 elements, 0 column cuts (39 active)  in 5.540 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 390.1 elements, 0 column cuts (0 active)  in 2.280 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.268 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 207 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.230 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.813 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 529 row cuts average 102.8 elements, 0 column cuts (0 active)  in 0.550 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 170 row cuts average 140.9 elements, 0 column cuts (0 active)  in 0.526 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 199 row cuts average 136.7 elements, 0 column cuts (0 active)  in 0.907 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 11 (25.88 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 11 (27.19 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 11 (27.96 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 11 (28.66 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 11 (30.02 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 11 (30.76 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 11 (31.62 seconds)
Cbc0010I After 11 nodes, 9 on tree, 1e+50 best solution, best possible 11 (32.65 seconds)
Cbc0010I After 13 nodes, 9 on tree, 1e+50 best solution, best possible 11 (33.44 seconds)
Cbc0010I After 15 nodes, 9 on tree, 1e+50 best solution, best possible 11 (34.39 seconds)
Cbc0010I After 17 nodes, 9 on tree, 1e+50 best solution, best possible 11 (35.19 seconds)
Cbc0010I After 18 nodes, 9 on tree, 1e+50 best solution, best possible 11 (36.00 seconds)
Cbc0010I After 19 nodes, 8 on tree, 1e+50 best solution, best possible 11 (36.76 seconds)
Cbc0010I After 21 nodes, 8 on tree, 1e+50 best solution, best possible 11 (37.69 seconds)
Cbc0010I After 23 nodes, 8 on tree, 1e+50 best solution, best possible 11 (38.41 seconds)
Cbc0010I After 25 nodes, 8 on tree, 1e+50 best solution, best possible 11 (39.48 seconds)
Cbc0010I After 27 nodes, 8 on tree, 1e+50 best solution, best possible 11 (41.18 seconds)
Cbc0010I After 30 nodes, 8 on tree, 1e+50 best solution, best possible 11 (42.08 seconds)
Cbc0010I After 32 nodes, 6 on tree, 1e+50 best solution, best possible 11 (43.03 seconds)
Cbc0010I After 34 nodes, 7 on tree, 1e+50 best solution, best possible 11 (43.93 seconds)
Cbc0010I After 37 nodes, 6 on tree, 1e+50 best solution, best possible 11 (45.31 seconds)
Cbc0010I After 39 nodes, 8 on tree, 1e+50 best solution, best possible 11 (46.17 seconds)
Cbc0010I After 41 nodes, 7 on tree, 1e+50 best solution, best possible 11 (46.92 seconds)
Cbc0010I After 43 nodes, 6 on tree, 1e+50 best solution, best possible 11 (47.93 seconds)
Cbc0010I After 46 nodes, 5 on tree, 1e+50 best solution, best possible 11 (49.20 seconds)
Cbc0010I After 48 nodes, 7 on tree, 1e+50 best solution, best possible 11 (50.20 seconds)
Cbc0010I After 50 nodes, 7 on tree, 1e+50 best solution, best possible 11 (51.26 seconds)
Cbc0010I After 53 nodes, 5 on tree, 1e+50 best solution, best possible 11 (52.02 seconds)
Cbc0010I After 54 nodes, 4 on tree, 1e+50 best solution, best possible 11 (52.86 seconds)
Cbc0010I After 55 nodes, 4 on tree, 1e+50 best solution, best possible 11 (53.69 seconds)
Cbc0010I After 57 nodes, 5 on tree, 1e+50 best solution, best possible 11 (54.55 seconds)
Cbc0010I After 59 nodes, 3 on tree, 1e+50 best solution, best possible 11 (55.32 seconds)
Cbc0010I After 60 nodes, 3 on tree, 1e+50 best solution, best possible 11 (56.05 seconds)
Cbc0010I After 62 nodes, 5 on tree, 1e+50 best solution, best possible 11 (57.25 seconds)
Cbc0010I After 65 nodes, 6 on tree, 1e+50 best solution, best possible 11 (58.23 seconds)
Cbc0010I After 68 nodes, 7 on tree, 1e+50 best solution, best possible 11 (59.21 seconds)
Cbc0010I After 70 nodes, 7 on tree, 1e+50 best solution, best possible 11 (59.96 seconds)
Cbc0010I After 72 nodes, 7 on tree, 1e+50 best solution, best possible 11 (60.71 seconds)
Cbc0010I After 75 nodes, 5 on tree, 1e+50 best solution, best possible 11 (61.48 seconds)
Cbc0010I After 78 nodes, 2 on tree, 1e+50 best solution, best possible 11 (62.26 seconds)
Cbc0010I After 79 nodes, 2 on tree, 1e+50 best solution, best possible 11 (63.13 seconds)
Cbc0010I After 80 nodes, 3 on tree, 1e+50 best solution, best possible 11 (63.92 seconds)
Cbc0010I After 81 nodes, 3 on tree, 1e+50 best solution, best possible 11 (64.62 seconds)
Cbc0010I After 84 nodes, 1 on tree, 1e+50 best solution, best possible 12 (66.29 seconds)
Cbc0010I After 86 nodes, 3 on tree, 1e+50 best solution, best possible 12 (67.47 seconds)
Cbc0010I After 88 nodes, 5 on tree, 1e+50 best solution, best possible 12 (68.48 seconds)
Cbc0010I After 92 nodes, 7 on tree, 1e+50 best solution, best possible 12 (69.33 seconds)
Cbc0010I After 93 nodes, 6 on tree, 1e+50 best solution, best possible 12 (70.38 seconds)
Cbc0010I After 96 nodes, 9 on tree, 1e+50 best solution, best possible 12 (71.21 seconds)
Cbc0010I After 97 nodes, 8 on tree, 1e+50 best solution, best possible 12 (72.02 seconds)
Cbc0010I After 99 nodes, 9 on tree, 1e+50 best solution, best possible 12 (72.76 seconds)
Cbc0010I After 102 nodes, 9 on tree, 1e+50 best solution, best possible 12 (73.67 seconds)
Cbc0010I After 105 nodes, 11 on tree, 1e+50 best solution, best possible 12 (74.62 seconds)
Cbc0010I After 108 nodes, 11 on tree, 1e+50 best solution, best possible 12 (75.41 seconds)
Cbc0010I After 112 nodes, 9 on tree, 1e+50 best solution, best possible 12 (76.62 seconds)
Cbc0010I After 116 nodes, 9 on tree, 1e+50 best solution, best possible 12 (77.50 seconds)
Cbc0010I After 119 nodes, 10 on tree, 1e+50 best solution, best possible 12 (78.31 seconds)
Cbc0010I After 122 nodes, 11 on tree, 1e+50 best solution, best possible 12 (79.18 seconds)
Cbc0010I After 124 nodes, 9 on tree, 1e+50 best solution, best possible 12 (80.29 seconds)
Cbc0010I After 127 nodes, 10 on tree, 1e+50 best solution, best possible 12 (81.15 seconds)
Cbc0016I Integer solution of 12 found by strong branching after 94318 iterations and 130 nodes (81.93 seconds)
Cbc0001I Search completed - best objective 12, took 94789 iterations and 130 nodes (82.13 seconds)
Cbc0032I Strong branching done 640 times (6367 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 20, 0 variables fixed on reduced cost
Cuts at root node changed objective from 8.41856 to 11
Probing was tried 131 times and created 1166 cuts of which 39 were active after adding rounds of cuts (7.61621 seconds)
Gomory was tried 25 times and created 36 cuts of which 0 were active after adding rounds of cuts (2.27966 seconds)
Knapsack was tried 130 times and created 37 cuts of which 0 were active after adding rounds of cuts (1.31817 seconds)
Clique was tried 130 times and created 1293 cuts of which 0 were active after adding rounds of cuts (1.06089 seconds)
OddWheel was tried 25 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.813287 seconds)
MixedIntegerRounding2 was tried 130 times and created 2497 cuts of which 0 were active after adding rounds of cuts (2.56885 seconds)
FlowCover was tried 25 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019664 seconds)
TwoMirCuts was tried 130 times and created 534 cuts of which 0 were active after adding rounds of cuts (1.15251 seconds)
ZeroHalf was tried 130 times and created 1123 cuts of which 0 were active after adding rounds of cuts (4.07658 seconds)

Result - Optimal solution found
Objective value:                12
Enumerated nodes:               130
Total iterations:               94789
Time (CPU seconds):             82.1639
Time (Wallclock seconds):       82.2202
Total time (CPU seconds):       82.2744   (Wallclock seconds):       82.3413
