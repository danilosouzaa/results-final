Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3042/j3042_7.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.49009 - 0.172046 seconds
Cgl0002I 13 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 288 rows, 703 columns (703 integer (702 of which binary)) and 7640 elements
Coin3009W Conflict graph built in 0.022 seconds, density: 1.125%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 703 objects (703 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 78 integers unsatisfied sum - 20.7528
Cbc0038I Pass   1: suminf.   16.21143 (63) obj. 2.18432 iterations 99
Cbc0038I Pass   2: suminf.   10.47382 (51) obj. 4 iterations 33
Cbc0038I Pass   3: suminf.   10.47382 (51) obj. 4 iterations 2
Cbc0038I Pass   4: suminf.    9.54308 (40) obj. 4 iterations 77
Cbc0038I Pass   5: suminf.    8.82796 (42) obj. 4 iterations 35
Cbc0038I Pass   6: suminf.    8.07921 (44) obj. 4 iterations 26
Cbc0038I Pass   7: suminf.    6.80337 (38) obj. 4 iterations 30
Cbc0038I Pass   8: suminf.    8.25227 (38) obj. 4 iterations 74
Cbc0038I Pass   9: suminf.    7.30061 (42) obj. 4 iterations 41
Cbc0038I Pass  10: suminf.    6.86802 (41) obj. 4 iterations 19
Cbc0038I Pass  11: suminf.   11.63033 (41) obj. 4 iterations 84
Cbc0038I Pass  12: suminf.    8.84331 (41) obj. 4 iterations 45
Cbc0038I Pass  13: suminf.    8.47967 (36) obj. 4 iterations 99
Cbc0038I Pass  14: suminf.    8.10007 (39) obj. 4 iterations 30
Cbc0038I Pass  15: suminf.    9.76805 (35) obj. 4 iterations 78
Cbc0038I Pass  16: suminf.    8.66887 (39) obj. 4 iterations 41
Cbc0038I Pass  17: suminf.    8.20301 (41) obj. 4 iterations 34
Cbc0038I Pass  18: suminf.    8.07458 (42) obj. 4 iterations 41
Cbc0038I Pass  19: suminf.    8.07778 (33) obj. 4 iterations 82
Cbc0038I Pass  20: suminf.    7.72705 (38) obj. 4 iterations 26
Cbc0038I Pass  21: suminf.    9.37099 (41) obj. 4 iterations 58
Cbc0038I Pass  22: suminf.    7.91667 (32) obj. 4 iterations 29
Cbc0038I Pass  23: suminf.    8.48997 (43) obj. 4 iterations 57
Cbc0038I Pass  24: suminf.    7.68858 (36) obj. 4 iterations 34
Cbc0038I Pass  25: suminf.    7.12503 (44) obj. 4 iterations 31
Cbc0038I Pass  26: suminf.    6.92836 (44) obj. 4 iterations 9
Cbc0038I Pass  27: suminf.    6.51224 (40) obj. 4 iterations 15
Cbc0038I Pass  28: suminf.    8.66781 (38) obj. 4 iterations 65
Cbc0038I Pass  29: suminf.    7.71164 (39) obj. 4 iterations 29
Cbc0038I Pass  30: suminf.    7.54247 (32) obj. 4 iterations 16
Cbc0038I Pass  31: suminf.    7.66919 (40) obj. 4 iterations 71
Cbc0038I Pass  32: suminf.    6.88147 (40) obj. 4 iterations 54
Cbc0038I Pass  33: suminf.    7.48859 (46) obj. 4 iterations 62
Cbc0038I Pass  34: suminf.    7.28961 (45) obj. 4 iterations 35
Cbc0038I Pass  35: suminf.   11.68850 (43) obj. 4 iterations 102
Cbc0038I Pass  36: suminf.    8.18753 (42) obj. 4 iterations 59
Cbc0038I Pass  37: suminf.    8.09623 (39) obj. 4 iterations 11
Cbc0038I Pass  38: suminf.    6.90192 (33) obj. 4 iterations 61
Cbc0038I Pass  39: suminf.    6.78111 (30) obj. 4 iterations 9
Cbc0038I Pass  40: suminf.    7.42893 (30) obj. 4 iterations 49
Cbc0038I Pass  41: suminf.    7.22685 (30) obj. 4 iterations 26
Cbc0038I Pass  42: suminf.    6.95403 (29) obj. 4 iterations 32
Cbc0038I Pass  43: suminf.   13.66553 (58) obj. 4 iterations 143
Cbc0038I Pass  44: suminf.    8.23479 (47) obj. 4 iterations 106
Cbc0038I Pass  45: suminf.    7.19831 (37) obj. 4 iterations 15
Cbc0038I Pass  46: suminf.    7.11800 (36) obj. 4 iterations 7
Cbc0038I Pass  47: suminf.    5.97289 (34) obj. 4 iterations 30
Cbc0038I Pass  48: suminf.    5.63903 (35) obj. 4 iterations 17
Cbc0038I Pass  49: suminf.    6.27261 (28) obj. 4 iterations 59
Cbc0038I Pass  50: suminf.    5.79958 (31) obj. 4 iterations 38
Cbc0038I Pass  51: suminf.    5.78641 (27) obj. 4 iterations 42
Cbc0038I Pass  52: suminf.    4.71888 (31) obj. 4 iterations 40
Cbc0038I Pass  53: suminf.    8.68707 (29) obj. 4 iterations 53
Cbc0038I Pass  54: suminf.    5.67745 (25) obj. 4 iterations 49
Cbc0038I Pass  55: suminf.    4.84784 (28) obj. 4 iterations 12
Cbc0038I Pass  56: suminf.    4.84784 (28) obj. 4 iterations 2
Cbc0038I Pass  57: suminf.    8.14653 (29) obj. 4 iterations 64
Cbc0038I Pass  58: suminf.    5.87283 (26) obj. 4 iterations 38
Cbc0038I Pass  59: suminf.    4.58574 (28) obj. 4 iterations 35
Cbc0038I Pass  60: suminf.    4.58574 (28) obj. 4 iterations 3
Cbc0038I Pass  61: suminf.    6.11085 (24) obj. 4 iterations 39
Cbc0038I Pass  62: suminf.    5.08574 (28) obj. 4 iterations 37
Cbc0038I Pass  63: suminf.    8.61230 (31) obj. 4 iterations 61
Cbc0038I Pass  64: suminf.    7.06079 (31) obj. 4 iterations 38
Cbc0038I Pass  65: suminf.    6.15279 (32) obj. 4 iterations 11
Cbc0038I Pass  66: suminf.    7.89096 (29) obj. 4 iterations 27
Cbc0038I Pass  67: suminf.    6.64722 (29) obj. 4 iterations 23
Cbc0038I Pass  68: suminf.    7.60943 (34) obj. 4 iterations 37
Cbc0038I Pass  69: suminf.    7.16428 (31) obj. 4 iterations 26
Cbc0038I Pass  70: suminf.    6.14722 (29) obj. 4 iterations 17
Cbc0038I Pass  71: suminf.    7.60814 (28) obj. 4 iterations 40
Cbc0038I Pass  72: suminf.    6.31389 (29) obj. 4 iterations 20
Cbc0038I Pass  73: suminf.    5.31389 (27) obj. 4 iterations 3
Cbc0038I Pass  74: suminf.    5.31389 (27) obj. 4 iterations 0
Cbc0038I Pass  75: suminf.    7.15145 (31) obj. 4 iterations 50
Cbc0038I Pass  76: suminf.    6.57221 (30) obj. 4 iterations 31
Cbc0038I Pass  77: suminf.    5.43991 (33) obj. 4 iterations 36
Cbc0038I Pass  78: suminf.    7.62041 (32) obj. 4 iterations 26
Cbc0038I Pass  79: suminf.    5.74086 (26) obj. 4 iterations 22
Cbc0038I Pass  80: suminf.    5.15792 (24) obj. 4 iterations 13
Cbc0038I Pass  81: suminf.    7.86596 (26) obj. 4 iterations 31
Cbc0038I Pass  82: suminf.    6.07379 (25) obj. 4 iterations 43
Cbc0038I Pass  83: suminf.    7.12787 (27) obj. 4 iterations 41
Cbc0038I Pass  84: suminf.    5.98778 (25) obj. 4 iterations 72
Cbc0038I Pass  85: suminf.    5.32111 (24) obj. 4 iterations 3
Cbc0038I Pass  86: suminf.    7.32913 (25) obj. 4 iterations 27
Cbc0038I Pass  87: suminf.    6.05218 (25) obj. 4 iterations 22
Cbc0038I Pass  88: suminf.    6.76814 (27) obj. 4 iterations 25
Cbc0038I Pass  89: suminf.    5.15792 (24) obj. 4 iterations 16
Cbc0038I Pass  90: suminf.    8.00008 (30) obj. 4 iterations 30
Cbc0038I Pass  91: suminf.    7.06428 (28) obj. 4 iterations 47
Cbc0038I Pass  92: suminf.    6.05218 (25) obj. 4 iterations 17
Cbc0038I Pass  93: suminf.    5.92944 (30) obj. 4 iterations 37
Cbc0038I Pass  94: suminf.    5.52624 (34) obj. 4 iterations 16
Cbc0038I Pass  95: suminf.    7.43333 (30) obj. 4 iterations 32
Cbc0038I Pass  96: suminf.    6.42963 (31) obj. 4 iterations 19
Cbc0038I Pass  97: suminf.    6.35556 (30) obj. 4 iterations 4
Cbc0038I Pass  98: suminf.    7.60697 (34) obj. 4 iterations 41
Cbc0038I Pass  99: suminf.    7.06246 (30) obj. 4 iterations 16
Cbc0038I Pass 100: suminf.   16.41772 (64) obj. 4 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 461 integers at bound fixed and 0 continuous
Cbc0038I Full problem 288 rows 703 columns, reduced to 205 rows 219 columns
Cbc0038I Mini branch and bound did not improve solution (1.77 seconds)
Cbc0038I After 1.77 seconds - Feasibility pump exiting - took 0.78 seconds
Cbc0031I 84 added rows had average density of 46.154762
Cbc0013I At root node, 84 cuts changed objective from 1.4900889 to 2.9998999 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 328 row cuts average 5.8 elements, 2 column cuts (77 active)  in 0.278 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 215 row cuts average 579.6 elements, 0 column cuts (0 active)  in 0.459 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 148 row cuts average 51.9 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 190 row cuts average 109.7 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 141 row cuts average 51.4 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2.9998999 (3.88 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2.9998999 (4.79 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 2.9998999 (5.65 seconds)
Cbc0010I After 13 nodes, 10 on tree, 1e+50 best solution, best possible 2.9998999 (6.42 seconds)
Cbc0010I After 17 nodes, 12 on tree, 1e+50 best solution, best possible 2.9998999 (7.16 seconds)
Cbc0010I After 28 nodes, 3 on tree, 1e+50 best solution, best possible 2.9998999 (8.13 seconds)
Cbc0010I After 30 nodes, 5 on tree, 1e+50 best solution, best possible 2.9998999 (9.73 seconds)
Cbc0010I After 38 nodes, 3 on tree, 1e+50 best solution, best possible 2.9998999 (10.71 seconds)
Cbc0010I After 40 nodes, 5 on tree, 1e+50 best solution, best possible 2.9998999 (11.45 seconds)
Cbc0010I After 51 nodes, 10 on tree, 1e+50 best solution, best possible 2.9998999 (12.21 seconds)
Cbc0010I After 63 nodes, 14 on tree, 1e+50 best solution, best possible 2.9998999 (12.91 seconds)
Cbc0010I After 74 nodes, 18 on tree, 1e+50 best solution, best possible 2.9998999 (13.66 seconds)
Cbc0010I After 91 nodes, 20 on tree, 1e+50 best solution, best possible 2.9998999 (14.40 seconds)
Cbc0010I After 101 nodes, 23 on tree, 1e+50 best solution, best possible 2.9998999 (15.10 seconds)
Cbc0004I Integer solution of 4 found after 17225 iterations and 120 nodes (15.59 seconds)
Cbc0001I Search completed - best objective 4, took 17225 iterations and 121 nodes (15.59 seconds)
Cbc0032I Strong branching done 1566 times (34096 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 28, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.49009 to 2.9999
Probing was tried 108 times and created 1097 cuts of which 75 were active after adding rounds of cuts (0.634866 seconds)
Gomory was tried 106 times and created 227 cuts of which 0 were active after adding rounds of cuts (0.69882 seconds)
Knapsack was tried 106 times and created 173 cuts of which 0 were active after adding rounds of cuts (0.764709 seconds)
Clique was tried 11 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.011903 seconds)
OddWheel was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047814 seconds)
MixedIntegerRounding2 was tried 106 times and created 611 cuts of which 0 were active after adding rounds of cuts (0.344511 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002008 seconds)
TwoMirCuts was tried 106 times and created 427 cuts of which 0 were active after adding rounds of cuts (0.240763 seconds)
ZeroHalf was tried 106 times and created 562 cuts of which 0 were active after adding rounds of cuts (0.571264 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               121
Total iterations:               17225
Time (CPU seconds):             15.6416
Time (Wallclock seconds):       15.6396
Total time (CPU seconds):       15.6443   (Wallclock seconds):       15.6516
