Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3049/j3049_6.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.517691 - 0.13423 seconds
Cgl0002I 5 variables fixed
Cgl0003I 1 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 314 rows, 682 columns (682 integer (681 of which binary)) and 7771 elements
Coin3009W Conflict graph built in 0.036 seconds, density: 1.485%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 682 objects (682 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 124 integers unsatisfied sum - 26.2859
Cbc0038I Pass   1: suminf.   13.07210 (76) obj. 1.38766 iterations 238
Cbc0038I Pass   2: suminf.   12.69133 (77) obj. 1.53069 iterations 37
Cbc0038I Pass   3: suminf.   11.85003 (67) obj. 1.90459 iterations 42
Cbc0038I Pass   4: suminf.    7.89959 (42) obj. 5 iterations 127
Cbc0038I Pass   5: suminf.    6.04157 (39) obj. 5 iterations 51
Cbc0038I Pass   6: suminf.    7.88130 (35) obj. 5 iterations 131
Cbc0038I Pass   7: suminf.    6.19090 (38) obj. 5 iterations 78
Cbc0038I Pass   8: suminf.    5.40781 (40) obj. 5 iterations 20
Cbc0038I Pass   9: suminf.    7.22990 (37) obj. 5 iterations 101
Cbc0038I Pass  10: suminf.    6.08559 (35) obj. 5 iterations 124
Cbc0038I Pass  11: suminf.    5.69935 (36) obj. 5 iterations 42
Cbc0038I Pass  12: suminf.    5.55519 (37) obj. 5 iterations 38
Cbc0038I Pass  13: suminf.    5.73239 (39) obj. 5 iterations 81
Cbc0038I Pass  14: suminf.    5.26238 (36) obj. 5 iterations 74
Cbc0038I Pass  15: suminf.    9.53932 (42) obj. 5 iterations 124
Cbc0038I Pass  16: suminf.    6.50608 (37) obj. 5 iterations 78
Cbc0038I Pass  17: suminf.    5.12629 (28) obj. 5 iterations 108
Cbc0038I Pass  18: suminf.    4.33163 (25) obj. 5 iterations 44
Cbc0038I Pass  19: suminf.    6.33987 (26) obj. 5 iterations 103
Cbc0038I Pass  20: suminf.    4.55306 (26) obj. 5 iterations 97
Cbc0038I Pass  21: suminf.    4.51814 (26) obj. 5 iterations 51
Cbc0038I Pass  22: suminf.    6.32671 (32) obj. 5 iterations 113
Cbc0038I Pass  23: suminf.    4.85465 (29) obj. 5 iterations 89
Cbc0038I Pass  24: suminf.    4.62052 (27) obj. 5 iterations 42
Cbc0038I Pass  25: suminf.    6.08429 (27) obj. 5 iterations 117
Cbc0038I Pass  26: suminf.    4.68798 (28) obj. 5 iterations 130
Cbc0038I Pass  27: suminf.   20.44118 (79) obj. 5 iterations 217
Cbc0038I Pass  28: suminf.    7.95702 (33) obj. 5 iterations 184
Cbc0038I Pass  29: suminf.    6.23333 (25) obj. 5 iterations 75
Cbc0038I Pass  30: suminf.    6.22154 (29) obj. 5 iterations 24
Cbc0038I Pass  31: suminf.    6.62271 (29) obj. 5 iterations 44
Cbc0038I Pass  32: suminf.    6.22381 (24) obj. 5 iterations 40
Cbc0038I Pass  33: suminf.    7.57619 (24) obj. 5 iterations 72
Cbc0038I Pass  34: suminf.   13.91109 (59) obj. 5 iterations 176
Cbc0038I Pass  35: suminf.    7.19762 (30) obj. 5 iterations 138
Cbc0038I Pass  36: suminf.    6.55952 (31) obj. 5 iterations 6
Cbc0038I Pass  37: suminf.    6.24345 (38) obj. 5 iterations 34
Cbc0038I Pass  38: suminf.   10.66794 (47) obj. 5 iterations 164
Cbc0038I Pass  39: suminf.    8.64614 (42) obj. 5 iterations 82
Cbc0038I Pass  40: suminf.    7.30478 (42) obj. 5 iterations 69
Cbc0038I Pass  41: suminf.    6.95503 (35) obj. 5 iterations 62
Cbc0038I Pass  42: suminf.    6.27396 (43) obj. 5 iterations 28
Cbc0038I Pass  43: suminf.    4.96278 (28) obj. 5 iterations 18
Cbc0038I Pass  44: suminf.    4.36000 (31) obj. 5 iterations 66
Cbc0038I Pass  45: suminf.    7.25030 (29) obj. 5 iterations 134
Cbc0038I Pass  46: suminf.    5.51347 (27) obj. 5 iterations 71
Cbc0038I Pass  47: suminf.    5.33965 (26) obj. 5 iterations 31
Cbc0038I Pass  48: suminf.    6.21389 (19) obj. 5 iterations 122
Cbc0038I Pass  49: suminf.    4.20833 (18) obj. 5 iterations 75
Cbc0038I Pass  50: suminf.    4.08333 (19) obj. 5 iterations 39
Cbc0038I Pass  51: suminf.    6.11333 (22) obj. 5 iterations 122
Cbc0038I Pass  52: suminf.    4.20238 (19) obj. 5 iterations 75
Cbc0038I Pass  53: suminf.    5.94762 (20) obj. 5 iterations 90
Cbc0038I Pass  54: suminf.    5.14444 (19) obj. 5 iterations 68
Cbc0038I Pass  55: suminf.    4.39444 (15) obj. 5 iterations 12
Cbc0038I Pass  56: suminf.    4.19444 (16) obj. 5 iterations 84
Cbc0038I Pass  57: suminf.    3.01984 (13) obj. 5 iterations 90
Cbc0038I Pass  58: suminf.    3.69167 (14) obj. 5 iterations 88
Cbc0038I Pass  59: suminf.    3.29861 (15) obj. 5 iterations 49
Cbc0038I Pass  60: suminf.    3.52778 (12) obj. 5 iterations 174
Cbc0038I Pass  61: suminf.    3.22222 (13) obj. 5 iterations 54
Cbc0038I Pass  62: suminf.    3.18889 (12) obj. 5 iterations 29
Cbc0038I Pass  63: suminf.    4.00057 (18) obj. 5 iterations 98
Cbc0038I Pass  64: suminf.    3.59983 (20) obj. 5 iterations 47
Cbc0038I Pass  65: suminf.    4.03519 (22) obj. 5 iterations 70
Cbc0038I Pass  66: suminf.    3.02778 (15) obj. 5 iterations 49
Cbc0038I Pass  67: suminf.    3.02778 (15) obj. 5 iterations 51
Cbc0038I Pass  68: suminf.    3.48730 (14) obj. 5 iterations 117
Cbc0038I Pass  69: suminf.    2.99048 (15) obj. 5 iterations 42
Cbc0038I Pass  70: suminf.    3.54234 (26) obj. 5 iterations 86
Cbc0038I Pass  71: suminf.    3.26587 (15) obj. 5 iterations 29
Cbc0038I Pass  72: suminf.    3.26587 (15) obj. 5 iterations 39
Cbc0038I Pass  73: suminf.    3.48730 (14) obj. 5 iterations 98
Cbc0038I Pass  74: suminf.    2.99048 (15) obj. 5 iterations 42
Cbc0038I Pass  75: suminf.    3.54234 (26) obj. 5 iterations 114
Cbc0038I Pass  76: suminf.    3.26587 (15) obj. 5 iterations 32
Cbc0038I Pass  77: suminf.    3.26587 (15) obj. 5 iterations 34
Cbc0038I Pass  78: suminf.    3.48730 (14) obj. 5 iterations 87
Cbc0038I Pass  79: suminf.    2.99048 (15) obj. 5 iterations 40
Cbc0038I Pass  80: suminf.    3.54234 (26) obj. 5 iterations 83
Cbc0038I Pass  81: suminf.    3.26587 (15) obj. 5 iterations 39
Cbc0038I Pass  82: suminf.    3.26587 (15) obj. 5 iterations 26
Cbc0038I Pass  83: suminf.    3.48730 (14) obj. 5 iterations 83
Cbc0038I Pass  84: suminf.    2.99048 (15) obj. 5 iterations 34
Cbc0038I Pass  85: suminf.    2.93254 (14) obj. 5 iterations 70
Cbc0038I Pass  86: suminf.    2.01032 (15) obj. 5 iterations 45
Cbc0038I Pass  87: suminf.    4.35175 (23) obj. 5 iterations 113
Cbc0038I Pass  88: suminf.    4.35175 (23) obj. 5 iterations 44
Cbc0038I Pass  89: suminf.    6.17446 (26) obj. 5 iterations 167
Cbc0038I Pass  90: suminf.    2.44365 (12) obj. 5 iterations 102
Cbc0038I Pass  91: suminf.    2.44365 (12) obj. 5 iterations 4
Cbc0038I Pass  92: suminf.    3.65000 (16) obj. 5 iterations 96
Cbc0038I Pass  93: suminf.    3.65000 (15) obj. 5 iterations 64
Cbc0038I Pass  94: suminf.    3.13889 (19) obj. 5 iterations 129
Cbc0038I Pass  95: suminf.    3.13889 (19) obj. 5 iterations 20
Cbc0038I Pass  96: suminf.    4.85952 (16) obj. 5 iterations 139
Cbc0038I Pass  97: suminf.    4.00000 (15) obj. 5 iterations 42
Cbc0038I Pass  98: suminf.    3.93333 (14) obj. 5 iterations 8
Cbc0038I Pass  99: suminf.    5.59761 (21) obj. 5 iterations 120
Cbc0038I Pass 100: suminf.   13.30645 (69) obj. 4.70679 iterations 230
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 368 integers at bound fixed and 0 continuous
Cbc0038I Full problem 314 rows 682 columns, reduced to 238 rows 285 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.71 seconds)
Cbc0038I After 3.71 seconds - Feasibility pump exiting - took 1.70 seconds
Cbc0031I 63 added rows had average density of 52.47619
Cbc0013I At root node, 63 cuts changed objective from 0.561355 to 2.3333062 in 41 passes
Cbc0014I Cut generator 0 (Probing) - 321 row cuts average 5.5 elements, 3 column cuts (3 active)  in 2.241 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 687 row cuts average 670.5 elements, 0 column cuts (0 active)  in 5.535 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 68 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.602 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 108 row cuts average 17.7 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.805 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 286 row cuts average 35.3 elements, 0 column cuts (0 active)  in 0.499 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 274 row cuts average 46.0 elements, 0 column cuts (0 active)  in 0.232 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 320 row cuts average 49.0 elements, 0 column cuts (0 active)  in 0.896 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 3 (23.08 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 3 (23.94 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 3 (24.81 seconds)
Cbc0010I After 6 nodes, 1 on tree, 1e+50 best solution, best possible 4 (25.90 seconds)
Cbc0010I After 7 nodes, 2 on tree, 1e+50 best solution, best possible 4 (26.67 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 4 (28.04 seconds)
Cbc0010I After 11 nodes, 6 on tree, 1e+50 best solution, best possible 4 (29.14 seconds)
Cbc0010I After 14 nodes, 8 on tree, 1e+50 best solution, best possible 4 (30.14 seconds)
Cbc0010I After 18 nodes, 8 on tree, 1e+50 best solution, best possible 4 (31.09 seconds)
Cbc0010I After 23 nodes, 7 on tree, 1e+50 best solution, best possible 4 (32.08 seconds)
Cbc0010I After 27 nodes, 8 on tree, 1e+50 best solution, best possible 4 (32.84 seconds)
Cbc0010I After 31 nodes, 8 on tree, 1e+50 best solution, best possible 4 (33.99 seconds)
Cbc0010I After 34 nodes, 9 on tree, 1e+50 best solution, best possible 4 (34.89 seconds)
Cbc0010I After 38 nodes, 8 on tree, 1e+50 best solution, best possible 4 (35.60 seconds)
Cbc0010I After 42 nodes, 7 on tree, 1e+50 best solution, best possible 4 (36.47 seconds)
Cbc0010I After 45 nodes, 6 on tree, 1e+50 best solution, best possible 4 (37.30 seconds)
Cbc0010I After 48 nodes, 7 on tree, 1e+50 best solution, best possible 4 (38.10 seconds)
Cbc0010I After 54 nodes, 5 on tree, 1e+50 best solution, best possible 4 (39.38 seconds)
Cbc0010I After 57 nodes, 4 on tree, 1e+50 best solution, best possible 4 (40.21 seconds)
Cbc0010I After 59 nodes, 6 on tree, 1e+50 best solution, best possible 4 (41.05 seconds)
Cbc0010I After 63 nodes, 5 on tree, 1e+50 best solution, best possible 4 (41.81 seconds)
Cbc0010I After 66 nodes, 6 on tree, 1e+50 best solution, best possible 4 (42.73 seconds)
Cbc0010I After 74 nodes, 1 on tree, 1e+50 best solution, best possible 5 (43.96 seconds)
Cbc0010I After 76 nodes, 3 on tree, 1e+50 best solution, best possible 5 (45.15 seconds)
Cbc0010I After 79 nodes, 2 on tree, 1e+50 best solution, best possible 5 (46.15 seconds)
Cbc0010I After 81 nodes, 4 on tree, 1e+50 best solution, best possible 5 (47.25 seconds)
Cbc0010I After 84 nodes, 5 on tree, 1e+50 best solution, best possible 5 (47.96 seconds)
Cbc0010I After 87 nodes, 5 on tree, 1e+50 best solution, best possible 5 (48.69 seconds)
Cbc0010I After 92 nodes, 6 on tree, 1e+50 best solution, best possible 5 (49.48 seconds)
Cbc0010I After 97 nodes, 7 on tree, 1e+50 best solution, best possible 5 (50.27 seconds)
Cbc0010I After 100 nodes, 8 on tree, 1e+50 best solution, best possible 5 (51.12 seconds)
Cbc0010I After 110 nodes, 12 on tree, 1e+50 best solution, best possible 5 (51.88 seconds)
Cbc0010I After 117 nodes, 11 on tree, 1e+50 best solution, best possible 5 (52.65 seconds)
Cbc0010I After 128 nodes, 12 on tree, 1e+50 best solution, best possible 5 (53.38 seconds)
Cbc0010I After 139 nodes, 14 on tree, 1e+50 best solution, best possible 5 (54.10 seconds)
Cbc0010I After 151 nodes, 17 on tree, 1e+50 best solution, best possible 5 (54.86 seconds)
Cbc0010I After 160 nodes, 16 on tree, 1e+50 best solution, best possible 5 (55.57 seconds)
Cbc0010I After 168 nodes, 14 on tree, 1e+50 best solution, best possible 5 (56.28 seconds)
Cbc0010I After 179 nodes, 12 on tree, 1e+50 best solution, best possible 5 (57.05 seconds)
Cbc0010I After 186 nodes, 16 on tree, 1e+50 best solution, best possible 5 (57.96 seconds)
Cbc0010I After 198 nodes, 18 on tree, 1e+50 best solution, best possible 5 (58.70 seconds)
Cbc0016I Integer solution of 5 found by strong branching after 65006 iterations and 203 nodes (59.10 seconds)
Cbc0001I Search completed - best objective 5, took 65084 iterations and 203 nodes (59.12 seconds)
Cbc0032I Strong branching done 1624 times (64766 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.561355 to 3
Probing was tried 224 times and created 1850 cuts of which 0 were active after adding rounds of cuts (3.56952 seconds)
Gomory was tried 217 times and created 698 cuts of which 0 were active after adding rounds of cuts (6.17691 seconds)
Knapsack was tried 217 times and created 483 cuts of which 0 were active after adding rounds of cuts (2.462 seconds)
Clique was tried 217 times and created 669 cuts of which 0 were active after adding rounds of cuts (0.495785 seconds)
OddWheel was tried 41 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.804543 seconds)
MixedIntegerRounding2 was tried 217 times and created 1147 cuts of which 0 were active after adding rounds of cuts (1.13718 seconds)
FlowCover was tried 41 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015536 seconds)
TwoMirCuts was tried 217 times and created 1415 cuts of which 0 were active after adding rounds of cuts (0.640708 seconds)
ZeroHalf was tried 217 times and created 1998 cuts of which 0 were active after adding rounds of cuts (2.79524 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               203
Total iterations:               65084
Time (CPU seconds):             59.1534
Time (Wallclock seconds):       59.2145
Total time (CPU seconds):       59.2488   (Wallclock seconds):       59.2839
