Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3042/j3042_5.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.144298 seconds
Cgl0002I 8 variables fixed
Cgl0003I 9 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 300 rows, 738 columns (738 integer (736 of which binary)) and 8565 elements
Coin3009W Conflict graph built in 0.037 seconds, density: 1.298%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 738 objects (738 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 63 integers unsatisfied sum - 16.0528
Cbc0038I Pass   1: suminf.   10.23608 (55) obj. 0.0192437 iterations 148
Cbc0038I Pass   2: suminf.    9.17160 (57) obj. 0.0238411 iterations 58
Cbc0038I Pass   3: suminf.    8.59088 (51) obj. 0.245108 iterations 29
Cbc0038I Pass   4: suminf.    8.34224 (36) obj. 1 iterations 75
Cbc0038I Pass   5: suminf.    7.14270 (41) obj. 1 iterations 41
Cbc0038I Pass   6: suminf.    7.76175 (32) obj. 1 iterations 118
Cbc0038I Pass   7: suminf.    6.82963 (32) obj. 1 iterations 75
Cbc0038I Pass   8: suminf.    8.11604 (41) obj. 1 iterations 89
Cbc0038I Pass   9: suminf.    5.30048 (27) obj. 1 iterations 68
Cbc0038I Pass  10: suminf.    6.29898 (26) obj. 1 iterations 40
Cbc0038I Pass  11: suminf.    5.51881 (28) obj. 1 iterations 34
Cbc0038I Pass  12: suminf.    4.61763 (30) obj. 1 iterations 82
Cbc0038I Pass  13: suminf.    4.34583 (27) obj. 1 iterations 36
Cbc0038I Pass  14: suminf.    5.25780 (29) obj. 1 iterations 33
Cbc0038I Pass  15: suminf.    4.40139 (27) obj. 1 iterations 36
Cbc0038I Pass  16: suminf.    3.81760 (21) obj. 1 iterations 93
Cbc0038I Pass  17: suminf.    3.72869 (24) obj. 1 iterations 39
Cbc0038I Pass  18: suminf.    6.37451 (27) obj. 1 iterations 87
Cbc0038I Pass  19: suminf.    4.04292 (26) obj. 1 iterations 82
Cbc0038I Pass  20: suminf.    4.04028 (26) obj. 1 iterations 8
Cbc0038I Pass  21: suminf.    5.93492 (23) obj. 1 iterations 91
Cbc0038I Pass  22: suminf.    4.55873 (26) obj. 1 iterations 68
Cbc0038I Pass  23: suminf.   13.54296 (59) obj. 1 iterations 158
Cbc0038I Pass  24: suminf.    5.82235 (24) obj. 1 iterations 128
Cbc0038I Pass  25: suminf.    5.17540 (32) obj. 1 iterations 32
Cbc0038I Pass  26: suminf.    5.18168 (22) obj. 1 iterations 86
Cbc0038I Pass  27: suminf.    4.18168 (21) obj. 1 iterations 23
Cbc0038I Pass  28: suminf.    4.35179 (29) obj. 1 iterations 72
Cbc0038I Pass  29: suminf.    3.96540 (31) obj. 1 iterations 19
Cbc0038I Pass  30: suminf.    4.08291 (23) obj. 1 iterations 73
Cbc0038I Pass  31: suminf.    3.20556 (16) obj. 1 iterations 42
Cbc0038I Pass  32: suminf.    2.90556 (15) obj. 1 iterations 11
Cbc0038I Pass  33: suminf.    4.99722 (17) obj. 1 iterations 114
Cbc0038I Pass  34: suminf.    4.88813 (18) obj. 1 iterations 23
Cbc0038I Pass  35: suminf.    4.84242 (16) obj. 1 iterations 85
Cbc0038I Pass  36: suminf.    3.93846 (19) obj. 1 iterations 33
Cbc0038I Pass  37: suminf.    6.75290 (26) obj. 1 iterations 98
Cbc0038I Pass  38: suminf.    5.32708 (24) obj. 1 iterations 69
Cbc0038I Pass  39: suminf.    4.89301 (19) obj. 1 iterations 48
Cbc0038I Pass  40: suminf.    4.83269 (20) obj. 1 iterations 43
Cbc0038I Pass  41: suminf.    4.83269 (20) obj. 1 iterations 22
Cbc0038I Pass  42: suminf.    4.83269 (20) obj. 1 iterations 21
Cbc0038I Pass  43: suminf.    5.31149 (20) obj. 1 iterations 50
Cbc0038I Pass  44: suminf.    4.43282 (31) obj. 1 iterations 54
Cbc0038I Pass  45: suminf.    4.76250 (20) obj. 1 iterations 46
Cbc0038I Pass  46: suminf.    4.37885 (26) obj. 1 iterations 28
Cbc0038I Pass  47: suminf.    5.32158 (20) obj. 1 iterations 42
Cbc0038I Pass  48: suminf.    4.89301 (19) obj. 1 iterations 16
Cbc0038I Pass  49: suminf.    4.60000 (21) obj. 1 iterations 52
Cbc0038I Pass  50: suminf.    4.30000 (21) obj. 1 iterations 20
Cbc0038I Pass  51: suminf.    5.96316 (22) obj. 1 iterations 98
Cbc0038I Pass  52: suminf.    5.28611 (21) obj. 1 iterations 29
Cbc0038I Pass  53: suminf.    4.21389 (17) obj. 1 iterations 38
Cbc0038I Pass  54: suminf.    4.94762 (15) obj. 1 iterations 63
Cbc0038I Pass  55: suminf.    3.65000 (14) obj. 1 iterations 40
Cbc0038I Pass  56: suminf.    3.59643 (14) obj. 1 iterations 5
Cbc0038I Pass  57: suminf.    3.62927 (16) obj. 1 iterations 65
Cbc0038I Pass  58: suminf.    3.62927 (16) obj. 1 iterations 14
Cbc0038I Pass  59: suminf.    4.15992 (20) obj. 1 iterations 86
Cbc0038I Pass  60: suminf.    4.00423 (20) obj. 1 iterations 15
Cbc0038I Pass  61: suminf.    5.09152 (31) obj. 1 iterations 97
Cbc0038I Pass  62: suminf.    4.96032 (21) obj. 1 iterations 26
Cbc0038I Pass  63: suminf.    5.41364 (21) obj. 1 iterations 66
Cbc0038I Pass  64: suminf.    4.50000 (19) obj. 1 iterations 61
Cbc0038I Pass  65: suminf.    4.17500 (16) obj. 1 iterations 43
Cbc0038I Pass  66: suminf.    3.80278 (18) obj. 1 iterations 18
Cbc0038I Pass  67: suminf.    5.87643 (23) obj. 1 iterations 117
Cbc0038I Pass  68: suminf.    5.03235 (20) obj. 1 iterations 11
Cbc0038I Pass  69: suminf.    4.50926 (19) obj. 1 iterations 23
Cbc0038I Pass  70: suminf.    4.22436 (19) obj. 1 iterations 6
Cbc0038I Pass  71: suminf.    4.24038 (19) obj. 1 iterations 100
Cbc0038I Pass  72: suminf.    4.12038 (21) obj. 1 iterations 15
Cbc0038I Pass  73: suminf.    6.42666 (23) obj. 1 iterations 74
Cbc0038I Pass  74: suminf.    5.77763 (22) obj. 1 iterations 38
Cbc0038I Pass  75: suminf.    5.48532 (20) obj. 1 iterations 23
Cbc0038I Pass  76: suminf.    5.41961 (21) obj. 1 iterations 88
Cbc0038I Pass  77: suminf.    5.17695 (31) obj. 1 iterations 46
Cbc0038I Pass  78: suminf.    4.74390 (28) obj. 1 iterations 24
Cbc0038I Pass  79: suminf.    2.83225 (12) obj. 1 iterations 102
Cbc0038I Pass  80: suminf.    2.83225 (13) obj. 1 iterations 18
Cbc0038I Pass  81: suminf.    4.36867 (13) obj. 1 iterations 78
Cbc0038I Pass  82: suminf.    3.70374 (16) obj. 1 iterations 46
Cbc0038I Pass  83: suminf.    3.27939 (13) obj. 1 iterations 15
Cbc0038I Pass  84: suminf.    3.74534 (13) obj. 1 iterations 53
Cbc0038I Pass  85: suminf.    3.60249 (15) obj. 1 iterations 23
Cbc0038I Pass  86: suminf.    3.81528 (18) obj. 1 iterations 91
Cbc0038I Pass  87: suminf.    3.65439 (13) obj. 1 iterations 11
Cbc0038I Pass  88: suminf.    3.60249 (14) obj. 1 iterations 61
Cbc0038I Pass  89: suminf.    8.43517 (46) obj. 1 iterations 134
Cbc0038I Pass  90: suminf.    4.60726 (24) obj. 1 iterations 121
Cbc0038I Pass  91: suminf.    6.35317 (22) obj. 1 iterations 85
Cbc0038I Pass  92: suminf.    4.12540 (16) obj. 1 iterations 50
Cbc0038I Pass  93: suminf.    4.86944 (18) obj. 1 iterations 50
Cbc0038I Pass  94: suminf.    3.79683 (16) obj. 1 iterations 45
Cbc0038I Pass  95: suminf.    4.12169 (15) obj. 1 iterations 41
Cbc0038I Pass  96: suminf.    3.71161 (15) obj. 1 iterations 41
Cbc0038I Pass  97: suminf.    4.18198 (15) obj. 1 iterations 41
Cbc0038I Pass  98: suminf.    3.60635 (14) obj. 1 iterations 35
Cbc0038I Pass  99: suminf.    3.93041 (18) obj. 1 iterations 40
Cbc0038I Pass 100: suminf.   12.30347 (40) obj. 1 iterations 123
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 480 integers at bound fixed and 0 continuous
Cbc0038I Full problem 300 rows 738 columns, reduced to 202 rows 222 columns
Cbc0038I Mini branch and bound did not improve solution (4.27 seconds)
Cbc0038I Full problem 301 rows 738 columns, reduced to 301 rows 738 columns - too large
Cbc0038I After 4.39 seconds - Feasibility pump exiting - took 2.30 seconds
Cbc0031I 74 added rows had average density of 64.972973
Cbc0013I At root node, 74 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 199 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.442 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 159 row cuts average 685.8 elements, 0 column cuts (0 active)  in 0.700 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 27 row cuts average 12.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 53.4 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 134 row cuts average 69.6 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (7.55 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 0 (8.30 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 0 (9.49 seconds)
Cbc0010I After 13 nodes, 8 on tree, 1e+50 best solution, best possible 0 (10.21 seconds)
Cbc0010I After 21 nodes, 10 on tree, 1e+50 best solution, best possible 0 (11.03 seconds)
Cbc0010I After 34 nodes, 16 on tree, 1e+50 best solution, best possible 0 (11.74 seconds)
Cbc0010I After 73 nodes, 20 on tree, 1e+50 best solution, best possible 0 (12.44 seconds)
Cbc0010I After 131 nodes, 18 on tree, 1e+50 best solution, best possible 0 (13.15 seconds)
Cbc0010I After 202 nodes, 21 on tree, 1e+50 best solution, best possible 0 (13.85 seconds)
Cbc0010I After 256 nodes, 18 on tree, 1e+50 best solution, best possible 0 (14.56 seconds)
Cbc0010I After 298 nodes, 15 on tree, 1e+50 best solution, best possible 0 (15.27 seconds)
Cbc0010I After 318 nodes, 10 on tree, 1e+50 best solution, best possible 0 (15.98 seconds)
Cbc0010I After 352 nodes, 15 on tree, 1e+50 best solution, best possible 0 (16.68 seconds)
Cbc0010I After 391 nodes, 10 on tree, 1e+50 best solution, best possible 0 (17.39 seconds)
Cbc0010I After 426 nodes, 8 on tree, 1e+50 best solution, best possible 0 (18.15 seconds)
Cbc0010I After 472 nodes, 11 on tree, 1e+50 best solution, best possible 0 (18.92 seconds)
Cbc0010I After 523 nodes, 12 on tree, 1e+50 best solution, best possible 0 (19.63 seconds)
Cbc0010I After 564 nodes, 9 on tree, 1e+50 best solution, best possible 0 (20.36 seconds)
Cbc0010I After 601 nodes, 17 on tree, 1e+50 best solution, best possible 0 (21.06 seconds)
Cbc0010I After 630 nodes, 12 on tree, 1e+50 best solution, best possible 0 (21.81 seconds)
Cbc0010I After 653 nodes, 11 on tree, 1e+50 best solution, best possible 0 (22.53 seconds)
Cbc0010I After 671 nodes, 10 on tree, 1e+50 best solution, best possible 0 (23.24 seconds)
Cbc0010I After 700 nodes, 17 on tree, 1e+50 best solution, best possible 0 (23.95 seconds)
Cbc0010I After 731 nodes, 7 on tree, 1e+50 best solution, best possible 0 (24.69 seconds)
Cbc0010I After 767 nodes, 4 on tree, 1e+50 best solution, best possible 0 (25.40 seconds)
Cbc0010I After 779 nodes, 7 on tree, 1e+50 best solution, best possible 0 (26.14 seconds)
Cbc0010I After 792 nodes, 8 on tree, 1e+50 best solution, best possible 0 (26.87 seconds)
Cbc0010I After 812 nodes, 12 on tree, 1e+50 best solution, best possible 0 (27.57 seconds)
Cbc0010I After 885 nodes, 30 on tree, 1e+50 best solution, best possible 0 (28.28 seconds)
Cbc0010I After 982 nodes, 22 on tree, 1e+50 best solution, best possible 0 (28.99 seconds)
Cbc0010I After 1052 nodes, 11 on tree, 1e+50 best solution, best possible 0 (29.70 seconds)
Cbc0010I After 1097 nodes, 11 on tree, 1e+50 best solution, best possible 0 (30.41 seconds)
Cbc0010I After 1152 nodes, 29 on tree, 1e+50 best solution, best possible 0 (31.11 seconds)
Cbc0010I After 1232 nodes, 20 on tree, 1e+50 best solution, best possible 0 (31.82 seconds)
Cbc0010I After 1299 nodes, 12 on tree, 1e+50 best solution, best possible 0 (32.53 seconds)
Cbc0010I After 1344 nodes, 9 on tree, 1e+50 best solution, best possible 0 (33.26 seconds)
Cbc0010I After 1386 nodes, 9 on tree, 1e+50 best solution, best possible 0 (33.97 seconds)
Cbc0010I After 1417 nodes, 9 on tree, 1e+50 best solution, best possible 0 (34.69 seconds)
Cbc0010I After 1460 nodes, 8 on tree, 1e+50 best solution, best possible 0 (35.39 seconds)
Cbc0010I After 1503 nodes, 4 on tree, 1e+50 best solution, best possible 0 (36.13 seconds)
Cbc0010I After 1522 nodes, 5 on tree, 1e+50 best solution, best possible 0 (36.91 seconds)
Cbc0010I After 1543 nodes, 10 on tree, 1e+50 best solution, best possible 0 (37.61 seconds)
Cbc0010I After 1568 nodes, 6 on tree, 1e+50 best solution, best possible 0 (38.33 seconds)
Cbc0010I After 1598 nodes, 11 on tree, 1e+50 best solution, best possible 0 (39.04 seconds)
Cbc0010I After 1636 nodes, 6 on tree, 1e+50 best solution, best possible 0 (39.74 seconds)
Cbc0010I After 1671 nodes, 6 on tree, 1e+50 best solution, best possible 0 (40.47 seconds)
Cbc0010I After 1697 nodes, 11 on tree, 1e+50 best solution, best possible 0 (41.18 seconds)
Cbc0010I After 1718 nodes, 4 on tree, 1e+50 best solution, best possible 0 (41.91 seconds)
Cbc0010I After 1730 nodes, 3 on tree, 1e+50 best solution, best possible 0 (42.61 seconds)
Cbc0010I After 1760 nodes, 8 on tree, 1e+50 best solution, best possible 0 (43.32 seconds)
Cbc0010I After 1789 nodes, 5 on tree, 1e+50 best solution, best possible 0 (44.04 seconds)
Cbc0010I After 1809 nodes, 8 on tree, 1e+50 best solution, best possible 0 (44.75 seconds)
Cbc0010I After 1851 nodes, 10 on tree, 1e+50 best solution, best possible 0 (45.46 seconds)
Cbc0010I After 1887 nodes, 24 on tree, 1e+50 best solution, best possible 0 (46.19 seconds)
Cbc0010I After 1929 nodes, 14 on tree, 1e+50 best solution, best possible 0 (46.94 seconds)
Cbc0010I After 1966 nodes, 21 on tree, 1e+50 best solution, best possible 0 (47.64 seconds)
Cbc0010I After 2010 nodes, 23 on tree, 1e+50 best solution, best possible 0 (48.35 seconds)
Cbc0010I After 2050 nodes, 15 on tree, 1e+50 best solution, best possible 0 (49.07 seconds)
Cbc0010I After 2092 nodes, 13 on tree, 1e+50 best solution, best possible 0 (49.78 seconds)
Cbc0010I After 2127 nodes, 16 on tree, 1e+50 best solution, best possible 0 (50.48 seconds)
Cbc0010I After 2157 nodes, 2 on tree, 1e+50 best solution, best possible 1 (51.24 seconds)
Cbc0010I After 2163 nodes, 8 on tree, 1e+50 best solution, best possible 1 (52.02 seconds)
Cbc0010I After 2174 nodes, 19 on tree, 1e+50 best solution, best possible 1 (52.74 seconds)
Cbc0010I After 2195 nodes, 18 on tree, 1e+50 best solution, best possible 1 (53.47 seconds)
Cbc0010I After 2215 nodes, 34 on tree, 1e+50 best solution, best possible 1 (54.20 seconds)
Cbc0004I Integer solution of 1 found after 184301 iterations and 2227 nodes (54.38 seconds)
Cbc0001I Search completed - best objective 1, took 184301 iterations and 2227 nodes (54.38 seconds)
Cbc0032I Strong branching done 8008 times (179843 iterations), fathomed 91 nodes and fixed 356 variables
Cbc0035I Maximum depth 48, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 199 cuts of which 0 were active after adding rounds of cuts (0.441889 seconds)
Gomory was tried 10 times and created 159 cuts of which 0 were active after adding rounds of cuts (0.699952 seconds)
Knapsack was tried 10 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.084208 seconds)
Clique was tried 10 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.020398 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.085568 seconds)
MixedIntegerRounding2 was tried 10 times and created 89 cuts of which 0 were active after adding rounds of cuts (0.044368 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004617 seconds)
TwoMirCuts was tried 10 times and created 100 cuts of which 0 were active after adding rounds of cuts (0.103411 seconds)
ZeroHalf was tried 10 times and created 134 cuts of which 0 were active after adding rounds of cuts (0.125636 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               2227
Total iterations:               184301
Time (CPU seconds):             54.116
Time (Wallclock seconds):       54.4304
Total time (CPU seconds):       54.1438   (Wallclock seconds):       54.444
