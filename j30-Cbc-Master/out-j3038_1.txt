Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3038/j3038_1.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.78125 - 0.36658 seconds
Cgl0002I 2 variables fixed
Cgl0003I 6 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 347 rows, 1288 columns (1288 integer (1287 of which binary)) and 20534 elements
Coin3009W Conflict graph built in 0.175 seconds, density: 1.090%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1288 objects (1288 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 109 integers unsatisfied sum - 25.2743
Cbc0038I Pass   1: suminf.   11.50569 (54) obj. 5 iterations 341
Cbc0038I Pass   2: suminf.   10.92525 (58) obj. 5 iterations 43
Cbc0038I Pass   3: suminf.   10.55612 (61) obj. 5 iterations 43
Cbc0038I Pass   4: suminf.   10.63171 (54) obj. 5 iterations 177
Cbc0038I Pass   5: suminf.    9.77110 (54) obj. 5 iterations 105
Cbc0038I Pass   6: suminf.    8.76437 (47) obj. 5 iterations 152
Cbc0038I Pass   7: suminf.    7.50882 (52) obj. 5 iterations 100
Cbc0038I Pass   8: suminf.    9.13418 (53) obj. 5 iterations 145
Cbc0038I Pass   9: suminf.    7.86176 (49) obj. 5 iterations 125
Cbc0038I Pass  10: suminf.    8.93433 (41) obj. 5 iterations 180
Cbc0038I Pass  11: suminf.    6.83722 (43) obj. 5 iterations 150
Cbc0038I Pass  12: suminf.    8.94725 (40) obj. 5 iterations 150
Cbc0038I Pass  13: suminf.    7.20190 (50) obj. 5 iterations 124
Cbc0038I Pass  14: suminf.    6.75464 (51) obj. 5 iterations 83
Cbc0038I Pass  15: suminf.    7.35636 (36) obj. 5 iterations 119
Cbc0038I Pass  16: suminf.    6.88285 (44) obj. 5 iterations 84
Cbc0038I Pass  17: suminf.    6.82499 (50) obj. 5 iterations 32
Cbc0038I Pass  18: suminf.    7.80300 (45) obj. 5 iterations 88
Cbc0038I Pass  19: suminf.    6.77107 (45) obj. 5 iterations 97
Cbc0038I Pass  20: suminf.    7.30064 (36) obj. 5 iterations 149
Cbc0038I Pass  21: suminf.    6.75464 (51) obj. 5 iterations 81
Cbc0038I Pass  22: suminf.    7.69908 (33) obj. 5 iterations 139
Cbc0038I Pass  23: suminf.    7.00929 (46) obj. 5 iterations 110
Cbc0038I Pass  24: suminf.    6.15916 (43) obj. 5 iterations 95
Cbc0038I Pass  25: suminf.    5.64661 (40) obj. 5 iterations 24
Cbc0038I Pass  26: suminf.    7.44780 (37) obj. 5 iterations 174
Cbc0038I Pass  27: suminf.    6.16525 (37) obj. 5 iterations 127
Cbc0038I Pass  28: suminf.    5.67283 (38) obj. 5 iterations 85
Cbc0038I Pass  29: suminf.    5.98306 (41) obj. 5 iterations 137
Cbc0038I Pass  30: suminf.    5.51154 (41) obj. 5 iterations 66
Cbc0038I Pass  31: suminf.    7.59188 (34) obj. 5 iterations 165
Cbc0038I Pass  32: suminf.    6.90859 (40) obj. 5 iterations 79
Cbc0038I Pass  33: suminf.    6.17931 (44) obj. 5 iterations 135
Cbc0038I Pass  34: suminf.    5.15980 (38) obj. 5 iterations 85
Cbc0038I Pass  35: suminf.    6.45397 (31) obj. 5 iterations 81
Cbc0038I Pass  36: suminf.    5.40526 (31) obj. 5 iterations 53
Cbc0038I Pass  37: suminf.    4.93930 (34) obj. 5 iterations 88
Cbc0038I Pass  38: suminf.    5.46840 (30) obj. 5 iterations 66
Cbc0038I Pass  39: suminf.   15.01915 (64) obj. 5 iterations 234
Cbc0038I Pass  40: suminf.    9.24924 (53) obj. 5 iterations 177
Cbc0038I Pass  41: suminf.    8.52743 (54) obj. 5 iterations 66
Cbc0038I Pass  42: suminf.    7.81393 (43) obj. 5 iterations 77
Cbc0038I Pass  43: suminf.    9.01564 (51) obj. 5 iterations 182
Cbc0038I Pass  44: suminf.    8.50710 (49) obj. 5 iterations 64
Cbc0038I Pass  45: suminf.    8.17876 (49) obj. 5 iterations 69
Cbc0038I Pass  46: suminf.    7.73100 (55) obj. 5 iterations 73
Cbc0038I Pass  47: suminf.    7.47022 (54) obj. 5 iterations 18
Cbc0038I Pass  48: suminf.    7.47022 (54) obj. 5 iterations 2
Cbc0038I Pass  49: suminf.    9.18152 (44) obj. 5 iterations 170
Cbc0038I Pass  50: suminf.    7.48433 (43) obj. 5 iterations 57
Cbc0038I Pass  51: suminf.    7.20900 (44) obj. 5 iterations 42
Cbc0038I Pass  52: suminf.    6.30428 (45) obj. 5 iterations 44
Cbc0038I Pass  53: suminf.    6.20947 (41) obj. 5 iterations 25
Cbc0038I Pass  54: suminf.    5.29839 (25) obj. 5 iterations 145
Cbc0038I Pass  55: suminf.    4.93758 (38) obj. 5 iterations 82
Cbc0038I Pass  56: suminf.    4.85590 (29) obj. 5 iterations 48
Cbc0038I Pass  57: suminf.    6.56826 (36) obj. 5 iterations 191
Cbc0038I Pass  58: suminf.    5.21078 (38) obj. 5 iterations 95
Cbc0038I Pass  59: suminf.    5.06650 (41) obj. 5 iterations 25
Cbc0038I Pass  60: suminf.    6.53970 (30) obj. 5 iterations 175
Cbc0038I Pass  61: suminf.    6.09376 (31) obj. 5 iterations 68
Cbc0038I Pass  62: suminf.    5.95636 (35) obj. 5 iterations 26
Cbc0038I Pass  63: suminf.    6.33828 (33) obj. 5 iterations 196
Cbc0038I Pass  64: suminf.    4.70571 (28) obj. 5 iterations 109
Cbc0038I Pass  65: suminf.    4.94850 (25) obj. 5 iterations 156
Cbc0038I Pass  66: suminf.    3.96913 (24) obj. 5 iterations 92
Cbc0038I Pass  67: suminf.    5.58123 (29) obj. 5 iterations 172
Cbc0038I Pass  68: suminf.    4.80997 (21) obj. 5 iterations 62
Cbc0038I Pass  69: suminf.    4.46615 (21) obj. 5 iterations 13
Cbc0038I Pass  70: suminf.    7.12850 (36) obj. 5 iterations 143
Cbc0038I Pass  71: suminf.    3.51429 (16) obj. 5 iterations 165
Cbc0038I Pass  72: suminf.    3.20000 (16) obj. 5 iterations 65
Cbc0038I Pass  73: suminf.    3.88538 (16) obj. 5 iterations 121
Cbc0038I Pass  74: suminf.    2.97619 (16) obj. 5 iterations 115
Cbc0038I Pass  75: suminf.    2.95775 (23) obj. 5 iterations 28
Cbc0038I Pass  76: suminf.    4.27180 (25) obj. 5 iterations 182
Cbc0038I Pass  77: suminf.    2.15476 (12) obj. 5 iterations 124
Cbc0038I Pass  78: suminf.    3.98776 (14) obj. 5 iterations 146
Cbc0038I Pass  79: suminf.    3.17143 (18) obj. 5 iterations 108
Cbc0038I Pass  80: suminf.    6.17410 (30) obj. 5 iterations 138
Cbc0038I Pass  81: suminf.    5.33175 (30) obj. 5 iterations 121
Cbc0038I Pass  82: suminf.    7.45349 (36) obj. 5 iterations 181
Cbc0038I Pass  83: suminf.    4.71966 (23) obj. 5 iterations 105
Cbc0038I Pass  84: suminf.    4.71966 (23) obj. 5 iterations 8
Cbc0038I Pass  85: suminf.    7.39717 (29) obj. 5 iterations 164
Cbc0038I Pass  86: suminf.    5.63860 (20) obj. 5 iterations 126
Cbc0038I Pass  87: suminf.    4.95687 (19) obj. 5 iterations 97
Cbc0038I Pass  88: suminf.    4.52676 (19) obj. 5 iterations 42
Cbc0038I Pass  89: suminf.    4.52152 (20) obj. 5 iterations 19
Cbc0038I Pass  90: suminf.    5.63335 (20) obj. 5 iterations 189
Cbc0038I Pass  91: suminf.    5.10226 (23) obj. 5 iterations 131
Cbc0038I Pass  92: suminf.    5.07068 (23) obj. 5 iterations 18
Cbc0038I Pass  93: suminf.    4.64095 (24) obj. 5 iterations 27
Cbc0038I Pass  94: suminf.    4.31994 (30) obj. 5 iterations 52
Cbc0038I Pass  95: suminf.    4.46849 (14) obj. 5 iterations 221
Cbc0038I Pass  96: suminf.    3.99146 (14) obj. 5 iterations 36
Cbc0038I Pass  97: suminf.    3.96268 (15) obj. 5 iterations 16
Cbc0038I Pass  98: suminf.    5.25714 (16) obj. 5 iterations 116
Cbc0038I Pass  99: suminf.    4.65714 (13) obj. 5 iterations 64
Cbc0038I Pass 100: suminf.   11.75415 (52) obj. 5 iterations 239
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 935 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 1288 columns, reduced to 246 rows 323 columns
Cbc0038I Mini branch and bound did not improve solution (7.79 seconds)
Cbc0038I After 7.80 seconds - Feasibility pump exiting - took 5.40 seconds
Cbc0031I 33 added rows had average density of 56.818182
Cbc0013I At root node, 33 cuts changed objective from 3.78125 to 5 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 131 row cuts average 14.7 elements, 1 column cuts (1 active)  in 1.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 39 row cuts average 507.0 elements, 0 column cuts (0 active)  in 0.350 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 82.7 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 105 row cuts average 148.6 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 133 row cuts average 95.1 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 5 (11.74 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 5 (12.72 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 5 (13.54 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 5 (14.43 seconds)
Cbc0010I After 12 nodes, 10 on tree, 1e+50 best solution, best possible 5 (15.18 seconds)
Cbc0010I After 21 nodes, 13 on tree, 1e+50 best solution, best possible 5 (16.01 seconds)
Cbc0010I After 27 nodes, 15 on tree, 1e+50 best solution, best possible 5 (16.82 seconds)
Cbc0004I Integer solution of 5 found after 9068 iterations and 34 nodes (17.30 seconds)
Cbc0001I Search completed - best objective 5, took 9068 iterations and 34 nodes (17.30 seconds)
Cbc0032I Strong branching done 268 times (3966 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 17, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.78125 to 5
Probing was tried 46 times and created 357 cuts of which 0 were active after adding rounds of cuts (1.26696 seconds)
Gomory was tried 10 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.350285 seconds)
Knapsack was tried 45 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.345796 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.014765 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.071171 seconds)
MixedIntegerRounding2 was tried 45 times and created 338 cuts of which 0 were active after adding rounds of cuts (0.349724 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004905 seconds)
TwoMirCuts was tried 45 times and created 222 cuts of which 0 were active after adding rounds of cuts (0.354889 seconds)
ZeroHalf was tried 45 times and created 384 cuts of which 0 were active after adding rounds of cuts (0.443425 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               34
Total iterations:               9068
Time (CPU seconds):             16.0411
Time (Wallclock seconds):       17.3609
Total time (CPU seconds):       16.1137   (Wallclock seconds):       17.4001
