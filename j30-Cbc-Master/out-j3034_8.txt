Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3034/j3034_8.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 20.535 - 0.208956 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 345 rows, 2107 columns (2107 integer (2106 of which binary)) and 24930 elements
Coin3009W Conflict graph built in 0.475 seconds, density: 0.908%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 2107 objects (2107 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 108 integers unsatisfied sum - 24.4275
Cbc0038I Pass   1: suminf.   12.88576 (66) obj. 23 iterations 242
Cbc0038I Pass   2: suminf.   11.75298 (67) obj. 23 iterations 52
Cbc0038I Pass   3: suminf.   10.60900 (56) obj. 23 iterations 98
Cbc0038I Pass   4: suminf.    9.60369 (64) obj. 23 iterations 40
Cbc0038I Pass   5: suminf.    8.09389 (66) obj. 23 iterations 37
Cbc0038I Pass   6: suminf.    7.86512 (66) obj. 23 iterations 2
Cbc0038I Pass   7: suminf.   11.12795 (60) obj. 23 iterations 67
Cbc0038I Pass   8: suminf.    8.36307 (68) obj. 23 iterations 41
Cbc0038I Pass   9: suminf.    8.04215 (65) obj. 23 iterations 8
Cbc0038I Pass  10: suminf.    7.82490 (68) obj. 23 iterations 8
Cbc0038I Pass  11: suminf.   11.21930 (60) obj. 23 iterations 61
Cbc0038I Pass  12: suminf.    9.01887 (64) obj. 23 iterations 31
Cbc0038I Pass  13: suminf.    8.11862 (66) obj. 23 iterations 17
Cbc0038I Pass  14: suminf.    7.68088 (66) obj. 23 iterations 15
Cbc0038I Pass  15: suminf.    7.50287 (67) obj. 23 iterations 2
Cbc0038I Pass  16: suminf.    7.18195 (64) obj. 23 iterations 8
Cbc0038I Pass  17: suminf.    6.95573 (67) obj. 23 iterations 7
Cbc0038I Pass  18: suminf.    8.54803 (59) obj. 23 iterations 32
Cbc0038I Pass  19: suminf.    8.14625 (62) obj. 23 iterations 23
Cbc0038I Pass  20: suminf.    7.54751 (61) obj. 23 iterations 8
Cbc0038I Pass  21: suminf.    8.09520 (61) obj. 23 iterations 38
Cbc0038I Pass  22: suminf.    7.08997 (63) obj. 23 iterations 24
Cbc0038I Pass  23: suminf.    6.93911 (63) obj. 23 iterations 4
Cbc0038I Pass  24: suminf.   11.37125 (52) obj. 23 iterations 72
Cbc0038I Pass  25: suminf.    9.07962 (57) obj. 23 iterations 61
Cbc0038I Pass  26: suminf.    8.86240 (56) obj. 23 iterations 8
Cbc0038I Pass  27: suminf.    8.40970 (58) obj. 23 iterations 18
Cbc0038I Pass  28: suminf.    8.00930 (58) obj. 23 iterations 19
Cbc0038I Pass  29: suminf.    7.89911 (58) obj. 23 iterations 2
Cbc0038I Pass  30: suminf.   12.75249 (53) obj. 23 iterations 49
Cbc0038I Pass  31: suminf.   10.92605 (50) obj. 23 iterations 32
Cbc0038I Pass  32: suminf.    9.18719 (54) obj. 23 iterations 31
Cbc0038I Pass  33: suminf.    8.70953 (53) obj. 23 iterations 11
Cbc0038I Pass  34: suminf.    8.61403 (53) obj. 23 iterations 8
Cbc0038I Pass  35: suminf.   10.58350 (50) obj. 23 iterations 38
Cbc0038I Pass  36: suminf.    8.71180 (52) obj. 23 iterations 17
Cbc0038I Pass  37: suminf.    7.77813 (59) obj. 23 iterations 24
Cbc0038I Pass  38: suminf.    9.61363 (51) obj. 23 iterations 71
Cbc0038I Pass  39: suminf.    7.27328 (55) obj. 23 iterations 44
Cbc0038I Pass  40: suminf.    7.18445 (55) obj. 23 iterations 2
Cbc0038I Pass  41: suminf.    8.30149 (50) obj. 23 iterations 41
Cbc0038I Pass  42: suminf.   17.97470 (60) obj. 23 iterations 151
Cbc0038I Pass  43: suminf.   11.86655 (62) obj. 23 iterations 124
Cbc0038I Pass  44: suminf.   11.58985 (61) obj. 23 iterations 13
Cbc0038I Pass  45: suminf.   11.27239 (55) obj. 23 iterations 11
Cbc0038I Pass  46: suminf.    8.76907 (51) obj. 23 iterations 90
Cbc0038I Pass  47: suminf.    8.22960 (57) obj. 23 iterations 38
Cbc0038I Pass  48: suminf.    7.51365 (50) obj. 23 iterations 16
Cbc0038I Pass  49: suminf.    9.54612 (43) obj. 23 iterations 49
Cbc0038I Pass  50: suminf.    8.96532 (47) obj. 23 iterations 34
Cbc0038I Pass  51: suminf.    8.69608 (47) obj. 23 iterations 2
Cbc0038I Pass  52: suminf.   10.84636 (48) obj. 23 iterations 68
Cbc0038I Pass  53: suminf.    8.14370 (48) obj. 23 iterations 52
Cbc0038I Pass  54: suminf.    7.83479 (48) obj. 23 iterations 7
Cbc0038I Pass  55: suminf.    7.20876 (47) obj. 23 iterations 3
Cbc0038I Pass  56: suminf.    9.33905 (42) obj. 23 iterations 54
Cbc0038I Pass  57: suminf.    8.61611 (44) obj. 23 iterations 34
Cbc0038I Pass  58: suminf.    8.34688 (44) obj. 23 iterations 2
Cbc0038I Pass  59: suminf.    8.89526 (46) obj. 23 iterations 57
Cbc0038I Pass  60: suminf.    8.10402 (48) obj. 23 iterations 41
Cbc0038I Pass  61: suminf.    7.20876 (47) obj. 23 iterations 6
Cbc0038I Pass  62: suminf.    7.79785 (51) obj. 23 iterations 18
Cbc0038I Pass  63: suminf.    7.47799 (47) obj. 23 iterations 20
Cbc0038I Pass  64: suminf.   20.89212 (80) obj. 23 iterations 161
Cbc0038I Pass  65: suminf.   13.81924 (67) obj. 23 iterations 156
Cbc0038I Pass  66: suminf.   12.83336 (61) obj. 23 iterations 15
Cbc0038I Pass  67: suminf.   11.95516 (61) obj. 23 iterations 102
Cbc0038I Pass  68: suminf.   11.09759 (63) obj. 23 iterations 40
Cbc0038I Pass  69: suminf.   10.68417 (59) obj. 23 iterations 17
Cbc0038I Pass  70: suminf.    9.28191 (51) obj. 23 iterations 18
Cbc0038I Pass  71: suminf.    8.95570 (51) obj. 23 iterations 8
Cbc0038I Pass  72: suminf.    9.12510 (47) obj. 23 iterations 75
Cbc0038I Pass  73: suminf.    8.10730 (46) obj. 23 iterations 27
Cbc0038I Pass  74: suminf.    7.86312 (46) obj. 23 iterations 10
Cbc0038I Pass  75: suminf.    9.55720 (46) obj. 23 iterations 73
Cbc0038I Pass  76: suminf.    8.66927 (43) obj. 23 iterations 28
Cbc0038I Pass  77: suminf.   10.55372 (49) obj. 23 iterations 68
Cbc0038I Pass  78: suminf.    8.65136 (49) obj. 23 iterations 47
Cbc0038I Pass  79: suminf.    8.65136 (49) obj. 23 iterations 6
Cbc0038I Pass  80: suminf.    8.65883 (46) obj. 23 iterations 39
Cbc0038I Pass  81: suminf.    8.48873 (47) obj. 23 iterations 29
Cbc0038I Pass  82: suminf.   10.47238 (48) obj. 23 iterations 54
Cbc0038I Pass  83: suminf.    9.95992 (48) obj. 23 iterations 51
Cbc0038I Pass  84: suminf.    9.95992 (48) obj. 23 iterations 2
Cbc0038I Pass  85: suminf.    8.76890 (42) obj. 23 iterations 41
Cbc0038I Pass  86: suminf.    8.05422 (41) obj. 23 iterations 26
Cbc0038I Pass  87: suminf.    6.94531 (38) obj. 23 iterations 27
Cbc0038I Pass  88: suminf.    6.77863 (38) obj. 23 iterations 6
Cbc0038I Pass  89: suminf.    7.36060 (39) obj. 23 iterations 24
Cbc0038I Pass  90: suminf.    6.91529 (40) obj. 23 iterations 16
Cbc0038I Pass  91: suminf.    8.12802 (41) obj. 23 iterations 27
Cbc0038I Pass  92: suminf.    7.55763 (38) obj. 23 iterations 27
Cbc0038I Pass  93: suminf.    7.27761 (40) obj. 23 iterations 9
Cbc0038I Pass  94: suminf.    8.99194 (41) obj. 23 iterations 39
Cbc0038I Pass  95: suminf.    8.06487 (41) obj. 23 iterations 34
Cbc0038I Pass  96: suminf.    7.73898 (40) obj. 23 iterations 2
Cbc0038I Pass  97: suminf.    8.47432 (40) obj. 23 iterations 48
Cbc0038I Pass  98: suminf.    6.18914 (40) obj. 23 iterations 43
Cbc0038I Pass  99: suminf.    5.92215 (41) obj. 23 iterations 6
Cbc0038I Pass 100: suminf.   15.92739 (69) obj. 23 iterations 147
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1722 integers at bound fixed and 0 continuous
Cbc0038I Full problem 345 rows 2107 columns, reduced to 248 rows 360 columns
Cbc0038I Mini branch and bound did not improve solution (5.00 seconds)
Cbc0038I After 5.00 seconds - Feasibility pump exiting - took 1.48 seconds
Cbc0031I 55 added rows had average density of 91.836364
Cbc0013I At root node, 55 cuts changed objective from 20.534985 to 22 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 255 row cuts average 7.4 elements, 212 column cuts (212 active)  in 1.871 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 289.5 elements, 0 column cuts (0 active)  in 0.385 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 297 row cuts average 127.7 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 177.5 elements, 0 column cuts (0 active)  in 0.333 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 177 row cuts average 139.7 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 22 (11.04 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 22 (11.95 seconds)
Cbc0010I After 5 nodes, 5 on tree, 1e+50 best solution, best possible 22 (12.76 seconds)
Cbc0010I After 9 nodes, 7 on tree, 1e+50 best solution, best possible 22 (13.52 seconds)
Cbc0010I After 18 nodes, 9 on tree, 1e+50 best solution, best possible 22 (14.31 seconds)
Cbc0010I After 30 nodes, 6 on tree, 1e+50 best solution, best possible 22 (15.08 seconds)
Cbc0010I After 36 nodes, 3 on tree, 1e+50 best solution, best possible 22 (16.12 seconds)
Cbc0010I After 40 nodes, 3 on tree, 1e+50 best solution, best possible 22 (16.91 seconds)
Cbc0010I After 47 nodes, 6 on tree, 1e+50 best solution, best possible 22 (17.62 seconds)
Cbc0010I After 54 nodes, 2 on tree, 1e+50 best solution, best possible 22 (18.41 seconds)
Cbc0010I After 57 nodes, 2 on tree, 1e+50 best solution, best possible 23 (19.32 seconds)
Cbc0010I After 60 nodes, 5 on tree, 1e+50 best solution, best possible 23 (20.09 seconds)
Cbc0010I After 71 nodes, 7 on tree, 1e+50 best solution, best possible 23 (20.83 seconds)
Cbc0010I After 84 nodes, 9 on tree, 1e+50 best solution, best possible 23 (21.65 seconds)
Cbc0010I After 93 nodes, 10 on tree, 1e+50 best solution, best possible 23 (22.37 seconds)
Cbc0010I After 100 nodes, 10 on tree, 1e+50 best solution, best possible 23 (23.07 seconds)
Cbc0010I After 116 nodes, 7 on tree, 1e+50 best solution, best possible 23 (23.83 seconds)
Cbc0010I After 123 nodes, 9 on tree, 1e+50 best solution, best possible 23 (24.55 seconds)
Cbc0010I After 130 nodes, 10 on tree, 1e+50 best solution, best possible 23 (25.27 seconds)
Cbc0010I After 140 nodes, 12 on tree, 1e+50 best solution, best possible 23 (26.05 seconds)
Cbc0010I After 153 nodes, 20 on tree, 1e+50 best solution, best possible 23 (26.79 seconds)
Cbc0010I After 169 nodes, 18 on tree, 1e+50 best solution, best possible 23 (27.53 seconds)
Cbc0010I After 195 nodes, 26 on tree, 1e+50 best solution, best possible 23 (28.24 seconds)
Cbc0010I After 220 nodes, 17 on tree, 1e+50 best solution, best possible 23 (28.94 seconds)
Cbc0010I After 233 nodes, 16 on tree, 1e+50 best solution, best possible 23 (29.64 seconds)
Cbc0010I After 242 nodes, 15 on tree, 1e+50 best solution, best possible 23 (30.38 seconds)
Cbc0010I After 254 nodes, 13 on tree, 1e+50 best solution, best possible 23 (31.16 seconds)
Cbc0010I After 263 nodes, 15 on tree, 1e+50 best solution, best possible 23 (31.87 seconds)
Cbc0010I After 282 nodes, 17 on tree, 1e+50 best solution, best possible 23 (32.57 seconds)
Cbc0010I After 297 nodes, 14 on tree, 1e+50 best solution, best possible 23 (33.30 seconds)
Cbc0010I After 307 nodes, 15 on tree, 1e+50 best solution, best possible 23 (34.06 seconds)
Cbc0010I After 318 nodes, 16 on tree, 1e+50 best solution, best possible 23 (34.90 seconds)
Cbc0010I After 333 nodes, 14 on tree, 1e+50 best solution, best possible 23 (35.67 seconds)
Cbc0010I After 346 nodes, 12 on tree, 1e+50 best solution, best possible 23 (36.42 seconds)
Cbc0010I After 359 nodes, 13 on tree, 1e+50 best solution, best possible 23 (37.13 seconds)
Cbc0010I After 370 nodes, 18 on tree, 1e+50 best solution, best possible 23 (37.84 seconds)
Cbc0010I After 383 nodes, 17 on tree, 1e+50 best solution, best possible 23 (38.58 seconds)
Cbc0010I After 399 nodes, 17 on tree, 1e+50 best solution, best possible 23 (39.31 seconds)
Cbc0010I After 413 nodes, 18 on tree, 1e+50 best solution, best possible 23 (40.03 seconds)
Cbc0010I After 426 nodes, 14 on tree, 1e+50 best solution, best possible 23 (40.75 seconds)
Cbc0010I After 440 nodes, 17 on tree, 1e+50 best solution, best possible 23 (41.49 seconds)
Cbc0010I After 458 nodes, 16 on tree, 1e+50 best solution, best possible 23 (42.23 seconds)
Cbc0010I After 470 nodes, 17 on tree, 1e+50 best solution, best possible 23 (43.00 seconds)
Cbc0010I After 483 nodes, 16 on tree, 1e+50 best solution, best possible 23 (43.73 seconds)
Cbc0010I After 501 nodes, 18 on tree, 1e+50 best solution, best possible 23 (44.43 seconds)
Cbc0010I After 516 nodes, 17 on tree, 1e+50 best solution, best possible 23 (45.14 seconds)
Cbc0010I After 529 nodes, 14 on tree, 1e+50 best solution, best possible 23 (45.85 seconds)
Cbc0010I After 542 nodes, 15 on tree, 1e+50 best solution, best possible 23 (46.58 seconds)
Cbc0010I After 555 nodes, 20 on tree, 1e+50 best solution, best possible 23 (47.32 seconds)
Cbc0010I After 565 nodes, 13 on tree, 1e+50 best solution, best possible 23 (48.04 seconds)
Cbc0010I After 580 nodes, 13 on tree, 1e+50 best solution, best possible 23 (48.76 seconds)
Cbc0010I After 591 nodes, 15 on tree, 1e+50 best solution, best possible 23 (49.48 seconds)
Cbc0010I After 602 nodes, 12 on tree, 1e+50 best solution, best possible 23 (50.21 seconds)
Cbc0010I After 613 nodes, 12 on tree, 1e+50 best solution, best possible 23 (50.97 seconds)
Cbc0010I After 625 nodes, 9 on tree, 1e+50 best solution, best possible 23 (51.74 seconds)
Cbc0010I After 633 nodes, 10 on tree, 1e+50 best solution, best possible 23 (52.55 seconds)
Cbc0010I After 643 nodes, 7 on tree, 1e+50 best solution, best possible 23 (53.35 seconds)
Cbc0010I After 654 nodes, 6 on tree, 1e+50 best solution, best possible 23 (54.19 seconds)
Cbc0010I After 665 nodes, 8 on tree, 1e+50 best solution, best possible 23 (54.91 seconds)
Cbc0004I Integer solution of 23 found after 99897 iterations and 678 nodes (55.24 seconds)
Cbc0001I Search completed - best objective 23, took 99897 iterations and 678 nodes (55.25 seconds)
Cbc0032I Strong branching done 1652 times (14567 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 63, 0 variables fixed on reduced cost
Cuts at root node changed objective from 20.535 to 22
Probing was tried 120 times and created 1516 cuts of which 0 were active after adding rounds of cuts (2.89957 seconds)
Gomory was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.384714 seconds)
Knapsack was tried 120 times and created 48 cuts of which 0 were active after adding rounds of cuts (1.06665 seconds)
Clique was tried 10 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.016491 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.076738 seconds)
MixedIntegerRounding2 was tried 120 times and created 2475 cuts of which 0 were active after adding rounds of cuts (2.00308 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007419 seconds)
TwoMirCuts was tried 10 times and created 192 cuts of which 0 were active after adding rounds of cuts (0.332617 seconds)
ZeroHalf was tried 10 times and created 177 cuts of which 0 were active after adding rounds of cuts (0.157255 seconds)

Result - Optimal solution found
Objective value:                23
Enumerated nodes:               678
Total iterations:               99897
Time (CPU seconds):             55.2187
Time (Wallclock seconds):       55.3339
Total time (CPU seconds):       55.2883   (Wallclock seconds):       55.3925
