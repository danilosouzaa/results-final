Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j309/j309_6.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.145885 - 0.175091 seconds
Cgl0002I 4 variables fixed
Cgl0003I 29 fixed, 0 tightened bounds, 24 strengthened rows, 1 substitutions
Cgl0003I 5 fixed, 1 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 268 rows, 592 columns (592 integer (591 of which binary)) and 7069 elements
Coin3009W Conflict graph built in 0.034 seconds, density: 1.948%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 592 objects (592 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 89 integers unsatisfied sum - 19.5194
Cbc0038I Pass   1: suminf.   14.27964 (74) obj. 1.37652 iterations 130
Cbc0038I Pass   2: suminf.   14.18133 (72) obj. 1.46041 iterations 27
Cbc0038I Pass   3: suminf.   13.70688 (76) obj. 1.47515 iterations 41
Cbc0038I Pass   4: suminf.   14.86835 (72) obj. 1.47965 iterations 78
Cbc0038I Pass   5: suminf.   13.66396 (74) obj. 1.35636 iterations 70
Cbc0038I Pass   6: suminf.   13.32665 (58) obj. 2.36475 iterations 96
Cbc0038I Pass   7: suminf.   12.75642 (62) obj. 2.37549 iterations 61
Cbc0038I Pass   8: suminf.   13.26130 (58) obj. 5 iterations 95
Cbc0038I Pass   9: suminf.   12.45647 (56) obj. 5 iterations 52
Cbc0038I Pass  10: suminf.   12.15930 (56) obj. 5 iterations 29
Cbc0038I Pass  11: suminf.   13.53049 (56) obj. 5 iterations 52
Cbc0038I Pass  12: suminf.   12.37401 (54) obj. 5 iterations 34
Cbc0038I Pass  13: suminf.   11.96121 (56) obj. 5 iterations 15
Cbc0038I Pass  14: suminf.   11.96124 (56) obj. 5 iterations 2
Cbc0038I Pass  15: suminf.   10.28974 (55) obj. 5 iterations 117
Cbc0038I Pass  16: suminf.    8.56892 (52) obj. 5 iterations 63
Cbc0038I Pass  17: suminf.    8.54112 (54) obj. 5 iterations 21
Cbc0038I Pass  18: suminf.    9.62020 (51) obj. 5 iterations 70
Cbc0038I Pass  19: suminf.    8.35667 (38) obj. 5 iterations 24
Cbc0038I Pass  20: suminf.    8.35667 (38) obj. 5 iterations 4
Cbc0038I Pass  21: suminf.    9.53605 (31) obj. 5 iterations 121
Cbc0038I Pass  22: suminf.    7.36414 (30) obj. 5 iterations 70
Cbc0038I Pass  23: suminf.    7.15155 (32) obj. 5 iterations 31
Cbc0038I Pass  24: suminf.    6.96151 (32) obj. 5 iterations 34
Cbc0038I Pass  25: suminf.    8.94948 (33) obj. 5 iterations 97
Cbc0038I Pass  26: suminf.    7.09312 (33) obj. 5 iterations 70
Cbc0038I Pass  27: suminf.    6.86063 (35) obj. 5 iterations 34
Cbc0038I Pass  28: suminf.    7.84757 (27) obj. 5 iterations 78
Cbc0038I Pass  29: suminf.    6.83561 (29) obj. 5 iterations 61
Cbc0038I Pass  30: suminf.    8.04356 (31) obj. 5 iterations 124
Cbc0038I Pass  31: suminf.    6.10054 (25) obj. 5 iterations 77
Cbc0038I Pass  32: suminf.    6.10054 (25) obj. 5 iterations 7
Cbc0038I Pass  33: suminf.    7.71632 (26) obj. 5 iterations 71
Cbc0038I Pass  34: suminf.    7.12786 (29) obj. 5 iterations 45
Cbc0038I Pass  35: suminf.    7.02063 (25) obj. 5 iterations 37
Cbc0038I Pass  36: suminf.    7.34468 (27) obj. 5 iterations 71
Cbc0038I Pass  37: suminf.    6.46769 (27) obj. 5 iterations 74
Cbc0038I Pass  38: suminf.    6.16043 (32) obj. 5 iterations 32
Cbc0038I Pass  39: suminf.    5.93990 (28) obj. 5 iterations 22
Cbc0038I Pass  40: suminf.    6.84127 (23) obj. 5 iterations 51
Cbc0038I Pass  41: suminf.    6.51984 (24) obj. 5 iterations 47
Cbc0038I Pass  42: suminf.    7.71587 (29) obj. 5 iterations 72
Cbc0038I Pass  43: suminf.    6.75595 (26) obj. 5 iterations 77
Cbc0038I Pass  44: suminf.    6.72024 (25) obj. 5 iterations 2
Cbc0038I Pass  45: suminf.    6.88199 (28) obj. 5 iterations 83
Cbc0038I Pass  46: suminf.    6.73157 (26) obj. 5 iterations 28
Cbc0038I Pass  47: suminf.    8.63572 (36) obj. 5 iterations 127
Cbc0038I Pass  48: suminf.    6.32429 (29) obj. 5 iterations 51
Cbc0038I Pass  49: suminf.    6.32429 (29) obj. 5 iterations 4
Cbc0038I Pass  50: suminf.    6.98627 (26) obj. 5 iterations 81
Cbc0038I Pass  51: suminf.    4.95287 (22) obj. 5 iterations 43
Cbc0038I Pass  52: suminf.    4.65146 (23) obj. 5 iterations 47
Cbc0038I Pass  53: suminf.    4.34474 (21) obj. 5 iterations 52
Cbc0038I Pass  54: suminf.    5.79352 (27) obj. 5 iterations 106
Cbc0038I Pass  55: suminf.    5.73431 (30) obj. 5 iterations 56
Cbc0038I Pass  56: suminf.    5.91429 (23) obj. 5 iterations 65
Cbc0038I Pass  57: suminf.   11.36300 (46) obj. 5 iterations 118
Cbc0038I Pass  58: suminf.    6.73664 (34) obj. 5 iterations 132
Cbc0038I Pass  59: suminf.    6.13026 (36) obj. 5 iterations 54
Cbc0038I Pass  60: suminf.    5.15666 (32) obj. 5 iterations 46
Cbc0038I Pass  61: suminf.    5.01221 (31) obj. 5 iterations 38
Cbc0038I Pass  62: suminf.    4.96857 (32) obj. 5 iterations 7
Cbc0038I Pass  63: suminf.    6.17993 (28) obj. 5 iterations 80
Cbc0038I Pass  64: suminf.    4.67030 (36) obj. 5 iterations 62
Cbc0038I Pass  65: suminf.    6.72080 (27) obj. 5 iterations 63
Cbc0038I Pass  66: suminf.    6.13757 (27) obj. 5 iterations 37
Cbc0038I Pass  67: suminf.    5.70272 (39) obj. 5 iterations 23
Cbc0038I Pass  68: suminf.    5.22684 (38) obj. 5 iterations 10
Cbc0038I Pass  69: suminf.    7.94333 (29) obj. 5 iterations 73
Cbc0038I Pass  70: suminf.    7.87070 (26) obj. 5 iterations 26
Cbc0038I Pass  71: suminf.    7.67070 (26) obj. 5 iterations 4
Cbc0038I Pass  72: suminf.    7.16392 (26) obj. 5 iterations 44
Cbc0038I Pass  73: suminf.    6.98545 (26) obj. 5 iterations 21
Cbc0038I Pass  74: suminf.    6.88190 (34) obj. 5 iterations 20
Cbc0038I Pass  75: suminf.    7.28168 (28) obj. 5 iterations 70
Cbc0038I Pass  76: suminf.    7.07879 (33) obj. 5 iterations 31
Cbc0038I Pass  77: suminf.    6.98954 (33) obj. 5 iterations 21
Cbc0038I Pass  78: suminf.    8.09058 (40) obj. 5 iterations 95
Cbc0038I Pass  79: suminf.    6.76546 (37) obj. 5 iterations 70
Cbc0038I Pass  80: suminf.    6.69033 (27) obj. 5 iterations 93
Cbc0038I Pass  81: suminf.    6.38665 (24) obj. 5 iterations 51
Cbc0038I Pass  82: suminf.    6.07304 (24) obj. 5 iterations 29
Cbc0038I Pass  83: suminf.    5.67800 (24) obj. 5 iterations 26
Cbc0038I Pass  84: suminf.    5.67943 (23) obj. 5 iterations 89
Cbc0038I Pass  85: suminf.    4.83554 (20) obj. 5 iterations 65
Cbc0038I Pass  86: suminf.    4.16020 (20) obj. 5 iterations 1
Cbc0038I Pass  87: suminf.    7.14137 (25) obj. 5 iterations 90
Cbc0038I Pass  88: suminf.    4.94746 (22) obj. 5 iterations 94
Cbc0038I Pass  89: suminf.    4.42396 (24) obj. 5 iterations 42
Cbc0038I Pass  90: suminf.    4.06728 (26) obj. 5 iterations 43
Cbc0038I Pass  91: suminf.    7.81803 (27) obj. 5 iterations 103
Cbc0038I Pass  92: suminf.    6.59141 (26) obj. 5 iterations 64
Cbc0038I Pass  93: suminf.    6.53232 (28) obj. 5 iterations 19
Cbc0038I Pass  94: suminf.    6.53232 (28) obj. 5 iterations 1
Cbc0038I Pass  95: suminf.    6.75279 (25) obj. 5 iterations 134
Cbc0038I Pass  96: suminf.    6.39937 (25) obj. 5 iterations 57
Cbc0038I Pass  97: suminf.    6.29352 (26) obj. 5 iterations 20
Cbc0038I Pass  98: suminf.    6.29352 (26) obj. 5 iterations 15
Cbc0038I Pass  99: suminf.    7.22167 (29) obj. 5 iterations 130
Cbc0038I Pass 100: suminf.   18.12199 (71) obj. 5 iterations 167
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 334 integers at bound fixed and 0 continuous
Cbc0038I Full problem 268 rows 592 columns, reduced to 197 rows 240 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.90 seconds)
Cbc0038I After 1.90 seconds - Feasibility pump exiting - took 0.56 seconds
Cbc0031I 100 added rows had average density of 37.48
Cbc0013I At root node, 100 cuts changed objective from 1 to 2.5640828 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 307 row cuts average 12.7 elements, 2 column cuts (74 active)  in 0.966 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 311 row cuts average 572.6 elements, 0 column cuts (0 active)  in 1.105 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 62 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 169 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.209 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 133 row cuts average 36.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 165 row cuts average 42.6 elements, 0 column cuts (0 active)  in 0.222 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2.5640828 (7.55 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2.5640828 (8.26 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2.5640828 (9.05 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2.5640828 (10.05 seconds)
Cbc0010I After 7 nodes, 2 on tree, 1e+50 best solution, best possible 2.5640828 (10.87 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 2.5640828 (11.70 seconds)
Cbc0010I After 10 nodes, 5 on tree, 1e+50 best solution, best possible 2.5640828 (12.94 seconds)
Cbc0010I After 12 nodes, 7 on tree, 1e+50 best solution, best possible 2.5640828 (13.85 seconds)
Cbc0010I After 15 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (14.63 seconds)
Cbc0010I After 20 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (15.62 seconds)
Cbc0010I After 23 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (16.35 seconds)
Cbc0010I After 27 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (17.08 seconds)
Cbc0010I After 31 nodes, 6 on tree, 1e+50 best solution, best possible 2.5640828 (17.78 seconds)
Cbc0010I After 35 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (18.73 seconds)
Cbc0010I After 39 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (19.47 seconds)
Cbc0010I After 45 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (20.25 seconds)
Cbc0010I After 48 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (21.17 seconds)
Cbc0010I After 51 nodes, 10 on tree, 1e+50 best solution, best possible 2.5640828 (21.87 seconds)
Cbc0010I After 55 nodes, 12 on tree, 1e+50 best solution, best possible 2.5640828 (22.73 seconds)
Cbc0010I After 61 nodes, 12 on tree, 1e+50 best solution, best possible 2.5640828 (23.74 seconds)
Cbc0010I After 66 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (24.52 seconds)
Cbc0010I After 71 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (25.28 seconds)
Cbc0010I After 78 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (26.18 seconds)
Cbc0010I After 84 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (26.94 seconds)
Cbc0010I After 90 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (27.67 seconds)
Cbc0010I After 95 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (28.44 seconds)
Cbc0010I After 99 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (29.24 seconds)
Cbc0010I After 105 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (30.06 seconds)
Cbc0010I After 110 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (30.80 seconds)
Cbc0010I After 115 nodes, 4 on tree, 1e+50 best solution, best possible 2.5640828 (31.94 seconds)
Cbc0010I After 119 nodes, 2 on tree, 1e+50 best solution, best possible 2.5640828 (32.70 seconds)
Cbc0010I After 121 nodes, 4 on tree, 1e+50 best solution, best possible 2.5640828 (33.78 seconds)
Cbc0010I After 128 nodes, 7 on tree, 1e+50 best solution, best possible 2.5640828 (34.48 seconds)
Cbc0010I After 132 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (35.24 seconds)
Cbc0010I After 136 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (35.99 seconds)
Cbc0010I After 144 nodes, 8 on tree, 1e+50 best solution, best possible 2.5640828 (36.89 seconds)
Cbc0010I After 149 nodes, 6 on tree, 1e+50 best solution, best possible 2.5640828 (37.70 seconds)
Cbc0010I After 155 nodes, 6 on tree, 1e+50 best solution, best possible 2.5640828 (38.62 seconds)
Cbc0010I After 159 nodes, 6 on tree, 1e+50 best solution, best possible 2.5640828 (39.37 seconds)
Cbc0010I After 164 nodes, 6 on tree, 1e+50 best solution, best possible 2.5640828 (40.08 seconds)
Cbc0010I After 170 nodes, 7 on tree, 1e+50 best solution, best possible 2.5640828 (40.85 seconds)
Cbc0010I After 178 nodes, 5 on tree, 1e+50 best solution, best possible 2.5640828 (41.58 seconds)
Cbc0010I After 186 nodes, 5 on tree, 1e+50 best solution, best possible 2.5640828 (42.34 seconds)
Cbc0010I After 192 nodes, 3 on tree, 1e+50 best solution, best possible 2.5640828 (43.59 seconds)
Cbc0010I After 198 nodes, 4 on tree, 1e+50 best solution, best possible 2.5640828 (44.37 seconds)
Cbc0010I After 201 nodes, 4 on tree, 1e+50 best solution, best possible 2.5640828 (45.11 seconds)
Cbc0010I After 208 nodes, 9 on tree, 1e+50 best solution, best possible 2.5640828 (45.81 seconds)
Cbc0010I After 218 nodes, 11 on tree, 1e+50 best solution, best possible 2.5640828 (46.55 seconds)
Cbc0004I Integer solution of 5 found after 73363 iterations and 221 nodes (46.61 seconds)
Cbc0001I Search completed - best objective 5, took 73877 iterations and 222 nodes (46.80 seconds)
Cbc0032I Strong branching done 1872 times (73751 iterations), fathomed 3 nodes and fixed 28 variables
Cbc0035I Maximum depth 26, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1 to 2.56408
Probing was tried 182 times and created 1682 cuts of which 72 were active after adding rounds of cuts (2.4901 seconds)
Gomory was tried 179 times and created 319 cuts of which 0 were active after adding rounds of cuts (1.71198 seconds)
Knapsack was tried 179 times and created 398 cuts of which 0 were active after adding rounds of cuts (1.69576 seconds)
Clique was tried 179 times and created 1894 cuts of which 0 were active after adding rounds of cuts (0.473049 seconds)
OddWheel was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.209229 seconds)
MixedIntegerRounding2 was tried 179 times and created 1183 cuts of which 0 were active after adding rounds of cuts (0.715012 seconds)
FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003798 seconds)
TwoMirCuts was tried 179 times and created 1219 cuts of which 0 were active after adding rounds of cuts (0.445559 seconds)
ZeroHalf was tried 179 times and created 1495 cuts of which 0 were active after adding rounds of cuts (1.8201 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               222
Total iterations:               73877
Time (CPU seconds):             46.3682
Time (Wallclock seconds):       46.8523
Total time (CPU seconds):       46.3867   (Wallclock seconds):       46.8635
