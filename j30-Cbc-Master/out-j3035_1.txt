Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_1.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 9.57385 - 0.117362 seconds
Cgl0003I 3 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 321 rows, 1269 columns (1269 integer (1268 of which binary)) and 14842 elements
Coin3009W Conflict graph built in 0.080 seconds, density: 0.861%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1269 objects (1269 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 76 integers unsatisfied sum - 22.3399
Cbc0038I Pass   1: suminf.   12.26138 (53) obj. 12 iterations 169
Cbc0038I Pass   2: suminf.    9.05823 (48) obj. 12 iterations 48
Cbc0038I Pass   3: suminf.    8.32578 (49) obj. 12 iterations 33
Cbc0038I Pass   4: suminf.    8.19770 (49) obj. 12 iterations 5
Cbc0038I Pass   5: suminf.    9.11417 (41) obj. 12 iterations 109
Cbc0038I Pass   6: suminf.    8.23128 (44) obj. 12 iterations 46
Cbc0038I Pass   7: suminf.    8.05273 (38) obj. 12 iterations 44
Cbc0038I Pass   8: suminf.    8.70512 (42) obj. 12 iterations 43
Cbc0038I Pass   9: suminf.    8.25938 (37) obj. 12 iterations 33
Cbc0038I Pass  10: suminf.    8.18859 (39) obj. 12 iterations 4
Cbc0038I Pass  11: suminf.   11.46822 (46) obj. 12 iterations 99
Cbc0038I Pass  12: suminf.   11.16210 (47) obj. 12 iterations 22
Cbc0038I Pass  13: suminf.   11.01924 (47) obj. 12 iterations 3
Cbc0038I Pass  14: suminf.   10.60654 (47) obj. 12 iterations 4
Cbc0038I Pass  15: suminf.   11.03720 (36) obj. 12 iterations 61
Cbc0038I Pass  16: suminf.    8.41088 (36) obj. 12 iterations 60
Cbc0038I Pass  17: suminf.    8.26802 (36) obj. 12 iterations 3
Cbc0038I Pass  18: suminf.    7.85177 (36) obj. 12 iterations 4
Cbc0038I Pass  19: suminf.    7.85177 (36) obj. 12 iterations 4
Cbc0038I Pass  20: suminf.   10.52696 (34) obj. 12 iterations 67
Cbc0038I Pass  21: suminf.    8.54563 (32) obj. 12 iterations 47
Cbc0038I Pass  22: suminf.    8.38950 (31) obj. 12 iterations 15
Cbc0038I Pass  23: suminf.    7.84835 (31) obj. 12 iterations 15
Cbc0038I Pass  24: suminf.    9.15256 (33) obj. 12 iterations 45
Cbc0038I Pass  25: suminf.    8.02442 (32) obj. 12 iterations 30
Cbc0038I Pass  26: suminf.    7.39245 (31) obj. 12 iterations 20
Cbc0038I Pass  27: suminf.    7.39245 (30) obj. 12 iterations 10
Cbc0038I Pass  28: suminf.    6.89245 (30) obj. 12 iterations 3
Cbc0038I Pass  29: suminf.   12.04548 (40) obj. 12 iterations 73
Cbc0038I Pass  30: suminf.    9.26944 (31) obj. 12 iterations 70
Cbc0038I Pass  31: suminf.    8.85674 (31) obj. 12 iterations 4
Cbc0038I Pass  32: suminf.    8.85674 (31) obj. 12 iterations 4
Cbc0038I Pass  33: suminf.    8.20085 (30) obj. 12 iterations 25
Cbc0038I Pass  34: suminf.    8.05085 (30) obj. 12 iterations 11
Cbc0038I Pass  35: suminf.    8.62309 (32) obj. 12 iterations 44
Cbc0038I Pass  36: suminf.    8.35674 (31) obj. 12 iterations 36
Cbc0038I Pass  37: suminf.    8.35674 (31) obj. 12 iterations 4
Cbc0038I Pass  38: suminf.   11.58268 (39) obj. 12 iterations 59
Cbc0038I Pass  39: suminf.   10.57947 (39) obj. 12 iterations 35
Cbc0038I Pass  40: suminf.    8.32994 (30) obj. 12 iterations 34
Cbc0038I Pass  41: suminf.    8.06078 (30) obj. 12 iterations 8
Cbc0038I Pass  42: suminf.    8.40223 (34) obj. 12 iterations 38
Cbc0038I Pass  43: suminf.    7.36792 (30) obj. 12 iterations 48
Cbc0038I Pass  44: suminf.    6.47518 (31) obj. 12 iterations 21
Cbc0038I Pass  45: suminf.    6.47518 (31) obj. 12 iterations 3
Cbc0038I Pass  46: suminf.   11.86313 (40) obj. 12 iterations 83
Cbc0038I Pass  47: suminf.   10.40095 (38) obj. 12 iterations 49
Cbc0038I Pass  48: suminf.    9.95177 (39) obj. 12 iterations 10
Cbc0038I Pass  49: suminf.    9.53907 (39) obj. 12 iterations 4
Cbc0038I Pass  50: suminf.    9.53907 (39) obj. 12 iterations 3
Cbc0038I Pass  51: suminf.    9.67884 (34) obj. 12 iterations 65
Cbc0038I Pass  52: suminf.    8.28459 (34) obj. 12 iterations 30
Cbc0038I Pass  53: suminf.    7.36792 (30) obj. 12 iterations 33
Cbc0038I Pass  54: suminf.    6.40760 (30) obj. 12 iterations 12
Cbc0038I Pass  55: suminf.    6.40760 (30) obj. 12 iterations 3
Cbc0038I Pass  56: suminf.   10.48774 (37) obj. 12 iterations 66
Cbc0038I Pass  57: suminf.    9.71648 (37) obj. 12 iterations 25
Cbc0038I Pass  58: suminf.    9.62879 (38) obj. 12 iterations 7
Cbc0038I Pass  59: suminf.    9.48593 (38) obj. 12 iterations 3
Cbc0038I Pass  60: suminf.    9.07029 (36) obj. 12 iterations 9
Cbc0038I Pass  61: suminf.    9.07029 (36) obj. 12 iterations 3
Cbc0038I Pass  62: suminf.    7.30303 (31) obj. 12 iterations 40
Cbc0038I Pass  63: suminf.    7.05065 (31) obj. 12 iterations 20
Cbc0038I Pass  64: suminf.    9.95533 (34) obj. 12 iterations 66
Cbc0038I Pass  65: suminf.    9.01591 (36) obj. 12 iterations 32
Cbc0038I Pass  66: suminf.    7.60620 (33) obj. 12 iterations 36
Cbc0038I Pass  67: suminf.    7.48526 (32) obj. 12 iterations 12
Cbc0038I Pass  68: suminf.    7.20620 (31) obj. 12 iterations 7
Cbc0038I Pass  69: suminf.   10.11274 (30) obj. 12 iterations 68
Cbc0038I Pass  70: suminf.    8.96240 (34) obj. 12 iterations 29
Cbc0038I Pass  71: suminf.    8.45418 (33) obj. 12 iterations 20
Cbc0038I Pass  72: suminf.    7.93954 (31) obj. 12 iterations 17
Cbc0038I Pass  73: suminf.    9.51996 (35) obj. 12 iterations 80
Cbc0038I Pass  74: suminf.    8.01774 (36) obj. 12 iterations 25
Cbc0038I Pass  75: suminf.    7.37842 (30) obj. 12 iterations 23
Cbc0038I Pass  76: suminf.    7.31674 (29) obj. 12 iterations 9
Cbc0038I Pass  77: suminf.    6.97842 (28) obj. 12 iterations 7
Cbc0038I Pass  78: suminf.    8.90019 (34) obj. 12 iterations 66
Cbc0038I Pass  79: suminf.    8.34915 (33) obj. 12 iterations 32
Cbc0038I Pass  80: suminf.    8.02982 (29) obj. 12 iterations 15
Cbc0038I Pass  81: suminf.    7.58294 (29) obj. 12 iterations 3
Cbc0038I Pass  82: suminf.    7.58294 (29) obj. 12 iterations 3
Cbc0038I Pass  83: suminf.    9.48774 (30) obj. 12 iterations 59
Cbc0038I Pass  84: suminf.    8.68319 (35) obj. 12 iterations 31
Cbc0038I Pass  85: suminf.    8.16178 (34) obj. 12 iterations 20
Cbc0038I Pass  86: suminf.    8.16178 (34) obj. 12 iterations 4
Cbc0038I Pass  87: suminf.    8.16178 (34) obj. 12 iterations 1
Cbc0038I Pass  88: suminf.   15.07778 (57) obj. 11 iterations 150
Cbc0038I Pass  89: suminf.    8.07924 (34) obj. 12 iterations 111
Cbc0038I Pass  90: suminf.    9.54011 (38) obj. 12 iterations 38
Cbc0038I Pass  91: suminf.    8.99011 (38) obj. 12 iterations 26
Cbc0038I Pass  92: suminf.    8.99011 (38) obj. 12 iterations 3
Cbc0038I Pass  93: suminf.   11.76813 (43) obj. 12 iterations 70
Cbc0038I Pass  94: suminf.    8.79286 (35) obj. 12 iterations 54
Cbc0038I Pass  95: suminf.    8.51558 (34) obj. 12 iterations 25
Cbc0038I Pass  96: suminf.    8.31045 (30) obj. 12 iterations 51
Cbc0038I Pass  97: suminf.    6.47771 (27) obj. 12 iterations 35
Cbc0038I Pass  98: suminf.    6.45952 (29) obj. 12 iterations 6
Cbc0038I Pass  99: suminf.    6.03095 (29) obj. 12 iterations 4
Cbc0038I Pass 100: suminf.   14.97160 (69) obj. 12 iterations 151
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1016 integers at bound fixed and 0 continuous
Cbc0038I Full problem 321 rows 1269 columns, reduced to 218 rows 230 columns
Cbc0038I Mini branch and bound did not improve solution (2.90 seconds)
Cbc0038I After 2.90 seconds - Feasibility pump exiting - took 0.97 seconds
Cbc0031I 61 added rows had average density of 58.393443
Cbc0013I At root node, 61 cuts changed objective from 9.5738499 to 11 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 268 row cuts average 11.6 elements, 74 column cuts (74 active)  in 1.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 55 row cuts average 568.2 elements, 0 column cuts (0 active)  in 0.445 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 220 row cuts average 77.9 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 179 row cuts average 153.9 elements, 0 column cuts (0 active)  in 0.229 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 145 row cuts average 86.6 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 11 (6.75 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 11 (7.58 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 11 (8.50 seconds)
Cbc0010I After 12 nodes, 7 on tree, 1e+50 best solution, best possible 11 (9.35 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible 11 (10.17 seconds)
Cbc0010I After 26 nodes, 7 on tree, 1e+50 best solution, best possible 11 (10.92 seconds)
Cbc0010I After 33 nodes, 4 on tree, 1e+50 best solution, best possible 11 (11.72 seconds)
Cbc0010I After 37 nodes, 6 on tree, 1e+50 best solution, best possible 11 (12.43 seconds)
Cbc0010I After 43 nodes, 5 on tree, 1e+50 best solution, best possible 11 (13.26 seconds)
Cbc0010I After 46 nodes, 3 on tree, 1e+50 best solution, best possible 11 (14.20 seconds)
Cbc0010I After 49 nodes, 6 on tree, 1e+50 best solution, best possible 11 (14.94 seconds)
Cbc0010I After 58 nodes, 4 on tree, 1e+50 best solution, best possible 11 (15.65 seconds)
Cbc0010I After 62 nodes, 3 on tree, 1e+50 best solution, best possible 11 (16.46 seconds)
Cbc0010I After 65 nodes, 6 on tree, 1e+50 best solution, best possible 11 (17.17 seconds)
Cbc0010I After 71 nodes, 10 on tree, 1e+50 best solution, best possible 11 (17.92 seconds)
Cbc0010I After 80 nodes, 8 on tree, 1e+50 best solution, best possible 11 (18.67 seconds)
Cbc0010I After 84 nodes, 7 on tree, 1e+50 best solution, best possible 11 (19.40 seconds)
Cbc0010I After 91 nodes, 2 on tree, 1e+50 best solution, best possible 11 (20.17 seconds)
Cbc0010I After 95 nodes, 1 on tree, 1e+50 best solution, best possible 11 (21.61 seconds)
Cbc0010I After 97 nodes, 2 on tree, 1e+50 best solution, best possible 12 (22.37 seconds)
Cbc0010I After 100 nodes, 5 on tree, 1e+50 best solution, best possible 12 (23.08 seconds)
Cbc0010I After 107 nodes, 8 on tree, 1e+50 best solution, best possible 12 (23.87 seconds)
Cbc0010I After 112 nodes, 9 on tree, 1e+50 best solution, best possible 12 (24.61 seconds)
Cbc0010I After 122 nodes, 12 on tree, 1e+50 best solution, best possible 12 (25.32 seconds)
Cbc0010I After 132 nodes, 12 on tree, 1e+50 best solution, best possible 12 (26.04 seconds)
Cbc0010I After 142 nodes, 11 on tree, 1e+50 best solution, best possible 12 (26.82 seconds)
Cbc0010I After 151 nodes, 12 on tree, 1e+50 best solution, best possible 12 (27.58 seconds)
Cbc0010I After 161 nodes, 15 on tree, 1e+50 best solution, best possible 12 (28.28 seconds)
Cbc0010I After 174 nodes, 15 on tree, 1e+50 best solution, best possible 12 (29.06 seconds)
Cbc0010I After 190 nodes, 13 on tree, 1e+50 best solution, best possible 12 (29.77 seconds)
Cbc0010I After 202 nodes, 12 on tree, 1e+50 best solution, best possible 12 (30.52 seconds)
Cbc0010I After 212 nodes, 11 on tree, 1e+50 best solution, best possible 12 (31.23 seconds)
Cbc0010I After 223 nodes, 11 on tree, 1e+50 best solution, best possible 12 (31.95 seconds)
Cbc0010I After 235 nodes, 11 on tree, 1e+50 best solution, best possible 12 (32.68 seconds)
Cbc0010I After 249 nodes, 9 on tree, 1e+50 best solution, best possible 12 (33.46 seconds)
Cbc0010I After 254 nodes, 9 on tree, 1e+50 best solution, best possible 12 (34.26 seconds)
Cbc0010I After 261 nodes, 12 on tree, 1e+50 best solution, best possible 12 (35.01 seconds)
Cbc0010I After 271 nodes, 16 on tree, 1e+50 best solution, best possible 12 (35.76 seconds)
Cbc0010I After 283 nodes, 17 on tree, 1e+50 best solution, best possible 12 (36.56 seconds)
Cbc0010I After 292 nodes, 18 on tree, 1e+50 best solution, best possible 12 (37.32 seconds)
Cbc0010I After 304 nodes, 22 on tree, 1e+50 best solution, best possible 12 (38.04 seconds)
Cbc0010I After 335 nodes, 30 on tree, 1e+50 best solution, best possible 12 (38.78 seconds)
Cbc0016I Integer solution of 12 found by strong branching after 57539 iterations and 355 nodes (39.09 seconds)
Cbc0001I Search completed - best objective 12, took 57588 iterations and 355 nodes (39.10 seconds)
Cbc0032I Strong branching done 1144 times (10078 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 47, 0 variables fixed on reduced cost
Cuts at root node changed objective from 9.57385 to 11
Probing was tried 272 times and created 2562 cuts of which 0 were active after adding rounds of cuts (3.16639 seconds)
Gomory was tried 271 times and created 55 cuts of which 0 were active after adding rounds of cuts (1.43591 seconds)
Knapsack was tried 271 times and created 136 cuts of which 0 were active after adding rounds of cuts (2.63185 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015359 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.078776 seconds)
MixedIntegerRounding2 was tried 271 times and created 2628 cuts of which 0 were active after adding rounds of cuts (2.02923 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004971 seconds)
TwoMirCuts was tried 271 times and created 722 cuts of which 0 were active after adding rounds of cuts (0.855129 seconds)
ZeroHalf was tried 271 times and created 1623 cuts of which 0 were active after adding rounds of cuts (2.61454 seconds)

Result - Optimal solution found
Objective value:                12
Enumerated nodes:               355
Total iterations:               57588
Time (CPU seconds):             39.1418
Time (Wallclock seconds):       39.1605
Total time (CPU seconds):       39.2327   (Wallclock seconds):       39.2334
