Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3015/j3015_5.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.127599 seconds
Cgl0002I 20 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 214 rows, 479 columns (479 integer (476 of which binary)) and 6828 elements
Coin3009W Conflict graph built in 0.012 seconds, density: 1.550%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 479 objects (479 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 38 integers unsatisfied sum - 10.8173
Cbc0038I Pass   1: suminf.    8.78659 (41) obj. 0.13692 iterations 84
Cbc0038I Pass   2: suminf.    8.08938 (28) obj. 8.88178e-16 iterations 63
Cbc0038I Pass   3: suminf.    6.76704 (32) obj. 0.0442091 iterations 43
Cbc0038I Pass   4: suminf.    7.12464 (28) obj. 0.1 iterations 64
Cbc0038I Pass   5: suminf.    6.77845 (29) obj. 0.103554 iterations 27
Cbc0038I Pass   6: suminf.    7.01309 (25) obj. 1 iterations 64
Cbc0038I Pass   7: suminf.    4.88889 (20) obj. 1 iterations 41
Cbc0038I Pass   8: suminf.    5.13790 (21) obj. 1 iterations 94
Cbc0038I Pass   9: suminf.    3.98670 (16) obj. 1 iterations 56
Cbc0038I Pass  10: suminf.    3.78765 (16) obj. 1 iterations 9
Cbc0038I Pass  11: suminf.    3.55556 (11) obj. 1 iterations 65
Cbc0038I Pass  12: suminf.    3.46737 (19) obj. 1 iterations 38
Cbc0038I Pass  13: suminf.    6.10573 (25) obj. 1 iterations 60
Cbc0038I Pass  14: suminf.    4.09315 (16) obj. 1 iterations 52
Cbc0038I Pass  15: suminf.    4.01962 (16) obj. 1 iterations 27
Cbc0038I Pass  16: suminf.    4.30055 (14) obj. 1 iterations 35
Cbc0038I Pass  17: suminf.    4.27518 (14) obj. 1 iterations 15
Cbc0038I Pass  18: suminf.    3.72222 (11) obj. 1 iterations 36
Cbc0038I Pass  19: suminf.    3.66241 (20) obj. 1 iterations 26
Cbc0038I Pass  20: suminf.    4.32240 (16) obj. 1 iterations 69
Cbc0038I Pass  21: suminf.    3.37383 (12) obj. 1 iterations 26
Cbc0038I Pass  22: suminf.    3.28264 (16) obj. 1 iterations 32
Cbc0038I Pass  23: suminf.    4.14750 (17) obj. 1 iterations 65
Cbc0038I Pass  24: suminf.    4.04444 (15) obj. 1 iterations 15
Cbc0038I Pass  25: suminf.    3.88889 (15) obj. 1 iterations 55
Cbc0038I Pass  26: suminf.    3.36780 (16) obj. 1 iterations 30
Cbc0038I Pass  27: suminf.    4.74524 (21) obj. 1 iterations 67
Cbc0038I Pass  28: suminf.    3.97933 (17) obj. 1 iterations 10
Cbc0038I Pass  29: suminf.    3.88000 (17) obj. 1 iterations 8
Cbc0038I Pass  30: suminf.    3.48379 (19) obj. 1 iterations 60
Cbc0038I Pass  31: suminf.    3.46737 (19) obj. 1 iterations 15
Cbc0038I Pass  32: suminf.    6.73889 (25) obj. 1 iterations 60
Cbc0038I Pass  33: suminf.    4.51920 (20) obj. 1 iterations 57
Cbc0038I Pass  34: suminf.    4.50490 (23) obj. 1 iterations 19
Cbc0038I Pass  35: suminf.    6.60978 (33) obj. 1 iterations 67
Cbc0038I Pass  36: suminf.    5.92512 (25) obj. 1 iterations 46
Cbc0038I Pass  37: suminf.    4.18581 (22) obj. 1 iterations 53
Cbc0038I Pass  38: suminf.    3.62028 (18) obj. 1 iterations 21
Cbc0038I Pass  39: suminf.    5.04691 (17) obj. 1 iterations 56
Cbc0038I Pass  40: suminf.    4.00988 (16) obj. 1 iterations 35
Cbc0038I Pass  41: suminf.    4.00988 (16) obj. 1 iterations 3
Cbc0038I Pass  42: suminf.    3.33333 (12) obj. 1 iterations 46
Cbc0038I Pass  43: suminf.    3.28264 (16) obj. 1 iterations 21
Cbc0038I Pass  44: suminf.    4.14750 (17) obj. 1 iterations 63
Cbc0038I Pass  45: suminf.    4.04444 (15) obj. 1 iterations 17
Cbc0038I Pass  46: suminf.    3.44444 (12) obj. 1 iterations 58
Cbc0038I Pass  47: suminf.    3.36780 (16) obj. 1 iterations 36
Cbc0038I Pass  48: suminf.    4.74524 (21) obj. 1 iterations 72
Cbc0038I Pass  49: suminf.    3.97933 (17) obj. 1 iterations 18
Cbc0038I Pass  50: suminf.    3.88000 (17) obj. 1 iterations 13
Cbc0038I Pass  51: suminf.    3.48379 (19) obj. 1 iterations 56
Cbc0038I Pass  52: suminf.    3.46737 (19) obj. 1 iterations 11
Cbc0038I Pass  53: suminf.    6.73889 (25) obj. 1 iterations 77
Cbc0038I Pass  54: suminf.    4.51920 (20) obj. 1 iterations 63
Cbc0038I Pass  55: suminf.    4.50490 (23) obj. 1 iterations 18
Cbc0038I Pass  56: suminf.    3.76587 (24) obj. 1 iterations 68
Cbc0038I Pass  57: suminf.    3.51402 (20) obj. 1 iterations 42
Cbc0038I Pass  58: suminf.    5.58222 (21) obj. 1 iterations 35
Cbc0038I Pass  59: suminf.    4.09722 (14) obj. 1 iterations 59
Cbc0038I Pass  60: suminf.    3.99574 (14) obj. 1 iterations 17
Cbc0038I Pass  61: suminf.    3.70674 (13) obj. 1 iterations 47
Cbc0038I Pass  62: suminf.    3.62028 (18) obj. 1 iterations 37
Cbc0038I Pass  63: suminf.    5.04691 (17) obj. 1 iterations 43
Cbc0038I Pass  64: suminf.    4.00988 (16) obj. 1 iterations 28
Cbc0038I Pass  65: suminf.    4.00988 (16) obj. 1 iterations 2
Cbc0038I Pass  66: suminf.    4.06481 (13) obj. 1 iterations 39
Cbc0038I Pass  67: suminf.    3.70679 (12) obj. 1 iterations 22
Cbc0038I Pass  68: suminf.    3.64218 (13) obj. 1 iterations 43
Cbc0038I Pass  69: suminf.    3.51402 (20) obj. 1 iterations 32
Cbc0038I Pass  70: suminf.    5.58222 (21) obj. 1 iterations 42
Cbc0038I Pass  71: suminf.    4.09722 (14) obj. 1 iterations 50
Cbc0038I Pass  72: suminf.    3.99574 (14) obj. 1 iterations 19
Cbc0038I Pass  73: suminf.    3.70674 (13) obj. 1 iterations 53
Cbc0038I Pass  74: suminf.    3.62028 (18) obj. 1 iterations 34
Cbc0038I Pass  75: suminf.    5.04691 (17) obj. 1 iterations 57
Cbc0038I Pass  76: suminf.    4.00988 (16) obj. 1 iterations 30
Cbc0038I Pass  77: suminf.    4.00988 (16) obj. 1 iterations 1
Cbc0038I Pass  78: suminf.    4.19444 (13) obj. 1 iterations 52
Cbc0038I Pass  79: suminf.    3.78230 (12) obj. 1 iterations 24
Cbc0038I Pass  80: suminf.    3.70679 (12) obj. 1 iterations 13
Cbc0038I Pass  81: suminf.    3.64218 (13) obj. 1 iterations 49
Cbc0038I Pass  82: suminf.    3.51402 (20) obj. 1 iterations 56
Cbc0038I Pass  83: suminf.    5.58222 (21) obj. 1 iterations 33
Cbc0038I Pass  84: suminf.    4.09722 (14) obj. 1 iterations 58
Cbc0038I Pass  85: suminf.    3.99574 (14) obj. 1 iterations 22
Cbc0038I Pass  86: suminf.    3.70674 (13) obj. 1 iterations 49
Cbc0038I Pass  87: suminf.    3.62028 (18) obj. 1 iterations 23
Cbc0038I Pass  88: suminf.    5.04691 (17) obj. 1 iterations 42
Cbc0038I Pass  89: suminf.    4.00988 (16) obj. 1 iterations 31
Cbc0038I Pass  90: suminf.    4.00988 (16) obj. 1 iterations 1
Cbc0038I Pass  91: suminf.    3.33333 (12) obj. 1 iterations 47
Cbc0038I Pass  92: suminf.    3.28264 (16) obj. 1 iterations 24
Cbc0038I Pass  93: suminf.    4.14750 (17) obj. 1 iterations 64
Cbc0038I Pass  94: suminf.    4.04444 (15) obj. 1 iterations 18
Cbc0038I Pass  95: suminf.    3.88889 (15) obj. 1 iterations 57
Cbc0038I Pass  96: suminf.    3.36780 (16) obj. 1 iterations 37
Cbc0038I Pass  97: suminf.    4.74524 (21) obj. 1 iterations 51
Cbc0038I Pass  98: suminf.    3.97933 (17) obj. 1 iterations 13
Cbc0038I Pass  99: suminf.    3.88000 (17) obj. 1 iterations 7
Cbc0038I Pass 100: suminf.    9.17860 (34) obj. 1 iterations 83
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 354 integers at bound fixed and 0 continuous
Cbc0038I Full problem 214 rows 479 columns, reduced to 137 rows 107 columns
Cbc0038I Mini branch and bound did not improve solution (1.94 seconds)
Cbc0038I Full problem 215 rows 479 columns, reduced to 213 rows 479 columns - too large
Cbc0038I After 2.02 seconds - Feasibility pump exiting - took 1.15 seconds
Cbc0031I 35 added rows had average density of 72.828571
Cbc0013I At root node, 35 cuts changed objective from 0 to 0.99993134 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 283 row cuts average 6.9 elements, 0 column cuts (0 active)  in 4.298 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2239 row cuts average 472.3 elements, 0 column cuts (0 active)  in 4.625 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 66 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.602 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 16 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 48.7 elements, 0 column cuts (0 active)  in 0.319 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 500 row cuts average 151.1 elements, 0 column cuts (0 active)  in 0.679 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 467 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (21.50 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (22.25 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (23.10 seconds)
Cbc0010I After 13 nodes, 8 on tree, 1e+50 best solution, best possible 1 (23.89 seconds)
Cbc0010I After 23 nodes, 6 on tree, 1e+50 best solution, best possible 1 (24.76 seconds)
Cbc0010I After 34 nodes, 11 on tree, 1e+50 best solution, best possible 1 (25.46 seconds)
Cbc0010I After 51 nodes, 10 on tree, 1e+50 best solution, best possible 1 (26.20 seconds)
Cbc0010I After 69 nodes, 6 on tree, 1e+50 best solution, best possible 1 (26.94 seconds)
Cbc0010I After 85 nodes, 7 on tree, 1e+50 best solution, best possible 1 (27.66 seconds)
Cbc0010I After 91 nodes, 4 on tree, 1e+50 best solution, best possible 1 (28.52 seconds)
Cbc0010I After 100 nodes, 3 on tree, 1e+50 best solution, best possible 1 (29.32 seconds)
Cbc0010I After 107 nodes, 8 on tree, 1e+50 best solution, best possible 1 (30.03 seconds)
Cbc0010I After 120 nodes, 3 on tree, 1e+50 best solution, best possible 1 (30.90 seconds)
Cbc0010I After 134 nodes, 13 on tree, 1e+50 best solution, best possible 1 (31.60 seconds)
Cbc0010I After 163 nodes, 21 on tree, 1e+50 best solution, best possible 1 (32.34 seconds)
Cbc0010I After 195 nodes, 28 on tree, 1e+50 best solution, best possible 1 (33.06 seconds)
Cbc0010I After 235 nodes, 31 on tree, 1e+50 best solution, best possible 1 (33.77 seconds)
Cbc0010I After 268 nodes, 32 on tree, 1e+50 best solution, best possible 1 (34.49 seconds)
Cbc0010I After 299 nodes, 34 on tree, 1e+50 best solution, best possible 1 (35.19 seconds)
Cbc0010I After 337 nodes, 27 on tree, 1e+50 best solution, best possible 1 (35.93 seconds)
Cbc0010I After 367 nodes, 24 on tree, 1e+50 best solution, best possible 1 (36.66 seconds)
Cbc0010I After 399 nodes, 18 on tree, 1e+50 best solution, best possible 1 (37.36 seconds)
Cbc0010I After 429 nodes, 17 on tree, 1e+50 best solution, best possible 1 (38.10 seconds)
Cbc0010I After 465 nodes, 20 on tree, 1e+50 best solution, best possible 1 (38.81 seconds)
Cbc0010I After 490 nodes, 20 on tree, 1e+50 best solution, best possible 1 (39.52 seconds)
Cbc0010I After 526 nodes, 17 on tree, 1e+50 best solution, best possible 1 (40.23 seconds)
Cbc0010I After 560 nodes, 16 on tree, 1e+50 best solution, best possible 1 (40.94 seconds)
Cbc0010I After 593 nodes, 20 on tree, 1e+50 best solution, best possible 1 (41.66 seconds)
Cbc0010I After 639 nodes, 17 on tree, 1e+50 best solution, best possible 1 (42.37 seconds)
Cbc0010I After 663 nodes, 22 on tree, 1e+50 best solution, best possible 1 (43.10 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 53986 iterations and 682 nodes (43.59 seconds)
Cbc0001I Search completed - best objective 1, took 53986 iterations and 682 nodes (43.59 seconds)
Cbc0032I Strong branching done 2492 times (54070 iterations), fathomed 23 nodes and fixed 45 variables
Cbc0035I Maximum depth 41, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 636 times and created 2352 cuts of which 0 were active after adding rounds of cuts (5.40633 seconds)
Gomory was tried 616 times and created 2243 cuts of which 0 were active after adding rounds of cuts (5.34326 seconds)
Knapsack was tried 616 times and created 1047 cuts of which 0 were active after adding rounds of cuts (3.14175 seconds)
Clique was tried 100 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.063872 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.242113 seconds)
MixedIntegerRounding2 was tried 616 times and created 1110 cuts of which 0 were active after adding rounds of cuts (1.35774 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.108463 seconds)
TwoMirCuts was tried 616 times and created 1562 cuts of which 0 were active after adding rounds of cuts (1.2869 seconds)
ZeroHalf was tried 616 times and created 2705 cuts of which 0 were active after adding rounds of cuts (2.36811 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               682
Total iterations:               53986
Time (CPU seconds):             43.6977
Time (Wallclock seconds):       43.7447
Total time (CPU seconds):       43.7107   (Wallclock seconds):       43.7554
