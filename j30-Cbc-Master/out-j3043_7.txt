Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3043/j3043_7.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 2.86458 - 0.13315 seconds
Cgl0002I 4 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 305 rows, 717 columns (717 integer (716 of which binary)) and 8022 elements
Coin3009W Conflict graph built in 0.019 seconds, density: 0.962%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 717 objects (717 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 64 integers unsatisfied sum - 16.6629
Cbc0038I Pass   1: suminf.    9.96647 (33) obj. 4 iterations 94
Cbc0038I Pass   2: suminf.    9.96647 (33) obj. 4 iterations 5
Cbc0038I Pass   3: suminf.    9.96647 (33) obj. 4 iterations 2
Cbc0038I Pass   4: suminf.   14.10159 (44) obj. 4 iterations 86
Cbc0038I Pass   5: suminf.    8.86349 (37) obj. 4 iterations 70
Cbc0038I Pass   6: suminf.    8.54683 (41) obj. 4 iterations 18
Cbc0038I Pass   7: suminf.    6.91111 (22) obj. 4 iterations 35
Cbc0038I Pass   8: suminf.    5.15000 (16) obj. 4 iterations 17
Cbc0038I Pass   9: suminf.    3.38333 (17) obj. 4 iterations 18
Cbc0038I Pass  10: suminf.    5.83468 (23) obj. 4 iterations 49
Cbc0038I Pass  11: suminf.    4.25238 (17) obj. 4 iterations 23
Cbc0038I Pass  12: suminf.    3.89375 (14) obj. 4 iterations 7
Cbc0038I Pass  13: suminf.    3.55000 (13) obj. 4 iterations 18
Cbc0038I Pass  14: suminf.    5.23889 (19) obj. 4 iterations 38
Cbc0038I Pass  15: suminf.    3.88672 (20) obj. 4 iterations 13
Cbc0038I Pass  16: suminf.    3.43889 (18) obj. 4 iterations 18
Cbc0038I Pass  17: suminf.    4.86111 (14) obj. 4 iterations 43
Cbc0038I Pass  18: suminf.    3.59848 (20) obj. 4 iterations 44
Cbc0038I Pass  19: suminf.    6.01836 (19) obj. 4 iterations 46
Cbc0038I Pass  20: suminf.    4.39641 (18) obj. 4 iterations 20
Cbc0038I Pass  21: suminf.    4.03529 (18) obj. 4 iterations 18
Cbc0038I Pass  22: suminf.    9.23568 (30) obj. 4 iterations 45
Cbc0038I Pass  23: suminf.    8.27949 (26) obj. 4 iterations 10
Cbc0038I Pass  24: suminf.    3.89375 (14) obj. 4 iterations 22
Cbc0038I Pass  25: suminf.    3.55000 (13) obj. 4 iterations 27
Cbc0038I Pass  26: suminf.    5.23889 (19) obj. 4 iterations 47
Cbc0038I Pass  27: suminf.    3.88672 (20) obj. 4 iterations 20
Cbc0038I Pass  28: suminf.    3.43889 (18) obj. 4 iterations 24
Cbc0038I Pass  29: suminf.    4.86111 (14) obj. 4 iterations 45
Cbc0038I Pass  30: suminf.    3.59848 (20) obj. 4 iterations 46
Cbc0038I Pass  31: suminf.    5.64534 (24) obj. 4 iterations 52
Cbc0038I Pass  32: suminf.    4.25238 (17) obj. 4 iterations 41
Cbc0038I Pass  33: suminf.    3.89375 (14) obj. 4 iterations 10
Cbc0038I Pass  34: suminf.    3.55000 (13) obj. 4 iterations 26
Cbc0038I Pass  35: suminf.    5.23889 (19) obj. 4 iterations 52
Cbc0038I Pass  36: suminf.    3.88672 (20) obj. 4 iterations 23
Cbc0038I Pass  37: suminf.    3.43889 (18) obj. 4 iterations 26
Cbc0038I Pass  38: suminf.    3.84375 (13) obj. 4 iterations 31
Cbc0038I Pass  39: suminf.    2.91667 (12) obj. 4 iterations 30
Cbc0038I Pass  40: suminf.    2.71667 (12) obj. 4 iterations 7
Cbc0038I Pass  41: suminf.    4.53333 (16) obj. 4 iterations 48
Cbc0038I Pass  42: suminf.    3.26042 (13) obj. 4 iterations 29
Cbc0038I Pass  43: suminf.   13.39259 (39) obj. 4 iterations 97
Cbc0038I Pass  44: suminf.    7.42407 (36) obj. 4 iterations 71
Cbc0038I Pass  45: suminf.    5.56129 (30) obj. 4 iterations 15
Cbc0038I Pass  46: suminf.    4.71667 (20) obj. 4 iterations 4
Cbc0038I Pass  47: suminf.    4.65000 (21) obj. 4 iterations 14
Cbc0038I Pass  48: suminf.    3.93889 (21) obj. 4 iterations 15
Cbc0038I Pass  49: suminf.    5.60147 (23) obj. 4 iterations 40
Cbc0038I Pass  50: suminf.    4.90714 (18) obj. 4 iterations 22
Cbc0038I Pass  51: suminf.    6.83586 (23) obj. 4 iterations 30
Cbc0038I Pass  52: suminf.    4.05000 (15) obj. 4 iterations 19
Cbc0038I Pass  53: suminf.    3.23810 (14) obj. 4 iterations 7
Cbc0038I Pass  54: suminf.    6.12407 (21) obj. 4 iterations 38
Cbc0038I Pass  55: suminf.    5.79074 (21) obj. 4 iterations 2
Cbc0038I Pass  56: suminf.    6.20556 (21) obj. 4 iterations 49
Cbc0038I Pass  57: suminf.    4.14352 (19) obj. 4 iterations 34
Cbc0038I Pass  58: suminf.    3.94352 (19) obj. 4 iterations 7
Cbc0038I Pass  59: suminf.    3.34352 (19) obj. 4 iterations 3
Cbc0038I Pass  60: suminf.    6.07921 (24) obj. 4 iterations 57
Cbc0038I Pass  61: suminf.    5.90020 (25) obj. 4 iterations 13
Cbc0038I Pass  62: suminf.    5.56687 (24) obj. 4 iterations 6
Cbc0038I Pass  63: suminf.    8.40020 (26) obj. 4 iterations 51
Cbc0038I Pass  64: suminf.    5.13889 (18) obj. 4 iterations 29
Cbc0038I Pass  65: suminf.    4.51667 (16) obj. 4 iterations 27
Cbc0038I Pass  66: suminf.    4.80000 (15) obj. 4 iterations 38
Cbc0038I Pass  67: suminf.    4.11667 (15) obj. 4 iterations 38
Cbc0038I Pass  68: suminf.    3.91667 (15) obj. 4 iterations 3
Cbc0038I Pass  69: suminf.    4.87677 (18) obj. 4 iterations 30
Cbc0038I Pass  70: suminf.    4.56667 (16) obj. 4 iterations 29
Cbc0038I Pass  71: suminf.    4.36667 (16) obj. 4 iterations 6
Cbc0038I Pass  72: suminf.    4.96800 (16) obj. 4 iterations 45
Cbc0038I Pass  73: suminf.    4.70667 (17) obj. 4 iterations 29
Cbc0038I Pass  74: suminf.    4.50667 (17) obj. 4 iterations 9
Cbc0038I Pass  75: suminf.    3.96667 (16) obj. 4 iterations 39
Cbc0038I Pass  76: suminf.    3.96667 (16) obj. 4 iterations 25
Cbc0038I Pass  77: suminf.    3.76667 (16) obj. 4 iterations 8
Cbc0038I Pass  78: suminf.    5.01429 (16) obj. 4 iterations 26
Cbc0038I Pass  79: suminf.   12.01429 (41) obj. 4 iterations 107
Cbc0038I Pass  80: suminf.    8.36919 (36) obj. 4 iterations 60
Cbc0038I Pass  81: suminf.    6.15101 (30) obj. 4 iterations 17
Cbc0038I Pass  82: suminf.    5.80101 (28) obj. 4 iterations 3
Cbc0038I Pass  83: suminf.    8.90974 (28) obj. 4 iterations 46
Cbc0038I Pass  84: suminf.    7.23400 (27) obj. 4 iterations 26
Cbc0038I Pass  85: suminf.    6.24318 (27) obj. 4 iterations 6
Cbc0038I Pass  86: suminf.    8.95022 (26) obj. 4 iterations 42
Cbc0038I Pass  87: suminf.    7.54650 (27) obj. 4 iterations 23
Cbc0038I Pass  88: suminf.    6.57652 (27) obj. 4 iterations 11
Cbc0038I Pass  89: suminf.    6.57652 (27) obj. 4 iterations 0
Cbc0038I Pass  90: suminf.    8.45022 (26) obj. 4 iterations 41
Cbc0038I Pass  91: suminf.    6.88400 (26) obj. 4 iterations 32
Cbc0038I Pass  92: suminf.    5.97652 (27) obj. 4 iterations 6
Cbc0038I Pass  93: suminf.    6.32778 (28) obj. 4 iterations 20
Cbc0038I Pass  94: suminf.   13.76429 (48) obj. 4 iterations 97
Cbc0038I Pass  95: suminf.    8.92222 (28) obj. 4 iterations 82
Cbc0038I Pass  96: suminf.    8.69606 (31) obj. 4 iterations 11
Cbc0038I Pass  97: suminf.    7.22857 (26) obj. 4 iterations 50
Cbc0038I Pass  98: suminf.    6.59762 (28) obj. 4 iterations 5
Cbc0038I Pass  99: suminf.    5.30000 (22) obj. 4 iterations 13
Cbc0038I Pass 100: suminf.   17.29212 (50) obj. 4 iterations 98
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 479 integers at bound fixed and 0 continuous
Cbc0038I Full problem 305 rows 717 columns, reduced to 211 rows 205 columns
Cbc0038I Mini branch and bound did not improve solution (3.62 seconds)
Cbc0038I After 3.62 seconds - Feasibility pump exiting - took 2.09 seconds
Cbc0012I Integer solution of 4 found by DiveCoefficient after 1175 iterations and 0 nodes (5.37 seconds)
Cbc0031I 50 added rows had average density of 33.76
Cbc0013I At root node, 50 cuts changed objective from 2.8645833 to 4 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 202 row cuts average 4.6 elements, 33 column cuts (33 active)  in 0.408 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 47 row cuts average 329.4 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 55.2 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 322 row cuts average 201.5 elements, 0 column cuts (0 active)  in 0.265 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 90 row cuts average 50.6 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0001I Search completed - best objective 4, took 1175 iterations and 0 nodes (5.38 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.86458 to 4
Probing was tried 10 times and created 235 cuts of which 0 were active after adding rounds of cuts (0.407545 seconds)
Gomory was tried 10 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.167244 seconds)
Knapsack was tried 10 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.106752 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007768 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048435 seconds)
MixedIntegerRounding2 was tried 10 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.045803 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002784 seconds)
TwoMirCuts was tried 10 times and created 322 cuts of which 0 were active after adding rounds of cuts (0.265011 seconds)
ZeroHalf was tried 10 times and created 90 cuts of which 0 were active after adding rounds of cuts (0.079856 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               0
Total iterations:               1175
Time (CPU seconds):             5.46841
Time (Wallclock seconds):       5.41871
Total time (CPU seconds):       5.48395   (Wallclock seconds):       5.43238
