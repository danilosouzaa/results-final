Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_2.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 6.10017 - 0.111982 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 335 rows, 1153 columns (1153 integer (1152 of which binary)) and 13145 elements
Coin3009W Conflict graph built in 0.060 seconds, density: 0.866%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1153 objects (1153 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 90 integers unsatisfied sum - 24.3187
Cbc0038I Pass   1: suminf.   12.59950 (60) obj. 9 iterations 111
Cbc0038I Pass   2: suminf.   12.22346 (57) obj. 9 iterations 26
Cbc0038I Pass   3: suminf.   10.96011 (51) obj. 9 iterations 70
Cbc0038I Pass   4: suminf.   10.48624 (57) obj. 9 iterations 32
Cbc0038I Pass   5: suminf.   10.39139 (53) obj. 9 iterations 13
Cbc0038I Pass   6: suminf.   13.37564 (50) obj. 9 iterations 82
Cbc0038I Pass   7: suminf.   12.73692 (49) obj. 9 iterations 19
Cbc0038I Pass   8: suminf.   12.12961 (51) obj. 9 iterations 16
Cbc0038I Pass   9: suminf.   11.74866 (51) obj. 9 iterations 7
Cbc0038I Pass  10: suminf.   11.74866 (51) obj. 9 iterations 2
Cbc0038I Pass  11: suminf.   11.74866 (51) obj. 9 iterations 5
Cbc0038I Pass  12: suminf.   11.63755 (51) obj. 9 iterations 2
Cbc0038I Pass  13: suminf.   11.63755 (51) obj. 9 iterations 1
Cbc0038I Pass  14: suminf.   11.79707 (47) obj. 9 iterations 57
Cbc0038I Pass  15: suminf.   11.25576 (49) obj. 9 iterations 19
Cbc0038I Pass  16: suminf.   11.25576 (49) obj. 9 iterations 3
Cbc0038I Pass  17: suminf.   14.15778 (47) obj. 9 iterations 72
Cbc0038I Pass  18: suminf.   11.89532 (48) obj. 9 iterations 40
Cbc0038I Pass  19: suminf.   11.30549 (49) obj. 9 iterations 15
Cbc0038I Pass  20: suminf.   11.30549 (49) obj. 9 iterations 6
Cbc0038I Pass  21: suminf.   13.04437 (49) obj. 9 iterations 59
Cbc0038I Pass  22: suminf.   12.50583 (51) obj. 9 iterations 35
Cbc0038I Pass  23: suminf.   12.20964 (52) obj. 9 iterations 16
Cbc0038I Pass  24: suminf.   12.20964 (52) obj. 9 iterations 2
Cbc0038I Pass  25: suminf.   10.11536 (49) obj. 9 iterations 47
Cbc0038I Pass  26: suminf.   10.11536 (49) obj. 9 iterations 18
Cbc0038I Pass  27: suminf.   11.72654 (43) obj. 9 iterations 47
Cbc0038I Pass  28: suminf.   10.46706 (52) obj. 9 iterations 57
Cbc0038I Pass  29: suminf.   10.16661 (49) obj. 9 iterations 13
Cbc0038I Pass  30: suminf.   10.16661 (49) obj. 9 iterations 10
Cbc0038I Pass  31: suminf.   10.16661 (49) obj. 9 iterations 5
Cbc0038I Pass  32: suminf.    9.83327 (49) obj. 9 iterations 11
Cbc0038I Pass  33: suminf.    9.45232 (49) obj. 9 iterations 7
Cbc0038I Pass  34: suminf.    9.45232 (49) obj. 9 iterations 2
Cbc0038I Pass  35: suminf.   10.15696 (46) obj. 9 iterations 48
Cbc0038I Pass  36: suminf.    9.25320 (52) obj. 9 iterations 36
Cbc0038I Pass  37: suminf.    8.92863 (52) obj. 9 iterations 37
Cbc0038I Pass  38: suminf.    8.92863 (52) obj. 9 iterations 3
Cbc0038I Pass  39: suminf.   13.19707 (47) obj. 9 iterations 70
Cbc0038I Pass  40: suminf.   11.65842 (42) obj. 9 iterations 27
Cbc0038I Pass  41: suminf.   10.35440 (44) obj. 9 iterations 11
Cbc0038I Pass  42: suminf.    9.68480 (46) obj. 9 iterations 7
Cbc0038I Pass  43: suminf.   12.36474 (44) obj. 9 iterations 66
Cbc0038I Pass  44: suminf.   10.38776 (44) obj. 9 iterations 46
Cbc0038I Pass  45: suminf.   10.31817 (46) obj. 9 iterations 9
Cbc0038I Pass  46: suminf.   10.31817 (46) obj. 9 iterations 3
Cbc0038I Pass  47: suminf.   14.17564 (58) obj. 9 iterations 121
Cbc0038I Pass  48: suminf.    8.86845 (45) obj. 9 iterations 106
Cbc0038I Pass  49: suminf.    8.77131 (45) obj. 9 iterations 2
Cbc0038I Pass  50: suminf.    7.70155 (46) obj. 9 iterations 35
Cbc0038I Pass  51: suminf.    7.03488 (44) obj. 9 iterations 16
Cbc0038I Pass  52: suminf.   11.24160 (40) obj. 9 iterations 62
Cbc0038I Pass  53: suminf.    8.61246 (31) obj. 9 iterations 24
Cbc0038I Pass  54: suminf.    8.27912 (31) obj. 9 iterations 6
Cbc0038I Pass  55: suminf.    7.89817 (31) obj. 9 iterations 3
Cbc0038I Pass  56: suminf.    7.54923 (31) obj. 9 iterations 41
Cbc0038I Pass  57: suminf.    6.85680 (29) obj. 9 iterations 26
Cbc0038I Pass  58: suminf.    6.41034 (29) obj. 9 iterations 9
Cbc0038I Pass  59: suminf.   10.43824 (29) obj. 9 iterations 68
Cbc0038I Pass  60: suminf.    8.78318 (29) obj. 9 iterations 28
Cbc0038I Pass  61: suminf.    8.32249 (30) obj. 9 iterations 20
Cbc0038I Pass  62: suminf.    8.32249 (30) obj. 9 iterations 4
Cbc0038I Pass  63: suminf.   21.37459 (79) obj. 8.33333 iterations 158
Cbc0038I Pass  64: suminf.   17.30529 (62) obj. 8.33333 iterations 92
Cbc0038I Pass  65: suminf.   17.30529 (62) obj. 8.33333 iterations 1
Cbc0038I Pass  66: suminf.   16.10392 (58) obj. 8.33333 iterations 47
Cbc0038I Pass  67: suminf.   15.59634 (59) obj. 8.33333 iterations 12
Cbc0038I Pass  68: suminf.   13.77185 (55) obj. 8.25661 iterations 63
Cbc0038I Pass  69: suminf.   13.48592 (54) obj. 8.25661 iterations 24
Cbc0038I Pass  70: suminf.   13.26032 (54) obj. 8.25661 iterations 5
Cbc0038I Pass  71: suminf.   13.26032 (54) obj. 8.25661 iterations 0
Cbc0038I Pass  72: suminf.   11.31050 (52) obj. 8 iterations 35
Cbc0038I Pass  73: suminf.   11.11287 (54) obj. 8 iterations 4
Cbc0038I Pass  74: suminf.   10.83395 (48) obj. 8 iterations 34
Cbc0038I Pass  75: suminf.   10.22579 (48) obj. 8 iterations 20
Cbc0038I Pass  76: suminf.    9.83726 (49) obj. 8 iterations 2
Cbc0038I Pass  77: suminf.    9.76814 (45) obj. 8 iterations 43
Cbc0038I Pass  78: suminf.    9.58782 (46) obj. 8 iterations 21
Cbc0038I Pass  79: suminf.    9.58545 (45) obj. 8 iterations 41
Cbc0038I Pass  80: suminf.    9.30190 (45) obj. 8 iterations 19
Cbc0038I Pass  81: suminf.   12.45126 (52) obj. 8 iterations 51
Cbc0038I Pass  82: suminf.   10.52274 (45) obj. 8 iterations 35
Cbc0038I Pass  83: suminf.    9.90874 (45) obj. 8 iterations 20
Cbc0038I Pass  84: suminf.    9.90874 (45) obj. 8 iterations 0
Cbc0038I Pass  85: suminf.   10.61584 (45) obj. 8 iterations 44
Cbc0038I Pass  86: suminf.   10.09666 (46) obj. 8 iterations 41
Cbc0038I Pass  87: suminf.    9.12883 (47) obj. 8 iterations 29
Cbc0038I Pass  88: suminf.    9.06521 (49) obj. 8 iterations 4
Cbc0038I Pass  89: suminf.   13.38040 (53) obj. 8 iterations 70
Cbc0038I Pass  90: suminf.    9.08458 (47) obj. 8 iterations 48
Cbc0038I Pass  91: suminf.    9.08458 (47) obj. 8 iterations 4
Cbc0038I Pass  92: suminf.    9.60243 (47) obj. 8 iterations 25
Cbc0038I Pass  93: suminf.    9.20243 (48) obj. 8 iterations 16
Cbc0038I Pass  94: suminf.    9.06521 (49) obj. 8 iterations 17
Cbc0038I Pass  95: suminf.    9.48334 (48) obj. 8 iterations 53
Cbc0038I Pass  96: suminf.    9.01756 (48) obj. 8 iterations 21
Cbc0038I Pass  97: suminf.    9.48890 (49) obj. 8 iterations 34
Cbc0038I Pass  98: suminf.    8.77677 (49) obj. 8 iterations 36
Cbc0038I Pass  99: suminf.    9.18423 (48) obj. 8 iterations 37
Cbc0038I Pass 100: suminf.   18.07265 (63) obj. 9 iterations 122
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 853 integers at bound fixed and 0 continuous
Cbc0038I Full problem 335 rows 1153 columns, reduced to 224 rows 269 columns
Cbc0038I Mini branch and bound did not improve solution (2.54 seconds)
Cbc0038I After 2.54 seconds - Feasibility pump exiting - took 0.88 seconds
Cbc0031I 62 added rows had average density of 71.83871
Cbc0013I At root node, 62 cuts changed objective from 6.1001658 to 7.9999479 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 422 row cuts average 9.1 elements, 7 column cuts (10 active)  in 1.243 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 96 row cuts average 507.3 elements, 0 column cuts (0 active)  in 0.837 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 352 row cuts average 66.5 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 4 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 230 row cuts average 178.5 elements, 0 column cuts (0 active)  in 0.337 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 173 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.261 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 7.9999479 (8.33 seconds)
Cbc0010I After 3 nodes, 3 on tree, 1e+50 best solution, best possible 7.9999479 (9.06 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 7.9999479 (9.86 seconds)
Cbc0010I After 12 nodes, 8 on tree, 1e+50 best solution, best possible 7.9999479 (10.68 seconds)
Cbc0010I After 18 nodes, 9 on tree, 1e+50 best solution, best possible 7.9999479 (11.39 seconds)
Cbc0010I After 23 nodes, 9 on tree, 1e+50 best solution, best possible 7.9999479 (14.39 seconds)
Cbc0010I After 34 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (15.16 seconds)
Cbc0010I After 38 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (16.08 seconds)
Cbc0010I After 44 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (16.88 seconds)
Cbc0010I After 52 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (17.61 seconds)
Cbc0010I After 57 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (18.34 seconds)
Cbc0010I After 63 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (19.06 seconds)
Cbc0010I After 68 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (19.86 seconds)
Cbc0010I After 73 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (20.62 seconds)
Cbc0010I After 79 nodes, 4 on tree, 1e+50 best solution, best possible 7.9999479 (21.51 seconds)
Cbc0010I After 84 nodes, 5 on tree, 1e+50 best solution, best possible 7.9999479 (22.26 seconds)
Cbc0010I After 92 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (23.06 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (23.79 seconds)
Cbc0010I After 107 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (24.53 seconds)
Cbc0010I After 116 nodes, 4 on tree, 1e+50 best solution, best possible 7.9999479 (25.32 seconds)
Cbc0010I After 122 nodes, 5 on tree, 1e+50 best solution, best possible 7.9999479 (26.06 seconds)
Cbc0010I After 128 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (26.89 seconds)
Cbc0010I After 134 nodes, 5 on tree, 1e+50 best solution, best possible 7.9999479 (27.62 seconds)
Cbc0010I After 141 nodes, 5 on tree, 1e+50 best solution, best possible 7.9999479 (28.44 seconds)
Cbc0010I After 149 nodes, 3 on tree, 1e+50 best solution, best possible 7.9999479 (29.18 seconds)
Cbc0010I After 153 nodes, 4 on tree, 1e+50 best solution, best possible 7.9999479 (30.03 seconds)
Cbc0010I After 160 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (30.79 seconds)
Cbc0010I After 166 nodes, 8 on tree, 1e+50 best solution, best possible 7.9999479 (31.58 seconds)
Cbc0010I After 175 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (32.35 seconds)
Cbc0010I After 182 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (33.09 seconds)
Cbc0010I After 191 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (33.82 seconds)
Cbc0010I After 198 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (34.54 seconds)
Cbc0010I After 208 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (35.29 seconds)
Cbc0010I After 218 nodes, 7 on tree, 1e+50 best solution, best possible 7.9999479 (36.00 seconds)
Cbc0010I After 228 nodes, 4 on tree, 1e+50 best solution, best possible 7.9999479 (36.73 seconds)
Cbc0010I After 233 nodes, 6 on tree, 1e+50 best solution, best possible 7.9999479 (37.46 seconds)
Cbc0010I After 242 nodes, 12 on tree, 1e+50 best solution, best possible 7.9999479 (38.25 seconds)
Cbc0010I After 253 nodes, 13 on tree, 1e+50 best solution, best possible 7.9999479 (38.96 seconds)
Cbc0010I After 266 nodes, 18 on tree, 1e+50 best solution, best possible 7.9999479 (39.72 seconds)
Cbc0016I Integer solution of 9 found by strong branching after 64511 iterations and 274 nodes (40.05 seconds)
Cbc0001I Search completed - best objective 9, took 65031 iterations and 275 nodes (40.24 seconds)
Cbc0032I Strong branching done 1106 times (9906 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 19, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6.10017 to 7.99995
Probing was tried 217 times and created 3233 cuts of which 3 were active after adding rounds of cuts (2.87227 seconds)
Gomory was tried 15 times and created 96 cuts of which 0 were active after adding rounds of cuts (0.837066 seconds)
Knapsack was tried 217 times and created 144 cuts of which 0 were active after adding rounds of cuts (2.20143 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031509 seconds)
OddWheel was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.154152 seconds)
MixedIntegerRounding2 was tried 217 times and created 3106 cuts of which 0 were active after adding rounds of cuts (1.79547 seconds)
FlowCover was tried 15 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.01117 seconds)
TwoMirCuts was tried 217 times and created 746 cuts of which 0 were active after adding rounds of cuts (0.822321 seconds)
ZeroHalf was tried 217 times and created 1497 cuts of which 0 were active after adding rounds of cuts (2.48571 seconds)

Result - Optimal solution found
Objective value:                9
Enumerated nodes:               275
Total iterations:               65031
Time (CPU seconds):             40.2797
Time (Wallclock seconds):       40.3023
Total time (CPU seconds):       40.3568   (Wallclock seconds):       40.4141
