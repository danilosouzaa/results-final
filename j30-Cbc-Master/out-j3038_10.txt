Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3038/j3038_10.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 7.3125 - 0.202684 seconds
Cgl0003I 21 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 30 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 14 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 324 rows, 1016 columns (1016 integer (1015 of which binary)) and 16813 elements
Coin3009W Conflict graph built in 0.031 seconds, density: 0.962%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1016 objects (1016 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 87 integers unsatisfied sum - 20.0665
Cbc0038I Pass   1: suminf.   12.20834 (64) obj. 8.32706 iterations 211
Cbc0038I Pass   2: suminf.   12.06279 (65) obj. 8.32706 iterations 16
Cbc0038I Pass   3: suminf.   11.30415 (64) obj. 8.38647 iterations 31
Cbc0038I Pass   4: suminf.   10.00509 (61) obj. 8.39249 iterations 47
Cbc0038I Pass   5: suminf.    9.72805 (62) obj. 8.39077 iterations 35
Cbc0038I Pass   6: suminf.    7.71385 (37) obj. 9 iterations 179
Cbc0038I Pass   7: suminf.    6.69918 (33) obj. 9 iterations 70
Cbc0038I Pass   8: suminf.    9.28053 (41) obj. 9 iterations 164
Cbc0038I Pass   9: suminf.    6.99313 (38) obj. 9 iterations 146
Cbc0038I Pass  10: suminf.    9.43397 (36) obj. 9 iterations 156
Cbc0038I Pass  11: suminf.    7.64815 (29) obj. 9 iterations 137
Cbc0038I Pass  12: suminf.    7.44956 (30) obj. 9 iterations 40
Cbc0038I Pass  13: suminf.    8.35411 (35) obj. 9 iterations 84
Cbc0038I Pass  14: suminf.    5.68758 (30) obj. 9 iterations 78
Cbc0038I Pass  15: suminf.    5.36694 (32) obj. 9 iterations 54
Cbc0038I Pass  16: suminf.    6.80430 (41) obj. 9 iterations 103
Cbc0038I Pass  17: suminf.    6.29981 (42) obj. 9 iterations 24
Cbc0038I Pass  18: suminf.    6.19991 (46) obj. 9 iterations 55
Cbc0038I Pass  19: suminf.    9.31794 (42) obj. 9 iterations 169
Cbc0038I Pass  20: suminf.    7.41137 (40) obj. 9 iterations 105
Cbc0038I Pass  21: suminf.    7.02622 (40) obj. 9 iterations 57
Cbc0038I Pass  22: suminf.    7.16430 (41) obj. 9 iterations 105
Cbc0038I Pass  23: suminf.    6.01786 (32) obj. 9 iterations 120
Cbc0038I Pass  24: suminf.    5.78571 (33) obj. 9 iterations 72
Cbc0038I Pass  25: suminf.    7.11624 (28) obj. 9 iterations 139
Cbc0038I Pass  26: suminf.    4.90556 (26) obj. 9 iterations 163
Cbc0038I Pass  27: suminf.    4.78852 (26) obj. 9 iterations 16
Cbc0038I Pass  28: suminf.    7.35186 (35) obj. 9 iterations 133
Cbc0038I Pass  29: suminf.    5.61427 (38) obj. 9 iterations 91
Cbc0038I Pass  30: suminf.    5.50879 (28) obj. 9 iterations 29
Cbc0038I Pass  31: suminf.    9.49323 (40) obj. 9 iterations 111
Cbc0038I Pass  32: suminf.    6.64135 (28) obj. 9 iterations 96
Cbc0038I Pass  33: suminf.    6.26943 (26) obj. 9 iterations 39
Cbc0038I Pass  34: suminf.    7.85268 (29) obj. 9 iterations 85
Cbc0038I Pass  35: suminf.    6.17170 (28) obj. 9 iterations 88
Cbc0038I Pass  36: suminf.    5.00504 (27) obj. 9 iterations 16
Cbc0038I Pass  37: suminf.    6.00808 (25) obj. 9 iterations 84
Cbc0038I Pass  38: suminf.    5.18174 (31) obj. 9 iterations 111
Cbc0038I Pass  39: suminf.   11.31596 (44) obj. 9 iterations 140
Cbc0038I Pass  40: suminf.    7.12551 (35) obj. 9 iterations 71
Cbc0038I Pass  41: suminf.    6.23080 (31) obj. 9 iterations 126
Cbc0038I Pass  42: suminf.    6.94921 (28) obj. 9 iterations 184
Cbc0038I Pass  43: suminf.    5.39683 (24) obj. 9 iterations 45
Cbc0038I Pass  44: suminf.    5.39683 (24) obj. 9 iterations 20
Cbc0038I Pass  45: suminf.    6.80034 (26) obj. 9 iterations 86
Cbc0038I Pass  46: suminf.    5.63925 (23) obj. 9 iterations 69
Cbc0038I Pass  47: suminf.    6.61278 (30) obj. 9 iterations 94
Cbc0038I Pass  48: suminf.    5.40540 (23) obj. 9 iterations 47
Cbc0038I Pass  49: suminf.    5.30115 (31) obj. 9 iterations 43
Cbc0038I Pass  50: suminf.    5.18174 (31) obj. 9 iterations 25
Cbc0038I Pass  51: suminf.    6.11905 (23) obj. 9 iterations 109
Cbc0038I Pass  52: suminf.    5.73016 (25) obj. 9 iterations 56
Cbc0038I Pass  53: suminf.    5.95238 (20) obj. 9 iterations 55
Cbc0038I Pass  54: suminf.   17.49128 (76) obj. 9 iterations 146
Cbc0038I Pass  55: suminf.    6.10528 (49) obj. 9 iterations 163
Cbc0038I Pass  56: suminf.    5.03133 (43) obj. 9 iterations 101
Cbc0038I Pass  57: suminf.    5.68755 (29) obj. 9 iterations 131
Cbc0038I Pass  58: suminf.    4.84815 (26) obj. 9 iterations 24
Cbc0038I Pass  59: suminf.    4.68755 (25) obj. 9 iterations 42
Cbc0038I Pass  60: suminf.    4.41319 (22) obj. 9 iterations 77
Cbc0038I Pass  61: suminf.    3.52453 (23) obj. 9 iterations 78
Cbc0038I Pass  62: suminf.    3.49714 (23) obj. 9 iterations 23
Cbc0038I Pass  63: suminf.    3.60206 (24) obj. 9 iterations 48
Cbc0038I Pass  64: suminf.    3.54043 (25) obj. 9 iterations 21
Cbc0038I Pass  65: suminf.    7.94110 (33) obj. 9 iterations 135
Cbc0038I Pass  66: suminf.    6.01433 (27) obj. 9 iterations 86
Cbc0038I Pass  67: suminf.    5.57644 (26) obj. 9 iterations 8
Cbc0038I Pass  68: suminf.    4.48093 (24) obj. 9 iterations 94
Cbc0038I Pass  69: suminf.    3.56262 (23) obj. 9 iterations 66
Cbc0038I Pass  70: suminf.    7.89804 (34) obj. 9 iterations 125
Cbc0038I Pass  71: suminf.    6.12544 (26) obj. 9 iterations 48
Cbc0038I Pass  72: suminf.    4.68755 (25) obj. 9 iterations 55
Cbc0038I Pass  73: suminf.    4.59569 (21) obj. 9 iterations 110
Cbc0038I Pass  74: suminf.    3.55170 (25) obj. 9 iterations 80
Cbc0038I Pass  75: suminf.    3.53625 (24) obj. 9 iterations 18
Cbc0038I Pass  76: suminf.    7.17889 (30) obj. 9 iterations 114
Cbc0038I Pass  77: suminf.    5.12544 (27) obj. 9 iterations 26
Cbc0038I Pass  78: suminf.    4.68755 (25) obj. 9 iterations 22
Cbc0038I Pass  79: suminf.    4.59569 (22) obj. 9 iterations 94
Cbc0038I Pass  80: suminf.    3.55170 (25) obj. 9 iterations 82
Cbc0038I Pass  81: suminf.    3.53625 (24) obj. 9 iterations 20
Cbc0038I Pass  82: suminf.    7.16539 (31) obj. 9 iterations 86
Cbc0038I Pass  83: suminf.    5.12544 (27) obj. 9 iterations 69
Cbc0038I Pass  84: suminf.    4.68755 (25) obj. 9 iterations 30
Cbc0038I Pass  85: suminf.    6.46440 (25) obj. 9 iterations 100
Cbc0038I Pass  86: suminf.    3.59650 (22) obj. 9 iterations 68
Cbc0038I Pass  87: suminf.    3.05221 (24) obj. 9 iterations 23
Cbc0038I Pass  88: suminf.    7.94110 (33) obj. 9 iterations 147
Cbc0038I Pass  89: suminf.    6.01433 (27) obj. 9 iterations 77
Cbc0038I Pass  90: suminf.    5.57644 (26) obj. 9 iterations 15
Cbc0038I Pass  91: suminf.    6.45186 (27) obj. 9 iterations 127
Cbc0038I Pass  92: suminf.    3.63730 (21) obj. 9 iterations 84
Cbc0038I Pass  93: suminf.    3.07858 (23) obj. 9 iterations 36
Cbc0038I Pass  94: suminf.    5.05307 (24) obj. 9 iterations 96
Cbc0038I Pass  95: suminf.    4.84917 (23) obj. 9 iterations 40
Cbc0038I Pass  96: suminf.    6.88370 (30) obj. 9 iterations 119
Cbc0038I Pass  97: suminf.    4.58232 (26) obj. 9 iterations 80
Cbc0038I Pass  98: suminf.    4.33751 (25) obj. 9 iterations 17
Cbc0038I Pass  99: suminf.    7.84510 (30) obj. 9 iterations 102
Cbc0038I Pass 100: suminf.   12.52860 (66) obj. 9 iterations 211
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 713 integers at bound fixed and 0 continuous
Cbc0038I Full problem 324 rows 1016 columns, reduced to 231 rows 280 columns
Cbc0038I Mini branch and bound did not improve solution (3.09 seconds)
Cbc0038I After 3.09 seconds - Feasibility pump exiting - took 2.10 seconds
Cbc0031I 60 added rows had average density of 63.383333
Cbc0013I At root node, 60 cuts changed objective from 7.3125 to 9 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 218 row cuts average 9.0 elements, 6 column cuts (6 active)  in 0.410 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 29 row cuts average 701.7 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 127 row cuts average 60.1 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 147.4 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 132 row cuts average 94.5 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 9 (6.49 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 9 (7.27 seconds)
Cbc0010I After 16 nodes, 6 on tree, 1e+50 best solution, best possible 9 (7.99 seconds)
Cbc0010I After 28 nodes, 9 on tree, 1e+50 best solution, best possible 9 (8.70 seconds)
Cbc0010I After 42 nodes, 10 on tree, 1e+50 best solution, best possible 9 (9.44 seconds)
Cbc0010I After 54 nodes, 11 on tree, 1e+50 best solution, best possible 9 (10.14 seconds)
Cbc0010I After 68 nodes, 11 on tree, 1e+50 best solution, best possible 9 (10.88 seconds)
Cbc0010I After 86 nodes, 9 on tree, 1e+50 best solution, best possible 9 (11.60 seconds)
Cbc0010I After 100 nodes, 8 on tree, 1e+50 best solution, best possible 9 (12.33 seconds)
Cbc0010I After 114 nodes, 5 on tree, 1e+50 best solution, best possible 9 (13.17 seconds)
Cbc0010I After 125 nodes, 8 on tree, 1e+50 best solution, best possible 9 (13.94 seconds)
Cbc0010I After 140 nodes, 12 on tree, 1e+50 best solution, best possible 9 (14.72 seconds)
Cbc0010I After 153 nodes, 11 on tree, 1e+50 best solution, best possible 9 (15.48 seconds)
Cbc0010I After 172 nodes, 12 on tree, 1e+50 best solution, best possible 9 (16.22 seconds)
Cbc0010I After 194 nodes, 14 on tree, 1e+50 best solution, best possible 9 (16.93 seconds)
Cbc0010I After 212 nodes, 14 on tree, 1e+50 best solution, best possible 9 (17.65 seconds)
Cbc0010I After 226 nodes, 15 on tree, 1e+50 best solution, best possible 9 (18.36 seconds)
Cbc0010I After 242 nodes, 11 on tree, 1e+50 best solution, best possible 9 (19.07 seconds)
Cbc0010I After 255 nodes, 14 on tree, 1e+50 best solution, best possible 9 (19.81 seconds)
Cbc0010I After 269 nodes, 15 on tree, 1e+50 best solution, best possible 9 (20.52 seconds)
Cbc0010I After 284 nodes, 12 on tree, 1e+50 best solution, best possible 9 (21.23 seconds)
Cbc0010I After 297 nodes, 16 on tree, 1e+50 best solution, best possible 9 (21.97 seconds)
Cbc0010I After 312 nodes, 16 on tree, 1e+50 best solution, best possible 9 (22.74 seconds)
Cbc0010I After 329 nodes, 16 on tree, 1e+50 best solution, best possible 9 (23.45 seconds)
Cbc0010I After 343 nodes, 13 on tree, 1e+50 best solution, best possible 9 (24.19 seconds)
Cbc0010I After 356 nodes, 18 on tree, 1e+50 best solution, best possible 9 (24.91 seconds)
Cbc0010I After 371 nodes, 15 on tree, 1e+50 best solution, best possible 9 (25.67 seconds)
Cbc0010I After 386 nodes, 14 on tree, 1e+50 best solution, best possible 9 (26.38 seconds)
Cbc0010I After 397 nodes, 14 on tree, 1e+50 best solution, best possible 9 (27.11 seconds)
Cbc0010I After 409 nodes, 12 on tree, 1e+50 best solution, best possible 9 (27.86 seconds)
Cbc0010I After 422 nodes, 13 on tree, 1e+50 best solution, best possible 9 (28.56 seconds)
Cbc0010I After 442 nodes, 16 on tree, 1e+50 best solution, best possible 9 (29.28 seconds)
Cbc0010I After 461 nodes, 14 on tree, 1e+50 best solution, best possible 9 (30.00 seconds)
Cbc0010I After 474 nodes, 8 on tree, 1e+50 best solution, best possible 9 (30.70 seconds)
Cbc0010I After 491 nodes, 9 on tree, 1e+50 best solution, best possible 9 (31.43 seconds)
Cbc0010I After 504 nodes, 9 on tree, 1e+50 best solution, best possible 9 (32.17 seconds)
Cbc0010I After 519 nodes, 16 on tree, 1e+50 best solution, best possible 9 (32.91 seconds)
Cbc0010I After 535 nodes, 10 on tree, 1e+50 best solution, best possible 9 (33.63 seconds)
Cbc0010I After 550 nodes, 7 on tree, 1e+50 best solution, best possible 9 (34.37 seconds)
Cbc0010I After 569 nodes, 5 on tree, 1e+50 best solution, best possible 9 (35.11 seconds)
Cbc0010I After 581 nodes, 7 on tree, 1e+50 best solution, best possible 9 (35.83 seconds)
Cbc0010I After 600 nodes, 8 on tree, 1e+50 best solution, best possible 9 (36.56 seconds)
Cbc0010I After 620 nodes, 12 on tree, 1e+50 best solution, best possible 9 (37.28 seconds)
Cbc0010I After 639 nodes, 10 on tree, 1e+50 best solution, best possible 9 (37.99 seconds)
Cbc0010I After 658 nodes, 11 on tree, 1e+50 best solution, best possible 9 (38.72 seconds)
Cbc0010I After 678 nodes, 14 on tree, 1e+50 best solution, best possible 9 (39.44 seconds)
Cbc0010I After 700 nodes, 11 on tree, 1e+50 best solution, best possible 9 (40.14 seconds)
Cbc0010I After 723 nodes, 8 on tree, 1e+50 best solution, best possible 9 (40.85 seconds)
Cbc0010I After 741 nodes, 7 on tree, 1e+50 best solution, best possible 9 (41.58 seconds)
Cbc0010I After 755 nodes, 11 on tree, 1e+50 best solution, best possible 9 (42.28 seconds)
Cbc0004I Integer solution of 9 found after 130238 iterations and 773 nodes (42.82 seconds)
Cbc0001I Search completed - best objective 9, took 130238 iterations and 773 nodes (42.82 seconds)
Cbc0032I Strong branching done 1714 times (21074 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 43, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.3125 to 9
Probing was tried 466 times and created 3110 cuts of which 0 were active after adding rounds of cuts (2.00961 seconds)
Gomory was tried 10 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.236867 seconds)
Knapsack was tried 465 times and created 85 cuts of which 0 were active after adding rounds of cuts (2.90225 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007085 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037967 seconds)
MixedIntegerRounding2 was tried 465 times and created 1132 cuts of which 0 were active after adding rounds of cuts (1.57712 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002837 seconds)
TwoMirCuts was tried 465 times and created 737 cuts of which 0 were active after adding rounds of cuts (0.773082 seconds)
ZeroHalf was tried 465 times and created 2176 cuts of which 0 were active after adding rounds of cuts (2.71594 seconds)

Result - Optimal solution found
Objective value:                9
Enumerated nodes:               773
Total iterations:               130238
Time (CPU seconds):             42.8554
Time (Wallclock seconds):       42.8565
Total time (CPU seconds):       42.897   (Wallclock seconds):       42.8886
