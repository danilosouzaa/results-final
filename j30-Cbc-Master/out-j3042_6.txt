Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3042/j3042_6.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.9857 - 0.113009 seconds
Cgl0002I 11 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 283 rows, 577 columns (577 integer (576 of which binary)) and 5954 elements
Coin3009W Conflict graph built in 0.012 seconds, density: 1.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 577 objects (577 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 65 integers unsatisfied sum - 16.2345
Cbc0038I Pass   1: suminf.    8.08431 (36) obj. 4 iterations 96
Cbc0038I Pass   2: suminf.    6.51936 (36) obj. 4 iterations 15
Cbc0038I Pass   3: suminf.    6.49167 (28) obj. 4 iterations 6
Cbc0038I Pass   4: suminf.    3.55000 (13) obj. 4 iterations 53
Cbc0038I Pass   5: suminf.    3.51667 (13) obj. 4 iterations 35
Cbc0038I Pass   6: suminf.    2.05000 (7) obj. 4 iterations 57
Cbc0038I Pass   7: suminf.    2.05000 (7) obj. 4 iterations 5
Cbc0038I Pass   8: suminf.    1.50000 (5) obj. 4 iterations 43
Cbc0038I Pass   9: suminf.    1.00000 (4) obj. 4 iterations 33
Cbc0038I Pass  10: suminf.    1.50000 (5) obj. 4 iterations 33
Cbc0038I Pass  11: suminf.    3.36364 (12) obj. 4 iterations 104
Cbc0038I Pass  12: suminf.    2.00769 (12) obj. 4 iterations 78
Cbc0038I Pass  13: suminf.    3.02500 (13) obj. 4 iterations 33
Cbc0038I Pass  14: suminf.    2.37500 (7) obj. 4 iterations 17
Cbc0038I Pass  15: suminf.    2.17500 (7) obj. 4 iterations 8
Cbc0038I Pass  16: suminf.    1.42500 (4) obj. 4 iterations 53
Cbc0038I Pass  17: suminf.    1.42500 (4) obj. 4 iterations 11
Cbc0038I Pass  18: suminf.    1.17500 (4) obj. 4 iterations 9
Cbc0038I Pass  19: suminf.    1.17500 (4) obj. 4 iterations 6
Cbc0038I Pass  20: suminf.    1.42500 (4) obj. 4 iterations 17
Cbc0038I Pass  21: suminf.    7.55278 (26) obj. 4 iterations 93
Cbc0038I Pass  22: suminf.    3.55417 (16) obj. 4 iterations 60
Cbc0038I Pass  23: suminf.    1.90833 (8) obj. 4 iterations 12
Cbc0038I Pass  24: suminf.    2.04722 (8) obj. 4 iterations 24
Cbc0038I Pass  25: suminf.    2.04722 (8) obj. 4 iterations 8
Cbc0038I Pass  26: suminf.    1.57500 (6) obj. 4 iterations 20
Cbc0038I Pass  27: suminf.    1.57500 (6) obj. 4 iterations 17
Cbc0038I Pass  28: suminf.    1.82500 (6) obj. 4 iterations 17
Cbc0038I Pass  29: suminf.    1.82500 (6) obj. 4 iterations 14
Cbc0038I Pass  30: suminf.    5.41212 (21) obj. 4 iterations 93
Cbc0038I Pass  31: suminf.    4.06667 (17) obj. 4 iterations 61
Cbc0038I Pass  32: suminf.    3.05333 (14) obj. 4 iterations 62
Cbc0038I Pass  33: suminf.    1.75000 (8) obj. 4 iterations 19
Cbc0038I Pass  34: suminf.    2.00650 (12) obj. 4 iterations 56
Cbc0038I Pass  35: suminf.    1.33983 (10) obj. 4 iterations 12
Cbc0038I Pass  36: suminf.    2.85617 (10) obj. 4 iterations 52
Cbc0038I Pass  37: suminf.    2.85617 (10) obj. 4 iterations 7
Cbc0038I Pass  38: suminf.    3.57937 (10) obj. 4 iterations 27
Cbc0038I Pass  39: suminf.    2.83333 (8) obj. 4 iterations 13
Cbc0038I Pass  40: suminf.    2.83333 (8) obj. 4 iterations 4
Cbc0038I Pass  41: suminf.    2.14167 (8) obj. 4 iterations 36
Cbc0038I Pass  42: suminf.    2.14167 (8) obj. 4 iterations 9
Cbc0038I Pass  43: suminf.    1.50000 (4) obj. 4 iterations 32
Cbc0038I Pass  44: suminf.    1.50000 (4) obj. 4 iterations 14
Cbc0038I Pass  45: suminf.    1.35000 (5) obj. 4 iterations 12
Cbc0038I Pass  46: suminf.    1.50000 (4) obj. 4 iterations 25
Cbc0038I Pass  47: suminf.    6.39889 (29) obj. 4 iterations 117
Cbc0038I Pass  48: suminf.    4.24048 (17) obj. 4 iterations 69
Cbc0038I Pass  49: suminf.    3.83333 (14) obj. 4 iterations 52
Cbc0038I Pass  50: suminf.    2.66667 (11) obj. 4 iterations 22
Cbc0038I Pass  51: suminf.    2.66667 (11) obj. 4 iterations 1
Cbc0038I Pass  52: suminf.    3.51667 (11) obj. 4 iterations 48
Cbc0038I Pass  53: suminf.    3.51667 (11) obj. 4 iterations 30
Cbc0038I Pass  54: suminf.    2.66667 (11) obj. 4 iterations 26
Cbc0038I Pass  55: suminf.    8.75000 (27) obj. 4 iterations 94
Cbc0038I Pass  56: suminf.    6.14054 (48) obj. 4 iterations 75
Cbc0038I Pass  57: suminf.    4.46667 (19) obj. 4 iterations 66
Cbc0038I Pass  58: suminf.    4.18611 (19) obj. 4 iterations 22
Cbc0038I Pass  59: suminf.    3.79524 (14) obj. 4 iterations 8
Cbc0038I Pass  60: suminf.    3.79524 (14) obj. 4 iterations 6
Cbc0038I Pass  61: suminf.    2.70000 (9) obj. 4 iterations 30
Cbc0038I Pass  62: suminf.    2.12857 (9) obj. 4 iterations 27
Cbc0038I Pass  63: suminf.    3.05000 (10) obj. 4 iterations 22
Cbc0038I Pass  64: suminf.    2.72857 (10) obj. 4 iterations 33
Cbc0038I Pass  65: suminf.    2.72857 (10) obj. 4 iterations 7
Cbc0038I Pass  66: suminf.    2.70000 (9) obj. 4 iterations 22
Cbc0038I Pass  67: suminf.    2.12857 (9) obj. 4 iterations 23
Cbc0038I Pass  68: suminf.    3.05000 (10) obj. 4 iterations 23
Cbc0038I Pass  69: suminf.    2.72857 (10) obj. 4 iterations 24
Cbc0038I Pass  70: suminf.    2.72857 (10) obj. 4 iterations 5
Cbc0038I Pass  71: suminf.    2.70000 (9) obj. 4 iterations 25
Cbc0038I Pass  72: suminf.    2.12857 (9) obj. 4 iterations 25
Cbc0038I Pass  73: suminf.    3.05000 (10) obj. 4 iterations 32
Cbc0038I Pass  74: suminf.    2.72857 (10) obj. 4 iterations 25
Cbc0038I Pass  75: suminf.    2.72857 (10) obj. 4 iterations 5
Cbc0038I Pass  76: suminf.    2.70000 (9) obj. 4 iterations 25
Cbc0038I Pass  77: suminf.    2.12857 (9) obj. 4 iterations 24
Cbc0038I Pass  78: suminf.    3.05000 (10) obj. 4 iterations 26
Cbc0038I Pass  79: suminf.    2.72857 (10) obj. 4 iterations 22
Cbc0038I Pass  80: suminf.    2.72857 (10) obj. 4 iterations 5
Cbc0038I Pass  81: suminf.    2.70000 (9) obj. 4 iterations 26
Cbc0038I Pass  82: suminf.    2.12857 (9) obj. 4 iterations 20
Cbc0038I Pass  83: suminf.    3.05000 (10) obj. 4 iterations 29
Cbc0038I Pass  84: suminf.    2.72857 (10) obj. 4 iterations 27
Cbc0038I Pass  85: suminf.    2.72857 (10) obj. 4 iterations 5
Cbc0038I Pass  86: suminf.    2.70000 (9) obj. 4 iterations 23
Cbc0038I Pass  87: suminf.    2.12857 (9) obj. 4 iterations 22
Cbc0038I Pass  88: suminf.    3.05000 (10) obj. 4 iterations 32
Cbc0038I Pass  89: suminf.    2.72857 (10) obj. 4 iterations 24
Cbc0038I Pass  90: suminf.    2.72857 (10) obj. 4 iterations 5
Cbc0038I Pass  91: suminf.    2.70000 (9) obj. 4 iterations 25
Cbc0038I Pass  92: suminf.    2.12857 (9) obj. 4 iterations 22
Cbc0038I Pass  93: suminf.    3.05000 (10) obj. 4 iterations 31
Cbc0038I Pass  94: suminf.    2.72857 (10) obj. 4 iterations 23
Cbc0038I Pass  95: suminf.    2.72857 (10) obj. 4 iterations 6
Cbc0038I Pass  96: suminf.    2.70000 (9) obj. 4 iterations 20
Cbc0038I Pass  97: suminf.    2.12857 (9) obj. 4 iterations 19
Cbc0038I Pass  98: suminf.    3.05000 (10) obj. 4 iterations 25
Cbc0038I Pass  99: suminf.    2.72857 (10) obj. 4 iterations 24
Cbc0038I Pass 100: suminf.    9.67857 (34) obj. 4 iterations 97
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 375 integers at bound fixed and 0 continuous
Cbc0038I Full problem 283 rows 577 columns, reduced to 207 rows 183 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.15 seconds)
Cbc0038I After 1.15 seconds - Feasibility pump exiting - took 0.52 seconds
Cbc0031I 46 added rows had average density of 42.456522
Cbc0013I At root node, 99 cuts changed objective from 1.9857007 to 2.9998875 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 159 row cuts average 4.9 elements, 2 column cuts (2 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 158 row cuts average 442.2 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 30 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 46 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 261.5 elements, 0 column cuts (0 active)  in 0.361 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 99 row cuts average 37.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1e+50, took 1166 iterations and 0 nodes (2.56 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.9857 to 2.99989
Probing was tried 7 times and created 161 cuts of which 0 were active after adding rounds of cuts (0.141187 seconds)
Gomory was tried 7 times and created 158 cuts of which 0 were active after adding rounds of cuts (0.197768 seconds)
Knapsack was tried 7 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.052329 seconds)
Clique was tried 7 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004305 seconds)
OddWheel was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019479 seconds)
MixedIntegerRounding2 was tried 7 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.01766 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001116 seconds)
TwoMirCuts was tried 7 times and created 219 cuts of which 0 were active after adding rounds of cuts (0.360937 seconds)
ZeroHalf was tried 7 times and created 99 cuts of which 0 were active after adding rounds of cuts (0.036579 seconds)

Result - Problem proven infeasible
No feasible solution found
Enumerated nodes:               0
Total iterations:               1166
Time (CPU seconds):             2.63069
Time (Wallclock seconds):       2.56738
Total time (CPU seconds):       2.64693   (Wallclock seconds):       2.57945
