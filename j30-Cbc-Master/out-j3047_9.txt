Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3047/j3047_9.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.101263 seconds
Cgl0002I 20 variables fixed
Cgl0003I 3 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 247 rows, 615 columns (615 integer (615 of which binary)) and 9382 elements
Coin3009W Conflict graph built in 0.020 seconds, density: 1.347%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 615 objects (615 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 49 integers unsatisfied sum - 8.87647
Cbc0038I Pass   1: suminf.    4.94762 (20) obj. 0 iterations 56
Cbc0038I Pass   2: suminf.    4.44580 (15) obj. 0 iterations 24
Cbc0038I Pass   3: suminf.    3.60492 (15) obj. 0 iterations 14
Cbc0038I Pass   4: suminf.    3.60492 (15) obj. 0 iterations 0
Cbc0038I Pass   5: suminf.    4.41667 (14) obj. 0 iterations 83
Cbc0038I Pass   6: suminf.    4.03000 (16) obj. 0 iterations 35
Cbc0038I Pass   7: suminf.    4.67349 (26) obj. 0 iterations 79
Cbc0038I Pass   8: suminf.    4.10000 (16) obj. 0 iterations 43
Cbc0038I Pass   9: suminf.    3.85237 (16) obj. 0 iterations 4
Cbc0038I Pass  10: suminf.    3.68707 (15) obj. 0 iterations 23
Cbc0038I Pass  11: suminf.    4.71599 (21) obj. 0 iterations 70
Cbc0038I Pass  12: suminf.    4.21936 (22) obj. 0 iterations 53
Cbc0038I Pass  13: suminf.    3.87259 (19) obj. 0 iterations 25
Cbc0038I Pass  14: suminf.    3.47925 (17) obj. 0 iterations 76
Cbc0038I Pass  15: suminf.    3.38632 (16) obj. 0 iterations 14
Cbc0038I Pass  16: suminf.    6.16109 (21) obj. 0 iterations 60
Cbc0038I Pass  17: suminf.    4.77222 (18) obj. 0 iterations 40
Cbc0038I Pass  18: suminf.    4.00000 (15) obj. 0 iterations 35
Cbc0038I Pass  19: suminf.    5.45089 (15) obj. 0 iterations 48
Cbc0038I Pass  20: suminf.    5.19048 (17) obj. 0 iterations 32
Cbc0038I Pass  21: suminf.    2.85000 (12) obj. 0 iterations 48
Cbc0038I Pass  22: suminf.    2.83333 (12) obj. 0 iterations 17
Cbc0038I Pass  23: suminf.    5.26860 (19) obj. 0 iterations 55
Cbc0038I Pass  24: suminf.    5.25556 (20) obj. 0 iterations 27
Cbc0038I Pass  25: suminf.    5.11717 (19) obj. 0 iterations 37
Cbc0038I Pass  26: suminf.    4.00000 (15) obj. 0 iterations 59
Cbc0038I Pass  27: suminf.    5.45089 (15) obj. 0 iterations 53
Cbc0038I Pass  28: suminf.    3.85714 (13) obj. 0 iterations 39
Cbc0038I Pass  29: suminf.    4.10000 (9) obj. 0 iterations 32
Cbc0038I Pass  30: suminf.    2.80000 (10) obj. 0 iterations 35
Cbc0038I Pass  31: suminf.    2.80000 (9) obj. 0 iterations 13
Cbc0038I Pass  32: suminf.    4.50000 (10) obj. 0 iterations 37
Cbc0038I Pass  33: suminf.    3.00000 (10) obj. 0 iterations 37
Cbc0038I Pass  34: suminf.    3.00000 (11) obj. 0 iterations 15
Cbc0038I Pass  35: suminf.    4.10000 (9) obj. 0 iterations 34
Cbc0038I Pass  36: suminf.    2.80000 (8) obj. 0 iterations 21
Cbc0038I Pass  37: suminf.    2.80000 (10) obj. 0 iterations 16
Cbc0038I Pass  38: suminf.    2.80000 (9) obj. 0 iterations 12
Cbc0038I Pass  39: suminf.    4.50000 (10) obj. 0 iterations 37
Cbc0038I Pass  40: suminf.    3.00000 (10) obj. 0 iterations 41
Cbc0038I Pass  41: suminf.    3.00000 (11) obj. 0 iterations 16
Cbc0038I Pass  42: suminf.    4.10000 (9) obj. 0 iterations 35
Cbc0038I Pass  43: suminf.    2.80000 (10) obj. 0 iterations 37
Cbc0038I Pass  44: suminf.    2.80000 (9) obj. 0 iterations 11
Cbc0038I Pass  45: suminf.    4.50000 (10) obj. 0 iterations 38
Cbc0038I Pass  46: suminf.    3.00000 (10) obj. 0 iterations 42
Cbc0038I Pass  47: suminf.    3.00000 (11) obj. 0 iterations 16
Cbc0038I Pass  48: suminf.    4.10000 (9) obj. 0 iterations 30
Cbc0038I Pass  49: suminf.    2.80000 (10) obj. 0 iterations 31
Cbc0038I Pass  50: suminf.    2.80000 (9) obj. 0 iterations 10
Cbc0038I Pass  51: suminf.    4.50000 (10) obj. 0 iterations 39
Cbc0038I Pass  52: suminf.    3.00000 (10) obj. 0 iterations 38
Cbc0038I Pass  53: suminf.    3.00000 (11) obj. 0 iterations 17
Cbc0038I Pass  54: suminf.    4.10000 (9) obj. 0 iterations 27
Cbc0038I Pass  55: suminf.    2.80000 (9) obj. 0 iterations 25
Cbc0038I Pass  56: suminf.    4.50000 (10) obj. 0 iterations 39
Cbc0038I Pass  57: suminf.    3.00000 (10) obj. 0 iterations 34
Cbc0038I Pass  58: suminf.    3.00000 (11) obj. 0 iterations 13
Cbc0038I Pass  59: suminf.    4.10000 (9) obj. 0 iterations 34
Cbc0038I Pass  60: suminf.    2.80000 (8) obj. 0 iterations 20
Cbc0038I Pass  61: suminf.    2.80000 (10) obj. 0 iterations 18
Cbc0038I Pass  62: suminf.    2.80000 (9) obj. 0 iterations 14
Cbc0038I Pass  63: suminf.    4.50000 (10) obj. 0 iterations 38
Cbc0038I Pass  64: suminf.    3.00000 (10) obj. 0 iterations 36
Cbc0038I Pass  65: suminf.    3.00000 (11) obj. 0 iterations 14
Cbc0038I Pass  66: suminf.    4.10000 (9) obj. 0 iterations 36
Cbc0038I Pass  67: suminf.    2.80000 (10) obj. 0 iterations 37
Cbc0038I Pass  68: suminf.    2.80000 (9) obj. 0 iterations 12
Cbc0038I Pass  69: suminf.    4.50000 (10) obj. 0 iterations 40
Cbc0038I Pass  70: suminf.    3.00000 (10) obj. 0 iterations 40
Cbc0038I Pass  71: suminf.    3.00000 (11) obj. 0 iterations 14
Cbc0038I Pass  72: suminf.    4.10000 (9) obj. 0 iterations 32
Cbc0038I Pass  73: suminf.    2.80000 (8) obj. 0 iterations 35
Cbc0038I Pass  74: suminf.    2.80000 (10) obj. 0 iterations 18
Cbc0038I Pass  75: suminf.    2.80000 (9) obj. 0 iterations 12
Cbc0038I Pass  76: suminf.    4.50000 (10) obj. 0 iterations 40
Cbc0038I Pass  77: suminf.    3.00000 (10) obj. 0 iterations 39
Cbc0038I Pass  78: suminf.    3.00000 (11) obj. 0 iterations 12
Cbc0038I Pass  79: suminf.    4.10000 (9) obj. 0 iterations 34
Cbc0038I Pass  80: suminf.    2.80000 (8) obj. 0 iterations 26
Cbc0038I Pass  81: suminf.    2.80000 (10) obj. 0 iterations 20
Cbc0038I Pass  82: suminf.    2.80000 (9) obj. 0 iterations 11
Cbc0038I Pass  83: suminf.    4.50000 (10) obj. 0 iterations 40
Cbc0038I Pass  84: suminf.    3.00000 (10) obj. 0 iterations 39
Cbc0038I Pass  85: suminf.    3.00000 (11) obj. 0 iterations 13
Cbc0038I Pass  86: suminf.    4.10000 (9) obj. 0 iterations 28
Cbc0038I Pass  87: suminf.    2.80000 (8) obj. 0 iterations 24
Cbc0038I Pass  88: suminf.    2.80000 (10) obj. 0 iterations 17
Cbc0038I Pass  89: suminf.    2.80000 (9) obj. 0 iterations 12
Cbc0038I Pass  90: suminf.    4.50000 (10) obj. 0 iterations 38
Cbc0038I Pass  91: suminf.    3.00000 (11) obj. 0 iterations 52
Cbc0038I Pass  92: suminf.    3.00000 (11) obj. 0 iterations 7
Cbc0038I Pass  93: suminf.    4.10000 (9) obj. 0 iterations 31
Cbc0038I Pass  94: suminf.    2.80000 (10) obj. 0 iterations 37
Cbc0038I Pass  95: suminf.    2.80000 (9) obj. 0 iterations 13
Cbc0038I Pass  96: suminf.    4.50000 (10) obj. 0 iterations 39
Cbc0038I Pass  97: suminf.    3.00000 (10) obj. 0 iterations 41
Cbc0038I Pass  98: suminf.    3.00000 (11) obj. 0 iterations 17
Cbc0038I Pass  99: suminf.    4.10000 (9) obj. 0 iterations 30
Cbc0038I Pass 100: suminf.   12.84516 (43) obj. 0 iterations 114
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 504 integers at bound fixed and 0 continuous
Cbc0038I Full problem 247 rows 615 columns, reduced to 90 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (1.28 seconds)
Cbc0038I Full problem 248 rows 615 columns, reduced to 248 rows 615 columns - too large
Cbc0038I After 1.32 seconds - Feasibility pump exiting - took 0.54 seconds
Cbc0031I 43 added rows had average density of 130.51163
Cbc0013I At root node, 43 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 135 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.252 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 197 row cuts average 582.3 elements, 0 column cuts (0 active)  in 0.240 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 48.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 88 row cuts average 345.1 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 106.6 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (2.67 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible 0 (3.39 seconds)
Cbc0010I After 58 nodes, 30 on tree, 1e+50 best solution, best possible 0 (4.09 seconds)
Cbc0010I After 185 nodes, 28 on tree, 1e+50 best solution, best possible 0 (4.79 seconds)
Cbc0010I After 348 nodes, 26 on tree, 1e+50 best solution, best possible 0 (5.50 seconds)
Cbc0004I Integer solution of 0 found after 10931 iterations and 441 nodes (5.92 seconds)
Cbc0001I Search completed - best objective 0, took 10931 iterations and 441 nodes (5.92 seconds)
Cbc0032I Strong branching done 2182 times (24839 iterations), fathomed 52 nodes and fixed 91 variables
Cbc0035I Maximum depth 44, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 135 cuts of which 0 were active after adding rounds of cuts (0.252282 seconds)
Gomory was tried 10 times and created 197 cuts of which 0 were active after adding rounds of cuts (0.240201 seconds)
Knapsack was tried 10 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.043135 seconds)
Clique was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.003673 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018572 seconds)
MixedIntegerRounding2 was tried 10 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.025249 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001784 seconds)
TwoMirCuts was tried 10 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.08458 seconds)
ZeroHalf was tried 10 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.029842 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               441
Total iterations:               10931
Time (CPU seconds):             6.00771
Time (Wallclock seconds):       5.95143
Total time (CPU seconds):       6.06317   (Wallclock seconds):       5.98647
