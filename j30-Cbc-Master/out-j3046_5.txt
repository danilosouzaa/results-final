Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3046/j3046_5.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.13649 seconds
Cgl0002I 19 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 260 rows, 668 columns (668 integer (663 of which binary)) and 10463 elements
Coin3009W Conflict graph built in 0.037 seconds, density: 1.513%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 668 objects (668 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 42 integers unsatisfied sum - 12.0401
Cbc0038I Pass   1: suminf.    9.78760 (49) obj. 0 iterations 81
Cbc0038I Pass   2: suminf.    9.77001 (48) obj. 0 iterations 16
Cbc0038I Pass   3: suminf.    9.77001 (48) obj. 0 iterations 1
Cbc0038I Pass   4: suminf.   11.35442 (51) obj. 1 iterations 146
Cbc0038I Pass   5: suminf.    6.87669 (33) obj. 1 iterations 104
Cbc0038I Pass   6: suminf.    6.81768 (32) obj. 1 iterations 15
Cbc0038I Pass   7: suminf.    8.25413 (30) obj. 1 iterations 76
Cbc0038I Pass   8: suminf.    6.61894 (27) obj. 1 iterations 64
Cbc0038I Pass   9: suminf.    6.51338 (27) obj. 1 iterations 22
Cbc0038I Pass  10: suminf.    6.74910 (26) obj. 1 iterations 63
Cbc0038I Pass  11: suminf.    5.92269 (25) obj. 1 iterations 20
Cbc0038I Pass  12: suminf.    5.49259 (30) obj. 1 iterations 9
Cbc0038I Pass  13: suminf.   11.48030 (38) obj. 1 iterations 94
Cbc0038I Pass  14: suminf.    8.92421 (35) obj. 1 iterations 49
Cbc0038I Pass  15: suminf.    7.92884 (30) obj. 1 iterations 17
Cbc0038I Pass  16: suminf.    7.15175 (28) obj. 1 iterations 62
Cbc0038I Pass  17: suminf.    6.46521 (33) obj. 1 iterations 53
Cbc0038I Pass  18: suminf.    6.35761 (36) obj. 1 iterations 13
Cbc0038I Pass  19: suminf.    6.93393 (25) obj. 1 iterations 53
Cbc0038I Pass  20: suminf.    6.62455 (25) obj. 1 iterations 5
Cbc0038I Pass  21: suminf.    7.41800 (25) obj. 1 iterations 54
Cbc0038I Pass  22: suminf.    6.83021 (31) obj. 1 iterations 33
Cbc0038I Pass  23: suminf.    7.59433 (25) obj. 1 iterations 51
Cbc0038I Pass  24: suminf.    6.58823 (30) obj. 1 iterations 56
Cbc0038I Pass  25: suminf.    6.46315 (28) obj. 1 iterations 26
Cbc0038I Pass  26: suminf.    5.92199 (30) obj. 1 iterations 30
Cbc0038I Pass  27: suminf.    7.15794 (25) obj. 1 iterations 43
Cbc0038I Pass  28: suminf.    6.37273 (23) obj. 1 iterations 54
Cbc0038I Pass  29: suminf.    6.22074 (28) obj. 1 iterations 29
Cbc0038I Pass  30: suminf.    9.18778 (30) obj. 1 iterations 55
Cbc0038I Pass  31: suminf.    6.95821 (22) obj. 1 iterations 86
Cbc0038I Pass  32: suminf.    6.55239 (24) obj. 1 iterations 21
Cbc0038I Pass  33: suminf.    8.26450 (26) obj. 1 iterations 89
Cbc0038I Pass  34: suminf.    6.91875 (25) obj. 1 iterations 46
Cbc0038I Pass  35: suminf.    6.39470 (23) obj. 1 iterations 42
Cbc0038I Pass  36: suminf.    6.25779 (23) obj. 1 iterations 10
Cbc0038I Pass  37: suminf.    6.18968 (27) obj. 1 iterations 11
Cbc0038I Pass  38: suminf.    5.93665 (23) obj. 1 iterations 67
Cbc0038I Pass  39: suminf.    5.93665 (23) obj. 1 iterations 6
Cbc0038I Pass  40: suminf.    7.91061 (24) obj. 1 iterations 66
Cbc0038I Pass  41: suminf.    7.06136 (23) obj. 1 iterations 39
Cbc0038I Pass  42: suminf.    7.00303 (23) obj. 1 iterations 11
Cbc0038I Pass  43: suminf.    7.55618 (22) obj. 1 iterations 84
Cbc0038I Pass  44: suminf.    6.24106 (26) obj. 1 iterations 30
Cbc0038I Pass  45: suminf.    5.59861 (25) obj. 1 iterations 46
Cbc0038I Pass  46: suminf.    5.74412 (23) obj. 1 iterations 68
Cbc0038I Pass  47: suminf.    5.09274 (28) obj. 1 iterations 39
Cbc0038I Pass  48: suminf.    7.52790 (25) obj. 1 iterations 58
Cbc0038I Pass  49: suminf.    5.98582 (25) obj. 1 iterations 57
Cbc0038I Pass  50: suminf.    9.57656 (27) obj. 1 iterations 69
Cbc0038I Pass  51: suminf.    7.76818 (23) obj. 1 iterations 38
Cbc0038I Pass  52: suminf.    6.09740 (28) obj. 1 iterations 33
Cbc0038I Pass  53: suminf.   10.29047 (32) obj. 1 iterations 105
Cbc0038I Pass  54: suminf.    8.41759 (33) obj. 1 iterations 30
Cbc0038I Pass  55: suminf.    4.57304 (26) obj. 1 iterations 74
Cbc0038I Pass  56: suminf.    3.93804 (23) obj. 1 iterations 30
Cbc0038I Pass  57: suminf.    6.18095 (23) obj. 1 iterations 37
Cbc0038I Pass  58: suminf.    5.70209 (20) obj. 1 iterations 35
Cbc0038I Pass  59: suminf.    4.94319 (17) obj. 1 iterations 33
Cbc0038I Pass  60: suminf.    4.63716 (22) obj. 1 iterations 10
Cbc0038I Pass  61: suminf.    5.58540 (28) obj. 1 iterations 76
Cbc0038I Pass  62: suminf.    3.46431 (16) obj. 1 iterations 95
Cbc0038I Pass  63: suminf.    3.32151 (18) obj. 1 iterations 36
Cbc0038I Pass  64: suminf.    4.11577 (16) obj. 1 iterations 51
Cbc0038I Pass  65: suminf.    3.79038 (16) obj. 1 iterations 12
Cbc0038I Pass  66: suminf.    3.71923 (14) obj. 1 iterations 26
Cbc0038I Pass  67: suminf.    3.38326 (16) obj. 1 iterations 30
Cbc0038I Pass  68: suminf.    4.93704 (24) obj. 1 iterations 56
Cbc0038I Pass  69: suminf.    4.41574 (21) obj. 1 iterations 21
Cbc0038I Pass  70: suminf.    4.53493 (19) obj. 1 iterations 60
Cbc0038I Pass  71: suminf.    3.99048 (16) obj. 1 iterations 7
Cbc0038I Pass  72: suminf.    3.79038 (16) obj. 1 iterations 16
Cbc0038I Pass  73: suminf.    5.14506 (19) obj. 1 iterations 81
Cbc0038I Pass  74: suminf.    4.35537 (22) obj. 1 iterations 40
Cbc0038I Pass  75: suminf.    3.85591 (21) obj. 1 iterations 68
Cbc0038I Pass  76: suminf.    3.10399 (16) obj. 1 iterations 26
Cbc0038I Pass  77: suminf.    3.08744 (15) obj. 1 iterations 11
Cbc0038I Pass  78: suminf.    4.35646 (17) obj. 1 iterations 53
Cbc0038I Pass  79: suminf.    2.99363 (19) obj. 1 iterations 52
Cbc0038I Pass  80: suminf.    4.02570 (16) obj. 1 iterations 57
Cbc0038I Pass  81: suminf.    3.32151 (18) obj. 1 iterations 43
Cbc0038I Pass  82: suminf.    6.10256 (21) obj. 1 iterations 56
Cbc0038I Pass  83: suminf.    5.88271 (19) obj. 1 iterations 36
Cbc0038I Pass  84: suminf.    5.12381 (16) obj. 1 iterations 36
Cbc0038I Pass  85: suminf.    4.83397 (18) obj. 1 iterations 13
Cbc0038I Pass  86: suminf.    3.98621 (18) obj. 1 iterations 18
Cbc0038I Pass  87: suminf.    3.38326 (16) obj. 1 iterations 47
Cbc0038I Pass  88: suminf.    5.64196 (20) obj. 1 iterations 50
Cbc0038I Pass  89: suminf.    4.63716 (22) obj. 1 iterations 50
Cbc0038I Pass  90: suminf.    4.63716 (22) obj. 1 iterations 1
Cbc0038I Pass  91: suminf.    3.85591 (21) obj. 1 iterations 81
Cbc0038I Pass  92: suminf.    3.10399 (16) obj. 1 iterations 32
Cbc0038I Pass  93: suminf.    3.08744 (15) obj. 1 iterations 11
Cbc0038I Pass  94: suminf.    3.86352 (18) obj. 1 iterations 68
Cbc0038I Pass  95: suminf.    2.69545 (16) obj. 1 iterations 80
Cbc0038I Pass  96: suminf.    4.31995 (17) obj. 1 iterations 82
Cbc0038I Pass  97: suminf.    3.27770 (15) obj. 1 iterations 31
Cbc0038I Pass  98: suminf.    5.55000 (22) obj. 1 iterations 67
Cbc0038I Pass  99: suminf.    3.85504 (16) obj. 1 iterations 75
Cbc0038I Pass 100: suminf.    7.67353 (33) obj. 1 iterations 97
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 498 integers at bound fixed and 0 continuous
Cbc0038I Full problem 260 rows 668 columns, reduced to 158 rows 142 columns
Cbc0038I Mini branch and bound did not improve solution (2.24 seconds)
Cbc0038I Full problem 261 rows 668 columns, reduced to 260 rows 668 columns - too large
Cbc0038I After 2.34 seconds - Feasibility pump exiting - took 1.00 seconds
Cbc0031I 31 added rows had average density of 63.903226
Cbc0013I At root node, 31 cuts changed objective from 0 to 1.110223e-16 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 128 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.473 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 542.3 elements, 0 column cuts (0 active)  in 0.410 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 18.3 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 53.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 130 row cuts average 166.2 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 127 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1.110223e-16 (4.66 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 1.110223e-16 (5.74 seconds)
Cbc0010I After 6 nodes, 1 on tree, 1e+50 best solution, best possible 1 (6.49 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 1 (7.50 seconds)
Cbc0010I After 10 nodes, 5 on tree, 1e+50 best solution, best possible 1 (8.29 seconds)
Cbc0010I After 15 nodes, 10 on tree, 1e+50 best solution, best possible 1 (9.07 seconds)
Cbc0010I After 29 nodes, 11 on tree, 1e+50 best solution, best possible 1 (9.78 seconds)
Cbc0010I After 51 nodes, 7 on tree, 1e+50 best solution, best possible 1 (10.50 seconds)
Cbc0010I After 57 nodes, 6 on tree, 1e+50 best solution, best possible 1 (11.24 seconds)
Cbc0010I After 79 nodes, 12 on tree, 1e+50 best solution, best possible 1 (11.97 seconds)
Cbc0010I After 109 nodes, 13 on tree, 1e+50 best solution, best possible 1 (12.67 seconds)
Cbc0010I After 150 nodes, 10 on tree, 1e+50 best solution, best possible 1 (13.39 seconds)
Cbc0010I After 194 nodes, 11 on tree, 1e+50 best solution, best possible 1 (14.09 seconds)
Cbc0010I After 233 nodes, 13 on tree, 1e+50 best solution, best possible 1 (14.79 seconds)
Cbc0010I After 273 nodes, 9 on tree, 1e+50 best solution, best possible 1 (15.50 seconds)
Cbc0010I After 304 nodes, 10 on tree, 1e+50 best solution, best possible 1 (16.28 seconds)
Cbc0010I After 337 nodes, 12 on tree, 1e+50 best solution, best possible 1 (17.01 seconds)
Cbc0010I After 361 nodes, 12 on tree, 1e+50 best solution, best possible 1 (17.73 seconds)
Cbc0010I After 399 nodes, 11 on tree, 1e+50 best solution, best possible 1 (18.44 seconds)
Cbc0010I After 451 nodes, 19 on tree, 1e+50 best solution, best possible 1 (19.15 seconds)
Cbc0010I After 482 nodes, 16 on tree, 1e+50 best solution, best possible 1 (19.85 seconds)
Cbc0010I After 521 nodes, 12 on tree, 1e+50 best solution, best possible 1 (20.55 seconds)
Cbc0010I After 556 nodes, 10 on tree, 1e+50 best solution, best possible 1 (21.30 seconds)
Cbc0010I After 574 nodes, 11 on tree, 1e+50 best solution, best possible 1 (22.03 seconds)
Cbc0010I After 595 nodes, 11 on tree, 1e+50 best solution, best possible 1 (22.73 seconds)
Cbc0010I After 615 nodes, 8 on tree, 1e+50 best solution, best possible 1 (23.45 seconds)
Cbc0010I After 662 nodes, 15 on tree, 1e+50 best solution, best possible 1 (24.18 seconds)
Cbc0010I After 694 nodes, 12 on tree, 1e+50 best solution, best possible 1 (24.89 seconds)
Cbc0010I After 732 nodes, 11 on tree, 1e+50 best solution, best possible 1 (25.61 seconds)
Cbc0010I After 761 nodes, 10 on tree, 1e+50 best solution, best possible 1 (26.31 seconds)
Cbc0010I After 786 nodes, 5 on tree, 1e+50 best solution, best possible 1 (27.09 seconds)
Cbc0010I After 800 nodes, 5 on tree, 1e+50 best solution, best possible 1 (27.80 seconds)
Cbc0010I After 813 nodes, 3 on tree, 1e+50 best solution, best possible 1 (28.52 seconds)
Cbc0010I After 827 nodes, 11 on tree, 1e+50 best solution, best possible 1 (29.23 seconds)
Cbc0010I After 864 nodes, 8 on tree, 1e+50 best solution, best possible 1 (29.94 seconds)
Cbc0010I After 893 nodes, 16 on tree, 1e+50 best solution, best possible 1 (30.71 seconds)
Cbc0010I After 934 nodes, 16 on tree, 1e+50 best solution, best possible 1 (31.44 seconds)
Cbc0010I After 974 nodes, 12 on tree, 1e+50 best solution, best possible 1 (32.15 seconds)
Cbc0010I After 992 nodes, 10 on tree, 1e+50 best solution, best possible 1 (32.86 seconds)
Cbc0010I After 1031 nodes, 11 on tree, 1e+50 best solution, best possible 1 (33.58 seconds)
Cbc0010I After 1066 nodes, 8 on tree, 1e+50 best solution, best possible 1 (34.34 seconds)
Cbc0010I After 1093 nodes, 14 on tree, 1e+50 best solution, best possible 1 (35.09 seconds)
Cbc0010I After 1119 nodes, 13 on tree, 1e+50 best solution, best possible 1 (35.80 seconds)
Cbc0010I After 1145 nodes, 11 on tree, 1e+50 best solution, best possible 1 (36.52 seconds)
Cbc0010I After 1160 nodes, 9 on tree, 1e+50 best solution, best possible 1 (37.30 seconds)
Cbc0010I After 1173 nodes, 15 on tree, 1e+50 best solution, best possible 1 (38.01 seconds)
Cbc0010I After 1190 nodes, 11 on tree, 1e+50 best solution, best possible 1 (38.74 seconds)
Cbc0010I After 1206 nodes, 25 on tree, 1e+50 best solution, best possible 1 (39.48 seconds)
Cbc0010I After 1226 nodes, 18 on tree, 1e+50 best solution, best possible 1 (40.18 seconds)
Cbc0010I After 1251 nodes, 7 on tree, 1e+50 best solution, best possible 1 (40.89 seconds)
Cbc0010I After 1272 nodes, 7 on tree, 1e+50 best solution, best possible 1 (41.64 seconds)
Cbc0010I After 1292 nodes, 12 on tree, 1e+50 best solution, best possible 1 (42.35 seconds)
Cbc0010I After 1331 nodes, 9 on tree, 1e+50 best solution, best possible 1 (43.06 seconds)
Cbc0010I After 1347 nodes, 6 on tree, 1e+50 best solution, best possible 1 (43.79 seconds)
Cbc0010I After 1374 nodes, 23 on tree, 1e+50 best solution, best possible 1 (44.52 seconds)
Cbc0010I After 1419 nodes, 17 on tree, 1e+50 best solution, best possible 1 (45.23 seconds)
Cbc0010I After 1470 nodes, 31 on tree, 1e+50 best solution, best possible 1 (45.94 seconds)
Cbc0010I After 1540 nodes, 28 on tree, 1e+50 best solution, best possible 1 (46.65 seconds)
Cbc0010I After 1587 nodes, 16 on tree, 1e+50 best solution, best possible 1 (47.39 seconds)
Cbc0010I After 1638 nodes, 21 on tree, 1e+50 best solution, best possible 1 (48.11 seconds)
Cbc0010I After 1673 nodes, 14 on tree, 1e+50 best solution, best possible 1 (48.86 seconds)
Cbc0010I After 1718 nodes, 31 on tree, 1e+50 best solution, best possible 1 (49.60 seconds)
Cbc0004I Integer solution of 1 found after 114556 iterations and 1767 nodes (50.11 seconds)
Cbc0001I Search completed - best objective 1, took 114556 iterations and 1767 nodes (50.11 seconds)
Cbc0032I Strong branching done 5548 times (124477 iterations), fathomed 73 nodes and fixed 179 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1.11022e-16
Probing was tried 279 times and created 1387 cuts of which 0 were active after adding rounds of cuts (1.16691 seconds)
Gomory was tried 265 times and created 205 cuts of which 0 were active after adding rounds of cuts (0.869056 seconds)
Knapsack was tried 265 times and created 312 cuts of which 0 were active after adding rounds of cuts (1.45033 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007556 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035396 seconds)
MixedIntegerRounding2 was tried 265 times and created 901 cuts of which 0 were active after adding rounds of cuts (0.858512 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006663 seconds)
TwoMirCuts was tried 10 times and created 130 cuts of which 0 were active after adding rounds of cuts (0.139356 seconds)
ZeroHalf was tried 10 times and created 127 cuts of which 0 were active after adding rounds of cuts (0.072045 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               1767
Total iterations:               114556
Time (CPU seconds):             50.1956
Time (Wallclock seconds):       50.1577
Total time (CPU seconds):       50.2252   (Wallclock seconds):       50.1737
