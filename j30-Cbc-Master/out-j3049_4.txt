Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3049/j3049_4.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.110429 seconds
Cgl0002I 18 variables fixed
Cgl0003I 112 fixed, 0 tightened bounds, 5 strengthened rows, 5 substitutions
Cgl0003I 9 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 244 rows, 577 columns (577 integer (577 of which binary)) and 6258 elements
Coin3009W Conflict graph built in 0.112 seconds, density: 2.776%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 577 objects (577 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 62 integers unsatisfied sum - 17.7616
Cbc0038I Pass   1: suminf.    7.05949 (31) obj. 0 iterations 75
Cbc0038I Pass   2: suminf.    7.05949 (31) obj. 0 iterations 6
Cbc0038I Pass   3: suminf.   10.72749 (40) obj. 0 iterations 60
Cbc0038I Pass   4: suminf.    7.77006 (37) obj. 0 iterations 39
Cbc0038I Pass   5: suminf.    5.28383 (34) obj. 0 iterations 18
Cbc0038I Pass   6: suminf.    3.89630 (14) obj. 0 iterations 48
Cbc0038I Pass   7: suminf.    3.89630 (15) obj. 0 iterations 21
Cbc0038I Pass   8: suminf.    5.37191 (18) obj. 0 iterations 49
Cbc0038I Pass   9: suminf.    4.04444 (15) obj. 0 iterations 59
Cbc0038I Pass  10: suminf.    4.04444 (16) obj. 0 iterations 16
Cbc0038I Pass  11: suminf.    4.72037 (15) obj. 0 iterations 54
Cbc0038I Pass  12: suminf.    3.75000 (12) obj. 0 iterations 24
Cbc0038I Pass  13: suminf.    3.75000 (12) obj. 0 iterations 13
Cbc0038I Pass  14: suminf.    4.86667 (15) obj. 0 iterations 37
Cbc0038I Pass  15: suminf.    3.93333 (13) obj. 0 iterations 26
Cbc0038I Pass  16: suminf.    3.93333 (13) obj. 0 iterations 16
Cbc0038I Pass  17: suminf.    4.93333 (14) obj. 0 iterations 38
Cbc0038I Pass  18: suminf.    4.86667 (15) obj. 0 iterations 23
Cbc0038I Pass  19: suminf.    4.86667 (15) obj. 0 iterations 3
Cbc0038I Pass  20: suminf.    3.93333 (13) obj. 0 iterations 12
Cbc0038I Pass  21: suminf.    3.93333 (13) obj. 0 iterations 15
Cbc0038I Pass  22: suminf.    4.93333 (14) obj. 0 iterations 37
Cbc0038I Pass  23: suminf.    4.00000 (12) obj. 0 iterations 20
Cbc0038I Pass  24: suminf.    4.00000 (12) obj. 0 iterations 15
Cbc0038I Pass  25: suminf.    4.86667 (15) obj. 0 iterations 37
Cbc0038I Pass  26: suminf.    4.86667 (15) obj. 0 iterations 10
Cbc0038I Pass  27: suminf.    3.93333 (13) obj. 0 iterations 14
Cbc0038I Pass  28: suminf.    3.93333 (13) obj. 0 iterations 22
Cbc0038I Pass  29: suminf.    4.93333 (14) obj. 0 iterations 33
Cbc0038I Pass  30: suminf.    4.00000 (12) obj. 0 iterations 18
Cbc0038I Pass  31: suminf.    4.00000 (13) obj. 0 iterations 21
Cbc0038I Pass  32: suminf.    4.14815 (13) obj. 0 iterations 33
Cbc0038I Pass  33: suminf.   12.54584 (39) obj. 0 iterations 94
Cbc0038I Pass  34: suminf.   10.21723 (32) obj. 0 iterations 84
Cbc0038I Pass  35: suminf.    9.94233 (33) obj. 0 iterations 24
Cbc0038I Pass  36: suminf.    8.90659 (29) obj. 0 iterations 88
Cbc0038I Pass  37: suminf.    8.11104 (28) obj. 0 iterations 35
Cbc0038I Pass  38: suminf.    7.99260 (29) obj. 0 iterations 8
Cbc0038I Pass  39: suminf.    7.95379 (29) obj. 0 iterations 46
Cbc0038I Pass  40: suminf.    7.62236 (28) obj. 0 iterations 31
Cbc0038I Pass  41: suminf.    7.57303 (29) obj. 0 iterations 3
Cbc0038I Pass  42: suminf.    9.80443 (26) obj. 0 iterations 103
Cbc0038I Pass  43: suminf.    8.71819 (27) obj. 0 iterations 52
Cbc0038I Pass  44: suminf.    7.96210 (26) obj. 0 iterations 18
Cbc0038I Pass  45: suminf.    7.53819 (26) obj. 0 iterations 17
Cbc0038I Pass  46: suminf.    9.70154 (27) obj. 0 iterations 65
Cbc0038I Pass  47: suminf.    8.71860 (27) obj. 0 iterations 42
Cbc0038I Pass  48: suminf.    6.77132 (26) obj. 0 iterations 33
Cbc0038I Pass  49: suminf.    5.99079 (26) obj. 0 iterations 24
Cbc0038I Pass  50: suminf.    5.93298 (26) obj. 0 iterations 11
Cbc0038I Pass  51: suminf.    5.71459 (29) obj. 0 iterations 22
Cbc0038I Pass  52: suminf.    5.49619 (29) obj. 0 iterations 34
Cbc0038I Pass  53: suminf.    7.50474 (25) obj. 0 iterations 78
Cbc0038I Pass  54: suminf.    6.98516 (27) obj. 0 iterations 34
Cbc0038I Pass  55: suminf.    5.55245 (27) obj. 0 iterations 14
Cbc0038I Pass  56: suminf.    5.49393 (27) obj. 0 iterations 14
Cbc0038I Pass  57: suminf.    8.88375 (25) obj. 0 iterations 69
Cbc0038I Pass  58: suminf.    5.31987 (24) obj. 0 iterations 59
Cbc0038I Pass  59: suminf.    5.27190 (24) obj. 0 iterations 18
Cbc0038I Pass  60: suminf.    6.23524 (26) obj. 0 iterations 24
Cbc0038I Pass  61: suminf.    5.78190 (30) obj. 0 iterations 18
Cbc0038I Pass  62: suminf.    9.25245 (27) obj. 0 iterations 81
Cbc0038I Pass  63: suminf.    5.79167 (27) obj. 0 iterations 80
Cbc0038I Pass  64: suminf.    5.74393 (27) obj. 0 iterations 40
Cbc0038I Pass  65: suminf.    7.58259 (28) obj. 0 iterations 75
Cbc0038I Pass  66: suminf.    7.25778 (26) obj. 0 iterations 33
Cbc0038I Pass  67: suminf.    7.05908 (24) obj. 0 iterations 68
Cbc0038I Pass  68: suminf.    5.98333 (24) obj. 0 iterations 37
Cbc0038I Pass  69: suminf.    5.91898 (24) obj. 0 iterations 3
Cbc0038I Pass  70: suminf.    6.40451 (27) obj. 0 iterations 18
Cbc0038I Pass  71: suminf.    6.15179 (24) obj. 0 iterations 28
Cbc0038I Pass  72: suminf.    7.91429 (26) obj. 0 iterations 61
Cbc0038I Pass  73: suminf.    7.09845 (34) obj. 0 iterations 46
Cbc0038I Pass  74: suminf.    4.94496 (35) obj. 0 iterations 32
Cbc0038I Pass  75: suminf.    4.87774 (34) obj. 0 iterations 32
Cbc0038I Pass  76: suminf.    9.28933 (27) obj. 0 iterations 63
Cbc0038I Pass  77: suminf.    4.83628 (28) obj. 0 iterations 72
Cbc0038I Pass  78: suminf.    4.76190 (27) obj. 0 iterations 37
Cbc0038I Pass  79: suminf.    9.04333 (29) obj. 0 iterations 69
Cbc0038I Pass  80: suminf.    7.70226 (32) obj. 0 iterations 36
Cbc0038I Pass  81: suminf.    6.89714 (28) obj. 0 iterations 27
Cbc0038I Pass  82: suminf.    6.65228 (34) obj. 0 iterations 77
Cbc0038I Pass  83: suminf.    6.58217 (33) obj. 0 iterations 20
Cbc0038I Pass  84: suminf.    5.98849 (27) obj. 0 iterations 63
Cbc0038I Pass  85: suminf.    4.41124 (26) obj. 0 iterations 54
Cbc0038I Pass  86: suminf.    8.83572 (34) obj. 0 iterations 89
Cbc0038I Pass  87: suminf.    8.04901 (33) obj. 0 iterations 39
Cbc0038I Pass  88: suminf.    7.69524 (26) obj. 0 iterations 30
Cbc0038I Pass  89: suminf.    7.66762 (28) obj. 0 iterations 15
Cbc0038I Pass  90: suminf.    8.04206 (28) obj. 0 iterations 92
Cbc0038I Pass  91: suminf.    5.88728 (22) obj. 0 iterations 58
Cbc0038I Pass  92: suminf.    5.82315 (25) obj. 0 iterations 8
Cbc0038I Pass  93: suminf.    7.40833 (26) obj. 0 iterations 37
Cbc0038I Pass  94: suminf.    6.66667 (25) obj. 0 iterations 26
Cbc0038I Pass  95: suminf.    6.35419 (27) obj. 0 iterations 46
Cbc0038I Pass  96: suminf.    5.84148 (25) obj. 0 iterations 26
Cbc0038I Pass  97: suminf.    5.82315 (25) obj. 0 iterations 23
Cbc0038I Pass  98: suminf.    7.68808 (27) obj. 0 iterations 45
Cbc0038I Pass  99: suminf.    6.61556 (29) obj. 0 iterations 77
Cbc0038I Pass 100: suminf.   14.78003 (57) obj. 0 iterations 139
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 382 integers at bound fixed and 0 continuous
Cbc0038I Full problem 244 rows 577 columns, reduced to 162 rows 160 columns
Cbc0038I Mini branch and bound did not improve solution (3.01 seconds)
Cbc0038I Full problem 245 rows 577 columns, reduced to 244 rows 577 columns - too large
Cbc0038I After 3.06 seconds - Feasibility pump exiting - took 1.12 seconds
Cbc0031I 51 added rows had average density of 59.019608
Cbc0013I At root node, 51 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 145 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.596 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 189 row cuts average 489.9 elements, 0 column cuts (0 active)  in 0.363 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 45.5 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 296.1 elements, 0 column cuts (0 active)  in 0.357 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 84 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (6.05 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 0 (6.96 seconds)
Cbc0010I After 39 nodes, 6 on tree, 1e+50 best solution, best possible 0 (7.72 seconds)
Cbc0010I After 87 nodes, 9 on tree, 1e+50 best solution, best possible 0 (8.42 seconds)
Cbc0016I Integer solution of 0 found by strong branching after 9251 iterations and 146 nodes (9.09 seconds)
Cbc0001I Search completed - best objective 0, took 9251 iterations and 146 nodes (9.09 seconds)
Cbc0032I Strong branching done 1680 times (22463 iterations), fathomed 11 nodes and fixed 91 variables
Cbc0035I Maximum depth 18, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 145 cuts of which 0 were active after adding rounds of cuts (0.595983 seconds)
Gomory was tried 10 times and created 189 cuts of which 0 were active after adding rounds of cuts (0.363064 seconds)
Knapsack was tried 10 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.09248 seconds)
Clique was tried 10 times and created 50 cuts of which 0 were active after adding rounds of cuts (0.022871 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.068189 seconds)
MixedIntegerRounding2 was tried 10 times and created 90 cuts of which 0 were active after adding rounds of cuts (0.058277 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002435 seconds)
TwoMirCuts was tried 10 times and created 143 cuts of which 0 were active after adding rounds of cuts (0.35747 seconds)
ZeroHalf was tried 10 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.071089 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               146
Total iterations:               9251
Time (CPU seconds):             9.09484
Time (Wallclock seconds):       9.12399
Total time (CPU seconds):       9.1195   (Wallclock seconds):       9.1389
