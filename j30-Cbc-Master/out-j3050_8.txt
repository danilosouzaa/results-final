Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3050/j3050_8.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is -3.55271e-15 - 0.048314 seconds
Cgl0002I 30 variables fixed
Cgl0003I 24 fixed, 0 tightened bounds, 10 strengthened rows, 4 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 208 rows, 306 columns (306 integer (301 of which binary)) and 3234 elements
Coin3009W Conflict graph built in 0.005 seconds, density: 1.796%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 306 objects (306 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 25 integers unsatisfied sum - 7.65486
Cbc0038I Pass   1: suminf.    4.33717 (20) obj. 0 iterations 53
Cbc0038I Pass   2: suminf.    4.30988 (20) obj. 0 iterations 18
Cbc0038I Pass   3: suminf.    5.10000 (16) obj. 0 iterations 45
Cbc0038I Pass   4: suminf.    3.62632 (16) obj. 0 iterations 29
Cbc0038I Pass   5: suminf.    5.10000 (14) obj. 0 iterations 51
Cbc0038I Pass   6: suminf.    3.62632 (16) obj. 0 iterations 30
Cbc0038I Pass   7: suminf.    9.47701 (27) obj. 0.439655 iterations 78
Cbc0038I Pass   8: suminf.    5.03333 (17) obj. 0.666667 iterations 44
Cbc0038I Pass   9: suminf.    2.73333 (9) obj. 1 iterations 15
Cbc0038I Pass  10: suminf.    2.73333 (9) obj. 1 iterations 2
Cbc0038I Pass  11: suminf.    2.91667 (9) obj. 1 iterations 36
Cbc0038I Pass  12: suminf.    2.91667 (9) obj. 1 iterations 0
Cbc0038I Pass  13: suminf.    2.55556 (9) obj. 1 iterations 16
Cbc0038I Pass  14: suminf.    1.73333 (12) obj. 1 iterations 18
Cbc0038I Pass  15: suminf.    2.27778 (10) obj. 1 iterations 34
Cbc0038I Pass  16: suminf.    2.05556 (12) obj. 1 iterations 2
Cbc0038I Pass  17: suminf.    3.62121 (13) obj. 1 iterations 23
Cbc0038I Pass  18: suminf.    3.62121 (13) obj. 1 iterations 2
Cbc0038I Pass  19: suminf.    3.90000 (14) obj. 1 iterations 37
Cbc0038I Pass  20: suminf.    3.43333 (12) obj. 1 iterations 13
Cbc0038I Pass  21: suminf.    3.07576 (13) obj. 1 iterations 20
Cbc0038I Pass  22: suminf.    2.91667 (10) obj. 1 iterations 10
Cbc0038I Pass  23: suminf.    2.87381 (11) obj. 1 iterations 35
Cbc0038I Pass  24: suminf.    2.35000 (10) obj. 1 iterations 23
Cbc0038I Pass  25: suminf.    2.66667 (8) obj. 1 iterations 43
Cbc0038I Pass  26: suminf.    2.66667 (8) obj. 1 iterations 28
Cbc0038I Pass  27: suminf.    2.66667 (8) obj. 1 iterations 3
Cbc0038I Pass  28: suminf.    7.66508 (30) obj. 1 iterations 68
Cbc0038I Pass  29: suminf.    3.12000 (15) obj. 1 iterations 56
Cbc0038I Pass  30: suminf.    3.12000 (14) obj. 1 iterations 13
Cbc0038I Pass  31: suminf.    4.54709 (14) obj. 1 iterations 33
Cbc0038I Pass  32: suminf.    3.69630 (11) obj. 1 iterations 22
Cbc0038I Pass  33: suminf.    3.69630 (11) obj. 1 iterations 3
Cbc0038I Pass  34: suminf.    3.60000 (10) obj. 1 iterations 21
Cbc0038I Pass  35: suminf.    3.60000 (10) obj. 1 iterations 2
Cbc0038I Pass  36: suminf.    3.00000 (11) obj. 1 iterations 7
Cbc0038I Pass  37: suminf.    3.00000 (11) obj. 1 iterations 2
Cbc0038I Pass  38: suminf.    4.83810 (12) obj. 1 iterations 18
Cbc0038I Pass  39: suminf.    4.00000 (8) obj. 1 iterations 12
Cbc0038I Pass  40: suminf.    3.15556 (13) obj. 1 iterations 16
Cbc0038I Pass  41: suminf.    3.15556 (14) obj. 1 iterations 1
Cbc0038I Pass  42: suminf.    5.40952 (16) obj. 1 iterations 19
Cbc0038I Pass  43: suminf.    4.36296 (13) obj. 1 iterations 16
Cbc0038I Pass  44: suminf.    3.69630 (11) obj. 1 iterations 11
Cbc0038I Pass  45: suminf.    3.60000 (10) obj. 1 iterations 21
Cbc0038I Pass  46: suminf.    3.60000 (10) obj. 1 iterations 1
Cbc0038I Pass  47: suminf.    3.00000 (11) obj. 1 iterations 8
Cbc0038I Pass  48: suminf.    3.00000 (11) obj. 1 iterations 4
Cbc0038I Pass  49: suminf.    4.83810 (12) obj. 1 iterations 23
Cbc0038I Pass  50: suminf.    4.00000 (8) obj. 1 iterations 16
Cbc0038I Pass  51: suminf.    3.15556 (13) obj. 1 iterations 16
Cbc0038I Pass  52: suminf.    3.15556 (14) obj. 1 iterations 1
Cbc0038I Pass  53: suminf.    5.40952 (16) obj. 1 iterations 16
Cbc0038I Pass  54: suminf.    4.96296 (12) obj. 1 iterations 10
Cbc0038I Pass  55: suminf.    3.15556 (13) obj. 1 iterations 15
Cbc0038I Pass  56: suminf.    9.41367 (41) obj. 1 iterations 61
Cbc0038I Pass  57: suminf.    3.78485 (22) obj. 1 iterations 51
Cbc0038I Pass  58: suminf.    2.70417 (12) obj. 1 iterations 35
Cbc0038I Pass  59: suminf.    2.91320 (14) obj. 1 iterations 26
Cbc0038I Pass  60: suminf.    2.68333 (11) obj. 1 iterations 24
Cbc0038I Pass  61: suminf.    4.20000 (14) obj. 1 iterations 23
Cbc0038I Pass  62: suminf.    3.00000 (11) obj. 1 iterations 11
Cbc0038I Pass  63: suminf.    2.85000 (11) obj. 1 iterations 12
Cbc0038I Pass  64: suminf.    2.84444 (11) obj. 1 iterations 19
Cbc0038I Pass  65: suminf.    2.68333 (11) obj. 1 iterations 18
Cbc0038I Pass  66: suminf.    4.20000 (14) obj. 1 iterations 24
Cbc0038I Pass  67: suminf.    3.00000 (11) obj. 1 iterations 10
Cbc0038I Pass  68: suminf.    2.85000 (11) obj. 1 iterations 12
Cbc0038I Pass  69: suminf.    2.84444 (11) obj. 1 iterations 19
Cbc0038I Pass  70: suminf.    2.68333 (11) obj. 1 iterations 19
Cbc0038I Pass  71: suminf.    4.20000 (14) obj. 1 iterations 23
Cbc0038I Pass  72: suminf.    3.00000 (11) obj. 1 iterations 7
Cbc0038I Pass  73: suminf.    2.85000 (11) obj. 1 iterations 13
Cbc0038I Pass  74: suminf.    2.84444 (11) obj. 1 iterations 17
Cbc0038I Pass  75: suminf.    2.68333 (11) obj. 1 iterations 17
Cbc0038I Pass  76: suminf.    4.20000 (14) obj. 1 iterations 21
Cbc0038I Pass  77: suminf.    3.00000 (11) obj. 1 iterations 9
Cbc0038I Pass  78: suminf.    2.85000 (11) obj. 1 iterations 14
Cbc0038I Pass  79: suminf.    2.84444 (11) obj. 1 iterations 17
Cbc0038I Pass  80: suminf.    2.68333 (11) obj. 1 iterations 19
Cbc0038I Pass  81: suminf.    4.20000 (14) obj. 1 iterations 25
Cbc0038I Pass  82: suminf.    3.00000 (11) obj. 1 iterations 8
Cbc0038I Pass  83: suminf.    2.85000 (11) obj. 1 iterations 14
Cbc0038I Pass  84: suminf.    2.84444 (11) obj. 1 iterations 18
Cbc0038I Pass  85: suminf.    2.68333 (11) obj. 1 iterations 18
Cbc0038I Pass  86: suminf.    4.20000 (14) obj. 1 iterations 24
Cbc0038I Pass  87: suminf.    3.00000 (11) obj. 1 iterations 8
Cbc0038I Pass  88: suminf.    2.85000 (11) obj. 1 iterations 14
Cbc0038I Pass  89: suminf.    2.84444 (11) obj. 1 iterations 20
Cbc0038I Pass  90: suminf.    2.68333 (11) obj. 1 iterations 19
Cbc0038I Pass  91: suminf.    4.20000 (14) obj. 1 iterations 22
Cbc0038I Pass  92: suminf.    3.00000 (11) obj. 1 iterations 12
Cbc0038I Pass  93: suminf.    2.85000 (11) obj. 1 iterations 14
Cbc0038I Pass  94: suminf.    2.84444 (11) obj. 1 iterations 17
Cbc0038I Pass  95: suminf.    2.68333 (11) obj. 1 iterations 17
Cbc0038I Pass  96: suminf.    4.20000 (14) obj. 1 iterations 26
Cbc0038I Pass  97: suminf.    3.00000 (11) obj. 1 iterations 9
Cbc0038I Pass  98: suminf.    2.85000 (11) obj. 1 iterations 15
Cbc0038I Pass  99: suminf.    2.84444 (11) obj. 1 iterations 19
Cbc0038I Pass 100: suminf.    7.39487 (23) obj. 1 iterations 75
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 208 rows 306 columns, reduced to 142 rows 105 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.03 seconds)
Cbc0038I Full problem 209 rows 306 columns, reduced to 205 rows 306 columns - too large
Cbc0038I After 1.05 seconds - Feasibility pump exiting - took 0.71 seconds
Cbc0012I Integer solution of 1 found by DiveCoefficient after 9218 iterations and 0 nodes (5.90 seconds)
Cbc0031I 34 added rows had average density of 18.588235
Cbc0013I At root node, 34 cuts changed objective from 0 to 1 in 71 passes
Cbc0014I Cut generator 0 (Probing) - 1184 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.868 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1273 row cuts average 288.8 elements, 0 column cuts (0 active)  in 0.941 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 67 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.268 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 50 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 8 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 156 row cuts average 33.9 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 316 row cuts average 100.5 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 321 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1, took 9218 iterations and 0 nodes (5.90 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 71 times and created 1184 cuts of which 0 were active after adding rounds of cuts (0.868445 seconds)
Gomory was tried 71 times and created 1273 cuts of which 0 were active after adding rounds of cuts (0.941374 seconds)
Knapsack was tried 71 times and created 67 cuts of which 0 were active after adding rounds of cuts (0.268206 seconds)
Clique was tried 71 times and created 50 cuts of which 0 were active after adding rounds of cuts (0.032344 seconds)
OddWheel was tried 71 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.149013 seconds)
MixedIntegerRounding2 was tried 71 times and created 156 cuts of which 0 were active after adding rounds of cuts (0.0805 seconds)
FlowCover was tried 71 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.02795 seconds)
TwoMirCuts was tried 71 times and created 316 cuts of which 0 were active after adding rounds of cuts (0.204454 seconds)
ZeroHalf was tried 71 times and created 321 cuts of which 0 were active after adding rounds of cuts (0.220477 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               0
Total iterations:               9218
Time (CPU seconds):             6.02376
Time (Wallclock seconds):       5.94954
Total time (CPU seconds):       6.04426   (Wallclock seconds):       5.95798
