Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3048/j3048_4.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 2.18927 - 0.142685 seconds
Cgl0002I 9 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 282 rows, 615 columns (615 integer (614 of which binary)) and 9290 elements
Coin3009W Conflict graph built in 0.010 seconds, density: 1.046%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 615 objects (615 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 81 integers unsatisfied sum - 22.0891
Cbc0038I Pass   1: suminf.   11.73741 (47) obj. 4 iterations 79
Cbc0038I Pass   2: suminf.   11.17014 (45) obj. 4 iterations 16
Cbc0038I Pass   3: suminf.   10.71465 (49) obj. 4 iterations 14
Cbc0038I Pass   4: suminf.   10.57920 (37) obj. 4 iterations 8
Cbc0038I Pass   5: suminf.    9.99074 (33) obj. 4 iterations 38
Cbc0038I Pass   6: suminf.    4.67467 (29) obj. 4 iterations 64
Cbc0038I Pass   7: suminf.    4.52880 (21) obj. 4 iterations 26
Cbc0038I Pass   8: suminf.    7.54286 (27) obj. 4 iterations 77
Cbc0038I Pass   9: suminf.    6.18284 (33) obj. 4 iterations 41
Cbc0038I Pass  10: suminf.    5.88307 (31) obj. 4 iterations 17
Cbc0038I Pass  11: suminf.    5.71079 (22) obj. 4 iterations 19
Cbc0038I Pass  12: suminf.    5.02531 (22) obj. 4 iterations 22
Cbc0038I Pass  13: suminf.    8.39837 (28) obj. 4 iterations 56
Cbc0038I Pass  14: suminf.    5.55078 (29) obj. 4 iterations 40
Cbc0038I Pass  15: suminf.    4.47966 (17) obj. 4 iterations 36
Cbc0038I Pass  16: suminf.    6.94982 (21) obj. 4 iterations 58
Cbc0038I Pass  17: suminf.    6.06307 (24) obj. 4 iterations 35
Cbc0038I Pass  18: suminf.    5.79641 (24) obj. 4 iterations 3
Cbc0038I Pass  19: suminf.    8.42655 (30) obj. 4 iterations 69
Cbc0038I Pass  20: suminf.    7.43939 (26) obj. 4 iterations 43
Cbc0038I Pass  21: suminf.    7.17692 (27) obj. 4 iterations 6
Cbc0038I Pass  22: suminf.    5.50243 (21) obj. 4 iterations 56
Cbc0038I Pass  23: suminf.    4.99683 (21) obj. 4 iterations 22
Cbc0038I Pass  24: suminf.    4.47877 (28) obj. 4 iterations 31
Cbc0038I Pass  25: suminf.    6.22801 (28) obj. 4 iterations 70
Cbc0038I Pass  26: suminf.    4.59730 (24) obj. 4 iterations 34
Cbc0038I Pass  27: suminf.    4.32192 (23) obj. 4 iterations 29
Cbc0038I Pass  28: suminf.    6.74412 (21) obj. 4 iterations 87
Cbc0038I Pass  29: suminf.    5.35287 (19) obj. 4 iterations 44
Cbc0038I Pass  30: suminf.    3.36465 (16) obj. 4 iterations 53
Cbc0038I Pass  31: suminf.    3.34040 (13) obj. 4 iterations 21
Cbc0038I Pass  32: suminf.    5.50635 (19) obj. 4 iterations 49
Cbc0038I Pass  33: suminf.    3.20707 (13) obj. 4 iterations 41
Cbc0038I Pass  34: suminf.    3.20707 (13) obj. 4 iterations 3
Cbc0038I Pass  35: suminf.    5.46667 (15) obj. 4 iterations 34
Cbc0038I Pass  36: suminf.    4.69206 (14) obj. 4 iterations 31
Cbc0038I Pass  37: suminf.    3.87037 (15) obj. 4 iterations 52
Cbc0038I Pass  38: suminf.    2.94040 (13) obj. 4 iterations 44
Cbc0038I Pass  39: suminf.    2.94040 (13) obj. 4 iterations 1
Cbc0038I Pass  40: suminf.    5.46667 (15) obj. 4 iterations 56
Cbc0038I Pass  41: suminf.    4.69206 (14) obj. 4 iterations 34
Cbc0038I Pass  42: suminf.    9.14881 (40) obj. 4 iterations 125
Cbc0038I Pass  43: suminf.    4.36968 (19) obj. 4 iterations 115
Cbc0038I Pass  44: suminf.    3.52877 (23) obj. 4 iterations 72
Cbc0038I Pass  45: suminf.    6.49524 (23) obj. 4 iterations 98
Cbc0038I Pass  46: suminf.    3.30026 (18) obj. 4 iterations 49
Cbc0038I Pass  47: suminf.    2.20317 (13) obj. 4 iterations 41
Cbc0038I Pass  48: suminf.    2.20317 (13) obj. 4 iterations 5
Cbc0038I Pass  49: suminf.    2.66893 (12) obj. 4 iterations 40
Cbc0038I Pass  50: suminf.    2.51398 (11) obj. 4 iterations 27
Cbc0038I Pass  51: suminf.    2.41111 (9) obj. 4 iterations 43
Cbc0038I Pass  52: suminf.    1.72619 (10) obj. 4 iterations 42
Cbc0038I Pass  53: suminf.    3.45849 (11) obj. 4 iterations 71
Cbc0038I Pass  54: suminf.    1.91087 (10) obj. 4 iterations 53
Cbc0038I Pass  55: suminf.    2.56508 (11) obj. 4 iterations 88
Cbc0038I Pass  56: suminf.    2.22090 (12) obj. 4 iterations 28
Cbc0038I Pass  57: suminf.    2.71841 (13) obj. 4 iterations 61
Cbc0038I Pass  58: suminf.    1.80159 (9) obj. 4 iterations 45
Cbc0038I Pass  59: suminf.    3.07653 (10) obj. 4 iterations 93
Cbc0038I Pass  60: suminf.   10.79722 (33) obj. 4 iterations 101
Cbc0038I Pass  61: suminf.    6.83104 (29) obj. 4 iterations 75
Cbc0038I Pass  62: suminf.    5.34992 (26) obj. 4 iterations 12
Cbc0038I Pass  63: suminf.    4.77959 (22) obj. 4 iterations 18
Cbc0038I Pass  64: suminf.    4.85661 (21) obj. 4 iterations 63
Cbc0038I Pass  65: suminf.    3.40910 (24) obj. 4 iterations 81
Cbc0038I Pass  66: suminf.    3.08889 (22) obj. 4 iterations 74
Cbc0038I Pass  67: suminf.    4.60000 (14) obj. 4 iterations 105
Cbc0038I Pass  68: suminf.    3.67273 (15) obj. 4 iterations 29
Cbc0038I Pass  69: suminf.    5.88600 (19) obj. 4 iterations 75
Cbc0038I Pass  70: suminf.    2.19643 (10) obj. 4 iterations 85
Cbc0038I Pass  71: suminf.    1.95833 (9) obj. 4 iterations 27
Cbc0038I Pass  72: suminf.    3.33333 (10) obj. 4 iterations 81
Cbc0038I Pass  73: suminf.    2.50000 (9) obj. 4 iterations 81
Cbc0038I Pass  74: suminf.    1.97024 (11) obj. 4 iterations 39
Cbc0038I Pass  75: suminf.    2.58333 (11) obj. 4 iterations 93
Cbc0038I Pass  76: suminf.    1.50000 (9) obj. 4 iterations 49
Cbc0038I Pass  77: suminf.    1.30952 (10) obj. 4 iterations 48
Cbc0038I Pass  78: suminf.    1.42857 (7) obj. 4 iterations 82
Cbc0038I Pass  79: suminf.    0.89286 (6) obj. 4 iterations 27
Cbc0038I Pass  80: suminf.    1.67857 (7) obj. 4 iterations 44
Cbc0038I Pass  81: suminf.    1.05769 (8) obj. 4 iterations 60
Cbc0038I Pass  82: suminf.    1.21429 (4) obj. 4 iterations 38
Cbc0038I Pass  83: suminf.    0.96429 (6) obj. 4 iterations 29
Cbc0038I Pass  84: suminf.    1.30769 (6) obj. 4 iterations 56
Cbc0038I Pass  85: suminf.    0.80769 (4) obj. 4 iterations 28
Cbc0038I Pass  86: suminf.    1.85714 (5) obj. 4 iterations 40
Cbc0038I Pass  87: suminf.    1.21429 (4) obj. 4 iterations 18
Cbc0038I Pass  88: suminf.    0.96429 (6) obj. 4 iterations 5
Cbc0038I Pass  89: suminf.    1.30769 (6) obj. 4 iterations 44
Cbc0038I Pass  90: suminf.    0.80769 (4) obj. 4 iterations 23
Cbc0038I Pass  91: suminf.    1.85714 (5) obj. 4 iterations 46
Cbc0038I Pass  92: suminf.    1.18667 (12) obj. 4 iterations 32
Cbc0038I Pass  93: suminf.    3.03333 (9) obj. 4 iterations 68
Cbc0038I Pass  94: suminf.    2.53333 (6) obj. 4 iterations 29
Cbc0038I Pass  95: suminf.    0.96429 (6) obj. 4 iterations 72
Cbc0038I Pass  96: suminf.    1.30769 (6) obj. 4 iterations 53
Cbc0038I Pass  97: suminf.    0.80769 (4) obj. 4 iterations 15
Cbc0038I Pass  98: suminf.    1.85714 (5) obj. 4 iterations 47
Cbc0038I Pass  99: suminf.    1.21429 (4) obj. 4 iterations 13
Cbc0038I Pass 100: suminf.    9.62195 (30) obj. 4 iterations 144
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 375 integers at bound fixed and 0 continuous
Cbc0038I Full problem 282 rows 615 columns, reduced to 187 rows 212 columns
Cbc0038I Mini branch and bound did not improve solution (2.22 seconds)
Cbc0038I After 2.22 seconds - Feasibility pump exiting - took 1.54 seconds
Cbc0031I 64 added rows had average density of 19.9375
Cbc0013I At root node, 64 cuts changed objective from 2.1892744 to 3 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 312 row cuts average 8.2 elements, 3 column cuts (53 active)  in 0.252 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 236 row cuts average 490.8 elements, 0 column cuts (0 active)  in 0.415 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 117 row cuts average 41.6 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 273 row cuts average 103.6 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 145 row cuts average 55.1 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 3 (4.03 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 3 (4.77 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 3 (5.65 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 3 (6.44 seconds)
Cbc0010I After 15 nodes, 10 on tree, 1e+50 best solution, best possible 3 (7.19 seconds)
Cbc0010I After 32 nodes, 1 on tree, 1e+50 best solution, best possible 4 (8.19 seconds)
Cbc0010I After 36 nodes, 5 on tree, 1e+50 best solution, best possible 4 (8.95 seconds)
Cbc0010I After 55 nodes, 15 on tree, 1e+50 best solution, best possible 4 (9.67 seconds)
Cbc0016I Integer solution of 4 found by strong branching after 9525 iterations and 75 nodes (10.37 seconds)
Cbc0001I Search completed - best objective 4, took 9525 iterations and 75 nodes (10.37 seconds)
Cbc0032I Strong branching done 1260 times (27092 iterations), fathomed 3 nodes and fixed 13 variables
Cbc0035I Maximum depth 14, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.18927 to 3
Probing was tried 82 times and created 870 cuts of which 50 were active after adding rounds of cuts (0.389911 seconds)
Gomory was tried 82 times and created 242 cuts of which 0 were active after adding rounds of cuts (0.522423 seconds)
Knapsack was tried 82 times and created 99 cuts of which 0 were active after adding rounds of cuts (0.402036 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009165 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.039684 seconds)
MixedIntegerRounding2 was tried 82 times and created 405 cuts of which 0 were active after adding rounds of cuts (0.178063 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002369 seconds)
TwoMirCuts was tried 82 times and created 406 cuts of which 0 were active after adding rounds of cuts (0.19783 seconds)
ZeroHalf was tried 82 times and created 546 cuts of which 0 were active after adding rounds of cuts (0.324082 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               75
Total iterations:               9525
Time (CPU seconds):             10.4425
Time (Wallclock seconds):       10.4058
Total time (CPU seconds):       10.5119   (Wallclock seconds):       10.4471
