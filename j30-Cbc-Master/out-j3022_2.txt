Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3022/j3022_2.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.140315 seconds
Cgl0002I 17 variables fixed
Cgl0003I 6 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 241 rows, 565 columns (565 integer (562 of which binary)) and 9379 elements
Coin3009W Conflict graph built in 0.043 seconds, density: 1.897%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 565 objects (565 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 52 integers unsatisfied sum - 12.8973
Cbc0038I Pass   1: suminf.    8.23517 (44) obj. 0 iterations 89
Cbc0038I Pass   2: suminf.    8.01068 (39) obj. -2.44249e-15 iterations 17
Cbc0038I Pass   3: suminf.    7.11379 (35) obj. 1.9984e-15 iterations 155
Cbc0038I Pass   4: suminf.    6.77651 (44) obj. 0.10441 iterations 47
Cbc0038I Pass   5: suminf.    5.82682 (32) obj. 0.181818 iterations 89
Cbc0038I Pass   6: suminf.    5.26401 (31) obj. 0.17422 iterations 42
Cbc0038I Pass   7: suminf.    5.17249 (35) obj. 0.0830168 iterations 27
Cbc0038I Pass   8: suminf.    6.98227 (27) obj. 0.0839416 iterations 84
Cbc0038I Pass   9: suminf.    6.16918 (27) obj. 0.107885 iterations 50
Cbc0038I Pass  10: suminf.    5.69055 (31) obj. 0.0529196 iterations 55
Cbc0038I Pass  11: suminf.    6.81433 (31) obj. 1 iterations 72
Cbc0038I Pass  12: suminf.    5.91389 (37) obj. 1 iterations 52
Cbc0038I Pass  13: suminf.    5.48585 (28) obj. 1 iterations 70
Cbc0038I Pass  14: suminf.    5.20574 (32) obj. 1 iterations 47
Cbc0038I Pass  15: suminf.    5.96308 (30) obj. 1 iterations 57
Cbc0038I Pass  16: suminf.   12.25262 (50) obj. 1 iterations 150
Cbc0038I Pass  17: suminf.    8.41855 (36) obj. 1 iterations 87
Cbc0038I Pass  18: suminf.    7.33723 (36) obj. 1 iterations 40
Cbc0038I Pass  19: suminf.    7.00681 (36) obj. 1 iterations 15
Cbc0038I Pass  20: suminf.    6.37589 (30) obj. 1 iterations 129
Cbc0038I Pass  21: suminf.    5.49159 (33) obj. 1 iterations 46
Cbc0038I Pass  22: suminf.    4.80428 (28) obj. 1 iterations 47
Cbc0038I Pass  23: suminf.    5.74858 (26) obj. 1 iterations 103
Cbc0038I Pass  24: suminf.    4.88522 (27) obj. 1 iterations 56
Cbc0038I Pass  25: suminf.    4.38889 (28) obj. 1 iterations 61
Cbc0038I Pass  26: suminf.    5.33072 (30) obj. 1 iterations 93
Cbc0038I Pass  27: suminf.    4.16667 (26) obj. 1 iterations 102
Cbc0038I Pass  28: suminf.    4.16667 (27) obj. 1 iterations 24
Cbc0038I Pass  29: suminf.    5.43905 (26) obj. 1 iterations 92
Cbc0038I Pass  30: suminf.    4.79222 (27) obj. 1 iterations 68
Cbc0038I Pass  31: suminf.    4.46031 (27) obj. 1 iterations 13
Cbc0038I Pass  32: suminf.    4.56905 (21) obj. 1 iterations 61
Cbc0038I Pass  33: suminf.    4.45992 (24) obj. 1 iterations 59
Cbc0038I Pass  34: suminf.    4.97382 (27) obj. 1 iterations 79
Cbc0038I Pass  35: suminf.    4.41154 (26) obj. 1 iterations 48
Cbc0038I Pass  36: suminf.    6.57540 (29) obj. 1 iterations 95
Cbc0038I Pass  37: suminf.    5.31639 (29) obj. 1 iterations 80
Cbc0038I Pass  38: suminf.    5.08333 (28) obj. 1 iterations 22
Cbc0038I Pass  39: suminf.    6.61378 (30) obj. 1 iterations 107
Cbc0038I Pass  40: suminf.    5.32773 (25) obj. 1 iterations 68
Cbc0038I Pass  41: suminf.    5.05706 (28) obj. 1 iterations 24
Cbc0038I Pass  42: suminf.    4.79385 (21) obj. 1 iterations 82
Cbc0038I Pass  43: suminf.    3.54286 (22) obj. 1 iterations 98
Cbc0038I Pass  44: suminf.    9.02113 (37) obj. 1 iterations 147
Cbc0038I Pass  45: suminf.    5.99007 (29) obj. 1 iterations 104
Cbc0038I Pass  46: suminf.    5.86544 (30) obj. 1 iterations 34
Cbc0038I Pass  47: suminf.    5.41449 (27) obj. 1 iterations 94
Cbc0038I Pass  48: suminf.    3.91927 (21) obj. 1 iterations 68
Cbc0038I Pass  49: suminf.    3.57995 (18) obj. 1 iterations 39
Cbc0038I Pass  50: suminf.    5.97991 (25) obj. 1 iterations 76
Cbc0038I Pass  51: suminf.    4.85714 (23) obj. 1 iterations 45
Cbc0038I Pass  52: suminf.    5.77815 (24) obj. 1 iterations 97
Cbc0038I Pass  53: suminf.    3.72222 (19) obj. 1 iterations 81
Cbc0038I Pass  54: suminf.    4.42151 (20) obj. 1 iterations 80
Cbc0038I Pass  55: suminf.    3.21554 (19) obj. 1 iterations 104
Cbc0038I Pass  56: suminf.    4.80809 (25) obj. 1 iterations 67
Cbc0038I Pass  57: suminf.    4.50045 (23) obj. 1 iterations 66
Cbc0038I Pass  58: suminf.    4.54973 (18) obj. 1 iterations 75
Cbc0038I Pass  59: suminf.    3.95238 (20) obj. 1 iterations 97
Cbc0038I Pass  60: suminf.    3.95238 (20) obj. 1 iterations 22
Cbc0038I Pass  61: suminf.   14.82962 (58) obj. 1 iterations 168
Cbc0038I Pass  62: suminf.    7.94013 (46) obj. 1 iterations 89
Cbc0038I Pass  63: suminf.    4.58638 (25) obj. 1 iterations 67
Cbc0038I Pass  64: suminf.    3.92025 (21) obj. 1 iterations 58
Cbc0038I Pass  65: suminf.    4.24227 (23) obj. 1 iterations 97
Cbc0038I Pass  66: suminf.    2.95844 (21) obj. 1 iterations 75
Cbc0038I Pass  67: suminf.    4.50556 (15) obj. 1 iterations 84
Cbc0038I Pass  68: suminf.    3.88229 (20) obj. 1 iterations 51
Cbc0038I Pass  69: suminf.    2.75135 (19) obj. 1 iterations 45
Cbc0038I Pass  70: suminf.    2.58894 (19) obj. 1 iterations 14
Cbc0038I Pass  71: suminf.    6.28252 (25) obj. 1 iterations 116
Cbc0038I Pass  72: suminf.    5.22913 (27) obj. 1 iterations 72
Cbc0038I Pass  73: suminf.    4.37199 (25) obj. 1 iterations 11
Cbc0038I Pass  74: suminf.    5.94619 (21) obj. 1 iterations 97
Cbc0038I Pass  75: suminf.    4.52722 (21) obj. 1 iterations 89
Cbc0038I Pass  76: suminf.    4.28571 (20) obj. 1 iterations 21
Cbc0038I Pass  77: suminf.    5.75839 (22) obj. 1 iterations 76
Cbc0038I Pass  78: suminf.    4.46468 (23) obj. 1 iterations 57
Cbc0038I Pass  79: suminf.    4.04935 (21) obj. 1 iterations 20
Cbc0038I Pass  80: suminf.    6.79454 (20) obj. 1 iterations 92
Cbc0038I Pass  81: suminf.    4.97272 (21) obj. 1 iterations 69
Cbc0038I Pass  82: suminf.    4.79726 (17) obj. 1 iterations 33
Cbc0038I Pass  83: suminf.    4.66270 (15) obj. 1 iterations 29
Cbc0038I Pass  84: suminf.    5.53920 (21) obj. 1 iterations 81
Cbc0038I Pass  85: suminf.    5.25794 (20) obj. 1 iterations 43
Cbc0038I Pass  86: suminf.    6.11772 (19) obj. 1 iterations 100
Cbc0038I Pass  87: suminf.    4.42623 (18) obj. 1 iterations 75
Cbc0038I Pass  88: suminf.    3.98337 (16) obj. 1 iterations 20
Cbc0038I Pass  89: suminf.    4.01741 (17) obj. 1 iterations 110
Cbc0038I Pass  90: suminf.    2.52240 (15) obj. 1 iterations 79
Cbc0038I Pass  91: suminf.    2.49231 (15) obj. 1 iterations 16
Cbc0038I Pass  92: suminf.    4.18564 (18) obj. 1 iterations 96
Cbc0038I Pass  93: suminf.    3.59524 (16) obj. 1 iterations 55
Cbc0038I Pass  94: suminf.    3.59524 (16) obj. 1 iterations 18
Cbc0038I Pass  95: suminf.    4.06780 (16) obj. 1 iterations 80
Cbc0038I Pass  96: suminf.    2.55556 (12) obj. 1 iterations 36
Cbc0038I Pass  97: suminf.    3.46667 (12) obj. 1 iterations 59
Cbc0038I Pass  98: suminf.    2.90000 (11) obj. 1 iterations 56
Cbc0038I Pass  99: suminf.    2.73810 (11) obj. 1 iterations 24
Cbc0038I Pass 100: suminf.    7.99016 (40) obj. 1 iterations 121
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 301 integers at bound fixed and 0 continuous
Cbc0038I Full problem 241 rows 565 columns, reduced to 177 rows 233 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.56 seconds)
Cbc0038I Full problem 242 rows 565 columns, reduced to 241 rows 565 columns - too large
Cbc0038I After 2.67 seconds - Feasibility pump exiting - took 1.16 seconds
Cbc0031I 47 added rows had average density of 41.87234
Cbc0013I At root node, 47 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 89 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.553 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 209 row cuts average 536.6 elements, 0 column cuts (0 active)  in 0.569 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 43 row cuts average 50.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 59.1 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 94 row cuts average 84.2 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (5.28 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 0 (6.03 seconds)
Cbc0010I After 9 nodes, 5 on tree, 1e+50 best solution, best possible 0 (6.73 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 0 (7.62 seconds)
Cbc0010I After 33 nodes, 9 on tree, 1e+50 best solution, best possible 0 (8.33 seconds)
Cbc0010I After 51 nodes, 10 on tree, 1e+50 best solution, best possible 0 (9.03 seconds)
Cbc0010I After 67 nodes, 13 on tree, 1e+50 best solution, best possible 0 (9.76 seconds)
Cbc0010I After 86 nodes, 20 on tree, 1e+50 best solution, best possible 0 (10.47 seconds)
Cbc0010I After 114 nodes, 24 on tree, 1e+50 best solution, best possible 0 (11.18 seconds)
Cbc0010I After 147 nodes, 21 on tree, 1e+50 best solution, best possible 0 (11.91 seconds)
Cbc0010I After 169 nodes, 21 on tree, 1e+50 best solution, best possible 0 (12.62 seconds)
Cbc0010I After 201 nodes, 20 on tree, 1e+50 best solution, best possible 0 (13.33 seconds)
Cbc0010I After 229 nodes, 20 on tree, 1e+50 best solution, best possible 0 (14.04 seconds)
Cbc0010I After 251 nodes, 18 on tree, 1e+50 best solution, best possible 0 (14.76 seconds)
Cbc0010I After 276 nodes, 21 on tree, 1e+50 best solution, best possible 0 (15.47 seconds)
Cbc0010I After 306 nodes, 23 on tree, 1e+50 best solution, best possible 0 (16.17 seconds)
Cbc0010I After 329 nodes, 20 on tree, 1e+50 best solution, best possible 0 (16.88 seconds)
Cbc0010I After 351 nodes, 22 on tree, 1e+50 best solution, best possible 0 (17.61 seconds)
Cbc0010I After 377 nodes, 16 on tree, 1e+50 best solution, best possible 0 (18.35 seconds)
Cbc0010I After 399 nodes, 23 on tree, 1e+50 best solution, best possible 0 (19.06 seconds)
Cbc0010I After 432 nodes, 21 on tree, 1e+50 best solution, best possible 0 (19.82 seconds)
Cbc0010I After 462 nodes, 25 on tree, 1e+50 best solution, best possible 0 (20.53 seconds)
Cbc0010I After 504 nodes, 28 on tree, 1e+50 best solution, best possible 0 (21.23 seconds)
Cbc0010I After 542 nodes, 26 on tree, 1e+50 best solution, best possible 0 (21.93 seconds)
Cbc0010I After 575 nodes, 31 on tree, 1e+50 best solution, best possible 0 (22.66 seconds)
Cbc0010I After 618 nodes, 26 on tree, 1e+50 best solution, best possible 0 (23.43 seconds)
Cbc0010I After 648 nodes, 28 on tree, 1e+50 best solution, best possible 0 (24.14 seconds)
Cbc0010I After 681 nodes, 25 on tree, 1e+50 best solution, best possible 0 (24.86 seconds)
Cbc0010I After 719 nodes, 19 on tree, 1e+50 best solution, best possible 0 (25.56 seconds)
Cbc0010I After 755 nodes, 31 on tree, 1e+50 best solution, best possible 0 (26.27 seconds)
Cbc0010I After 806 nodes, 23 on tree, 1e+50 best solution, best possible 0 (27.00 seconds)
Cbc0010I After 833 nodes, 16 on tree, 1e+50 best solution, best possible 0 (27.73 seconds)
Cbc0010I After 866 nodes, 16 on tree, 1e+50 best solution, best possible 0 (28.43 seconds)
Cbc0010I After 883 nodes, 18 on tree, 1e+50 best solution, best possible 0 (29.13 seconds)
Cbc0010I After 908 nodes, 12 on tree, 1e+50 best solution, best possible 0 (29.85 seconds)
Cbc0010I After 930 nodes, 10 on tree, 1e+50 best solution, best possible 0 (30.56 seconds)
Cbc0010I After 950 nodes, 12 on tree, 1e+50 best solution, best possible 0 (31.28 seconds)
Cbc0010I After 974 nodes, 8 on tree, 1e+50 best solution, best possible 0 (32.00 seconds)
Cbc0010I After 995 nodes, 6 on tree, 1e+50 best solution, best possible 0 (32.78 seconds)
Cbc0010I After 1005 nodes, 12 on tree, 1e+50 best solution, best possible 0 (33.56 seconds)
Cbc0010I After 1023 nodes, 17 on tree, 1e+50 best solution, best possible 0 (34.29 seconds)
Cbc0010I After 1041 nodes, 18 on tree, 1e+50 best solution, best possible 0 (35.02 seconds)
Cbc0010I After 1102 nodes, 41 on tree, 1e+50 best solution, best possible 0 (35.73 seconds)
Cbc0010I After 1184 nodes, 58 on tree, 1e+50 best solution, best possible 0 (36.43 seconds)
Cbc0010I After 1258 nodes, 42 on tree, 1e+50 best solution, best possible 0 (37.14 seconds)
Cbc0010I After 1318 nodes, 46 on tree, 1e+50 best solution, best possible 0 (37.84 seconds)
Cbc0010I After 1381 nodes, 33 on tree, 1e+50 best solution, best possible 0 (38.54 seconds)
Cbc0010I After 1442 nodes, 73 on tree, 1e+50 best solution, best possible 0 (39.25 seconds)
Cbc0010I After 1489 nodes, 61 on tree, 1e+50 best solution, best possible 0 (39.96 seconds)
Cbc0010I After 1537 nodes, 66 on tree, 1e+50 best solution, best possible 0 (40.67 seconds)
Cbc0010I After 1598 nodes, 57 on tree, 1e+50 best solution, best possible 0 (41.39 seconds)
Cbc0010I After 1640 nodes, 51 on tree, 1e+50 best solution, best possible 0 (42.12 seconds)
Cbc0010I After 1689 nodes, 62 on tree, 1e+50 best solution, best possible 0 (42.85 seconds)
Cbc0010I After 1737 nodes, 62 on tree, 1e+50 best solution, best possible 0 (43.56 seconds)
Cbc0010I After 1796 nodes, 53 on tree, 1e+50 best solution, best possible 0 (44.27 seconds)
Cbc0010I After 1841 nodes, 55 on tree, 1e+50 best solution, best possible 0 (44.98 seconds)
Cbc0010I After 1878 nodes, 41 on tree, 1e+50 best solution, best possible 0 (45.72 seconds)
Cbc0010I After 1930 nodes, 55 on tree, 1e+50 best solution, best possible 0 (46.42 seconds)
Cbc0010I After 1992 nodes, 33 on tree, 1e+50 best solution, best possible 0 (47.13 seconds)
Cbc0010I After 2022 nodes, 29 on tree, 1e+50 best solution, best possible 0 (47.88 seconds)
Cbc0010I After 2068 nodes, 31 on tree, 1e+50 best solution, best possible 0 (48.58 seconds)
Cbc0010I After 2105 nodes, 25 on tree, 1e+50 best solution, best possible 0 (49.31 seconds)
Cbc0010I After 2144 nodes, 25 on tree, 1e+50 best solution, best possible 0 (50.01 seconds)
Cbc0010I After 2177 nodes, 26 on tree, 1e+50 best solution, best possible 0 (50.75 seconds)
Cbc0010I After 2206 nodes, 29 on tree, 1e+50 best solution, best possible 0 (51.46 seconds)
Cbc0010I After 2246 nodes, 19 on tree, 1e+50 best solution, best possible 0 (52.19 seconds)
Cbc0010I After 2280 nodes, 39 on tree, 1e+50 best solution, best possible 0 (52.90 seconds)
Cbc0010I After 2331 nodes, 37 on tree, 1e+50 best solution, best possible 0 (53.60 seconds)
Cbc0010I After 2390 nodes, 46 on tree, 1e+50 best solution, best possible 0 (54.30 seconds)
Cbc0010I After 2455 nodes, 24 on tree, 1e+50 best solution, best possible 0 (55.02 seconds)
Cbc0010I After 2482 nodes, 18 on tree, 1e+50 best solution, best possible 0 (55.72 seconds)
Cbc0010I After 2504 nodes, 21 on tree, 1e+50 best solution, best possible 0 (56.42 seconds)
Cbc0010I After 2522 nodes, 21 on tree, 1e+50 best solution, best possible 0 (57.15 seconds)
Cbc0010I After 2549 nodes, 21 on tree, 1e+50 best solution, best possible 0 (57.85 seconds)
Cbc0010I After 2585 nodes, 17 on tree, 1e+50 best solution, best possible 0 (58.57 seconds)
Cbc0010I After 2611 nodes, 16 on tree, 1e+50 best solution, best possible 0 (59.29 seconds)
Cbc0010I After 2635 nodes, 16 on tree, 1e+50 best solution, best possible 0 (60.02 seconds)
Cbc0010I After 2665 nodes, 14 on tree, 1e+50 best solution, best possible 0 (60.74 seconds)
Cbc0010I After 2690 nodes, 24 on tree, 1e+50 best solution, best possible 0 (61.45 seconds)
Cbc0010I After 2716 nodes, 9 on tree, 1e+50 best solution, best possible 0 (62.19 seconds)
Cbc0010I After 2741 nodes, 21 on tree, 1e+50 best solution, best possible 0 (62.90 seconds)
Cbc0010I After 2772 nodes, 17 on tree, 1e+50 best solution, best possible 0 (63.63 seconds)
Cbc0010I After 2796 nodes, 13 on tree, 1e+50 best solution, best possible 0 (64.34 seconds)
Cbc0010I After 2821 nodes, 12 on tree, 1e+50 best solution, best possible 0 (65.04 seconds)
Cbc0010I After 2843 nodes, 14 on tree, 1e+50 best solution, best possible 0 (65.74 seconds)
Cbc0010I After 2865 nodes, 6 on tree, 1e+50 best solution, best possible 0 (66.49 seconds)
Cbc0010I After 2887 nodes, 6 on tree, 1e+50 best solution, best possible 0 (67.20 seconds)
Cbc0010I After 2915 nodes, 8 on tree, 1e+50 best solution, best possible 0 (67.91 seconds)
Cbc0010I After 2939 nodes, 2 on tree, 1e+50 best solution, best possible 1 (68.68 seconds)
Cbc0010I After 2945 nodes, 8 on tree, 1e+50 best solution, best possible 1 (69.42 seconds)
Cbc0010I After 2957 nodes, 20 on tree, 1e+50 best solution, best possible 1 (70.12 seconds)
Cbc0010I After 3002 nodes, 25 on tree, 1e+50 best solution, best possible 1 (70.84 seconds)
Cbc0010I After 3046 nodes, 33 on tree, 1e+50 best solution, best possible 1 (71.55 seconds)
Cbc0010I After 3132 nodes, 49 on tree, 1e+50 best solution, best possible 1 (72.26 seconds)
Cbc0010I After 3226 nodes, 49 on tree, 1e+50 best solution, best possible 1 (72.96 seconds)
Cbc0010I After 3330 nodes, 32 on tree, 1e+50 best solution, best possible 1 (73.67 seconds)
Cbc0010I After 3418 nodes, 27 on tree, 1e+50 best solution, best possible 1 (74.39 seconds)
Cbc0010I After 3487 nodes, 50 on tree, 1e+50 best solution, best possible 1 (75.10 seconds)
Cbc0010I After 3599 nodes, 38 on tree, 1e+50 best solution, best possible 1 (75.80 seconds)
Cbc0010I After 3739 nodes, 36 on tree, 1e+50 best solution, best possible 1 (76.50 seconds)
Cbc0010I After 3854 nodes, 31 on tree, 1e+50 best solution, best possible 1 (77.21 seconds)
Cbc0010I After 3942 nodes, 31 on tree, 1e+50 best solution, best possible 1 (77.92 seconds)
Cbc0010I After 4056 nodes, 37 on tree, 1e+50 best solution, best possible 1 (78.62 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 209244 iterations and 4122 nodes (79.01 seconds)
Cbc0001I Search completed - best objective 1, took 209244 iterations and 4122 nodes (79.01 seconds)
Cbc0032I Strong branching done 12214 times (219410 iterations), fathomed 181 nodes and fixed 680 variables
Cbc0035I Maximum depth 82, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 89 cuts of which 0 were active after adding rounds of cuts (0.553295 seconds)
Gomory was tried 10 times and created 209 cuts of which 0 were active after adding rounds of cuts (0.56853 seconds)
Knapsack was tried 10 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.070049 seconds)
Clique was tried 10 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.011658 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.035847 seconds)
MixedIntegerRounding2 was tried 10 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.04044 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008847 seconds)
TwoMirCuts was tried 10 times and created 67 cuts of which 0 were active after adding rounds of cuts (0.09519 seconds)
ZeroHalf was tried 10 times and created 94 cuts of which 0 were active after adding rounds of cuts (0.085669 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               4122
Total iterations:               209244
Time (CPU seconds):             79.0977
Time (Wallclock seconds):       79.0572
Total time (CPU seconds):       79.1158   (Wallclock seconds):       79.0706
