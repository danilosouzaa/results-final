Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3039/j3039_7.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 7.80702 - 0.175152 seconds
Cgl0003I 55 fixed, 0 tightened bounds, 3 strengthened rows, 3 substitutions
Cgl0003I 25 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 292 rows, 664 columns (664 integer (663 of which binary)) and 11193 elements
Coin3009W Conflict graph built in 0.015 seconds, density: 0.968%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 664 objects (664 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 53 integers unsatisfied sum - 13.3839
Cbc0038I Pass   1: suminf.    6.62876 (38) obj. 8 iterations 144
Cbc0038I Pass   2: suminf.    5.65284 (42) obj. 8 iterations 36
Cbc0038I Pass   3: suminf.    6.98093 (37) obj. 8 iterations 100
Cbc0038I Pass   4: suminf.    5.78723 (35) obj. 8 iterations 49
Cbc0038I Pass   5: suminf.    5.29344 (32) obj. 8 iterations 120
Cbc0038I Pass   6: suminf.    5.11717 (35) obj. 8 iterations 28
Cbc0038I Pass   7: suminf.    8.14795 (40) obj. 8 iterations 120
Cbc0038I Pass   8: suminf.    6.75597 (34) obj. 8 iterations 59
Cbc0038I Pass   9: suminf.    6.82233 (31) obj. 8 iterations 95
Cbc0038I Pass  10: suminf.    5.96706 (32) obj. 8 iterations 24
Cbc0038I Pass  11: suminf.    7.54219 (33) obj. 8 iterations 88
Cbc0038I Pass  12: suminf.    6.23496 (36) obj. 8 iterations 89
Cbc0038I Pass  13: suminf.    5.86137 (31) obj. 8 iterations 51
Cbc0038I Pass  14: suminf.    5.66341 (34) obj. 8 iterations 34
Cbc0038I Pass  15: suminf.    5.49691 (33) obj. 8 iterations 37
Cbc0038I Pass  16: suminf.    7.48358 (33) obj. 8 iterations 104
Cbc0038I Pass  17: suminf.    4.74722 (29) obj. 8 iterations 69
Cbc0038I Pass  18: suminf.    4.74722 (29) obj. 8 iterations 4
Cbc0038I Pass  19: suminf.    6.83333 (25) obj. 8 iterations 60
Cbc0038I Pass  20: suminf.    4.98223 (32) obj. 8 iterations 76
Cbc0038I Pass  21: suminf.    4.86997 (32) obj. 8 iterations 30
Cbc0038I Pass  22: suminf.    6.25149 (28) obj. 8 iterations 78
Cbc0038I Pass  23: suminf.   14.31292 (66) obj. 8.02452 iterations 145
Cbc0038I Pass  24: suminf.    9.63716 (49) obj. 8.09044 iterations 103
Cbc0038I Pass  25: suminf.    4.82751 (24) obj. 9 iterations 55
Cbc0038I Pass  26: suminf.    4.82751 (24) obj. 9 iterations 3
Cbc0038I Pass  27: suminf.    5.20467 (24) obj. 9 iterations 68
Cbc0038I Pass  28: suminf.    4.29698 (24) obj. 9 iterations 16
Cbc0038I Pass  29: suminf.    6.40235 (25) obj. 9 iterations 109
Cbc0038I Pass  30: suminf.    5.00044 (26) obj. 9 iterations 56
Cbc0038I Pass  31: suminf.    5.67500 (23) obj. 9 iterations 92
Cbc0038I Pass  32: suminf.    4.03594 (25) obj. 9 iterations 54
Cbc0038I Pass  33: suminf.    3.99520 (24) obj. 9 iterations 13
Cbc0038I Pass  34: suminf.    4.73859 (23) obj. 9 iterations 63
Cbc0038I Pass  35: suminf.    3.90596 (24) obj. 9 iterations 36
Cbc0038I Pass  36: suminf.    5.90663 (23) obj. 9 iterations 58
Cbc0038I Pass  37: suminf.   13.56228 (58) obj. 9 iterations 149
Cbc0038I Pass  38: suminf.    7.75071 (30) obj. 9 iterations 146
Cbc0038I Pass  39: suminf.    7.59563 (30) obj. 9 iterations 113
Cbc0038I Pass  40: suminf.    5.43513 (25) obj. 9 iterations 61
Cbc0038I Pass  41: suminf.    6.20099 (24) obj. 9 iterations 67
Cbc0038I Pass  42: suminf.    5.37808 (26) obj. 9 iterations 58
Cbc0038I Pass  43: suminf.    5.79676 (21) obj. 9 iterations 46
Cbc0038I Pass  44: suminf.    5.38249 (20) obj. 9 iterations 42
Cbc0038I Pass  45: suminf.    6.25688 (25) obj. 9 iterations 65
Cbc0038I Pass  46: suminf.    5.13158 (24) obj. 9 iterations 48
Cbc0038I Pass  47: suminf.    4.71551 (24) obj. 9 iterations 60
Cbc0038I Pass  48: suminf.    6.43176 (21) obj. 9 iterations 95
Cbc0038I Pass  49: suminf.    5.48064 (26) obj. 9 iterations 43
Cbc0038I Pass  50: suminf.    8.10210 (26) obj. 9 iterations 96
Cbc0038I Pass  51: suminf.    6.31323 (24) obj. 9 iterations 40
Cbc0038I Pass  52: suminf.    7.34946 (22) obj. 9 iterations 43
Cbc0038I Pass  53: suminf.    6.42738 (24) obj. 9 iterations 48
Cbc0038I Pass  54: suminf.    5.81081 (25) obj. 9 iterations 26
Cbc0038I Pass  55: suminf.    5.35119 (21) obj. 9 iterations 19
Cbc0038I Pass  56: suminf.    8.17296 (22) obj. 9 iterations 85
Cbc0038I Pass  57: suminf.    4.39974 (29) obj. 9 iterations 98
Cbc0038I Pass  58: suminf.    4.38066 (29) obj. 9 iterations 16
Cbc0038I Pass  59: suminf.    8.00094 (26) obj. 9 iterations 122
Cbc0038I Pass  60: suminf.    6.36037 (25) obj. 9 iterations 46
Cbc0038I Pass  61: suminf.    7.23721 (24) obj. 9 iterations 62
Cbc0038I Pass  62: suminf.    6.33683 (24) obj. 9 iterations 37
Cbc0038I Pass  63: suminf.    6.30631 (23) obj. 9 iterations 1
Cbc0038I Pass  64: suminf.    7.81235 (21) obj. 9 iterations 56
Cbc0038I Pass  65: suminf.    9.14697 (42) obj. 9 iterations 120
Cbc0038I Pass  66: suminf.    7.92252 (35) obj. 9 iterations 142
Cbc0038I Pass  67: suminf.    7.95081 (35) obj. 9 iterations 139
Cbc0038I Pass  68: suminf.    6.22731 (33) obj. 9 iterations 78
Cbc0038I Pass  69: suminf.    9.26168 (40) obj. 9 iterations 112
Cbc0038I Pass  70: suminf.    6.09724 (32) obj. 9 iterations 73
Cbc0038I Pass  71: suminf.    5.36783 (36) obj. 9 iterations 43
Cbc0038I Pass  72: suminf.    6.53102 (32) obj. 9 iterations 77
Cbc0038I Pass  73: suminf.    5.39362 (27) obj. 9 iterations 56
Cbc0038I Pass  74: suminf.    5.39362 (27) obj. 9 iterations 13
Cbc0038I Pass  75: suminf.    7.54396 (32) obj. 9 iterations 98
Cbc0038I Pass  76: suminf.    5.18257 (33) obj. 9 iterations 83
Cbc0038I Pass  77: suminf.   10.14846 (38) obj. 9 iterations 146
Cbc0038I Pass  78: suminf.    7.15950 (31) obj. 9 iterations 106
Cbc0038I Pass  79: suminf.    5.74732 (31) obj. 9 iterations 49
Cbc0038I Pass  80: suminf.    5.69117 (29) obj. 9 iterations 27
Cbc0038I Pass  81: suminf.   10.85493 (36) obj. 9 iterations 114
Cbc0038I Pass  82: suminf.    7.32274 (32) obj. 9 iterations 63
Cbc0038I Pass  83: suminf.    5.42056 (31) obj. 9 iterations 44
Cbc0038I Pass  84: suminf.    5.36846 (31) obj. 9 iterations 14
Cbc0038I Pass  85: suminf.    6.89124 (32) obj. 9 iterations 50
Cbc0038I Pass  86: suminf.    5.02890 (33) obj. 9 iterations 55
Cbc0038I Pass  87: suminf.    5.92445 (31) obj. 9 iterations 46
Cbc0038I Pass  88: suminf.    5.57466 (38) obj. 9 iterations 22
Cbc0038I Pass  89: suminf.    5.58579 (30) obj. 9 iterations 56
Cbc0038I Pass  90: suminf.    5.02890 (33) obj. 9 iterations 38
Cbc0038I Pass  91: suminf.    6.38201 (28) obj. 9 iterations 109
Cbc0038I Pass  92: suminf.    5.67139 (30) obj. 9 iterations 46
Cbc0038I Pass  93: suminf.    7.47640 (35) obj. 9 iterations 111
Cbc0038I Pass  94: suminf.    4.49242 (24) obj. 9 iterations 63
Cbc0038I Pass  95: suminf.    4.35443 (25) obj. 9 iterations 17
Cbc0038I Pass  96: suminf.    7.02259 (32) obj. 9 iterations 88
Cbc0038I Pass  97: suminf.    6.03296 (32) obj. 9 iterations 60
Cbc0038I Pass  98: suminf.    5.50117 (28) obj. 9 iterations 20
Cbc0038I Pass  99: suminf.    5.41141 (24) obj. 9 iterations 131
Cbc0038I Pass 100: suminf.   12.90012 (53) obj. 9 iterations 155
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 383 integers at bound fixed and 0 continuous
Cbc0038I Full problem 292 rows 664 columns, reduced to 229 rows 268 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.62 seconds)
Cbc0038I After 2.62 seconds - Feasibility pump exiting - took 1.11 seconds
Cbc0031I 62 added rows had average density of 54.564516
Cbc0013I At root node, 62 cuts changed objective from 7.8070175 to 9 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 126 row cuts average 6.6 elements, 11 column cuts (11 active)  in 0.466 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 56 row cuts average 492.8 elements, 0 column cuts (0 active)  in 0.248 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 56.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 124 row cuts average 203.9 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 72.4 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 9 (6.06 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 9 (6.96 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 9 (7.74 seconds)
Cbc0010I After 10 nodes, 9 on tree, 1e+50 best solution, best possible 9 (8.46 seconds)
Cbc0010I After 20 nodes, 10 on tree, 1e+50 best solution, best possible 9 (9.18 seconds)
Cbc0010I After 35 nodes, 11 on tree, 1e+50 best solution, best possible 9 (9.99 seconds)
Cbc0010I After 50 nodes, 16 on tree, 1e+50 best solution, best possible 9 (10.69 seconds)
Cbc0010I After 65 nodes, 20 on tree, 1e+50 best solution, best possible 9 (11.42 seconds)
Cbc0010I After 81 nodes, 25 on tree, 1e+50 best solution, best possible 9 (12.19 seconds)
Cbc0010I After 98 nodes, 31 on tree, 1e+50 best solution, best possible 9 (12.93 seconds)
Cbc0010I After 120 nodes, 34 on tree, 1e+50 best solution, best possible 9 (13.65 seconds)
Cbc0010I After 147 nodes, 38 on tree, 1e+50 best solution, best possible 9 (14.36 seconds)
Cbc0010I After 184 nodes, 35 on tree, 1e+50 best solution, best possible 9 (15.06 seconds)
Cbc0010I After 210 nodes, 33 on tree, 1e+50 best solution, best possible 9 (15.77 seconds)
Cbc0010I After 238 nodes, 34 on tree, 1e+50 best solution, best possible 9 (16.50 seconds)
Cbc0010I After 258 nodes, 37 on tree, 1e+50 best solution, best possible 9 (17.21 seconds)
Cbc0010I After 288 nodes, 39 on tree, 1e+50 best solution, best possible 9 (17.93 seconds)
Cbc0010I After 309 nodes, 36 on tree, 1e+50 best solution, best possible 9 (18.68 seconds)
Cbc0010I After 325 nodes, 35 on tree, 1e+50 best solution, best possible 9 (19.39 seconds)
Cbc0010I After 339 nodes, 32 on tree, 1e+50 best solution, best possible 9 (20.11 seconds)
Cbc0010I After 355 nodes, 35 on tree, 1e+50 best solution, best possible 9 (20.83 seconds)
Cbc0010I After 373 nodes, 31 on tree, 1e+50 best solution, best possible 9 (21.53 seconds)
Cbc0010I After 394 nodes, 28 on tree, 1e+50 best solution, best possible 9 (22.24 seconds)
Cbc0010I After 409 nodes, 25 on tree, 1e+50 best solution, best possible 9 (22.96 seconds)
Cbc0010I After 430 nodes, 28 on tree, 1e+50 best solution, best possible 9 (23.74 seconds)
Cbc0010I After 452 nodes, 25 on tree, 1e+50 best solution, best possible 9 (24.46 seconds)
Cbc0010I After 475 nodes, 23 on tree, 1e+50 best solution, best possible 9 (25.21 seconds)
Cbc0010I After 488 nodes, 29 on tree, 1e+50 best solution, best possible 9 (25.95 seconds)
Cbc0010I After 502 nodes, 36 on tree, 1e+50 best solution, best possible 9 (26.65 seconds)
Cbc0010I After 522 nodes, 37 on tree, 1e+50 best solution, best possible 9 (27.36 seconds)
Cbc0010I After 538 nodes, 42 on tree, 1e+50 best solution, best possible 9 (28.09 seconds)
Cbc0010I After 555 nodes, 48 on tree, 1e+50 best solution, best possible 9 (28.80 seconds)
Cbc0010I After 571 nodes, 49 on tree, 1e+50 best solution, best possible 9 (29.52 seconds)
Cbc0010I After 590 nodes, 51 on tree, 1e+50 best solution, best possible 9 (30.28 seconds)
Cbc0010I After 607 nodes, 56 on tree, 1e+50 best solution, best possible 9 (31.00 seconds)
Cbc0010I After 628 nodes, 64 on tree, 1e+50 best solution, best possible 9 (31.72 seconds)
Cbc0010I After 653 nodes, 70 on tree, 1e+50 best solution, best possible 9 (32.44 seconds)
Cbc0010I After 671 nodes, 78 on tree, 1e+50 best solution, best possible 9 (33.14 seconds)
Cbc0004I Integer solution of 9 found after 52694 iterations and 697 nodes (33.66 seconds)
Cbc0001I Search completed - best objective 9, took 52694 iterations and 697 nodes (33.67 seconds)
Cbc0032I Strong branching done 2518 times (48406 iterations), fathomed 15 nodes and fixed 81 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.80702 to 9
Probing was tried 554 times and created 2309 cuts of which 0 were active after adding rounds of cuts (1.45785 seconds)
Gomory was tried 543 times and created 68 cuts of which 0 were active after adding rounds of cuts (1.16144 seconds)
Knapsack was tried 543 times and created 680 cuts of which 0 were active after adding rounds of cuts (3.64072 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007492 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.039033 seconds)
MixedIntegerRounding2 was tried 543 times and created 696 cuts of which 0 were active after adding rounds of cuts (1.62831 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003457 seconds)
TwoMirCuts was tried 543 times and created 854 cuts of which 0 were active after adding rounds of cuts (0.935333 seconds)
ZeroHalf was tried 543 times and created 2370 cuts of which 0 were active after adding rounds of cuts (1.99271 seconds)

Result - Optimal solution found
Objective value:                9
Enumerated nodes:               697
Total iterations:               52694
Time (CPU seconds):             33.7462
Time (Wallclock seconds):       33.7143
Total time (CPU seconds):       33.7912   (Wallclock seconds):       33.7414
