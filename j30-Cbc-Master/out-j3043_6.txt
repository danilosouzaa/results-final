Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3043/j3043_6.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.28894 - 0.143162 seconds
Cgl0002I 10 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 290 rows, 572 columns (572 integer (571 of which binary)) and 5802 elements
Coin3009W Conflict graph built in 0.007 seconds, density: 1.035%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 572 objects (572 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 77 integers unsatisfied sum - 19.7574
Cbc0038I Pass   1: suminf.   11.97544 (51) obj. 2 iterations 103
Cbc0038I Pass   2: suminf.    7.11368 (29) obj. 3 iterations 37
Cbc0038I Pass   3: suminf.    6.71905 (27) obj. 3 iterations 4
Cbc0038I Pass   4: suminf.    6.65967 (23) obj. 3 iterations 36
Cbc0038I Pass   5: suminf.    5.57825 (20) obj. 3 iterations 28
Cbc0038I Pass   6: suminf.    5.48182 (19) obj. 3 iterations 7
Cbc0038I Pass   7: suminf.    6.86923 (26) obj. 3 iterations 43
Cbc0038I Pass   8: suminf.    5.93667 (20) obj. 3 iterations 41
Cbc0038I Pass   9: suminf.    5.90000 (27) obj. 3 iterations 49
Cbc0038I Pass  10: suminf.    5.88125 (21) obj. 3 iterations 3
Cbc0038I Pass  11: suminf.    3.56700 (16) obj. 3 iterations 15
Cbc0038I Pass  12: suminf.    2.95714 (12) obj. 3 iterations 9
Cbc0038I Pass  13: suminf.    3.92500 (11) obj. 3 iterations 14
Cbc0038I Pass  14: suminf.    2.90714 (11) obj. 3 iterations 24
Cbc0038I Pass  15: suminf.    3.12500 (11) obj. 3 iterations 21
Cbc0038I Pass  16: suminf.   10.40952 (40) obj. 3 iterations 66
Cbc0038I Pass  17: suminf.    6.47381 (22) obj. 3 iterations 59
Cbc0038I Pass  18: suminf.    5.92955 (24) obj. 3 iterations 40
Cbc0038I Pass  19: suminf.    5.69762 (25) obj. 3 iterations 42
Cbc0038I Pass  20: suminf.    7.48144 (26) obj. 3 iterations 48
Cbc0038I Pass  21: suminf.    6.93896 (26) obj. 3 iterations 27
Cbc0038I Pass  22: suminf.    6.93896 (26) obj. 3 iterations 11
Cbc0038I Pass  23: suminf.    7.87444 (29) obj. 3 iterations 30
Cbc0038I Pass  24: suminf.    6.27229 (24) obj. 3 iterations 26
Cbc0038I Pass  25: suminf.    6.83308 (24) obj. 3 iterations 22
Cbc0038I Pass  26: suminf.   10.99757 (44) obj. 3 iterations 78
Cbc0038I Pass  27: suminf.    6.47706 (27) obj. 3 iterations 76
Cbc0038I Pass  28: suminf.    7.50308 (30) obj. 3 iterations 30
Cbc0038I Pass  29: suminf.    5.87362 (29) obj. 3 iterations 31
Cbc0038I Pass  30: suminf.    5.87362 (29) obj. 3 iterations 2
Cbc0038I Pass  31: suminf.    5.02182 (20) obj. 3 iterations 32
Cbc0038I Pass  32: suminf.    4.68182 (16) obj. 3 iterations 23
Cbc0038I Pass  33: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  34: suminf.    4.90332 (16) obj. 3 iterations 34
Cbc0038I Pass  35: suminf.    4.08658 (15) obj. 3 iterations 30
Cbc0038I Pass  36: suminf.    5.20364 (20) obj. 3 iterations 35
Cbc0038I Pass  37: suminf.    4.68182 (16) obj. 3 iterations 18
Cbc0038I Pass  38: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  39: suminf.    4.18182 (15) obj. 3 iterations 13
Cbc0038I Pass  40: suminf.    4.08658 (15) obj. 3 iterations 13
Cbc0038I Pass  41: suminf.    5.20364 (20) obj. 3 iterations 33
Cbc0038I Pass  42: suminf.    4.68182 (16) obj. 3 iterations 20
Cbc0038I Pass  43: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  44: suminf.    4.90332 (16) obj. 3 iterations 32
Cbc0038I Pass  45: suminf.    4.08658 (15) obj. 3 iterations 24
Cbc0038I Pass  46: suminf.    5.20364 (20) obj. 3 iterations 34
Cbc0038I Pass  47: suminf.    4.68182 (16) obj. 3 iterations 19
Cbc0038I Pass  48: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  49: suminf.    4.90332 (16) obj. 3 iterations 33
Cbc0038I Pass  50: suminf.    4.08658 (15) obj. 3 iterations 25
Cbc0038I Pass  51: suminf.    5.84000 (20) obj. 3 iterations 35
Cbc0038I Pass  52: suminf.    4.68182 (16) obj. 3 iterations 18
Cbc0038I Pass  53: suminf.    4.30087 (15) obj. 3 iterations 9
Cbc0038I Pass  54: suminf.    4.90332 (16) obj. 3 iterations 34
Cbc0038I Pass  55: suminf.    4.08658 (15) obj. 3 iterations 26
Cbc0038I Pass  56: suminf.    5.20364 (20) obj. 3 iterations 35
Cbc0038I Pass  57: suminf.    4.68182 (16) obj. 3 iterations 19
Cbc0038I Pass  58: suminf.    4.30087 (15) obj. 3 iterations 10
Cbc0038I Pass  59: suminf.    4.90332 (16) obj. 3 iterations 31
Cbc0038I Pass  60: suminf.    4.08658 (15) obj. 3 iterations 24
Cbc0038I Pass  61: suminf.    5.20364 (20) obj. 3 iterations 33
Cbc0038I Pass  62: suminf.    4.68182 (16) obj. 3 iterations 17
Cbc0038I Pass  63: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  64: suminf.    4.90332 (16) obj. 3 iterations 30
Cbc0038I Pass  65: suminf.    4.08658 (15) obj. 3 iterations 26
Cbc0038I Pass  66: suminf.    5.20364 (20) obj. 3 iterations 34
Cbc0038I Pass  67: suminf.    4.68182 (16) obj. 3 iterations 16
Cbc0038I Pass  68: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  69: suminf.    4.18182 (15) obj. 3 iterations 14
Cbc0038I Pass  70: suminf.    4.08658 (15) obj. 3 iterations 11
Cbc0038I Pass  71: suminf.    5.20364 (20) obj. 3 iterations 36
Cbc0038I Pass  72: suminf.    4.68182 (16) obj. 3 iterations 16
Cbc0038I Pass  73: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  74: suminf.    4.90332 (16) obj. 3 iterations 30
Cbc0038I Pass  75: suminf.    4.08658 (15) obj. 3 iterations 25
Cbc0038I Pass  76: suminf.    5.20364 (20) obj. 3 iterations 32
Cbc0038I Pass  77: suminf.    4.68182 (16) obj. 3 iterations 22
Cbc0038I Pass  78: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  79: suminf.    4.90332 (16) obj. 3 iterations 32
Cbc0038I Pass  80: suminf.    4.08658 (15) obj. 3 iterations 26
Cbc0038I Pass  81: suminf.    4.30087 (15) obj. 3 iterations 13
Cbc0038I Pass  82: suminf.    4.30087 (15) obj. 3 iterations 3
Cbc0038I Pass  83: suminf.    5.53968 (16) obj. 3 iterations 29
Cbc0038I Pass  84: suminf.    4.08658 (15) obj. 3 iterations 23
Cbc0038I Pass  85: suminf.    5.84000 (20) obj. 3 iterations 32
Cbc0038I Pass  86: suminf.    4.68182 (16) obj. 3 iterations 22
Cbc0038I Pass  87: suminf.    4.30087 (15) obj. 3 iterations 8
Cbc0038I Pass  88: suminf.    4.90332 (16) obj. 3 iterations 31
Cbc0038I Pass  89: suminf.    4.08658 (15) obj. 3 iterations 26
Cbc0038I Pass  90: suminf.    5.20364 (20) obj. 3 iterations 36
Cbc0038I Pass  91: suminf.    4.68182 (16) obj. 3 iterations 20
Cbc0038I Pass  92: suminf.    4.30087 (15) obj. 3 iterations 10
Cbc0038I Pass  93: suminf.    4.72150 (16) obj. 3 iterations 31
Cbc0038I Pass  94: suminf.    4.08658 (15) obj. 3 iterations 25
Cbc0038I Pass  95: suminf.    5.20364 (20) obj. 3 iterations 33
Cbc0038I Pass  96: suminf.    4.68182 (16) obj. 3 iterations 18
Cbc0038I Pass  97: suminf.    4.30087 (15) obj. 3 iterations 10
Cbc0038I Pass  98: suminf.    4.90332 (16) obj. 3 iterations 32
Cbc0038I Pass  99: suminf.    4.08658 (15) obj. 3 iterations 27
Cbc0038I Pass 100: suminf.    9.50231 (33) obj. 3 iterations 100
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 389 integers at bound fixed and 0 continuous
Cbc0038I Full problem 290 rows 572 columns, reduced to 172 rows 148 columns
Cbc0038I Mini branch and bound did not improve solution (1.35 seconds)
Cbc0038I After 1.35 seconds - Feasibility pump exiting - took 0.48 seconds
Cbc0031I 45 added rows had average density of 51.8
Cbc0013I At root node, 45 cuts changed objective from 1.2889389 to 2 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 299 row cuts average 4.5 elements, 2 column cuts (2 active)  in 0.182 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 207 row cuts average 445.8 elements, 0 column cuts (0 active)  in 0.324 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 66 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 117 row cuts average 30.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 279 row cuts average 212.1 elements, 0 column cuts (0 active)  in 0.530 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 137 row cuts average 34.3 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (3.50 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 3 (4.30 seconds)
Cbc0010I After 10 nodes, 3 on tree, 1e+50 best solution, best possible 3 (5.19 seconds)
Cbc0010I After 19 nodes, 7 on tree, 1e+50 best solution, best possible 3 (5.91 seconds)
Cbc0010I After 33 nodes, 8 on tree, 1e+50 best solution, best possible 3 (6.62 seconds)
Cbc0010I After 54 nodes, 18 on tree, 1e+50 best solution, best possible 3 (7.34 seconds)
Cbc0010I After 85 nodes, 19 on tree, 1e+50 best solution, best possible 3 (8.04 seconds)
Cbc0010I After 117 nodes, 19 on tree, 1e+50 best solution, best possible 3 (8.76 seconds)
Cbc0010I After 164 nodes, 18 on tree, 1e+50 best solution, best possible 3 (9.48 seconds)
Cbc0010I After 197 nodes, 16 on tree, 1e+50 best solution, best possible 3 (10.22 seconds)
Cbc0010I After 222 nodes, 11 on tree, 1e+50 best solution, best possible 3 (10.93 seconds)
Cbc0010I After 244 nodes, 10 on tree, 1e+50 best solution, best possible 3 (11.63 seconds)
Cbc0010I After 267 nodes, 8 on tree, 1e+50 best solution, best possible 3 (12.35 seconds)
Cbc0010I After 289 nodes, 7 on tree, 1e+50 best solution, best possible 3 (13.08 seconds)
Cbc0010I After 310 nodes, 6 on tree, 1e+50 best solution, best possible 3 (13.83 seconds)
Cbc0010I After 322 nodes, 9 on tree, 1e+50 best solution, best possible 3 (14.54 seconds)
Cbc0010I After 335 nodes, 7 on tree, 1e+50 best solution, best possible 3 (15.25 seconds)
Cbc0010I After 349 nodes, 7 on tree, 1e+50 best solution, best possible 3 (16.15 seconds)
Cbc0010I After 360 nodes, 6 on tree, 1e+50 best solution, best possible 3 (16.87 seconds)
Cbc0010I After 371 nodes, 6 on tree, 1e+50 best solution, best possible 3 (17.59 seconds)
Cbc0010I After 379 nodes, 4 on tree, 1e+50 best solution, best possible 3 (18.31 seconds)
Cbc0004I Integer solution of 3 found after 33574 iterations and 395 nodes (18.95 seconds)
Cbc0001I Search completed - best objective 3, took 33574 iterations and 395 nodes (18.95 seconds)
Cbc0032I Strong branching done 1712 times (33837 iterations), fathomed 4 nodes and fixed 14 variables
Cbc0035I Maximum depth 32, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.28894 to 2
Probing was tried 281 times and created 1760 cuts of which 0 were active after adding rounds of cuts (0.677933 seconds)
Gomory was tried 273 times and created 220 cuts of which 0 were active after adding rounds of cuts (0.867275 seconds)
Knapsack was tried 273 times and created 490 cuts of which 0 were active after adding rounds of cuts (1.84935 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007686 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035556 seconds)
MixedIntegerRounding2 was tried 273 times and created 1257 cuts of which 0 were active after adding rounds of cuts (0.554938 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001975 seconds)
TwoMirCuts was tried 273 times and created 1015 cuts of which 0 were active after adding rounds of cuts (0.828038 seconds)
ZeroHalf was tried 273 times and created 1406 cuts of which 0 were active after adding rounds of cuts (1.24899 seconds)

Result - Optimal solution found
Objective value:                3
Enumerated nodes:               395
Total iterations:               33574
Time (CPU seconds):             18.852
Time (Wallclock seconds):       18.9976
Total time (CPU seconds):       18.8625   (Wallclock seconds):       19.0076
