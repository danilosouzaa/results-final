Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3039/j3039_3.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 5.15821 - 0.446826 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 354 rows, 1415 columns (1415 integer (1414 of which binary)) and 23389 elements
Coin3009W Conflict graph built in 0.107 seconds, density: 1.019%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1415 objects (1415 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 119 integers unsatisfied sum - 25.6098
Cbc0038I Pass   1: suminf.   10.96404 (52) obj. 8 iterations 378
Cbc0038I Pass   2: suminf.   10.34341 (51) obj. 8 iterations 80
Cbc0038I Pass   3: suminf.   10.58103 (52) obj. 8 iterations 124
Cbc0038I Pass   4: suminf.    9.03256 (51) obj. 8 iterations 100
Cbc0038I Pass   5: suminf.    8.56881 (44) obj. 8 iterations 90
Cbc0038I Pass   6: suminf.    8.91468 (49) obj. 8 iterations 84
Cbc0038I Pass   7: suminf.    8.56935 (52) obj. 8 iterations 44
Cbc0038I Pass   8: suminf.   10.76456 (53) obj. 8 iterations 100
Cbc0038I Pass   9: suminf.    9.99882 (52) obj. 8 iterations 54
Cbc0038I Pass  10: suminf.    8.98407 (48) obj. 8 iterations 55
Cbc0038I Pass  11: suminf.    8.96666 (52) obj. 8 iterations 22
Cbc0038I Pass  12: suminf.    8.90328 (51) obj. 8 iterations 23
Cbc0038I Pass  13: suminf.   11.54232 (57) obj. 8 iterations 222
Cbc0038I Pass  14: suminf.   10.16235 (53) obj. 8 iterations 138
Cbc0038I Pass  15: suminf.    9.95191 (47) obj. 8 iterations 175
Cbc0038I Pass  16: suminf.    8.53477 (51) obj. 8 iterations 111
Cbc0038I Pass  17: suminf.    8.25542 (46) obj. 8 iterations 70
Cbc0038I Pass  18: suminf.    9.53398 (41) obj. 8 iterations 208
Cbc0038I Pass  19: suminf.    7.83767 (49) obj. 8 iterations 106
Cbc0038I Pass  20: suminf.    9.19039 (47) obj. 8 iterations 120
Cbc0038I Pass  21: suminf.    8.45532 (47) obj. 8 iterations 65
Cbc0038I Pass  22: suminf.    8.45548 (49) obj. 8 iterations 8
Cbc0038I Pass  23: suminf.    8.82597 (50) obj. 8 iterations 128
Cbc0038I Pass  24: suminf.    7.94853 (60) obj. 8 iterations 135
Cbc0038I Pass  25: suminf.    9.71724 (53) obj. 8 iterations 152
Cbc0038I Pass  26: suminf.    8.46474 (47) obj. 8 iterations 48
Cbc0038I Pass  27: suminf.    8.09747 (49) obj. 8 iterations 54
Cbc0038I Pass  28: suminf.    7.90141 (50) obj. 8 iterations 22
Cbc0038I Pass  29: suminf.   12.70113 (50) obj. 8 iterations 227
Cbc0038I Pass  30: suminf.    8.54581 (45) obj. 8 iterations 109
Cbc0038I Pass  31: suminf.    7.85593 (47) obj. 8 iterations 51
Cbc0038I Pass  32: suminf.   10.04221 (43) obj. 8 iterations 163
Cbc0038I Pass  33: suminf.    8.00793 (47) obj. 8 iterations 74
Cbc0038I Pass  34: suminf.    7.53654 (45) obj. 8 iterations 49
Cbc0038I Pass  35: suminf.    8.59705 (51) obj. 8 iterations 98
Cbc0038I Pass  36: suminf.    7.95412 (45) obj. 8 iterations 81
Cbc0038I Pass  37: suminf.    7.93945 (50) obj. 8 iterations 15
Cbc0038I Pass  38: suminf.   10.38315 (53) obj. 8 iterations 192
Cbc0038I Pass  39: suminf.    8.80292 (48) obj. 8 iterations 126
Cbc0038I Pass  40: suminf.    8.77571 (48) obj. 8 iterations 15
Cbc0038I Pass  41: suminf.    8.43932 (43) obj. 8 iterations 223
Cbc0038I Pass  42: suminf.    7.61025 (48) obj. 8 iterations 84
Cbc0038I Pass  43: suminf.    7.61025 (48) obj. 8 iterations 1
Cbc0038I Pass  44: suminf.   10.18892 (49) obj. 8 iterations 196
Cbc0038I Pass  45: suminf.    8.81436 (42) obj. 8 iterations 84
Cbc0038I Pass  46: suminf.    8.31088 (46) obj. 8 iterations 31
Cbc0038I Pass  47: suminf.   10.49395 (48) obj. 8 iterations 148
Cbc0038I Pass  48: suminf.    8.90387 (51) obj. 8 iterations 112
Cbc0038I Pass  49: suminf.    9.85110 (47) obj. 8 iterations 105
Cbc0038I Pass  50: suminf.    8.44543 (47) obj. 8 iterations 101
Cbc0038I Pass  51: suminf.    9.38867 (52) obj. 8 iterations 115
Cbc0038I Pass  52: suminf.    9.17384 (47) obj. 8 iterations 81
Cbc0038I Pass  53: suminf.   10.56030 (50) obj. 8 iterations 96
Cbc0038I Pass  54: suminf.    8.61600 (48) obj. 8 iterations 114
Cbc0038I Pass  55: suminf.   10.92858 (46) obj. 8 iterations 89
Cbc0038I Pass  56: suminf.    9.10761 (47) obj. 8 iterations 75
Cbc0038I Pass  57: suminf.    9.03336 (48) obj. 8 iterations 6
Cbc0038I Pass  58: suminf.    9.80804 (47) obj. 8 iterations 97
Cbc0038I Pass  59: suminf.    8.47795 (48) obj. 8 iterations 92
Cbc0038I Pass  60: suminf.    8.16043 (46) obj. 8 iterations 31
Cbc0038I Pass  61: suminf.   10.30784 (47) obj. 8 iterations 152
Cbc0038I Pass  62: suminf.    9.85202 (49) obj. 8 iterations 34
Cbc0038I Pass  63: suminf.    9.75618 (52) obj. 8 iterations 33
Cbc0038I Pass  64: suminf.   10.19061 (52) obj. 8 iterations 119
Cbc0038I Pass  65: suminf.    8.85300 (54) obj. 8 iterations 123
Cbc0038I Pass  66: suminf.   10.12193 (46) obj. 8 iterations 136
Cbc0038I Pass  67: suminf.    8.38768 (54) obj. 8 iterations 137
Cbc0038I Pass  68: suminf.    8.06750 (52) obj. 8 iterations 40
Cbc0038I Pass  69: suminf.   10.71284 (45) obj. 8 iterations 150
Cbc0038I Pass  70: suminf.    8.37319 (50) obj. 8 iterations 124
Cbc0038I Pass  71: suminf.    8.14632 (50) obj. 8 iterations 49
Cbc0038I Pass  72: suminf.    9.72866 (45) obj. 8 iterations 166
Cbc0038I Pass  73: suminf.    8.82019 (44) obj. 8 iterations 118
Cbc0038I Pass  74: suminf.    8.72025 (47) obj. 8 iterations 28
Cbc0038I Pass  75: suminf.    8.47136 (47) obj. 8 iterations 45
Cbc0038I Pass  76: suminf.    8.25621 (52) obj. 8 iterations 30
Cbc0038I Pass  77: suminf.    9.86710 (42) obj. 8 iterations 109
Cbc0038I Pass  78: suminf.    7.48858 (41) obj. 8 iterations 86
Cbc0038I Pass  79: suminf.    7.48858 (41) obj. 8 iterations 2
Cbc0038I Pass  80: suminf.   10.84008 (47) obj. 8 iterations 132
Cbc0038I Pass  81: suminf.    8.38194 (46) obj. 8 iterations 105
Cbc0038I Pass  82: suminf.    8.30265 (49) obj. 8 iterations 22
Cbc0038I Pass  83: suminf.    9.31299 (48) obj. 8 iterations 143
Cbc0038I Pass  84: suminf.    7.44443 (49) obj. 8 iterations 110
Cbc0038I Pass  85: suminf.    7.26971 (49) obj. 8 iterations 26
Cbc0038I Pass  86: suminf.   10.22418 (45) obj. 8 iterations 111
Cbc0038I Pass  87: suminf.    9.28286 (47) obj. 8 iterations 110
Cbc0038I Pass  88: suminf.   10.37185 (46) obj. 8 iterations 110
Cbc0038I Pass  89: suminf.    9.13184 (46) obj. 8 iterations 94
Cbc0038I Pass  90: suminf.    9.05063 (44) obj. 8 iterations 136
Cbc0038I Pass  91: suminf.    8.08259 (46) obj. 8 iterations 89
Cbc0038I Pass  92: suminf.    7.63580 (45) obj. 8 iterations 11
Cbc0038I Pass  93: suminf.    7.17862 (43) obj. 8 iterations 32
Cbc0038I Pass  94: suminf.    9.38013 (42) obj. 8 iterations 128
Cbc0038I Pass  95: suminf.    8.07834 (47) obj. 8 iterations 111
Cbc0038I Pass  96: suminf.   21.03026 (73) obj. 6.75 iterations 255
Cbc0038I Pass  97: suminf.   12.47945 (59) obj. 8 iterations 182
Cbc0038I Pass  98: suminf.   11.85317 (61) obj. 8 iterations 94
Cbc0038I Pass  99: suminf.   10.76971 (65) obj. 8 iterations 43
Cbc0038I Pass 100: suminf.   21.88557 (82) obj. 8 iterations 277
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1027 integers at bound fixed and 0 continuous
Cbc0038I Full problem 354 rows 1415 columns, reduced to 260 rows 369 columns
Cbc0038I Mini branch and bound did not improve solution (3.98 seconds)
Cbc0038I After 3.98 seconds - Feasibility pump exiting - took 1.77 seconds
Cbc0031I 41 added rows had average density of 77.829268
Cbc0013I At root node, 41 cuts changed objective from 5.1582088 to 7 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 12.1 elements, 46 column cuts (46 active)  in 0.770 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 77 row cuts average 770.4 elements, 0 column cuts (0 active)  in 0.290 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 28.3 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 161 row cuts average 90.1 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 140 row cuts average 183.5 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 130 row cuts average 110.6 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 7 (7.15 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 7 (7.93 seconds)
Cbc0010I After 9 nodes, 6 on tree, 1e+50 best solution, best possible 7 (8.77 seconds)
Cbc0010I After 16 nodes, 6 on tree, 1e+50 best solution, best possible 7 (9.49 seconds)
Cbc0010I After 24 nodes, 5 on tree, 1e+50 best solution, best possible 7 (10.30 seconds)
Cbc0010I After 28 nodes, 4 on tree, 1e+50 best solution, best possible 7 (11.04 seconds)
Cbc0010I After 33 nodes, 2 on tree, 1e+50 best solution, best possible 7 (11.90 seconds)
Cbc0010I After 39 nodes, 6 on tree, 1e+50 best solution, best possible 7 (12.71 seconds)
Cbc0010I After 51 nodes, 5 on tree, 1e+50 best solution, best possible 7 (13.43 seconds)
Cbc0010I After 59 nodes, 7 on tree, 1e+50 best solution, best possible 7 (14.13 seconds)
Cbc0010I After 72 nodes, 9 on tree, 1e+50 best solution, best possible 7 (14.87 seconds)
Cbc0010I After 88 nodes, 8 on tree, 1e+50 best solution, best possible 7 (15.61 seconds)
Cbc0010I After 104 nodes, 10 on tree, 1e+50 best solution, best possible 7 (16.33 seconds)
Cbc0010I After 127 nodes, 6 on tree, 1e+50 best solution, best possible 7 (17.04 seconds)
Cbc0010I After 139 nodes, 10 on tree, 1e+50 best solution, best possible 7 (17.76 seconds)
Cbc0010I After 155 nodes, 8 on tree, 1e+50 best solution, best possible 7 (18.51 seconds)
Cbc0010I After 180 nodes, 16 on tree, 1e+50 best solution, best possible 7 (19.22 seconds)
Cbc0010I After 204 nodes, 16 on tree, 1e+50 best solution, best possible 7 (19.96 seconds)
Cbc0010I After 227 nodes, 17 on tree, 1e+50 best solution, best possible 7 (20.67 seconds)
Cbc0010I After 258 nodes, 13 on tree, 1e+50 best solution, best possible 7 (21.37 seconds)
Cbc0010I After 291 nodes, 16 on tree, 1e+50 best solution, best possible 7 (22.08 seconds)
Cbc0010I After 319 nodes, 13 on tree, 1e+50 best solution, best possible 7 (22.80 seconds)
Cbc0010I After 349 nodes, 10 on tree, 1e+50 best solution, best possible 7 (23.50 seconds)
Cbc0010I After 369 nodes, 10 on tree, 1e+50 best solution, best possible 7 (24.23 seconds)
Cbc0010I After 389 nodes, 10 on tree, 1e+50 best solution, best possible 7 (24.93 seconds)
Cbc0010I After 408 nodes, 15 on tree, 1e+50 best solution, best possible 7 (25.66 seconds)
Cbc0010I After 429 nodes, 15 on tree, 1e+50 best solution, best possible 7 (26.39 seconds)
Cbc0010I After 447 nodes, 18 on tree, 1e+50 best solution, best possible 7 (27.11 seconds)
Cbc0010I After 469 nodes, 14 on tree, 1e+50 best solution, best possible 7 (27.82 seconds)
Cbc0010I After 505 nodes, 14 on tree, 1e+50 best solution, best possible 7 (28.53 seconds)
Cbc0010I After 529 nodes, 11 on tree, 1e+50 best solution, best possible 7 (29.24 seconds)
Cbc0010I After 554 nodes, 12 on tree, 1e+50 best solution, best possible 7 (29.97 seconds)
Cbc0010I After 575 nodes, 12 on tree, 1e+50 best solution, best possible 7 (30.68 seconds)
Cbc0010I After 605 nodes, 12 on tree, 1e+50 best solution, best possible 7 (31.40 seconds)
Cbc0010I After 627 nodes, 6 on tree, 1e+50 best solution, best possible 7 (32.13 seconds)
Cbc0010I After 646 nodes, 10 on tree, 1e+50 best solution, best possible 7 (32.84 seconds)
Cbc0010I After 668 nodes, 2 on tree, 1e+50 best solution, best possible 7 (33.59 seconds)
Cbc0010I After 675 nodes, 5 on tree, 1e+50 best solution, best possible 7 (34.34 seconds)
Cbc0010I After 682 nodes, 1 on tree, 1e+50 best solution, best possible 8 (35.07 seconds)
Cbc0010I After 687 nodes, 6 on tree, 1e+50 best solution, best possible 8 (35.81 seconds)
Cbc0010I After 700 nodes, 12 on tree, 1e+50 best solution, best possible 8 (36.55 seconds)
Cbc0010I After 720 nodes, 15 on tree, 1e+50 best solution, best possible 8 (37.26 seconds)
Cbc0010I After 746 nodes, 16 on tree, 1e+50 best solution, best possible 8 (37.99 seconds)
Cbc0004I Integer solution of 8 found after 79002 iterations and 775 nodes (38.62 seconds)
Cbc0001I Search completed - best objective 8, took 79002 iterations and 775 nodes (38.63 seconds)
Cbc0032I Strong branching done 1274 times (10992 iterations), fathomed 3 nodes and fixed 0 variables
Cbc0035I Maximum depth 38, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.15821 to 7
Probing was tried 521 times and created 2856 cuts of which 0 were active after adding rounds of cuts (1.97624 seconds)
Gomory was tried 515 times and created 78 cuts of which 0 were active after adding rounds of cuts (1.26295 seconds)
Knapsack was tried 515 times and created 96 cuts of which 0 were active after adding rounds of cuts (3.07615 seconds)
Clique was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.007801 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.041801 seconds)
MixedIntegerRounding2 was tried 515 times and created 2055 cuts of which 0 were active after adding rounds of cuts (2.30893 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00465 seconds)
TwoMirCuts was tried 515 times and created 992 cuts of which 0 were active after adding rounds of cuts (1.03021 seconds)
ZeroHalf was tried 515 times and created 2549 cuts of which 0 were active after adding rounds of cuts (2.20596 seconds)

Result - Optimal solution found
Objective value:                8
Enumerated nodes:               775
Total iterations:               79002
Time (CPU seconds):             38.6733
Time (Wallclock seconds):       38.6793
Total time (CPU seconds):       38.7505   (Wallclock seconds):       38.7369
