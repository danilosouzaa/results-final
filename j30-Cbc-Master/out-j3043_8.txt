Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3043/j3043_8.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.469388 - 0.080665 seconds
Cgl0002I 20 variables fixed
Cgl0003I 5 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 228 rows, 443 columns (443 integer (440 of which binary)) and 4775 elements
Coin3009W Conflict graph built in 0.009 seconds, density: 1.648%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 443 objects (443 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 53 integers unsatisfied sum - 15.4094
Cbc0038I Pass   1: suminf.    4.37222 (14) obj. 1 iterations 54
Cbc0038I Pass   2: suminf.    3.97222 (12) obj. 1 iterations 7
Cbc0038I Pass   3: suminf.    3.76068 (12) obj. 1 iterations 25
Cbc0038I Pass   4: suminf.    4.33333 (12) obj. 1 iterations 10
Cbc0038I Pass   5: suminf.    2.88889 (7) obj. 1 iterations 14
Cbc0038I Pass   6: suminf.    2.88889 (7) obj. 1 iterations 0
Cbc0038I Pass   7: suminf.    2.88889 (7) obj. 1 iterations 11
Cbc0038I Pass   8: suminf.    2.88889 (7) obj. 1 iterations 6
Cbc0038I Pass   9: suminf.    2.88889 (7) obj. 1 iterations 5
Cbc0038I Pass  10: suminf.    2.88889 (7) obj. 1 iterations 6
Cbc0038I Pass  11: suminf.    2.88889 (7) obj. 1 iterations 14
Cbc0038I Pass  12: suminf.    2.88889 (7) obj. 1 iterations 5
Cbc0038I Pass  13: suminf.    2.88889 (7) obj. 1 iterations 14
Cbc0038I Pass  14: suminf.    7.82222 (21) obj. 1 iterations 44
Cbc0038I Pass  15: suminf.    4.27706 (14) obj. 1 iterations 28
Cbc0038I Pass  16: suminf.    4.01039 (14) obj. 1 iterations 3
Cbc0038I Pass  17: suminf.    4.01039 (14) obj. 1 iterations 1
Cbc0038I Pass  18: suminf.    6.76085 (23) obj. 1 iterations 53
Cbc0038I Pass  19: suminf.    3.02604 (12) obj. 1 iterations 39
Cbc0038I Pass  20: suminf.    3.02604 (12) obj. 1 iterations 0
Cbc0038I Pass  21: suminf.    4.08333 (10) obj. 1 iterations 25
Cbc0038I Pass  22: suminf.    3.88889 (10) obj. 1 iterations 10
Cbc0038I Pass  23: suminf.    3.88889 (10) obj. 1 iterations 5
Cbc0038I Pass  24: suminf.    7.83492 (23) obj. 1 iterations 61
Cbc0038I Pass  25: suminf.    5.57353 (16) obj. 1 iterations 36
Cbc0038I Pass  26: suminf.    5.57353 (16) obj. 1 iterations 1
Cbc0038I Pass  27: suminf.    5.57353 (16) obj. 1 iterations 3
Cbc0038I Pass  28: suminf.   11.40111 (36) obj. 1 iterations 62
Cbc0038I Pass  29: suminf.    5.34921 (15) obj. 1 iterations 37
Cbc0038I Pass  30: suminf.    4.26190 (14) obj. 1 iterations 18
Cbc0038I Pass  31: suminf.    4.15476 (14) obj. 1 iterations 8
Cbc0038I Pass  32: suminf.    4.78704 (15) obj. 1 iterations 23
Cbc0038I Pass  33: suminf.    4.48737 (14) obj. 1 iterations 20
Cbc0038I Pass  34: suminf.    4.48737 (14) obj. 1 iterations 1
Cbc0038I Pass  35: suminf.    7.67937 (20) obj. 1 iterations 55
Cbc0038I Pass  36: suminf.    5.55000 (17) obj. 1 iterations 37
Cbc0038I Pass  37: suminf.    5.43889 (17) obj. 1 iterations 5
Cbc0038I Pass  38: suminf.    5.43889 (17) obj. 1 iterations 1
Cbc0038I Pass  39: suminf.    9.63382 (35) obj. 1 iterations 48
Cbc0038I Pass  40: suminf.    5.63182 (18) obj. 1 iterations 45
Cbc0038I Pass  41: suminf.    5.36782 (21) obj. 1 iterations 13
Cbc0038I Pass  42: suminf.    5.28896 (21) obj. 1 iterations 6
Cbc0038I Pass  43: suminf.    6.60201 (19) obj. 1 iterations 28
Cbc0038I Pass  44: suminf.    5.91142 (17) obj. 1 iterations 9
Cbc0038I Pass  45: suminf.    5.70629 (16) obj. 1 iterations 5
Cbc0038I Pass  46: suminf.    5.70629 (16) obj. 1 iterations 0
Cbc0038I Pass  47: suminf.    6.16142 (18) obj. 1 iterations 18
Cbc0038I Pass  48: suminf.    6.16142 (18) obj. 1 iterations 2
Cbc0038I Pass  49: suminf.    6.23492 (18) obj. 1 iterations 18
Cbc0038I Pass  50: suminf.    6.17897 (19) obj. 1 iterations 5
Cbc0038I Pass  51: suminf.    6.99048 (18) obj. 1 iterations 19
Cbc0038I Pass  52: suminf.    5.29603 (13) obj. 1 iterations 18
Cbc0038I Pass  53: suminf.    5.29603 (13) obj. 1 iterations 0
Cbc0038I Pass  54: suminf.    5.29603 (13) obj. 1 iterations 15
Cbc0038I Pass  55: suminf.    5.29603 (13) obj. 1 iterations 5
Cbc0038I Pass  56: suminf.    5.40317 (12) obj. 1 iterations 19
Cbc0038I Pass  57: suminf.    5.29603 (12) obj. 1 iterations 7
Cbc0038I Pass  58: suminf.    5.40317 (12) obj. 1 iterations 11
Cbc0038I Pass  59: suminf.    5.29603 (12) obj. 1 iterations 5
Cbc0038I Pass  60: suminf.    5.29603 (13) obj. 1 iterations 13
Cbc0038I Pass  61: suminf.    5.29603 (13) obj. 1 iterations 5
Cbc0038I Pass  62: suminf.    5.54603 (14) obj. 1 iterations 13
Cbc0038I Pass  63: suminf.    5.54603 (14) obj. 1 iterations 10
Cbc0038I Pass  64: suminf.    5.29603 (13) obj. 1 iterations 11
Cbc0038I Pass  65: suminf.    8.97761 (32) obj. 1 iterations 55
Cbc0038I Pass  66: suminf.    4.27912 (13) obj. 1 iterations 36
Cbc0038I Pass  67: suminf.    4.27912 (13) obj. 1 iterations 1
Cbc0038I Pass  68: suminf.    4.27912 (13) obj. 1 iterations 0
Cbc0038I Pass  69: suminf.    4.97460 (12) obj. 1 iterations 20
Cbc0038I Pass  70: suminf.    4.97460 (12) obj. 1 iterations 6
Cbc0038I Pass  71: suminf.    4.97460 (12) obj. 1 iterations 15
Cbc0038I Pass  72: suminf.    4.97460 (12) obj. 1 iterations 13
Cbc0038I Pass  73: suminf.    4.97460 (12) obj. 1 iterations 2
Cbc0038I Pass  74: suminf.    8.64848 (24) obj. 1 iterations 47
Cbc0038I Pass  75: suminf.    5.73333 (17) obj. 1 iterations 36
Cbc0038I Pass  76: suminf.    3.54575 (17) obj. 1 iterations 23
Cbc0038I Pass  77: suminf.    3.54575 (17) obj. 1 iterations 0
Cbc0038I Pass  78: suminf.    5.40317 (16) obj. 1 iterations 25
Cbc0038I Pass  79: suminf.    4.83175 (16) obj. 1 iterations 11
Cbc0038I Pass  80: suminf.    4.83175 (16) obj. 1 iterations 0
Cbc0038I Pass  81: suminf.    5.76032 (17) obj. 1 iterations 16
Cbc0038I Pass  82: suminf.    4.43889 (15) obj. 1 iterations 15
Cbc0038I Pass  83: suminf.    4.43889 (15) obj. 1 iterations 1
Cbc0038I Pass  84: suminf.    5.83175 (17) obj. 1 iterations 17
Cbc0038I Pass  85: suminf.    5.84127 (18) obj. 1 iterations 10
Cbc0038I Pass  86: suminf.    5.24933 (17) obj. 1 iterations 6
Cbc0038I Pass  87: suminf.    5.24933 (17) obj. 1 iterations 0
Cbc0038I Pass  88: suminf.    6.06032 (16) obj. 1 iterations 15
Cbc0038I Pass  89: suminf.    4.72889 (16) obj. 1 iterations 10
Cbc0038I Pass  90: suminf.    4.68889 (10) obj. 1 iterations 2
Cbc0038I Pass  91: suminf.    4.43889 (10) obj. 1 iterations 15
Cbc0038I Pass  92: suminf.    4.43889 (10) obj. 1 iterations 8
Cbc0038I Pass  93: suminf.    7.17574 (27) obj. 1 iterations 56
Cbc0038I Pass  94: suminf.    5.04074 (23) obj. 1 iterations 35
Cbc0038I Pass  95: suminf.    6.02963 (18) obj. 1 iterations 18
Cbc0038I Pass  96: suminf.    5.97619 (23) obj. 1 iterations 10
Cbc0038I Pass  97: suminf.    8.90283 (22) obj. 1 iterations 22
Cbc0038I Pass  98: suminf.    7.01270 (17) obj. 1 iterations 22
Cbc0038I Pass  99: suminf.    6.50603 (19) obj. 1 iterations 15
Cbc0038I Pass 100: suminf.    6.63867 (26) obj. 1 iterations 47
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 228 rows 443 columns, reduced to 182 rows 171 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.18 seconds)
Cbc0038I Full problem 229 rows 443 columns, reduced to 229 rows 443 columns - too large
Cbc0038I After 1.20 seconds - Feasibility pump exiting - took 0.62 seconds
Cbc0012I Integer solution of 1 found by DiveCoefficient after 675 iterations and 0 nodes (2.41 seconds)
Cbc0031I 43 added rows had average density of 23.209302
Cbc0013I At root node, 43 cuts changed objective from 0.65100671 to 1 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 193 row cuts average 7.2 elements, 15 column cuts (15 active)  in 0.478 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 31 row cuts average 186.4 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 41.1 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 242 row cuts average 196.2 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 33.8 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0001I Search completed - best objective 1, took 675 iterations and 0 nodes (2.42 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.651007 to 1
Probing was tried 24 times and created 208 cuts of which 0 were active after adding rounds of cuts (0.478253 seconds)
Gomory was tried 24 times and created 31 cuts of which 0 were active after adding rounds of cuts (0.103613 seconds)
Knapsack was tried 24 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.103378 seconds)
Clique was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006246 seconds)
OddWheel was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025429 seconds)
MixedIntegerRounding2 was tried 24 times and created 90 cuts of which 0 were active after adding rounds of cuts (0.039409 seconds)
FlowCover was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004218 seconds)
TwoMirCuts was tried 24 times and created 242 cuts of which 0 were active after adding rounds of cuts (0.134441 seconds)
ZeroHalf was tried 24 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.054268 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               0
Total iterations:               675
Time (CPU seconds):             2.45547
Time (Wallclock seconds):       2.43514
Total time (CPU seconds):       2.47166   (Wallclock seconds):       2.44698
