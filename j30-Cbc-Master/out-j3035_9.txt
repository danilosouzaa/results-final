Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_9.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.94416 - 0.107144 seconds
Cgl0002I 3 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 321 rows, 1099 columns (1099 integer (1098 of which binary)) and 12455 elements
Coin3009W Conflict graph built in 0.077 seconds, density: 1.010%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1099 objects (1099 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 88 integers unsatisfied sum - 22.9834
Cbc0038I Pass   1: suminf.   12.44530 (52) obj. 4 iterations 89
Cbc0038I Pass   2: suminf.    7.79169 (53) obj. 5 iterations 48
Cbc0038I Pass   3: suminf.    7.85810 (49) obj. 5 iterations 32
Cbc0038I Pass   4: suminf.    7.27784 (49) obj. 5 iterations 10
Cbc0038I Pass   5: suminf.    7.04927 (49) obj. 5 iterations 3
Cbc0038I Pass   6: suminf.    8.72169 (50) obj. 5 iterations 45
Cbc0038I Pass   7: suminf.    7.29332 (47) obj. 5 iterations 28
Cbc0038I Pass   8: suminf.    7.11247 (48) obj. 5 iterations 5
Cbc0038I Pass   9: suminf.    7.84093 (47) obj. 5 iterations 27
Cbc0038I Pass  10: suminf.    7.49217 (47) obj. 5 iterations 17
Cbc0038I Pass  11: suminf.    7.29808 (47) obj. 5 iterations 16
Cbc0038I Pass  12: suminf.    6.94931 (47) obj. 5 iterations 17
Cbc0038I Pass  13: suminf.    7.84093 (47) obj. 5 iterations 20
Cbc0038I Pass  14: suminf.   17.45874 (75) obj. 5 iterations 89
Cbc0038I Pass  15: suminf.   10.86405 (52) obj. 5 iterations 81
Cbc0038I Pass  16: suminf.   10.59634 (52) obj. 5 iterations 13
Cbc0038I Pass  17: suminf.   10.59634 (50) obj. 5 iterations 10
Cbc0038I Pass  18: suminf.    5.25419 (40) obj. 5 iterations 52
Cbc0038I Pass  19: suminf.    4.76548 (24) obj. 5 iterations 15
Cbc0038I Pass  20: suminf.    4.42710 (20) obj. 5 iterations 58
Cbc0038I Pass  21: suminf.    4.42710 (20) obj. 5 iterations 10
Cbc0038I Pass  22: suminf.    4.80780 (21) obj. 5 iterations 38
Cbc0038I Pass  23: suminf.    4.52209 (21) obj. 5 iterations 21
Cbc0038I Pass  24: suminf.    4.55595 (20) obj. 5 iterations 34
Cbc0038I Pass  25: suminf.    4.27024 (20) obj. 5 iterations 25
Cbc0038I Pass  26: suminf.    5.21282 (20) obj. 5 iterations 44
Cbc0038I Pass  27: suminf.    4.92710 (20) obj. 5 iterations 34
Cbc0038I Pass  28: suminf.    4.71282 (20) obj. 5 iterations 40
Cbc0038I Pass  29: suminf.    4.42710 (20) obj. 5 iterations 28
Cbc0038I Pass  30: suminf.    4.80780 (21) obj. 5 iterations 34
Cbc0038I Pass  31: suminf.    4.52209 (21) obj. 5 iterations 28
Cbc0038I Pass  32: suminf.    4.55595 (20) obj. 5 iterations 44
Cbc0038I Pass  33: suminf.    4.27024 (20) obj. 5 iterations 28
Cbc0038I Pass  34: suminf.    5.03768 (22) obj. 5 iterations 45
Cbc0038I Pass  35: suminf.    8.47086 (31) obj. 5 iterations 116
Cbc0038I Pass  36: suminf.    6.21137 (31) obj. 5 iterations 67
Cbc0038I Pass  37: suminf.    7.82624 (37) obj. 5 iterations 59
Cbc0038I Pass  38: suminf.    7.51975 (31) obj. 5 iterations 16
Cbc0038I Pass  39: suminf.    7.60546 (28) obj. 5 iterations 27
Cbc0038I Pass  40: suminf.    6.94356 (27) obj. 5 iterations 19
Cbc0038I Pass  41: suminf.    6.62689 (29) obj. 5 iterations 2
Cbc0038I Pass  42: suminf.    6.01022 (24) obj. 5 iterations 6
Cbc0038I Pass  43: suminf.    5.62689 (27) obj. 5 iterations 2
Cbc0038I Pass  44: suminf.    8.14356 (27) obj. 5 iterations 49
Cbc0038I Pass  45: suminf.    5.97689 (25) obj. 5 iterations 27
Cbc0038I Pass  46: suminf.    5.88165 (25) obj. 5 iterations 8
Cbc0038I Pass  47: suminf.    8.11069 (29) obj. 5 iterations 41
Cbc0038I Pass  48: suminf.    7.18324 (25) obj. 5 iterations 18
Cbc0038I Pass  49: suminf.    7.08800 (25) obj. 5 iterations 8
Cbc0038I Pass  50: suminf.    6.24481 (27) obj. 5 iterations 20
Cbc0038I Pass  51: suminf.    6.05308 (25) obj. 5 iterations 11
Cbc0038I Pass  52: suminf.    7.53291 (29) obj. 5 iterations 30
Cbc0038I Pass  53: suminf.    6.14832 (25) obj. 5 iterations 24
Cbc0038I Pass  54: suminf.    6.05308 (25) obj. 5 iterations 8
Cbc0038I Pass  55: suminf.    8.16317 (27) obj. 5 iterations 39
Cbc0038I Pass  56: suminf.    6.14832 (25) obj. 5 iterations 29
Cbc0038I Pass  57: suminf.    6.05308 (25) obj. 5 iterations 6
Cbc0038I Pass  58: suminf.    7.33590 (27) obj. 5 iterations 27
Cbc0038I Pass  59: suminf.    7.08800 (25) obj. 5 iterations 22
Cbc0038I Pass  60: suminf.    6.24481 (27) obj. 5 iterations 27
Cbc0038I Pass  61: suminf.   14.72540 (55) obj. 5 iterations 120
Cbc0038I Pass  62: suminf.    6.22767 (28) obj. 5 iterations 86
Cbc0038I Pass  63: suminf.    5.79910 (25) obj. 5 iterations 14
Cbc0038I Pass  64: suminf.    5.49477 (21) obj. 5 iterations 42
Cbc0038I Pass  65: suminf.    4.86815 (21) obj. 5 iterations 20
Cbc0038I Pass  66: suminf.    6.61224 (21) obj. 5 iterations 38
Cbc0038I Pass  67: suminf.    5.67532 (21) obj. 5 iterations 44
Cbc0038I Pass  68: suminf.    5.01817 (21) obj. 5 iterations 8
Cbc0038I Pass  69: suminf.    7.96022 (23) obj. 5 iterations 47
Cbc0038I Pass  70: suminf.    6.35784 (21) obj. 5 iterations 38
Cbc0038I Pass  71: suminf.    5.86805 (21) obj. 5 iterations 7
Cbc0038I Pass  72: suminf.    7.96022 (23) obj. 5 iterations 46
Cbc0038I Pass  73: suminf.    6.35784 (21) obj. 5 iterations 34
Cbc0038I Pass  74: suminf.    5.86805 (21) obj. 5 iterations 6
Cbc0038I Pass  75: suminf.    7.96022 (23) obj. 5 iterations 41
Cbc0038I Pass  76: suminf.    6.35784 (21) obj. 5 iterations 29
Cbc0038I Pass  77: suminf.    5.86805 (21) obj. 5 iterations 8
Cbc0038I Pass  78: suminf.    7.96022 (23) obj. 5 iterations 42
Cbc0038I Pass  79: suminf.    6.35784 (21) obj. 5 iterations 36
Cbc0038I Pass  80: suminf.    5.86805 (21) obj. 5 iterations 7
Cbc0038I Pass  81: suminf.    8.31317 (23) obj. 5 iterations 45
Cbc0038I Pass  82: suminf.    6.35784 (21) obj. 5 iterations 34
Cbc0038I Pass  83: suminf.    5.86805 (21) obj. 5 iterations 5
Cbc0038I Pass  84: suminf.    7.96022 (23) obj. 5 iterations 49
Cbc0038I Pass  85: suminf.    6.35784 (21) obj. 5 iterations 37
Cbc0038I Pass  86: suminf.    5.86805 (21) obj. 5 iterations 6
Cbc0038I Pass  87: suminf.    8.31317 (23) obj. 5 iterations 46
Cbc0038I Pass  88: suminf.    6.35784 (21) obj. 5 iterations 39
Cbc0038I Pass  89: suminf.    5.86805 (21) obj. 5 iterations 5
Cbc0038I Pass  90: suminf.    7.96022 (23) obj. 5 iterations 52
Cbc0038I Pass  91: suminf.    6.35784 (21) obj. 5 iterations 40
Cbc0038I Pass  92: suminf.    5.86805 (21) obj. 5 iterations 8
Cbc0038I Pass  93: suminf.    8.31317 (23) obj. 5 iterations 47
Cbc0038I Pass  94: suminf.    6.35784 (21) obj. 5 iterations 33
Cbc0038I Pass  95: suminf.    5.86805 (21) obj. 5 iterations 5
Cbc0038I Pass  96: suminf.    7.96022 (23) obj. 5 iterations 39
Cbc0038I Pass  97: suminf.    6.35784 (21) obj. 5 iterations 34
Cbc0038I Pass  98: suminf.    5.86805 (21) obj. 5 iterations 7
Cbc0038I Pass  99: suminf.    6.70849 (21) obj. 5 iterations 32
Cbc0038I Pass 100: suminf.   14.42225 (45) obj. 5 iterations 152
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 844 integers at bound fixed and 0 continuous
Cbc0038I Full problem 321 rows 1099 columns, reduced to 220 rows 214 columns
Cbc0038I Mini branch and bound did not improve solution (3.76 seconds)
Cbc0038I After 3.76 seconds - Feasibility pump exiting - took 2.08 seconds
Cbc0031I 71 added rows had average density of 49.211268
Cbc0013I At root node, 71 cuts changed objective from 1.944165 to 3 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 259 row cuts average 7.3 elements, 3 column cuts (3 active)  in 0.796 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 506.4 elements, 0 column cuts (0 active)  in 0.542 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 173 row cuts average 78.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 223 row cuts average 149.5 elements, 0 column cuts (0 active)  in 0.265 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 123 row cuts average 71.8 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 3 (7.16 seconds)
Cbc0010I After 4 nodes, 1 on tree, 1e+50 best solution, best possible 4 (7.97 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 4 (8.71 seconds)
Cbc0010I After 17 nodes, 9 on tree, 1e+50 best solution, best possible 4 (9.42 seconds)
Cbc0010I After 26 nodes, 12 on tree, 1e+50 best solution, best possible 4 (10.13 seconds)
Cbc0010I After 42 nodes, 10 on tree, 1e+50 best solution, best possible 4 (10.90 seconds)
Cbc0010I After 53 nodes, 9 on tree, 1e+50 best solution, best possible 4 (11.63 seconds)
Cbc0010I After 61 nodes, 10 on tree, 1e+50 best solution, best possible 4 (12.38 seconds)
Cbc0010I After 74 nodes, 10 on tree, 1e+50 best solution, best possible 4 (13.11 seconds)
Cbc0010I After 84 nodes, 9 on tree, 1e+50 best solution, best possible 4 (13.86 seconds)
Cbc0010I After 96 nodes, 8 on tree, 1e+50 best solution, best possible 4 (14.62 seconds)
Cbc0010I After 109 nodes, 8 on tree, 1e+50 best solution, best possible 4 (15.40 seconds)
Cbc0010I After 123 nodes, 8 on tree, 1e+50 best solution, best possible 4 (16.12 seconds)
Cbc0010I After 139 nodes, 8 on tree, 1e+50 best solution, best possible 4 (16.88 seconds)
Cbc0010I After 150 nodes, 8 on tree, 1e+50 best solution, best possible 4 (17.66 seconds)
Cbc0010I After 163 nodes, 6 on tree, 1e+50 best solution, best possible 4 (18.40 seconds)
Cbc0010I After 173 nodes, 8 on tree, 1e+50 best solution, best possible 4 (19.16 seconds)
Cbc0010I After 186 nodes, 5 on tree, 1e+50 best solution, best possible 4 (19.89 seconds)
Cbc0010I After 199 nodes, 7 on tree, 1e+50 best solution, best possible 4 (20.62 seconds)
Cbc0010I After 213 nodes, 9 on tree, 1e+50 best solution, best possible 4 (21.37 seconds)
Cbc0010I After 225 nodes, 7 on tree, 1e+50 best solution, best possible 4 (22.15 seconds)
Cbc0010I After 236 nodes, 9 on tree, 1e+50 best solution, best possible 4 (22.87 seconds)
Cbc0010I After 248 nodes, 12 on tree, 1e+50 best solution, best possible 4 (23.60 seconds)
Cbc0010I After 266 nodes, 10 on tree, 1e+50 best solution, best possible 4 (24.34 seconds)
Cbc0010I After 278 nodes, 10 on tree, 1e+50 best solution, best possible 4 (25.06 seconds)
Cbc0010I After 294 nodes, 8 on tree, 1e+50 best solution, best possible 4 (25.82 seconds)
Cbc0010I After 311 nodes, 8 on tree, 1e+50 best solution, best possible 4 (26.52 seconds)
Cbc0010I After 327 nodes, 3 on tree, 1e+50 best solution, best possible 4 (27.23 seconds)
Cbc0010I After 339 nodes, 5 on tree, 1e+50 best solution, best possible 4 (28.02 seconds)
Cbc0010I After 353 nodes, 7 on tree, 1e+50 best solution, best possible 4 (28.72 seconds)
Cbc0010I After 367 nodes, 6 on tree, 1e+50 best solution, best possible 4 (29.42 seconds)
Cbc0010I After 381 nodes, 5 on tree, 1e+50 best solution, best possible 4 (30.19 seconds)
Cbc0010I After 393 nodes, 4 on tree, 1e+50 best solution, best possible 4 (30.96 seconds)
Cbc0010I After 404 nodes, 6 on tree, 1e+50 best solution, best possible 4 (31.70 seconds)
Cbc0010I After 414 nodes, 9 on tree, 1e+50 best solution, best possible 4 (32.44 seconds)
Cbc0010I After 427 nodes, 9 on tree, 1e+50 best solution, best possible 4 (33.17 seconds)
Cbc0010I After 439 nodes, 7 on tree, 1e+50 best solution, best possible 4 (33.87 seconds)
Cbc0010I After 450 nodes, 8 on tree, 1e+50 best solution, best possible 4 (34.61 seconds)
Cbc0010I After 465 nodes, 2 on tree, 1e+50 best solution, best possible 4 (35.47 seconds)
Cbc0010I After 475 nodes, 6 on tree, 1e+50 best solution, best possible 4 (36.21 seconds)
Cbc0010I After 484 nodes, 2 on tree, 1e+50 best solution, best possible 4 (36.93 seconds)
Cbc0010I After 490 nodes, 5 on tree, 1e+50 best solution, best possible 5 (37.66 seconds)
Cbc0010I After 503 nodes, 10 on tree, 1e+50 best solution, best possible 5 (38.37 seconds)
Cbc0010I After 520 nodes, 8 on tree, 1e+50 best solution, best possible 5 (39.14 seconds)
Cbc0010I After 536 nodes, 7 on tree, 1e+50 best solution, best possible 5 (39.91 seconds)
Cbc0010I After 550 nodes, 8 on tree, 1e+50 best solution, best possible 5 (40.65 seconds)
Cbc0004I Integer solution of 5 found after 64397 iterations and 557 nodes (40.88 seconds)
Cbc0001I Search completed - best objective 5, took 64397 iterations and 557 nodes (40.88 seconds)
Cbc0032I Strong branching done 1250 times (10585 iterations), fathomed 8 nodes and fixed 8 variables
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.94416 to 3
Probing was tried 393 times and created 3841 cuts of which 0 were active after adding rounds of cuts (2.65454 seconds)
Gomory was tried 380 times and created 75 cuts of which 0 were active after adding rounds of cuts (2.05492 seconds)
Knapsack was tried 380 times and created 208 cuts of which 0 were active after adding rounds of cuts (2.78885 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015518 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.072997 seconds)
MixedIntegerRounding2 was tried 380 times and created 3299 cuts of which 0 were active after adding rounds of cuts (2.65761 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005131 seconds)
TwoMirCuts was tried 380 times and created 772 cuts of which 0 were active after adding rounds of cuts (0.988559 seconds)
ZeroHalf was tried 380 times and created 1978 cuts of which 0 were active after adding rounds of cuts (2.67904 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               557
Total iterations:               64397
Time (CPU seconds):             40.7411
Time (Wallclock seconds):       40.9327
Total time (CPU seconds):       40.7683   (Wallclock seconds):       40.9519
