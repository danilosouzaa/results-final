Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3047/j3047_4.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.147346 seconds
Cgl0002I 5 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 324 rows, 766 columns (766 integer (765 of which binary)) and 12125 elements
Coin3009W Conflict graph built in 0.017 seconds, density: 1.054%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 766 objects (766 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 100 integers unsatisfied sum - 26.8533
Cbc0038I Pass   1: suminf.   14.29759 (67) obj. 1 iterations 210
Cbc0038I Pass   2: suminf.   12.44339 (71) obj. 2 iterations 77
Cbc0038I Pass   3: suminf.   12.38275 (72) obj. 2 iterations 19
Cbc0038I Pass   4: suminf.   11.10965 (55) obj. 2 iterations 97
Cbc0038I Pass   5: suminf.   10.46060 (55) obj. 2 iterations 50
Cbc0038I Pass   6: suminf.   10.41672 (63) obj. 2 iterations 10
Cbc0038I Pass   7: suminf.    7.83673 (40) obj. 2 iterations 70
Cbc0038I Pass   8: suminf.    6.62248 (33) obj. 2 iterations 65
Cbc0038I Pass   9: suminf.    6.28619 (34) obj. 2 iterations 60
Cbc0038I Pass  10: suminf.    6.28408 (31) obj. 2 iterations 9
Cbc0038I Pass  11: suminf.    9.38892 (31) obj. 2 iterations 175
Cbc0038I Pass  12: suminf.    5.44324 (27) obj. 2 iterations 98
Cbc0038I Pass  13: suminf.    4.73856 (20) obj. 2 iterations 37
Cbc0038I Pass  14: suminf.    4.68072 (20) obj. 2 iterations 18
Cbc0038I Pass  15: suminf.    5.56023 (25) obj. 2 iterations 60
Cbc0038I Pass  16: suminf.    4.33449 (20) obj. 2 iterations 76
Cbc0038I Pass  17: suminf.    7.58658 (24) obj. 2 iterations 56
Cbc0038I Pass  18: suminf.    4.44227 (19) obj. 2 iterations 62
Cbc0038I Pass  19: suminf.    4.16612 (16) obj. 2 iterations 59
Cbc0038I Pass  20: suminf.    3.73114 (14) obj. 2 iterations 33
Cbc0038I Pass  21: suminf.    3.60752 (15) obj. 2 iterations 38
Cbc0038I Pass  22: suminf.    4.61029 (26) obj. 2 iterations 67
Cbc0038I Pass  23: suminf.   10.50658 (47) obj. 2 iterations 153
Cbc0038I Pass  24: suminf.    3.52837 (21) obj. 2 iterations 126
Cbc0038I Pass  25: suminf.    3.39223 (20) obj. 2 iterations 15
Cbc0038I Pass  26: suminf.    4.95645 (23) obj. 2 iterations 74
Cbc0038I Pass  27: suminf.    3.22134 (21) obj. 2 iterations 67
Cbc0038I Pass  28: suminf.    3.08382 (21) obj. 2 iterations 22
Cbc0038I Pass  29: suminf.    6.86823 (24) obj. 2 iterations 110
Cbc0038I Pass  30: suminf.    5.13951 (19) obj. 2 iterations 68
Cbc0038I Pass  31: suminf.    4.65678 (19) obj. 2 iterations 29
Cbc0038I Pass  32: suminf.    4.65384 (20) obj. 2 iterations 17
Cbc0038I Pass  33: suminf.    4.59066 (20) obj. 2 iterations 124
Cbc0038I Pass  34: suminf.    3.77883 (21) obj. 2 iterations 31
Cbc0038I Pass  35: suminf.    3.74222 (22) obj. 2 iterations 19
Cbc0038I Pass  36: suminf.    7.93222 (27) obj. 2 iterations 120
Cbc0038I Pass  37: suminf.    6.56198 (26) obj. 2 iterations 68
Cbc0038I Pass  38: suminf.    5.25637 (18) obj. 2 iterations 120
Cbc0038I Pass  39: suminf.    4.50249 (22) obj. 2 iterations 49
Cbc0038I Pass  40: suminf.    4.33249 (23) obj. 2 iterations 2
Cbc0038I Pass  41: suminf.    4.33249 (23) obj. 2 iterations 2
Cbc0038I Pass  42: suminf.    6.77681 (23) obj. 2 iterations 60
Cbc0038I Pass  43: suminf.    5.57574 (20) obj. 2 iterations 67
Cbc0038I Pass  44: suminf.    5.49536 (21) obj. 2 iterations 15
Cbc0038I Pass  45: suminf.    4.84952 (21) obj. 2 iterations 21
Cbc0038I Pass  46: suminf.    4.34124 (23) obj. 2 iterations 45
Cbc0038I Pass  47: suminf.    6.17403 (19) obj. 2 iterations 97
Cbc0038I Pass  48: suminf.    5.00644 (21) obj. 2 iterations 60
Cbc0038I Pass  49: suminf.    4.77363 (22) obj. 2 iterations 23
Cbc0038I Pass  50: suminf.    5.10745 (22) obj. 2 iterations 62
Cbc0038I Pass  51: suminf.    3.77460 (17) obj. 2 iterations 72
Cbc0038I Pass  52: suminf.    3.87989 (18) obj. 2 iterations 60
Cbc0038I Pass  53: suminf.    3.05465 (18) obj. 2 iterations 64
Cbc0038I Pass  54: suminf.    3.05465 (18) obj. 2 iterations 4
Cbc0038I Pass  55: suminf.    5.62468 (23) obj. 2 iterations 78
Cbc0038I Pass  56: suminf.    4.17400 (22) obj. 2 iterations 108
Cbc0038I Pass  57: suminf.    4.02711 (19) obj. 2 iterations 39
Cbc0038I Pass  58: suminf.    4.89063 (20) obj. 2 iterations 77
Cbc0038I Pass  59: suminf.    4.13341 (18) obj. 2 iterations 62
Cbc0038I Pass  60: suminf.    5.37794 (19) obj. 2 iterations 79
Cbc0038I Pass  61: suminf.    4.51151 (17) obj. 2 iterations 59
Cbc0038I Pass  62: suminf.    4.38707 (23) obj. 2 iterations 38
Cbc0038I Pass  63: suminf.    5.97795 (26) obj. 2 iterations 108
Cbc0038I Pass  64: suminf.    3.99696 (23) obj. 2 iterations 77
Cbc0038I Pass  65: suminf.    3.93345 (22) obj. 2 iterations 31
Cbc0038I Pass  66: suminf.    4.69101 (22) obj. 2 iterations 81
Cbc0038I Pass  67: suminf.    4.02365 (22) obj. 2 iterations 58
Cbc0038I Pass  68: suminf.    6.58385 (23) obj. 2 iterations 84
Cbc0038I Pass  69: suminf.    4.81424 (20) obj. 2 iterations 56
Cbc0038I Pass  70: suminf.    4.21851 (21) obj. 2 iterations 43
Cbc0038I Pass  71: suminf.    5.86317 (23) obj. 2 iterations 101
Cbc0038I Pass  72: suminf.    4.50794 (23) obj. 2 iterations 54
Cbc0038I Pass  73: suminf.    3.44042 (19) obj. 2 iterations 83
Cbc0038I Pass  74: suminf.    5.44563 (25) obj. 2 iterations 102
Cbc0038I Pass  75: suminf.    4.18715 (23) obj. 2 iterations 35
Cbc0038I Pass  76: suminf.   13.22606 (59) obj. 2 iterations 184
Cbc0038I Pass  77: suminf.    8.13377 (37) obj. 2 iterations 128
Cbc0038I Pass  78: suminf.    7.61448 (38) obj. 2 iterations 34
Cbc0038I Pass  79: suminf.    8.16720 (34) obj. 2 iterations 76
Cbc0038I Pass  80: suminf.    7.38123 (35) obj. 2 iterations 53
Cbc0038I Pass  81: suminf.    7.09652 (40) obj. 2 iterations 48
Cbc0038I Pass  82: suminf.    7.33617 (34) obj. 2 iterations 91
Cbc0038I Pass  83: suminf.    6.79024 (33) obj. 2 iterations 52
Cbc0038I Pass  84: suminf.    6.75955 (33) obj. 2 iterations 24
Cbc0038I Pass  85: suminf.    9.55304 (47) obj. 2 iterations 119
Cbc0038I Pass  86: suminf.    6.79460 (35) obj. 2 iterations 42
Cbc0038I Pass  87: suminf.    7.87934 (33) obj. 2 iterations 107
Cbc0038I Pass  88: suminf.    5.75846 (28) obj. 2 iterations 55
Cbc0038I Pass  89: suminf.    6.75556 (25) obj. 2 iterations 108
Cbc0038I Pass  90: suminf.    5.11667 (21) obj. 2 iterations 65
Cbc0038I Pass  91: suminf.    5.09919 (22) obj. 2 iterations 19
Cbc0038I Pass  92: suminf.    5.52704 (23) obj. 2 iterations 96
Cbc0038I Pass  93: suminf.    4.20776 (23) obj. 2 iterations 65
Cbc0038I Pass  94: suminf.    3.71908 (20) obj. 2 iterations 19
Cbc0038I Pass  95: suminf.    3.15486 (20) obj. 2 iterations 7
Cbc0038I Pass  96: suminf.    3.09218 (18) obj. 2 iterations 12
Cbc0038I Pass  97: suminf.    3.68046 (16) obj. 2 iterations 102
Cbc0038I Pass  98: suminf.    2.30667 (12) obj. 2 iterations 60
Cbc0038I Pass  99: suminf.    3.37798 (14) obj. 2 iterations 57
Cbc0038I Pass 100: suminf.   13.94064 (49) obj. 2 iterations 151
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 469 integers at bound fixed and 0 continuous
Cbc0038I Full problem 324 rows 766 columns, reduced to 223 rows 263 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.92 seconds)
Cbc0038I After 1.92 seconds - Feasibility pump exiting - took 0.92 seconds
Cbc0031I 51 added rows had average density of 52.529412
Cbc0013I At root node, 51 cuts changed objective from 0 to 0.99990339 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.281 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 182 row cuts average 663.9 elements, 0 column cuts (0 active)  in 0.530 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 106 row cuts average 59.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 115 row cuts average 65.5 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 136 row cuts average 89.1 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (4.15 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (5.25 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (6.09 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (6.97 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible 1 (7.85 seconds)
Cbc0010I After 13 nodes, 11 on tree, 1e+50 best solution, best possible 1 (8.58 seconds)
Cbc0010I After 23 nodes, 15 on tree, 1e+50 best solution, best possible 1 (9.33 seconds)
Cbc0010I After 35 nodes, 18 on tree, 1e+50 best solution, best possible 1 (10.13 seconds)
Cbc0010I After 43 nodes, 21 on tree, 1e+50 best solution, best possible 1 (10.90 seconds)
Cbc0010I After 55 nodes, 21 on tree, 1e+50 best solution, best possible 1 (11.66 seconds)
Cbc0010I After 65 nodes, 18 on tree, 1e+50 best solution, best possible 1 (12.47 seconds)
Cbc0010I After 72 nodes, 21 on tree, 1e+50 best solution, best possible 1 (13.23 seconds)
Cbc0010I After 82 nodes, 22 on tree, 1e+50 best solution, best possible 1 (13.94 seconds)
Cbc0010I After 90 nodes, 24 on tree, 1e+50 best solution, best possible 1 (14.68 seconds)
Cbc0010I After 99 nodes, 23 on tree, 1e+50 best solution, best possible 1 (15.40 seconds)
Cbc0010I After 115 nodes, 18 on tree, 1e+50 best solution, best possible 1 (16.14 seconds)
Cbc0010I After 129 nodes, 18 on tree, 1e+50 best solution, best possible 1 (16.86 seconds)
Cbc0010I After 147 nodes, 15 on tree, 1e+50 best solution, best possible 1 (17.60 seconds)
Cbc0010I After 157 nodes, 14 on tree, 1e+50 best solution, best possible 1 (18.31 seconds)
Cbc0010I After 166 nodes, 12 on tree, 1e+50 best solution, best possible 1 (19.13 seconds)
Cbc0010I After 174 nodes, 11 on tree, 1e+50 best solution, best possible 1 (19.91 seconds)
Cbc0010I After 181 nodes, 9 on tree, 1e+50 best solution, best possible 1 (20.68 seconds)
Cbc0010I After 187 nodes, 8 on tree, 1e+50 best solution, best possible 1 (21.58 seconds)
Cbc0010I After 194 nodes, 10 on tree, 1e+50 best solution, best possible 1 (22.49 seconds)
Cbc0010I After 203 nodes, 13 on tree, 1e+50 best solution, best possible 1 (23.29 seconds)
Cbc0010I After 214 nodes, 15 on tree, 1e+50 best solution, best possible 1 (24.16 seconds)
Cbc0010I After 225 nodes, 13 on tree, 1e+50 best solution, best possible 1 (24.86 seconds)
Cbc0010I After 232 nodes, 11 on tree, 1e+50 best solution, best possible 1 (25.58 seconds)
Cbc0010I After 238 nodes, 12 on tree, 1e+50 best solution, best possible 1 (26.30 seconds)
Cbc0010I After 243 nodes, 10 on tree, 1e+50 best solution, best possible 1 (27.02 seconds)
Cbc0010I After 252 nodes, 9 on tree, 1e+50 best solution, best possible 1 (27.72 seconds)
Cbc0010I After 257 nodes, 11 on tree, 1e+50 best solution, best possible 1 (28.54 seconds)
Cbc0010I After 266 nodes, 12 on tree, 1e+50 best solution, best possible 1 (29.31 seconds)
Cbc0010I After 277 nodes, 11 on tree, 1e+50 best solution, best possible 1 (30.06 seconds)
Cbc0010I After 284 nodes, 10 on tree, 1e+50 best solution, best possible 1 (30.77 seconds)
Cbc0010I After 291 nodes, 10 on tree, 1e+50 best solution, best possible 1 (31.63 seconds)
Cbc0010I After 298 nodes, 10 on tree, 1e+50 best solution, best possible 1 (32.35 seconds)
Cbc0010I After 304 nodes, 9 on tree, 1e+50 best solution, best possible 1 (33.18 seconds)
Cbc0010I After 314 nodes, 6 on tree, 1e+50 best solution, best possible 1 (33.91 seconds)
Cbc0010I After 319 nodes, 6 on tree, 1e+50 best solution, best possible 1 (34.65 seconds)
Cbc0010I After 326 nodes, 6 on tree, 1e+50 best solution, best possible 1 (35.37 seconds)
Cbc0010I After 334 nodes, 3 on tree, 1e+50 best solution, best possible 1 (36.46 seconds)
Cbc0010I After 340 nodes, 1 on tree, 1e+50 best solution, best possible 2 (37.38 seconds)
Cbc0010I After 342 nodes, 3 on tree, 1e+50 best solution, best possible 2 (38.12 seconds)
Cbc0010I After 356 nodes, 13 on tree, 1e+50 best solution, best possible 2 (38.83 seconds)
Cbc0010I After 384 nodes, 22 on tree, 1e+50 best solution, best possible 2 (39.61 seconds)
Cbc0010I After 408 nodes, 27 on tree, 1e+50 best solution, best possible 2 (40.31 seconds)
Cbc0010I After 428 nodes, 27 on tree, 1e+50 best solution, best possible 2 (41.01 seconds)
Cbc0010I After 461 nodes, 27 on tree, 1e+50 best solution, best possible 2 (41.72 seconds)
Cbc0010I After 493 nodes, 21 on tree, 1e+50 best solution, best possible 2 (42.43 seconds)
Cbc0010I After 511 nodes, 22 on tree, 1e+50 best solution, best possible 2 (43.16 seconds)
Cbc0010I After 530 nodes, 23 on tree, 1e+50 best solution, best possible 2 (43.89 seconds)
Cbc0010I After 547 nodes, 25 on tree, 1e+50 best solution, best possible 2 (44.60 seconds)
Cbc0010I After 558 nodes, 26 on tree, 1e+50 best solution, best possible 2 (45.33 seconds)
Cbc0010I After 571 nodes, 27 on tree, 1e+50 best solution, best possible 2 (46.17 seconds)
Cbc0010I After 587 nodes, 34 on tree, 1e+50 best solution, best possible 2 (46.89 seconds)
Cbc0010I After 603 nodes, 30 on tree, 1e+50 best solution, best possible 2 (47.59 seconds)
Cbc0010I After 615 nodes, 28 on tree, 1e+50 best solution, best possible 2 (48.35 seconds)
Cbc0010I After 625 nodes, 29 on tree, 1e+50 best solution, best possible 2 (49.13 seconds)
Cbc0010I After 635 nodes, 31 on tree, 1e+50 best solution, best possible 2 (49.90 seconds)
Cbc0010I After 650 nodes, 25 on tree, 1e+50 best solution, best possible 2 (50.63 seconds)
Cbc0010I After 657 nodes, 28 on tree, 1e+50 best solution, best possible 2 (51.37 seconds)
Cbc0010I After 666 nodes, 30 on tree, 1e+50 best solution, best possible 2 (52.14 seconds)
Cbc0010I After 683 nodes, 34 on tree, 1e+50 best solution, best possible 2 (52.86 seconds)
Cbc0010I After 706 nodes, 33 on tree, 1e+50 best solution, best possible 2 (53.61 seconds)
Cbc0010I After 724 nodes, 34 on tree, 1e+50 best solution, best possible 2 (54.34 seconds)
Cbc0010I After 744 nodes, 38 on tree, 1e+50 best solution, best possible 2 (55.06 seconds)
Cbc0010I After 771 nodes, 41 on tree, 1e+50 best solution, best possible 2 (55.77 seconds)
Cbc0016I Integer solution of 2 found by strong branching after 120602 iterations and 803 nodes (56.44 seconds)
Cbc0001I Search completed - best objective 2, took 120667 iterations and 803 nodes (56.45 seconds)
Cbc0032I Strong branching done 4826 times (132958 iterations), fathomed 24 nodes and fixed 90 variables
Cbc0035I Maximum depth 39, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 581 times and created 2789 cuts of which 0 were active after adding rounds of cuts (1.81928 seconds)
Gomory was tried 573 times and created 196 cuts of which 0 were active after adding rounds of cuts (1.77295 seconds)
Knapsack was tried 573 times and created 582 cuts of which 0 were active after adding rounds of cuts (3.13113 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008871 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.041485 seconds)
MixedIntegerRounding2 was tried 573 times and created 2745 cuts of which 0 were active after adding rounds of cuts (1.65222 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004964 seconds)
TwoMirCuts was tried 573 times and created 1544 cuts of which 0 were active after adding rounds of cuts (0.763911 seconds)
ZeroHalf was tried 573 times and created 3413 cuts of which 0 were active after adding rounds of cuts (2.88523 seconds)

Result - Optimal solution found
Objective value:                2
Enumerated nodes:               803
Total iterations:               120667
Time (CPU seconds):             56.4766
Time (Wallclock seconds):       56.4925
Total time (CPU seconds):       56.5066   (Wallclock seconds):       56.5113
