Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_5.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 6 - 0.040493 seconds
Cgl0002I 2 variables fixed
Cgl0003I 66 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 14 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 298 rows, 929 columns (929 integer (928 of which binary)) and 11259 elements
Coin3009W Conflict graph built in 0.058 seconds, density: 1.183%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 929 objects (929 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 53 integers unsatisfied sum - 14.0532
Cbc0038I Pass   1: suminf.   10.83819 (49) obj. 7 iterations 50
Cbc0038I Pass   2: suminf.   10.48519 (52) obj. 7 iterations 8
Cbc0038I Pass   3: suminf.   10.41915 (51) obj. 7 iterations 2
Cbc0038I Pass   4: suminf.   10.29134 (51) obj. 7 iterations 16
Cbc0038I Pass   5: suminf.    9.67229 (47) obj. 7 iterations 11
Cbc0038I Pass   6: suminf.    9.67229 (47) obj. 7 iterations 0
Cbc0038I Pass   7: suminf.   10.21543 (51) obj. 7 iterations 15
Cbc0038I Pass   8: suminf.    9.46563 (49) obj. 7 iterations 15
Cbc0038I Pass   9: suminf.    9.22991 (49) obj. 7 iterations 1
Cbc0038I Pass  10: suminf.    8.95277 (53) obj. 7 iterations 3
Cbc0038I Pass  11: suminf.    8.45277 (53) obj. 7 iterations 1
Cbc0038I Pass  12: suminf.    8.45277 (53) obj. 7 iterations 0
Cbc0038I Pass  13: suminf.    7.70325 (34) obj. 7 iterations 14
Cbc0038I Pass  14: suminf.    7.46515 (34) obj. 7 iterations 6
Cbc0038I Pass  15: suminf.    7.50631 (35) obj. 7 iterations 20
Cbc0038I Pass  16: suminf.    6.94848 (34) obj. 7 iterations 15
Cbc0038I Pass  17: suminf.    6.86515 (34) obj. 7 iterations 4
Cbc0038I Pass  18: suminf.    8.77297 (39) obj. 7 iterations 21
Cbc0038I Pass  19: suminf.    7.86277 (39) obj. 7 iterations 15
Cbc0038I Pass  20: suminf.    7.67944 (39) obj. 7 iterations 4
Cbc0038I Pass  21: suminf.    7.45189 (34) obj. 7 iterations 17
Cbc0038I Pass  22: suminf.    6.94848 (34) obj. 7 iterations 14
Cbc0038I Pass  23: suminf.    6.86515 (34) obj. 7 iterations 4
Cbc0038I Pass  24: suminf.    8.20155 (35) obj. 7 iterations 20
Cbc0038I Pass  25: suminf.    7.54848 (34) obj. 7 iterations 15
Cbc0038I Pass  26: suminf.    7.46515 (34) obj. 7 iterations 4
Cbc0038I Pass  27: suminf.    7.73420 (38) obj. 7 iterations 16
Cbc0038I Pass  28: suminf.    7.16277 (34) obj. 7 iterations 8
Cbc0038I Pass  29: suminf.    7.07944 (34) obj. 7 iterations 2
Cbc0038I Pass  30: suminf.    7.97944 (34) obj. 7 iterations 25
Cbc0038I Pass  31: suminf.    7.84050 (34) obj. 7 iterations 11
Cbc0038I Pass  32: suminf.    7.55960 (30) obj. 7 iterations 25
Cbc0038I Pass  33: suminf.    7.35589 (30) obj. 7 iterations 14
Cbc0038I Pass  34: suminf.    7.76466 (36) obj. 7 iterations 22
Cbc0038I Pass  35: suminf.    7.76466 (36) obj. 7 iterations 4
Cbc0038I Pass  36: suminf.    7.40087 (31) obj. 7 iterations 23
Cbc0038I Pass  37: suminf.    6.16277 (28) obj. 7 iterations 17
Cbc0038I Pass  38: suminf.    5.82944 (28) obj. 7 iterations 13
Cbc0038I Pass  39: suminf.    5.82944 (28) obj. 7 iterations 10
Cbc0038I Pass  40: suminf.    8.09610 (28) obj. 7 iterations 17
Cbc0038I Pass  41: suminf.    6.47706 (26) obj. 7 iterations 14
Cbc0038I Pass  42: suminf.    6.47706 (26) obj. 7 iterations 0
Cbc0038I Pass  43: suminf.    9.06547 (26) obj. 7 iterations 28
Cbc0038I Pass  44: suminf.    8.06547 (26) obj. 7 iterations 18
Cbc0038I Pass  45: suminf.    8.56077 (24) obj. 7 iterations 27
Cbc0038I Pass  46: suminf.    7.56077 (24) obj. 7 iterations 17
Cbc0038I Pass  47: suminf.    8.96547 (24) obj. 7 iterations 25
Cbc0038I Pass  48: suminf.    7.96547 (24) obj. 7 iterations 17
Cbc0038I Pass  49: suminf.    7.36077 (24) obj. 7 iterations 23
Cbc0038I Pass  50: suminf.    6.96077 (24) obj. 7 iterations 13
Cbc0038I Pass  51: suminf.    6.94259 (22) obj. 7 iterations 4
Cbc0038I Pass  52: suminf.    7.96547 (22) obj. 7 iterations 30
Cbc0038I Pass  53: suminf.    7.56547 (22) obj. 7 iterations 18
Cbc0038I Pass  54: suminf.    7.74259 (22) obj. 7 iterations 25
Cbc0038I Pass  55: suminf.    7.34259 (22) obj. 7 iterations 17
Cbc0038I Pass  56: suminf.    6.94259 (22) obj. 7 iterations 9
Cbc0038I Pass  57: suminf.    6.94259 (22) obj. 7 iterations 8
Cbc0038I Pass  58: suminf.    7.96547 (22) obj. 7 iterations 29
Cbc0038I Pass  59: suminf.    7.56547 (22) obj. 7 iterations 20
Cbc0038I Pass  60: suminf.    7.74259 (22) obj. 7 iterations 28
Cbc0038I Pass  61: suminf.    7.34259 (22) obj. 7 iterations 20
Cbc0038I Pass  62: suminf.    6.35887 (22) obj. 7 iterations 16
Cbc0038I Pass  63: suminf.    6.35887 (22) obj. 7 iterations 12
Cbc0038I Pass  64: suminf.    7.96547 (22) obj. 7 iterations 30
Cbc0038I Pass  65: suminf.    7.56547 (22) obj. 7 iterations 21
Cbc0038I Pass  66: suminf.    7.74259 (22) obj. 7 iterations 26
Cbc0038I Pass  67: suminf.    7.34259 (22) obj. 7 iterations 19
Cbc0038I Pass  68: suminf.    7.34259 (22) obj. 7 iterations 9
Cbc0038I Pass  69: suminf.    6.62001 (22) obj. 7 iterations 27
Cbc0038I Pass  70: suminf.    6.62001 (22) obj. 7 iterations 17
Cbc0038I Pass  71: suminf.    7.02001 (22) obj. 7 iterations 14
Cbc0038I Pass  72: suminf.    7.02001 (22) obj. 7 iterations 13
Cbc0038I Pass  73: suminf.    7.04858 (22) obj. 7 iterations 12
Cbc0038I Pass  74: suminf.    7.35683 (32) obj. 7 iterations 99
Cbc0038I Pass  75: suminf.    5.01231 (22) obj. 7 iterations 66
Cbc0038I Pass  76: suminf.    7.71915 (24) obj. 7 iterations 53
Cbc0038I Pass  77: suminf.    6.91915 (24) obj. 7 iterations 18
Cbc0038I Pass  78: suminf.    5.57583 (22) obj. 7 iterations 38
Cbc0038I Pass  79: suminf.    5.37583 (22) obj. 7 iterations 12
Cbc0038I Pass  80: suminf.    6.42323 (22) obj. 7 iterations 23
Cbc0038I Pass  81: suminf.    5.50486 (22) obj. 7 iterations 18
Cbc0038I Pass  82: suminf.    7.22147 (22) obj. 7 iterations 31
Cbc0038I Pass  83: suminf.   12.56545 (49) obj. 7 iterations 93
Cbc0038I Pass  84: suminf.    8.64186 (35) obj. 7 iterations 51
Cbc0038I Pass  85: suminf.    8.13816 (35) obj. 7 iterations 4
Cbc0038I Pass  86: suminf.    6.72075 (30) obj. 7 iterations 21
Cbc0038I Pass  87: suminf.    6.72075 (30) obj. 7 iterations 6
Cbc0038I Pass  88: suminf.    6.49350 (26) obj. 7 iterations 36
Cbc0038I Pass  89: suminf.    5.83847 (26) obj. 7 iterations 20
Cbc0038I Pass  90: suminf.    6.69165 (25) obj. 7 iterations 15
Cbc0038I Pass  91: suminf.    5.97589 (28) obj. 7 iterations 17
Cbc0038I Pass  92: suminf.    5.64255 (28) obj. 7 iterations 1
Cbc0038I Pass  93: suminf.    5.64255 (28) obj. 7 iterations 0
Cbc0038I Pass  94: suminf.    7.36863 (28) obj. 7 iterations 26
Cbc0038I Pass  95: suminf.    6.28292 (26) obj. 7 iterations 18
Cbc0038I Pass  96: suminf.    7.41387 (26) obj. 7 iterations 18
Cbc0038I Pass  97: suminf.    6.70605 (28) obj. 7 iterations 13
Cbc0038I Pass  98: suminf.    6.37271 (28) obj. 7 iterations 1
Cbc0038I Pass  99: suminf.    6.37271 (28) obj. 7 iterations 0
Cbc0038I Pass 100: suminf.   13.74116 (51) obj. 7 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 736 integers at bound fixed and 0 continuous
Cbc0038I Full problem 298 rows 929 columns, reduced to 217 rows 173 columns
Cbc0038I Mini branch and bound did not improve solution (2.65 seconds)
Cbc0038I After 2.65 seconds - Feasibility pump exiting - took 0.55 seconds
Cbc0031I 48 added rows had average density of 34.625
Cbc0013I At root node, 48 cuts changed objective from 6 to 7 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 184 row cuts average 4.7 elements, 77 column cuts (77 active)  in 0.589 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 362.3 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 55.5 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 268 row cuts average 240.8 elements, 0 column cuts (0 active)  in 0.405 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 77 row cuts average 56.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 7 (5.03 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 7 (5.77 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 7 (6.49 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 7 (7.22 seconds)
Cbc0004I Integer solution of 7 found after 2035 iterations and 8 nodes (7.41 seconds)
Cbc0001I Search completed - best objective 7, took 2035 iterations and 8 nodes (7.41 seconds)
Cbc0032I Strong branching done 314 times (8896 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 7, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6 to 7
Probing was tried 23 times and created 427 cuts of which 0 were active after adding rounds of cuts (0.666474 seconds)
Gomory was tried 10 times and created 61 cuts of which 0 were active after adding rounds of cuts (0.188247 seconds)
Knapsack was tried 23 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.202687 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006361 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035017 seconds)
MixedIntegerRounding2 was tried 23 times and created 206 cuts of which 0 were active after adding rounds of cuts (0.133023 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005158 seconds)
TwoMirCuts was tried 23 times and created 325 cuts of which 0 were active after adding rounds of cuts (0.463015 seconds)
ZeroHalf was tried 23 times and created 176 cuts of which 0 were active after adding rounds of cuts (0.161732 seconds)

Result - Optimal solution found
Objective value:                7
Enumerated nodes:               8
Total iterations:               2035
Time (CPU seconds):             7.45177
Time (Wallclock seconds):       7.4557
Total time (CPU seconds):       7.54694   (Wallclock seconds):       7.53764
