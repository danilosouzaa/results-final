Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/psp-janniele/J30/j3041/j3041_7.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 4.098 - 0.281206 seconds
Cgl0003I 1 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 340 rows, 1100 columns (1100 integer (1099 of which binary)) and 12437 elements
Coin3009W Conflict graph built in 0.120 seconds, density: 1.437%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1100 objects (1100 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 111 integers unsatisfied sum - 23.8285
Cbc0038I Pass   1: suminf.   17.53653 (90) obj. 5 iterations 213
Cbc0038I Pass   2: suminf.   15.73144 (95) obj. 5 iterations 50
Cbc0038I Pass   3: suminf.   15.32445 (93) obj. 5 iterations 47
Cbc0038I Pass   4: suminf.   15.39385 (91) obj. 5.15333 iterations 29
Cbc0038I Pass   5: suminf.   15.83110 (75) obj. 6 iterations 196
Cbc0038I Pass   6: suminf.   14.26857 (82) obj. 6.1361 iterations 164
Cbc0038I Pass   7: suminf.   13.30976 (74) obj. 7.01011 iterations 62
Cbc0038I Pass   8: suminf.   10.08250 (55) obj. 9 iterations 79
Cbc0038I Pass   9: suminf.    9.12536 (55) obj. 9 iterations 84
Cbc0038I Pass  10: suminf.    9.11425 (55) obj. 9 iterations 17
Cbc0038I Pass  11: suminf.   10.51133 (49) obj. 9 iterations 134
Cbc0038I Pass  12: suminf.   10.38956 (51) obj. 9 iterations 58
Cbc0038I Pass  13: suminf.   10.31175 (54) obj. 9 iterations 34
Cbc0038I Pass  14: suminf.   10.77852 (55) obj. 9 iterations 118
Cbc0038I Pass  15: suminf.    8.91088 (48) obj. 9 iterations 113
Cbc0038I Pass  16: suminf.   10.16110 (43) obj. 9 iterations 114
Cbc0038I Pass  17: suminf.    6.89517 (48) obj. 9 iterations 68
Cbc0038I Pass  18: suminf.    5.91283 (34) obj. 9 iterations 52
Cbc0038I Pass  19: suminf.    5.40294 (34) obj. 9 iterations 14
Cbc0038I Pass  20: suminf.    5.13426 (33) obj. 9 iterations 14
Cbc0038I Pass  21: suminf.    6.40703 (38) obj. 9 iterations 79
Cbc0038I Pass  22: suminf.    5.30529 (31) obj. 9 iterations 83
Cbc0038I Pass  23: suminf.    5.30529 (31) obj. 9 iterations 0
Cbc0038I Pass  24: suminf.    7.51200 (36) obj. 9 iterations 89
Cbc0038I Pass  25: suminf.    6.49682 (36) obj. 9 iterations 95
Cbc0038I Pass  26: suminf.    5.88941 (33) obj. 9 iterations 10
Cbc0038I Pass  27: suminf.    5.46719 (32) obj. 9 iterations 3
Cbc0038I Pass  28: suminf.    5.46719 (32) obj. 9 iterations 0
Cbc0038I Pass  29: suminf.    7.71270 (39) obj. 9 iterations 85
Cbc0038I Pass  30: suminf.    6.03227 (34) obj. 9 iterations 69
Cbc0038I Pass  31: suminf.    5.61004 (33) obj. 9 iterations 10
Cbc0038I Pass  32: suminf.    5.61004 (33) obj. 9 iterations 4
Cbc0038I Pass  33: suminf.    8.19594 (40) obj. 9 iterations 109
Cbc0038I Pass  34: suminf.    7.13942 (36) obj. 9 iterations 115
Cbc0038I Pass  35: suminf.    6.18386 (31) obj. 9 iterations 13
Cbc0038I Pass  36: suminf.    6.18386 (31) obj. 9 iterations 2
Cbc0038I Pass  37: suminf.    7.31741 (37) obj. 9 iterations 80
Cbc0038I Pass  38: suminf.    6.77540 (36) obj. 9 iterations 63
Cbc0038I Pass  39: suminf.    6.16799 (33) obj. 9 iterations 12
Cbc0038I Pass  40: suminf.    5.74577 (32) obj. 9 iterations 2
Cbc0038I Pass  41: suminf.    5.74577 (32) obj. 9 iterations 0
Cbc0038I Pass  42: suminf.    7.50690 (40) obj. 9 iterations 86
Cbc0038I Pass  43: suminf.    6.11243 (28) obj. 9 iterations 83
Cbc0038I Pass  44: suminf.    6.11243 (28) obj. 9 iterations 0
Cbc0038I Pass  45: suminf.    8.19224 (43) obj. 9 iterations 109
Cbc0038I Pass  46: suminf.    7.13942 (36) obj. 9 iterations 84
Cbc0038I Pass  47: suminf.    6.18386 (31) obj. 9 iterations 10
Cbc0038I Pass  48: suminf.    6.18386 (31) obj. 9 iterations 0
Cbc0038I Pass  49: suminf.    8.53634 (48) obj. 9 iterations 112
Cbc0038I Pass  50: suminf.    7.57492 (46) obj. 9 iterations 45
Cbc0038I Pass  51: suminf.    7.40605 (37) obj. 9 iterations 28
Cbc0038I Pass  52: suminf.    7.06799 (33) obj. 9 iterations 66
Cbc0038I Pass  53: suminf.    6.11243 (28) obj. 9 iterations 21
Cbc0038I Pass  54: suminf.    6.11243 (28) obj. 9 iterations 2
Cbc0038I Pass  55: suminf.   10.05685 (43) obj. 9 iterations 132
Cbc0038I Pass  56: suminf.    7.59526 (39) obj. 9 iterations 102
Cbc0038I Pass  57: suminf.    6.70132 (37) obj. 9 iterations 57
Cbc0038I Pass  58: suminf.    7.43509 (36) obj. 9 iterations 84
Cbc0038I Pass  59: suminf.    6.62831 (30) obj. 9 iterations 74
Cbc0038I Pass  60: suminf.    6.40132 (31) obj. 9 iterations 11
Cbc0038I Pass  61: suminf.    5.96004 (32) obj. 9 iterations 24
Cbc0038I Pass  62: suminf.    7.83377 (37) obj. 9 iterations 69
Cbc0038I Pass  63: suminf.    6.98967 (36) obj. 9 iterations 84
Cbc0038I Pass  64: suminf.    6.38227 (33) obj. 9 iterations 8
Cbc0038I Pass  65: suminf.    5.96004 (32) obj. 9 iterations 2
Cbc0038I Pass  66: suminf.    5.96004 (32) obj. 9 iterations 0
Cbc0038I Pass  67: suminf.    9.12355 (42) obj. 9 iterations 99
Cbc0038I Pass  68: suminf.    7.43266 (37) obj. 9 iterations 106
Cbc0038I Pass  69: suminf.    6.18386 (31) obj. 9 iterations 45
Cbc0038I Pass  70: suminf.    6.18386 (31) obj. 9 iterations 4
Cbc0038I Pass  71: suminf.    7.13474 (37) obj. 9 iterations 85
Cbc0038I Pass  72: suminf.    6.77540 (36) obj. 9 iterations 71
Cbc0038I Pass  73: suminf.    6.16799 (33) obj. 9 iterations 13
Cbc0038I Pass  74: suminf.    5.74577 (32) obj. 9 iterations 2
Cbc0038I Pass  75: suminf.    5.74577 (32) obj. 9 iterations 0
Cbc0038I Pass  76: suminf.    9.81504 (47) obj. 9 iterations 119
Cbc0038I Pass  77: suminf.    8.81860 (52) obj. 9 iterations 82
Cbc0038I Pass  78: suminf.    8.55969 (49) obj. 9 iterations 47
Cbc0038I Pass  79: suminf.    9.77695 (44) obj. 9 iterations 140
Cbc0038I Pass  80: suminf.    7.63065 (42) obj. 9 iterations 128
Cbc0038I Pass  81: suminf.    7.77960 (39) obj. 9 iterations 94
Cbc0038I Pass  82: suminf.    7.07043 (40) obj. 9 iterations 98
Cbc0038I Pass  83: suminf.    6.15786 (35) obj. 9 iterations 11
Cbc0038I Pass  84: suminf.    6.15786 (35) obj. 9 iterations 4
Cbc0038I Pass  85: suminf.    7.85873 (36) obj. 9 iterations 96
Cbc0038I Pass  86: suminf.    6.23941 (33) obj. 9 iterations 78
Cbc0038I Pass  87: suminf.    5.81719 (33) obj. 9 iterations 12
Cbc0038I Pass  88: suminf.    5.81719 (33) obj. 9 iterations 5
Cbc0038I Pass  89: suminf.    8.83249 (44) obj. 9 iterations 139
Cbc0038I Pass  90: suminf.    7.43266 (37) obj. 9 iterations 102
Cbc0038I Pass  91: suminf.    6.18386 (31) obj. 9 iterations 39
Cbc0038I Pass  92: suminf.    6.18386 (31) obj. 9 iterations 0
Cbc0038I Pass  93: suminf.    7.38077 (36) obj. 9 iterations 79
Cbc0038I Pass  94: suminf.    6.77540 (36) obj. 9 iterations 92
Cbc0038I Pass  95: suminf.    6.16799 (33) obj. 9 iterations 12
Cbc0038I Pass  96: suminf.    5.74577 (32) obj. 9 iterations 2
Cbc0038I Pass  97: suminf.    5.74577 (32) obj. 9 iterations 0
Cbc0038I Pass  98: suminf.    7.50292 (40) obj. 9 iterations 95
Cbc0038I Pass  99: suminf.    6.11243 (28) obj. 9 iterations 96
Cbc0038I Pass 100: suminf.   16.74779 (91) obj. 7.43546 iterations 212
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 804 integers at bound fixed and 0 continuous
Cbc0038I Full problem 340 rows 1100 columns, reduced to 239 rows 271 columns
Cbc0038I Mini branch and bound did not improve solution (3.79 seconds)
Cbc0038I After 3.79 seconds - Feasibility pump exiting - took 2.44 seconds
Cbc0031I 198 added rows had average density of 43.070707
Cbc0013I At root node, 198 cuts changed objective from 4.1062432 to 6.6006767 in 38 passes
Cbc0014I Cut generator 0 (Probing) - 194 row cuts average 13.6 elements, 5 column cuts (73 active)  in 2.399 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 28 row cuts average 672.0 elements, 0 column cuts (0 active)  in 2.803 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.517 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 185 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.196 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.885 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 460 row cuts average 53.2 elements, 0 column cuts (0 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 221 row cuts average 85.3 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 133 row cuts average 64.0 elements, 0 column cuts (0 active)  in 1.101 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 7 (16.22 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 7 (17.25 seconds)
Cbc0010I After 6 nodes, 1 on tree, 1e+50 best solution, best possible 8 (18.38 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 8 (19.32 seconds)
Cbc0010I After 13 nodes, 8 on tree, 1e+50 best solution, best possible 8 (20.16 seconds)
Cbc0010I After 18 nodes, 11 on tree, 1e+50 best solution, best possible 8 (21.00 seconds)
Cbc0010I After 26 nodes, 9 on tree, 1e+50 best solution, best possible 8 (21.93 seconds)
Cbc0010I After 32 nodes, 9 on tree, 1e+50 best solution, best possible 8 (22.78 seconds)
Cbc0010I After 39 nodes, 8 on tree, 1e+50 best solution, best possible 8 (23.65 seconds)
Cbc0010I After 44 nodes, 12 on tree, 1e+50 best solution, best possible 8 (24.36 seconds)
Cbc0010I After 52 nodes, 10 on tree, 1e+50 best solution, best possible 8 (25.17 seconds)
Cbc0010I After 58 nodes, 11 on tree, 1e+50 best solution, best possible 8 (25.93 seconds)
Cbc0010I After 64 nodes, 11 on tree, 1e+50 best solution, best possible 8 (26.64 seconds)
Cbc0010I After 69 nodes, 12 on tree, 1e+50 best solution, best possible 8 (27.38 seconds)
Cbc0010I After 77 nodes, 11 on tree, 1e+50 best solution, best possible 8 (28.15 seconds)
Cbc0010I After 83 nodes, 10 on tree, 1e+50 best solution, best possible 8 (28.92 seconds)
Cbc0010I After 88 nodes, 9 on tree, 1e+50 best solution, best possible 8 (29.63 seconds)
Cbc0010I After 95 nodes, 7 on tree, 1e+50 best solution, best possible 8 (30.47 seconds)
Cbc0010I After 101 nodes, 8 on tree, 1e+50 best solution, best possible 8 (31.28 seconds)
Cbc0010I After 107 nodes, 6 on tree, 1e+50 best solution, best possible 8 (32.00 seconds)
Cbc0010I After 112 nodes, 5 on tree, 1e+50 best solution, best possible 8 (32.73 seconds)
Cbc0010I After 116 nodes, 5 on tree, 1e+50 best solution, best possible 8 (33.45 seconds)
Cbc0010I After 119 nodes, 6 on tree, 1e+50 best solution, best possible 8 (34.26 seconds)
Cbc0010I After 123 nodes, 7 on tree, 1e+50 best solution, best possible 8 (35.06 seconds)
Cbc0010I After 127 nodes, 6 on tree, 1e+50 best solution, best possible 8 (35.78 seconds)
Cbc0010I After 130 nodes, 7 on tree, 1e+50 best solution, best possible 8 (36.53 seconds)
Cbc0010I After 136 nodes, 6 on tree, 1e+50 best solution, best possible 8 (37.25 seconds)
Cbc0010I After 140 nodes, 5 on tree, 1e+50 best solution, best possible 8 (38.06 seconds)
Cbc0010I After 145 nodes, 6 on tree, 1e+50 best solution, best possible 8 (38.83 seconds)
Cbc0010I After 151 nodes, 4 on tree, 1e+50 best solution, best possible 8 (39.83 seconds)
Cbc0010I After 157 nodes, 7 on tree, 1e+50 best solution, best possible 8 (40.61 seconds)
Cbc0010I After 162 nodes, 3 on tree, 1e+50 best solution, best possible 8 (41.54 seconds)
Cbc0010I After 166 nodes, 7 on tree, 1e+50 best solution, best possible 8 (42.36 seconds)
Cbc0010I After 173 nodes, 3 on tree, 1e+50 best solution, best possible 8 (43.23 seconds)
Cbc0010I After 177 nodes, 2 on tree, 1e+50 best solution, best possible 8 (44.15 seconds)
Cbc0010I After 181 nodes, 6 on tree, 1e+50 best solution, best possible 8 (44.88 seconds)
Cbc0010I After 188 nodes, 11 on tree, 1e+50 best solution, best possible 8 (45.61 seconds)
Cbc0010I After 194 nodes, 9 on tree, 1e+50 best solution, best possible 8 (46.49 seconds)
Cbc0010I After 199 nodes, 8 on tree, 1e+50 best solution, best possible 8 (47.26 seconds)
Cbc0010I After 206 nodes, 10 on tree, 1e+50 best solution, best possible 8 (48.03 seconds)
Cbc0010I After 213 nodes, 8 on tree, 1e+50 best solution, best possible 8 (48.78 seconds)
Cbc0010I After 219 nodes, 8 on tree, 1e+50 best solution, best possible 8 (49.58 seconds)
Cbc0010I After 224 nodes, 8 on tree, 1e+50 best solution, best possible 8 (50.39 seconds)
Cbc0010I After 228 nodes, 8 on tree, 1e+50 best solution, best possible 8 (51.23 seconds)
Cbc0010I After 234 nodes, 8 on tree, 1e+50 best solution, best possible 8 (52.01 seconds)
Cbc0010I After 239 nodes, 10 on tree, 1e+50 best solution, best possible 8 (52.75 seconds)
Cbc0010I After 245 nodes, 10 on tree, 1e+50 best solution, best possible 8 (53.51 seconds)
Cbc0010I After 252 nodes, 12 on tree, 1e+50 best solution, best possible 8 (54.33 seconds)
Cbc0010I After 260 nodes, 13 on tree, 1e+50 best solution, best possible 8 (55.03 seconds)
Cbc0010I After 266 nodes, 11 on tree, 1e+50 best solution, best possible 8 (55.77 seconds)
Cbc0010I After 272 nodes, 10 on tree, 1e+50 best solution, best possible 8 (56.67 seconds)
Cbc0010I After 279 nodes, 10 on tree, 1e+50 best solution, best possible 8 (57.43 seconds)
Cbc0010I After 286 nodes, 8 on tree, 1e+50 best solution, best possible 8 (58.17 seconds)
Cbc0010I After 292 nodes, 5 on tree, 1e+50 best solution, best possible 8 (58.96 seconds)
Cbc0010I After 298 nodes, 7 on tree, 1e+50 best solution, best possible 8 (59.71 seconds)
Cbc0010I After 304 nodes, 7 on tree, 1e+50 best solution, best possible 8 (60.46 seconds)
Cbc0010I After 310 nodes, 7 on tree, 1e+50 best solution, best possible 8 (61.23 seconds)
Cbc0010I After 317 nodes, 1 on tree, 1e+50 best solution, best possible 8 (62.00 seconds)
Cbc0010I After 320 nodes, 3 on tree, 1e+50 best solution, best possible 9 (62.72 seconds)
Cbc0010I After 324 nodes, 5 on tree, 1e+50 best solution, best possible 9 (63.51 seconds)
Cbc0010I After 331 nodes, 7 on tree, 1e+50 best solution, best possible 9 (64.24 seconds)
Cbc0010I After 341 nodes, 6 on tree, 1e+50 best solution, best possible 9 (65.02 seconds)
Cbc0010I After 349 nodes, 5 on tree, 1e+50 best solution, best possible 9 (65.91 seconds)
Cbc0010I After 356 nodes, 6 on tree, 1e+50 best solution, best possible 9 (66.66 seconds)
Cbc0010I After 363 nodes, 6 on tree, 1e+50 best solution, best possible 9 (67.45 seconds)
Cbc0010I After 373 nodes, 8 on tree, 1e+50 best solution, best possible 9 (68.17 seconds)
Cbc0004I Integer solution of 9 found after 163745 iterations and 379 nodes (68.40 seconds)
Cbc0001I Search completed - best objective 9, took 163745 iterations and 379 nodes (68.40 seconds)
Cbc0032I Strong branching done 1380 times (13302 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 39, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.10624 to 7
Probing was tried 308 times and created 1821 cuts of which 68 were active after adding rounds of cuts (4.90521 seconds)
Gomory was tried 38 times and created 28 cuts of which 0 were active after adding rounds of cuts (2.80327 seconds)
Knapsack was tried 305 times and created 150 cuts of which 0 were active after adding rounds of cuts (3.3461 seconds)
Clique was tried 305 times and created 2513 cuts of which 0 were active after adding rounds of cuts (1.02496 seconds)
OddWheel was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.885051 seconds)
MixedIntegerRounding2 was tried 305 times and created 2761 cuts of which 0 were active after adding rounds of cuts (1.48965 seconds)
FlowCover was tried 38 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012874 seconds)
TwoMirCuts was tried 305 times and created 1324 cuts of which 0 were active after adding rounds of cuts (0.764609 seconds)
ZeroHalf was tried 305 times and created 1894 cuts of which 0 were active after adding rounds of cuts (4.79155 seconds)

Result - Optimal solution found
Objective value:                9
Enumerated nodes:               379
Total iterations:               163745
Time (CPU seconds):             68.4131
Time (Wallclock seconds):       68.433
Total time (CPU seconds):       68.444   (Wallclock seconds):       68.4514
