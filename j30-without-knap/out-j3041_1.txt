Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3041/j3041_1.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3041_1.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.123896 - 0.156626 seconds
Cgl0002I 8 variables fixed
Cgl0003I 25 fixed, 0 tightened bounds, 8 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 303 rows, 680 columns (680 integer (679 of which binary)) and 7283 elements
Coin3009W Conflict graph built in 0.028 seconds, density: 1.311%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 680 objects (680 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 96 integers unsatisfied sum - 19.9668
Cbc0038I Pass   1: suminf.   12.05173 (53) obj. 0.934783 iterations 179
Cbc0038I Pass   2: suminf.    9.32456 (49) obj. 1.07692 iterations 80
Cbc0038I Pass   3: suminf.    9.25025 (46) obj. 1.125 iterations 22
Cbc0038I Pass   4: suminf.    9.04775 (48) obj. 1.20455 iterations 7
Cbc0038I Pass   5: suminf.    8.47834 (42) obj. 1 iterations 22
Cbc0038I Pass   6: suminf.    6.85754 (26) obj. 3 iterations 70
Cbc0038I Pass   7: suminf.    4.62063 (26) obj. 3 iterations 34
Cbc0038I Pass   8: suminf.    4.62063 (26) obj. 3 iterations 0
Cbc0038I Pass   9: suminf.    6.66901 (24) obj. 3 iterations 109
Cbc0038I Pass  10: suminf.    6.23611 (21) obj. 3 iterations 61
Cbc0038I Pass  11: suminf.    6.06862 (21) obj. 3 iterations 7
Cbc0038I Pass  12: suminf.    6.29299 (28) obj. 3 iterations 53
Cbc0038I Pass  13: suminf.    5.94753 (24) obj. 3 iterations 9
Cbc0038I Pass  14: suminf.    5.58642 (23) obj. 3 iterations 7
Cbc0038I Pass  15: suminf.    6.43561 (31) obj. 3 iterations 28
Cbc0038I Pass  16: suminf.    5.71904 (26) obj. 3 iterations 14
Cbc0038I Pass  17: suminf.   12.57591 (50) obj. 3 iterations 105
Cbc0038I Pass  18: suminf.    9.27869 (39) obj. 3 iterations 92
Cbc0038I Pass  19: suminf.    9.01703 (34) obj. 3 iterations 9
Cbc0038I Pass  20: suminf.    6.00429 (25) obj. 3 iterations 78
Cbc0038I Pass  21: suminf.    5.62333 (21) obj. 3 iterations 6
Cbc0038I Pass  22: suminf.    4.95667 (21) obj. 3 iterations 22
Cbc0038I Pass  23: suminf.    3.95556 (19) obj. 3 iterations 49
Cbc0038I Pass  24: suminf.    3.82540 (23) obj. 3 iterations 28
Cbc0038I Pass  25: suminf.    9.86537 (36) obj. 3 iterations 111
Cbc0038I Pass  26: suminf.    6.11231 (23) obj. 3 iterations 60
Cbc0038I Pass  27: suminf.    6.11231 (23) obj. 3 iterations 6
Cbc0038I Pass  28: suminf.    3.29365 (15) obj. 3 iterations 68
Cbc0038I Pass  29: suminf.    2.51111 (11) obj. 3 iterations 54
Cbc0038I Pass  30: suminf.    2.51111 (11) obj. 3 iterations 3
Cbc0038I Pass  31: suminf.    2.40000 (10) obj. 3 iterations 61
Cbc0038I Pass  32: suminf.    2.40000 (10) obj. 3 iterations 27
Cbc0038I Pass  33: suminf.    2.91111 (11) obj. 3 iterations 77
Cbc0038I Pass  34: suminf.    2.51111 (11) obj. 3 iterations 40
Cbc0038I Pass  35: suminf.   11.65220 (40) obj. 3 iterations 138
Cbc0038I Pass  36: suminf.    6.00417 (26) obj. 3 iterations 130
Cbc0038I Pass  37: suminf.    6.00417 (26) obj. 3 iterations 5
Cbc0038I Pass  38: suminf.    4.01892 (35) obj. 3 iterations 105
Cbc0038I Pass  39: suminf.    3.08066 (20) obj. 3 iterations 40
Cbc0038I Pass  40: suminf.    2.60749 (19) obj. 3 iterations 49
Cbc0038I Pass  41: suminf.    5.23611 (22) obj. 3 iterations 115
Cbc0038I Pass  42: suminf.    2.77222 (12) obj. 3 iterations 47
Cbc0038I Pass  43: suminf.    2.70556 (12) obj. 3 iterations 37
Cbc0038I Pass  44: suminf.    2.37222 (11) obj. 3 iterations 64
Cbc0038I Pass  45: suminf.    1.99422 (16) obj. 3 iterations 22
Cbc0038I Pass  46: suminf.    3.67277 (18) obj. 3 iterations 81
Cbc0038I Pass  47: suminf.    2.46667 (11) obj. 3 iterations 35
Cbc0038I Pass  48: suminf.    2.19779 (15) obj. 3 iterations 42
Cbc0038I Pass  49: suminf.    5.27488 (31) obj. 3 iterations 86
Cbc0038I Pass  50: suminf.    3.60324 (25) obj. 3 iterations 31
Cbc0038I Pass  51: suminf.    3.28843 (24) obj. 3 iterations 9
Cbc0038I Pass  52: suminf.    7.81417 (33) obj. 3 iterations 116
Cbc0038I Pass  53: suminf.    2.81340 (17) obj. 3 iterations 52
Cbc0038I Pass  54: suminf.    2.81340 (17) obj. 3 iterations 2
Cbc0038I Pass  55: suminf.    2.88889 (13) obj. 3 iterations 60
Cbc0038I Pass  56: suminf.    1.15556 (6) obj. 3 iterations 27
Cbc0038I Pass  57: suminf.    2.04444 (7) obj. 3 iterations 74
Cbc0038I Pass  58: suminf.    1.11111 (4) obj. 3 iterations 67
Cbc0038I Pass  59: suminf.    0.66667 (4) obj. 3 iterations 29
Cbc0038I Pass  60: suminf.   17.24398 (64) obj. 3 iterations 132
Cbc0038I Pass  61: suminf.    7.02202 (36) obj. 3 iterations 89
Cbc0038I Pass  62: suminf.    6.47967 (31) obj. 3 iterations 14
Cbc0038I Pass  63: suminf.    5.78153 (32) obj. 3 iterations 33
Cbc0038I Pass  64: suminf.    8.18422 (41) obj. 3 iterations 81
Cbc0038I Pass  65: suminf.    7.10979 (30) obj. 3 iterations 36
Cbc0038I Pass  66: suminf.    6.72319 (33) obj. 3 iterations 14
Cbc0038I Pass  67: suminf.    6.00266 (28) obj. 3 iterations 29
Cbc0038I Pass  68: suminf.    5.80602 (27) obj. 3 iterations 20
Cbc0038I Pass  69: suminf.    8.37460 (37) obj. 3 iterations 118
Cbc0038I Pass  70: suminf.    6.35890 (40) obj. 3 iterations 39
Cbc0038I Pass  71: suminf.    6.05550 (41) obj. 3 iterations 12
Cbc0038I Pass  72: suminf.    7.66411 (35) obj. 3 iterations 94
Cbc0038I Pass  73: suminf.    6.52120 (33) obj. 3 iterations 26
Cbc0038I Pass  74: suminf.    6.28305 (34) obj. 3 iterations 3
Cbc0038I Pass  75: suminf.    5.81411 (32) obj. 3 iterations 13
Cbc0038I Pass  76: suminf.    4.43077 (23) obj. 3 iterations 93
Cbc0038I Pass  77: suminf.    3.22222 (9) obj. 3 iterations 50
Cbc0038I Pass  78: suminf.    1.79365 (9) obj. 3 iterations 19
Cbc0038I Pass  79: suminf.    3.02222 (15) obj. 3 iterations 50
Cbc0038I Pass  80: suminf.    2.88889 (11) obj. 3 iterations 30
Cbc0038I Pass  81: suminf.    2.92222 (10) obj. 3 iterations 27
Cbc0038I Pass  82: suminf.    2.88889 (11) obj. 3 iterations 15
Cbc0038I Pass  83: suminf.    2.92222 (10) obj. 3 iterations 28
Cbc0038I Pass  84: suminf.   12.77668 (41) obj. 3 iterations 127
Cbc0038I Pass  85: suminf.    5.63659 (20) obj. 3 iterations 115
Cbc0038I Pass  86: suminf.    2.61071 (16) obj. 3 iterations 40
Cbc0038I Pass  87: suminf.    2.24960 (11) obj. 3 iterations 12
Cbc0038I Pass  88: suminf.    4.56481 (15) obj. 3 iterations 44
Cbc0038I Pass  89: suminf.    3.36905 (13) obj. 3 iterations 24
Cbc0038I Pass  90: suminf.    2.47738 (10) obj. 3 iterations 8
Cbc0038I Pass  91: suminf.    2.24960 (11) obj. 3 iterations 19
Cbc0038I Pass  92: suminf.    4.56481 (15) obj. 3 iterations 43
Cbc0038I Pass  93: suminf.    3.36905 (13) obj. 3 iterations 24
Cbc0038I Pass  94: suminf.    2.47738 (10) obj. 3 iterations 8
Cbc0038I Pass  95: suminf.    2.24960 (11) obj. 3 iterations 17
Cbc0038I Pass  96: suminf.    4.56481 (15) obj. 3 iterations 45
Cbc0038I Pass  97: suminf.    3.36905 (13) obj. 3 iterations 27
Cbc0038I Pass  98: suminf.    2.47738 (10) obj. 3 iterations 10
Cbc0038I Pass  99: suminf.    2.24960 (11) obj. 3 iterations 16
Cbc0038I Pass 100: suminf.    9.79678 (53) obj. 3 iterations 106
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 391 integers at bound fixed and 0 continuous
Cbc0038I Full problem 303 rows 680 columns, reduced to 250 rows 270 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.58 seconds)
Cbc0038I After 2.58 seconds - Feasibility pump exiting - took 0.91 seconds
Cbc0031I 75 added rows had average density of 27
Cbc0013I At root node, 75 cuts changed objective from 0.16110976 to 2 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 319 row cuts average 6.9 elements, 1 column cuts (46 active)  in 0.442 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 519.7 elements, 0 column cuts (0 active)  in 0.535 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 322 row cuts average 9.4 elements, 0 column cuts (0 active)  in 12.149 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 40 row cuts average 11.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 81 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 282 row cuts average 241.8 elements, 0 column cuts (0 active)  in 0.638 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 141 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (18.58 seconds)
Cbc0010I After 2 nodes, 1 on tree, 1e+50 best solution, best possible 3 (20.26 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 3 (21.25 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 3 (21.99 seconds)
Cbc0010I After 5 nodes, 3 on tree, 1e+50 best solution, best possible 3 (23.15 seconds)
Cbc0010I After 6 nodes, 3 on tree, 1e+50 best solution, best possible 3 (23.90 seconds)
Cbc0010I After 7 nodes, 4 on tree, 1e+50 best solution, best possible 3 (25.51 seconds)
Cbc0010I After 13 nodes, 2 on tree, 1e+50 best solution, best possible 3 (27.17 seconds)
Cbc0010I After 14 nodes, 3 on tree, 1e+50 best solution, best possible 3 (28.65 seconds)
Cbc0010I After 15 nodes, 4 on tree, 1e+50 best solution, best possible 3 (31.34 seconds)
Cbc0010I After 16 nodes, 5 on tree, 1e+50 best solution, best possible 3 (33.21 seconds)
Cbc0010I After 17 nodes, 6 on tree, 1e+50 best solution, best possible 3 (35.41 seconds)
Cbc0010I After 19 nodes, 6 on tree, 1e+50 best solution, best possible 3 (36.74 seconds)
Cbc0010I After 20 nodes, 7 on tree, 1e+50 best solution, best possible 3 (38.54 seconds)
Cbc0010I After 21 nodes, 7 on tree, 1e+50 best solution, best possible 3 (39.74 seconds)
Cbc0010I After 25 nodes, 4 on tree, 1e+50 best solution, best possible 3 (40.60 seconds)
Cbc0010I After 26 nodes, 5 on tree, 1e+50 best solution, best possible 3 (41.71 seconds)
Cbc0010I After 31 nodes, 1 on tree, 1e+50 best solution, best possible 3 (42.45 seconds)
Cbc0010I After 33 nodes, 2 on tree, 1e+50 best solution, best possible 3 (43.39 seconds)
Cbc0010I After 35 nodes, 4 on tree, 1e+50 best solution, best possible 3 (44.96 seconds)
Cbc0010I After 38 nodes, 6 on tree, 1e+50 best solution, best possible 3 (45.70 seconds)
Cbc0010I After 42 nodes, 9 on tree, 1e+50 best solution, best possible 3 (46.43 seconds)
Cbc0010I After 47 nodes, 11 on tree, 1e+50 best solution, best possible 3 (47.16 seconds)
Cbc0010I After 51 nodes, 11 on tree, 1e+50 best solution, best possible 3 (48.14 seconds)
Cbc0010I After 53 nodes, 12 on tree, 1e+50 best solution, best possible 3 (49.00 seconds)
Cbc0004I Integer solution of 3 found after 13209 iterations and 57 nodes (49.74 seconds)
Cbc0001I Search completed - best objective 3, took 13209 iterations and 57 nodes (49.74 seconds)
Cbc0032I Strong branching done 1078 times (26095 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.16111 to 2
Probing was tried 69 times and created 917 cuts of which 45 were active after adding rounds of cuts (0.70988 seconds)
Gomory was tried 69 times and created 203 cuts of which 0 were active after adding rounds of cuts (0.679424 seconds)
liftKnapsack was tried 69 times and created 1199 cuts of which 0 were active after adding rounds of cuts (35.4583 seconds)
Clique was tried 69 times and created 113 cuts of which 0 were active after adding rounds of cuts (0.064514 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.097439 seconds)
MixedIntegerRounding2 was tried 69 times and created 298 cuts of which 0 were active after adding rounds of cuts (0.20474 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003465 seconds)
TwoMirCuts was tried 69 times and created 471 cuts of which 0 were active after adding rounds of cuts (0.769783 seconds)
ZeroHalf was tried 69 times and created 439 cuts of which 0 were active after adding rounds of cuts (0.464127 seconds)

Result - Optimal solution found
Objective value:                3
Enumerated nodes:               57
Total iterations:               13209
Time (CPU seconds):             49.7368
Time (Wallclock seconds):       49.7947
Total time (CPU seconds):       49.749   (Wallclock seconds):       49.8073
