Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_8.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3035_8.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 6.30769 - 0.086843 seconds
Cgl0002I 2 variables fixed
Cgl0003I 50 fixed, 0 tightened bounds, 6 strengthened rows, 1 substitutions
Cgl0003I 27 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 6 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 269 rows, 755 columns (755 integer (754 of which binary)) and 8957 elements
Coin3009W Conflict graph built in 0.031 seconds, density: 1.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 755 objects (755 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 63 integers unsatisfied sum - 14.0613
Cbc0038I Pass   1: suminf.    9.63411 (51) obj. 7 iterations 44
Cbc0038I Pass   2: suminf.    9.35201 (49) obj. 7 iterations 12
Cbc0038I Pass   3: suminf.    8.62113 (35) obj. 7 iterations 53
Cbc0038I Pass   4: suminf.    8.62113 (35) obj. 7 iterations 0
Cbc0038I Pass   5: suminf.    8.59965 (36) obj. 7 iterations 31
Cbc0038I Pass   6: suminf.    8.59965 (36) obj. 7 iterations 2
Cbc0038I Pass   7: suminf.    8.14945 (37) obj. 7 iterations 2
Cbc0038I Pass   8: suminf.    8.10961 (37) obj. 7 iterations 4
Cbc0038I Pass   9: suminf.    9.52590 (35) obj. 7 iterations 18
Cbc0038I Pass  10: suminf.    9.26876 (36) obj. 7 iterations 10
Cbc0038I Pass  11: suminf.    9.26876 (36) obj. 7 iterations 1
Cbc0038I Pass  12: suminf.    8.84019 (36) obj. 7 iterations 7
Cbc0038I Pass  13: suminf.    8.34019 (36) obj. 7 iterations 2
Cbc0038I Pass  14: suminf.    8.34019 (36) obj. 7 iterations 0
Cbc0038I Pass  15: suminf.    9.97035 (35) obj. 7 iterations 20
Cbc0038I Pass  16: suminf.    9.52273 (36) obj. 7 iterations 7
Cbc0038I Pass  17: suminf.    9.02273 (36) obj. 7 iterations 2
Cbc0038I Pass  18: suminf.    9.02273 (36) obj. 7 iterations 0
Cbc0038I Pass  19: suminf.   10.68655 (38) obj. 7 iterations 23
Cbc0038I Pass  20: suminf.   10.11110 (36) obj. 7 iterations 12
Cbc0038I Pass  21: suminf.    8.84019 (36) obj. 7 iterations 19
Cbc0038I Pass  22: suminf.    8.84019 (36) obj. 7 iterations 1
Cbc0038I Pass  23: suminf.   11.90802 (42) obj. 7 iterations 89
Cbc0038I Pass  24: suminf.    8.36735 (35) obj. 7 iterations 59
Cbc0038I Pass  25: suminf.    6.07797 (29) obj. 7 iterations 21
Cbc0038I Pass  26: suminf.    9.90766 (31) obj. 7 iterations 57
Cbc0038I Pass  27: suminf.    7.88567 (27) obj. 7 iterations 32
Cbc0038I Pass  28: suminf.    7.88567 (27) obj. 7 iterations 2
Cbc0038I Pass  29: suminf.    7.02564 (28) obj. 7 iterations 20
Cbc0038I Pass  30: suminf.    7.02564 (28) obj. 7 iterations 3
Cbc0038I Pass  31: suminf.    7.60283 (25) obj. 7 iterations 25
Cbc0038I Pass  32: suminf.    7.60283 (25) obj. 7 iterations 14
Cbc0038I Pass  33: suminf.    8.93098 (31) obj. 7 iterations 27
Cbc0038I Pass  34: suminf.    7.63868 (25) obj. 7 iterations 21
Cbc0038I Pass  35: suminf.    8.07036 (25) obj. 7 iterations 33
Cbc0038I Pass  36: suminf.    9.16020 (38) obj. 7 iterations 83
Cbc0038I Pass  37: suminf.    6.56349 (27) obj. 7 iterations 54
Cbc0038I Pass  38: suminf.   10.27295 (30) obj. 7 iterations 35
Cbc0038I Pass  39: suminf.    9.80859 (28) obj. 7 iterations 21
Cbc0038I Pass  40: suminf.    9.80859 (28) obj. 7 iterations 1
Cbc0038I Pass  41: suminf.    9.57999 (28) obj. 7 iterations 21
Cbc0038I Pass  42: suminf.    8.12964 (27) obj. 7 iterations 20
Cbc0038I Pass  43: suminf.    8.04451 (27) obj. 7 iterations 5
Cbc0038I Pass  44: suminf.    8.04451 (27) obj. 7 iterations 1
Cbc0038I Pass  45: suminf.   13.57989 (40) obj. 7 iterations 72
Cbc0038I Pass  46: suminf.    7.90392 (29) obj. 7 iterations 61
Cbc0038I Pass  47: suminf.    7.88574 (29) obj. 7 iterations 6
Cbc0038I Pass  48: suminf.    7.05337 (27) obj. 7 iterations 27
Cbc0038I Pass  49: suminf.    6.98246 (26) obj. 7 iterations 10
Cbc0038I Pass  50: suminf.    6.24680 (27) obj. 7 iterations 9
Cbc0038I Pass  51: suminf.    5.98246 (25) obj. 7 iterations 7
Cbc0038I Pass  52: suminf.    5.48246 (24) obj. 7 iterations 8
Cbc0038I Pass  53: suminf.    5.48246 (24) obj. 7 iterations 4
Cbc0038I Pass  54: suminf.    8.41792 (31) obj. 7 iterations 47
Cbc0038I Pass  55: suminf.    6.91377 (25) obj. 7 iterations 29
Cbc0038I Pass  56: suminf.    6.83782 (25) obj. 7 iterations 7
Cbc0038I Pass  57: suminf.    8.60794 (24) obj. 7 iterations 41
Cbc0038I Pass  58: suminf.    7.97857 (25) obj. 7 iterations 21
Cbc0038I Pass  59: suminf.    7.97857 (25) obj. 7 iterations 4
Cbc0038I Pass  60: suminf.    9.35404 (39) obj. 7 iterations 87
Cbc0038I Pass  61: suminf.    6.01926 (32) obj. 7 iterations 61
Cbc0038I Pass  62: suminf.    6.01926 (32) obj. 7 iterations 4
Cbc0038I Pass  63: suminf.    7.37720 (33) obj. 7 iterations 23
Cbc0038I Pass  64: suminf.    6.85543 (29) obj. 7 iterations 22
Cbc0038I Pass  65: suminf.    6.52904 (29) obj. 7 iterations 9
Cbc0038I Pass  66: suminf.    6.52904 (29) obj. 7 iterations 0
Cbc0038I Pass  67: suminf.    6.90728 (30) obj. 7 iterations 21
Cbc0038I Pass  68: suminf.    6.83321 (30) obj. 7 iterations 12
Cbc0038I Pass  69: suminf.    6.83321 (30) obj. 7 iterations 0
Cbc0038I Pass  70: suminf.    8.68781 (33) obj. 7 iterations 24
Cbc0038I Pass  71: suminf.    7.44141 (27) obj. 7 iterations 26
Cbc0038I Pass  72: suminf.    7.13586 (27) obj. 7 iterations 4
Cbc0038I Pass  73: suminf.   10.67831 (30) obj. 7 iterations 40
Cbc0038I Pass  74: suminf.    5.85556 (14) obj. 7 iterations 26
Cbc0038I Pass  75: suminf.    5.60556 (14) obj. 7 iterations 4
Cbc0038I Pass  76: suminf.    5.60556 (14) obj. 7 iterations 7
Cbc0038I Pass  77: suminf.   14.56022 (44) obj. 7 iterations 94
Cbc0038I Pass  78: suminf.    7.81594 (34) obj. 7 iterations 67
Cbc0038I Pass  79: suminf.    6.72616 (32) obj. 7 iterations 21
Cbc0038I Pass  80: suminf.    6.43492 (28) obj. 7 iterations 8
Cbc0038I Pass  81: suminf.    8.29365 (26) obj. 7 iterations 33
Cbc0038I Pass  82: suminf.    7.19048 (28) obj. 7 iterations 31
Cbc0038I Pass  83: suminf.    6.32937 (26) obj. 7 iterations 16
Cbc0038I Pass  84: suminf.    5.82937 (25) obj. 7 iterations 8
Cbc0038I Pass  85: suminf.    5.82937 (25) obj. 7 iterations 3
Cbc0038I Pass  86: suminf.   10.82755 (34) obj. 7 iterations 44
Cbc0038I Pass  87: suminf.    7.53410 (24) obj. 7 iterations 53
Cbc0038I Pass  88: suminf.    6.09663 (26) obj. 7 iterations 17
Cbc0038I Pass  89: suminf.   10.91482 (35) obj. 7 iterations 36
Cbc0038I Pass  90: suminf.    6.85101 (24) obj. 7 iterations 35
Cbc0038I Pass  91: suminf.    6.76315 (22) obj. 7 iterations 17
Cbc0038I Pass  92: suminf.    6.52365 (23) obj. 7 iterations 6
Cbc0038I Pass  93: suminf.    6.49394 (19) obj. 7 iterations 29
Cbc0038I Pass  94: suminf.    4.91212 (15) obj. 7 iterations 24
Cbc0038I Pass  95: suminf.    4.91212 (15) obj. 7 iterations 4
Cbc0038I Pass  96: suminf.    6.68283 (19) obj. 7 iterations 23
Cbc0038I Pass  97: suminf.    5.10101 (14) obj. 7 iterations 30
Cbc0038I Pass  98: suminf.    4.86151 (15) obj. 7 iterations 10
Cbc0038I Pass  99: suminf.    6.56667 (19) obj. 7 iterations 21
Cbc0038I Pass 100: suminf.    9.35790 (35) obj. 7 iterations 84
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 505 integers at bound fixed and 0 continuous
Cbc0038I Full problem 269 rows 755 columns, reduced to 214 rows 235 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.58 seconds)
Cbc0038I After 2.58 seconds - Feasibility pump exiting - took 0.65 seconds
Cbc0012I Integer solution of 7 found by DiveCoefficient after 745 iterations and 0 nodes (6.91 seconds)
Cbc0031I 61 added rows had average density of 91.098361
Cbc0013I At root node, 61 cuts changed objective from 6.3076923 to 7 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 132 row cuts average 5.6 elements, 12 column cuts (12 active)  in 0.432 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 359.1 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 90 row cuts average 14.9 elements, 0 column cuts (0 active)  in 2.870 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 59.5 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 244.0 elements, 0 column cuts (0 active)  in 0.257 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 100 row cuts average 57.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0001I Search completed - best objective 7, took 745 iterations and 0 nodes (6.91 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 6.30769 to 7
Probing was tried 10 times and created 144 cuts of which 0 were active after adding rounds of cuts (0.432185 seconds)
Gomory was tried 10 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.121776 seconds)
liftKnapsack was tried 10 times and created 90 cuts of which 0 were active after adding rounds of cuts (2.87027 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003427 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019928 seconds)
MixedIntegerRounding2 was tried 10 times and created 86 cuts of which 0 were active after adding rounds of cuts (0.053236 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003139 seconds)
TwoMirCuts was tried 10 times and created 168 cuts of which 0 were active after adding rounds of cuts (0.256894 seconds)
ZeroHalf was tried 10 times and created 100 cuts of which 0 were active after adding rounds of cuts (0.062051 seconds)

Result - Optimal solution found
Objective value:                7
Enumerated nodes:               0
Total iterations:               745
Time (CPU seconds):             6.96473
Time (Wallclock seconds):       6.94998
Total time (CPU seconds):       7.00303   (Wallclock seconds):       6.97963
