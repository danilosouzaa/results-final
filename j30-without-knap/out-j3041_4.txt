Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3041/j3041_4.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3041_4.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.084998 seconds
Cgl0002I 10 variables fixed
Cgl0003I 15 fixed, 0 tightened bounds, 10 strengthened rows, 9 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 292 rows, 622 columns (622 integer (621 of which binary)) and 6617 elements
Coin3009W Conflict graph built in 0.035 seconds, density: 1.627%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 622 objects (622 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 76 integers unsatisfied sum - 19.0025
Cbc0038I Pass   1: suminf.   12.75968 (50) obj. 1 iterations 208
Cbc0038I Pass   2: suminf.   12.42546 (49) obj. 1 iterations 14
Cbc0038I Pass   3: suminf.   12.17772 (44) obj. 2 iterations 118
Cbc0038I Pass   4: suminf.    9.66916 (35) obj. 2 iterations 58
Cbc0038I Pass   5: suminf.    9.53730 (36) obj. 2 iterations 23
Cbc0038I Pass   6: suminf.    9.17263 (41) obj. 2 iterations 22
Cbc0038I Pass   7: suminf.   11.15344 (40) obj. 2 iterations 56
Cbc0038I Pass   8: suminf.    9.42730 (42) obj. 2 iterations 55
Cbc0038I Pass   9: suminf.    9.11914 (43) obj. 2 iterations 30
Cbc0038I Pass  10: suminf.    7.81958 (38) obj. 2 iterations 68
Cbc0038I Pass  11: suminf.    7.11566 (46) obj. 2 iterations 45
Cbc0038I Pass  12: suminf.    8.21684 (34) obj. 2 iterations 91
Cbc0038I Pass  13: suminf.    6.80834 (41) obj. 2 iterations 63
Cbc0038I Pass  14: suminf.    6.80834 (41) obj. 2 iterations 2
Cbc0038I Pass  15: suminf.    6.16595 (37) obj. 2 iterations 49
Cbc0038I Pass  16: suminf.    5.93750 (37) obj. 2 iterations 31
Cbc0038I Pass  17: suminf.   10.70972 (38) obj. 2 iterations 92
Cbc0038I Pass  18: suminf.    9.52206 (42) obj. 2 iterations 78
Cbc0038I Pass  19: suminf.    8.85105 (37) obj. 2 iterations 22
Cbc0038I Pass  20: suminf.    8.53499 (37) obj. 2 iterations 13
Cbc0038I Pass  21: suminf.    6.84222 (32) obj. 2 iterations 47
Cbc0038I Pass  22: suminf.    6.84222 (32) obj. 2 iterations 2
Cbc0038I Pass  23: suminf.    7.74179 (37) obj. 2 iterations 61
Cbc0038I Pass  24: suminf.    5.96349 (31) obj. 2 iterations 38
Cbc0038I Pass  25: suminf.    7.81296 (30) obj. 2 iterations 73
Cbc0038I Pass  26: suminf.    5.41508 (24) obj. 2 iterations 49
Cbc0038I Pass  27: suminf.    5.41508 (24) obj. 2 iterations 3
Cbc0038I Pass  28: suminf.    8.15714 (31) obj. 2 iterations 63
Cbc0038I Pass  29: suminf.    6.33175 (27) obj. 2 iterations 60
Cbc0038I Pass  30: suminf.    5.77619 (27) obj. 2 iterations 7
Cbc0038I Pass  31: suminf.    5.61519 (32) obj. 2 iterations 44
Cbc0038I Pass  32: suminf.    5.66717 (34) obj. 2 iterations 51
Cbc0038I Pass  33: suminf.    5.46852 (32) obj. 2 iterations 46
Cbc0038I Pass  34: suminf.    5.39297 (32) obj. 2 iterations 16
Cbc0038I Pass  35: suminf.    9.54444 (34) obj. 2 iterations 72
Cbc0038I Pass  36: suminf.    7.23452 (28) obj. 2 iterations 64
Cbc0038I Pass  37: suminf.    6.63730 (29) obj. 2 iterations 11
Cbc0038I Pass  38: suminf.    6.43519 (34) obj. 2 iterations 24
Cbc0038I Pass  39: suminf.    6.14297 (34) obj. 2 iterations 11
Cbc0038I Pass  40: suminf.    5.86138 (33) obj. 2 iterations 52
Cbc0038I Pass  41: suminf.    5.46481 (34) obj. 2 iterations 55
Cbc0038I Pass  42: suminf.    5.36519 (34) obj. 2 iterations 11
Cbc0038I Pass  43: suminf.    7.63802 (31) obj. 2 iterations 80
Cbc0038I Pass  44: suminf.    5.61111 (27) obj. 2 iterations 62
Cbc0038I Pass  45: suminf.    5.21111 (27) obj. 2 iterations 11
Cbc0038I Pass  46: suminf.    8.40018 (31) obj. 2 iterations 68
Cbc0038I Pass  47: suminf.    6.66508 (28) obj. 2 iterations 36
Cbc0038I Pass  48: suminf.    6.33175 (24) obj. 2 iterations 23
Cbc0038I Pass  49: suminf.    8.15714 (31) obj. 2 iterations 88
Cbc0038I Pass  50: suminf.    5.55397 (26) obj. 2 iterations 68
Cbc0038I Pass  51: suminf.    5.55397 (26) obj. 2 iterations 0
Cbc0038I Pass  52: suminf.    5.61436 (30) obj. 2 iterations 65
Cbc0038I Pass  53: suminf.    5.41508 (24) obj. 2 iterations 40
Cbc0038I Pass  54: suminf.    6.83134 (35) obj. 2 iterations 63
Cbc0038I Pass  55: suminf.    5.88730 (30) obj. 2 iterations 55
Cbc0038I Pass  56: suminf.    9.10000 (31) obj. 2 iterations 78
Cbc0038I Pass  57: suminf.    7.23452 (28) obj. 2 iterations 61
Cbc0038I Pass  58: suminf.    6.63730 (29) obj. 2 iterations 12
Cbc0038I Pass  59: suminf.    6.43519 (34) obj. 2 iterations 35
Cbc0038I Pass  60: suminf.    6.14297 (34) obj. 2 iterations 11
Cbc0038I Pass  61: suminf.    9.44688 (41) obj. 2 iterations 70
Cbc0038I Pass  62: suminf.    7.22901 (35) obj. 2 iterations 64
Cbc0038I Pass  63: suminf.    6.96492 (31) obj. 2 iterations 15
Cbc0038I Pass  64: suminf.    6.96667 (26) obj. 2 iterations 53
Cbc0038I Pass  65: suminf.    5.39755 (28) obj. 2 iterations 41
Cbc0038I Pass  66: suminf.    5.28788 (26) obj. 2 iterations 21
Cbc0038I Pass  67: suminf.    8.48254 (32) obj. 2 iterations 65
Cbc0038I Pass  68: suminf.    5.96667 (25) obj. 2 iterations 60
Cbc0038I Pass  69: suminf.    5.21667 (23) obj. 2 iterations 45
Cbc0038I Pass  70: suminf.    5.21667 (23) obj. 2 iterations 4
Cbc0038I Pass  71: suminf.    6.33422 (24) obj. 2 iterations 34
Cbc0038I Pass  72: suminf.    4.96667 (23) obj. 2 iterations 38
Cbc0038I Pass  73: suminf.    5.70000 (23) obj. 2 iterations 23
Cbc0038I Pass  74: suminf.    5.16667 (23) obj. 2 iterations 13
Cbc0038I Pass  75: suminf.    5.16667 (23) obj. 2 iterations 5
Cbc0038I Pass  76: suminf.   14.21613 (54) obj. 2 iterations 110
Cbc0038I Pass  77: suminf.    7.60766 (36) obj. 2 iterations 85
Cbc0038I Pass  78: suminf.    7.43349 (34) obj. 2 iterations 21
Cbc0038I Pass  79: suminf.    7.61466 (37) obj. 2 iterations 72
Cbc0038I Pass  80: suminf.    6.13333 (29) obj. 2 iterations 50
Cbc0038I Pass  81: suminf.    6.13333 (29) obj. 2 iterations 0
Cbc0038I Pass  82: suminf.   14.74341 (57) obj. 2 iterations 107
Cbc0038I Pass  83: suminf.    6.96999 (31) obj. 2 iterations 99
Cbc0038I Pass  84: suminf.    6.45680 (30) obj. 2 iterations 10
Cbc0038I Pass  85: suminf.    6.45680 (30) obj. 2 iterations 0
Cbc0038I Pass  86: suminf.    5.78141 (27) obj. 2 iterations 49
Cbc0038I Pass  87: suminf.    4.05363 (21) obj. 2 iterations 29
Cbc0038I Pass  88: suminf.    5.09660 (21) obj. 2 iterations 106
Cbc0038I Pass  89: suminf.    3.92143 (22) obj. 2 iterations 55
Cbc0038I Pass  90: suminf.    5.78663 (22) obj. 2 iterations 45
Cbc0038I Pass  91: suminf.    3.46810 (17) obj. 2 iterations 38
Cbc0038I Pass  92: suminf.    3.15698 (17) obj. 2 iterations 12
Cbc0038I Pass  93: suminf.    7.48333 (24) obj. 2 iterations 79
Cbc0038I Pass  94: suminf.    4.25556 (24) obj. 2 iterations 53
Cbc0038I Pass  95: suminf.    3.99444 (19) obj. 2 iterations 26
Cbc0038I Pass  96: suminf.    5.12778 (20) obj. 2 iterations 79
Cbc0038I Pass  97: suminf.    4.36204 (19) obj. 2 iterations 49
Cbc0038I Pass  98: suminf.    8.63097 (30) obj. 2 iterations 80
Cbc0038I Pass  99: suminf.    7.76619 (34) obj. 2 iterations 27
Cbc0038I Pass 100: suminf.   10.18033 (48) obj. 2 iterations 122
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 359 integers at bound fixed and 0 continuous
Cbc0038I Full problem 292 rows 622 columns, reduced to 218 rows 229 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.14 seconds)
Cbc0038I After 2.14 seconds - Feasibility pump exiting - took 0.70 seconds
Cbc0031I 59 added rows had average density of 31.542373
Cbc0013I At root node, 59 cuts changed objective from 0 to 1 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 202 row cuts average 5.5 elements, 1 column cuts (43 active)  in 0.439 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 219 row cuts average 445.0 elements, 0 column cuts (0 active)  in 0.455 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 382 row cuts average 7.8 elements, 0 column cuts (0 active)  in 6.447 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 44 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 66 row cuts average 40.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 300 row cuts average 201.9 elements, 0 column cuts (0 active)  in 0.689 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 117 row cuts average 42.9 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (11.96 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (13.09 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (14.74 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (17.54 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (19.96 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (22.46 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (23.81 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1 (25.01 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 1 (26.52 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 1 (28.74 seconds)
Cbc0010I After 11 nodes, 9 on tree, 1e+50 best solution, best possible 1 (29.52 seconds)
Cbc0010I After 13 nodes, 9 on tree, 1e+50 best solution, best possible 1 (30.40 seconds)
Cbc0010I After 14 nodes, 10 on tree, 1e+50 best solution, best possible 1 (31.16 seconds)
Cbc0010I After 16 nodes, 10 on tree, 1e+50 best solution, best possible 1 (32.39 seconds)
Cbc0010I After 18 nodes, 10 on tree, 1e+50 best solution, best possible 1 (33.70 seconds)
Cbc0010I After 19 nodes, 10 on tree, 1e+50 best solution, best possible 1 (34.89 seconds)
Cbc0010I After 23 nodes, 8 on tree, 1e+50 best solution, best possible 1 (37.65 seconds)
Cbc0010I After 24 nodes, 9 on tree, 1e+50 best solution, best possible 1 (40.47 seconds)
Cbc0010I After 25 nodes, 9 on tree, 1e+50 best solution, best possible 1 (41.97 seconds)
Cbc0010I After 26 nodes, 10 on tree, 1e+50 best solution, best possible 1 (43.81 seconds)
Cbc0010I After 27 nodes, 11 on tree, 1e+50 best solution, best possible 1 (44.98 seconds)
Cbc0010I After 28 nodes, 11 on tree, 1e+50 best solution, best possible 1 (45.82 seconds)
Cbc0010I After 32 nodes, 9 on tree, 1e+50 best solution, best possible 1 (48.60 seconds)
Cbc0010I After 33 nodes, 10 on tree, 1e+50 best solution, best possible 1 (50.38 seconds)
Cbc0010I After 34 nodes, 11 on tree, 1e+50 best solution, best possible 1 (51.15 seconds)
Cbc0010I After 38 nodes, 11 on tree, 1e+50 best solution, best possible 1 (52.11 seconds)
Cbc0010I After 41 nodes, 10 on tree, 1e+50 best solution, best possible 1 (53.94 seconds)
Cbc0010I After 43 nodes, 10 on tree, 1e+50 best solution, best possible 1 (56.21 seconds)
Cbc0010I After 45 nodes, 10 on tree, 1e+50 best solution, best possible 1 (58.88 seconds)
Cbc0010I After 46 nodes, 11 on tree, 1e+50 best solution, best possible 1 (60.97 seconds)
Cbc0010I After 47 nodes, 12 on tree, 1e+50 best solution, best possible 1 (62.53 seconds)
Cbc0010I After 48 nodes, 12 on tree, 1e+50 best solution, best possible 1 (64.24 seconds)
Cbc0010I After 49 nodes, 13 on tree, 1e+50 best solution, best possible 1 (66.36 seconds)
Cbc0010I After 51 nodes, 13 on tree, 1e+50 best solution, best possible 1 (68.11 seconds)
Cbc0010I After 53 nodes, 12 on tree, 1e+50 best solution, best possible 1 (69.10 seconds)
Cbc0010I After 55 nodes, 11 on tree, 1e+50 best solution, best possible 1 (71.04 seconds)
Cbc0010I After 58 nodes, 9 on tree, 1e+50 best solution, best possible 1 (73.53 seconds)
Cbc0010I After 59 nodes, 10 on tree, 1e+50 best solution, best possible 1 (74.36 seconds)
Cbc0010I After 60 nodes, 10 on tree, 1e+50 best solution, best possible 1 (75.89 seconds)
Cbc0010I After 66 nodes, 4 on tree, 1e+50 best solution, best possible 1 (76.60 seconds)
Cbc0010I After 69 nodes, 1 on tree, 1e+50 best solution, best possible 1 (78.13 seconds)
Cbc0010I After 70 nodes, 1 on tree, 1e+50 best solution, best possible 2 (79.30 seconds)
Cbc0010I After 71 nodes, 2 on tree, 1e+50 best solution, best possible 2 (80.38 seconds)
Cbc0010I After 72 nodes, 3 on tree, 1e+50 best solution, best possible 2 (81.68 seconds)
Cbc0010I After 73 nodes, 4 on tree, 1e+50 best solution, best possible 2 (82.85 seconds)
Cbc0010I After 74 nodes, 5 on tree, 1e+50 best solution, best possible 2 (83.87 seconds)
Cbc0010I After 78 nodes, 4 on tree, 1e+50 best solution, best possible 2 (85.13 seconds)
Cbc0010I After 79 nodes, 4 on tree, 1e+50 best solution, best possible 2 (86.37 seconds)
Cbc0010I After 81 nodes, 6 on tree, 1e+50 best solution, best possible 2 (87.62 seconds)
Cbc0010I After 83 nodes, 7 on tree, 1e+50 best solution, best possible 2 (88.63 seconds)
Cbc0010I After 87 nodes, 6 on tree, 1e+50 best solution, best possible 2 (89.71 seconds)
Cbc0010I After 89 nodes, 6 on tree, 1e+50 best solution, best possible 2 (91.22 seconds)
Cbc0010I After 93 nodes, 4 on tree, 1e+50 best solution, best possible 2 (92.13 seconds)
Cbc0010I After 94 nodes, 4 on tree, 1e+50 best solution, best possible 2 (92.98 seconds)
Cbc0010I After 97 nodes, 2 on tree, 1e+50 best solution, best possible 2 (93.99 seconds)
Cbc0010I After 98 nodes, 3 on tree, 1e+50 best solution, best possible 2 (95.30 seconds)
Cbc0010I After 102 nodes, 1 on tree, 1e+50 best solution, best possible 2 (97.04 seconds)
Cbc0010I After 103 nodes, 2 on tree, 1e+50 best solution, best possible 2 (99.12 seconds)
Cbc0010I After 104 nodes, 3 on tree, 1e+50 best solution, best possible 2 (99.87 seconds)
Cbc0010I After 105 nodes, 4 on tree, 1e+50 best solution, best possible 2 (101.10 seconds)
Cbc0010I After 106 nodes, 5 on tree, 1e+50 best solution, best possible 2 (101.93 seconds)
Cbc0010I After 108 nodes, 6 on tree, 1e+50 best solution, best possible 2 (102.95 seconds)
Cbc0010I After 110 nodes, 8 on tree, 1e+50 best solution, best possible 2 (103.67 seconds)
Cbc0010I After 112 nodes, 8 on tree, 1e+50 best solution, best possible 2 (104.43 seconds)
Cbc0010I After 114 nodes, 9 on tree, 1e+50 best solution, best possible 2 (105.60 seconds)
Cbc0010I After 117 nodes, 10 on tree, 1e+50 best solution, best possible 2 (106.51 seconds)
Cbc0010I After 122 nodes, 8 on tree, 1e+50 best solution, best possible 2 (107.49 seconds)
Cbc0010I After 123 nodes, 9 on tree, 1e+50 best solution, best possible 2 (108.51 seconds)
Cbc0010I After 127 nodes, 8 on tree, 1e+50 best solution, best possible 2 (109.32 seconds)
Cbc0010I After 128 nodes, 9 on tree, 1e+50 best solution, best possible 2 (110.16 seconds)
Cbc0010I After 130 nodes, 10 on tree, 1e+50 best solution, best possible 2 (111.34 seconds)
Cbc0010I After 133 nodes, 11 on tree, 1e+50 best solution, best possible 2 (112.16 seconds)
Cbc0010I After 135 nodes, 13 on tree, 1e+50 best solution, best possible 2 (113.45 seconds)
Cbc0010I After 139 nodes, 12 on tree, 1e+50 best solution, best possible 2 (114.80 seconds)
Cbc0010I After 140 nodes, 13 on tree, 1e+50 best solution, best possible 2 (115.60 seconds)
Cbc0010I After 145 nodes, 12 on tree, 1e+50 best solution, best possible 2 (116.68 seconds)
Cbc0010I After 147 nodes, 11 on tree, 1e+50 best solution, best possible 2 (117.50 seconds)
Cbc0010I After 149 nodes, 11 on tree, 1e+50 best solution, best possible 2 (118.42 seconds)
Cbc0010I After 152 nodes, 11 on tree, 1e+50 best solution, best possible 2 (119.69 seconds)
Cbc0010I After 156 nodes, 10 on tree, 1e+50 best solution, best possible 2 (120.43 seconds)
Cbc0010I After 158 nodes, 10 on tree, 1e+50 best solution, best possible 2 (121.69 seconds)
Cbc0010I After 162 nodes, 9 on tree, 1e+50 best solution, best possible 2 (123.11 seconds)
Cbc0010I After 165 nodes, 9 on tree, 1e+50 best solution, best possible 2 (124.16 seconds)
Cbc0004I Integer solution of 2 found after 37548 iterations and 171 nodes (125.02 seconds)
Cbc0001I Search completed - best objective 2, took 37548 iterations and 171 nodes (125.02 seconds)
Cbc0032I Strong branching done 1350 times (41310 iterations), fathomed 3 nodes and fixed 7 variables
Cbc0035I Maximum depth 19, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 146 times and created 1533 cuts of which 42 were active after adding rounds of cuts (1.19037 seconds)
Gomory was tried 141 times and created 265 cuts of which 0 were active after adding rounds of cuts (0.882979 seconds)
liftKnapsack was tried 141 times and created 3668 cuts of which 0 were active after adding rounds of cuts (100.805 seconds)
Clique was tried 141 times and created 266 cuts of which 0 were active after adding rounds of cuts (0.189459 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.070106 seconds)
MixedIntegerRounding2 was tried 141 times and created 760 cuts of which 0 were active after adding rounds of cuts (0.47017 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002411 seconds)
TwoMirCuts was tried 141 times and created 1052 cuts of which 0 were active after adding rounds of cuts (0.972495 seconds)
ZeroHalf was tried 141 times and created 885 cuts of which 0 were active after adding rounds of cuts (1.19932 seconds)

Result - Optimal solution found
Objective value:                2
Enumerated nodes:               171
Total iterations:               37548
Time (CPU seconds):             124.983
Time (Wallclock seconds):       125.07
Total time (CPU seconds):       124.992   (Wallclock seconds):       125.081
