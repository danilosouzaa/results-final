Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3028/j3028_1.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3028_1.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.072638 seconds
Cgl0002I 17 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 178 rows, 710 columns (710 integer (710 of which binary)) and 7629 elements
Coin3009W Conflict graph built in 0.042 seconds, density: 1.519%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 710 objects (710 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.75995
Cbc0038I Pass   1: suminf.    1.70000 (8) obj. 0 iterations 25
Cbc0038I Pass   2: suminf.    2.70000 (11) obj. 0 iterations 10
Cbc0038I Pass   3: suminf.    1.32500 (9) obj. 0 iterations 7
Cbc0038I Pass   4: suminf.    2.20000 (8) obj. 0 iterations 13
Cbc0038I Pass   5: suminf.    1.60000 (8) obj. 0 iterations 4
Cbc0038I Pass   6: suminf.    2.55000 (8) obj. 0 iterations 10
Cbc0038I Pass   7: suminf.    1.28333 (8) obj. 0 iterations 4
Cbc0038I Pass   8: suminf.    3.50000 (9) obj. 0 iterations 12
Cbc0038I Pass   9: suminf.    2.80000 (11) obj. 0 iterations 10
Cbc0038I Pass  10: suminf.    1.40000 (6) obj. 0 iterations 7
Cbc0038I Pass  11: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  12: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  13: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  14: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  15: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  16: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  17: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  18: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  19: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  20: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  21: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  22: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  23: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  24: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  25: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  26: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  27: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  28: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  29: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  30: suminf.    1.40000 (6) obj. 0 iterations 5
Cbc0038I Pass  31: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  32: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  33: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  34: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  35: suminf.    1.40000 (6) obj. 0 iterations 6
Cbc0038I Pass  36: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  37: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  38: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  39: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  40: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  41: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  42: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  43: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  44: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  45: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  46: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  47: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  48: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  49: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  50: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  51: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  52: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  53: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  54: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  55: suminf.    1.40000 (6) obj. 0 iterations 5
Cbc0038I Pass  56: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  57: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  58: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  59: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  60: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  61: suminf.    1.75000 (6) obj. 0 iterations 8
Cbc0038I Pass  62: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  63: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  64: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  65: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  66: suminf.    1.75000 (6) obj. 0 iterations 10
Cbc0038I Pass  67: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  68: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  69: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  70: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  71: suminf.    1.75000 (6) obj. 0 iterations 9
Cbc0038I Pass  72: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  73: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  74: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  75: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  76: suminf.    1.75000 (6) obj. 0 iterations 9
Cbc0038I Pass  77: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  78: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  79: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  80: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  81: suminf.    1.75000 (6) obj. 0 iterations 9
Cbc0038I Pass  82: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  83: suminf.    2.50000 (7) obj. 0 iterations 8
Cbc0038I Pass  84: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  85: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  86: suminf.    1.75000 (6) obj. 0 iterations 7
Cbc0038I Pass  87: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  88: suminf.    2.50000 (7) obj. 0 iterations 9
Cbc0038I Pass  89: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  90: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  91: suminf.    1.75000 (6) obj. 0 iterations 9
Cbc0038I Pass  92: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  93: suminf.    2.50000 (7) obj. 0 iterations 12
Cbc0038I Pass  94: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass  95: suminf.    1.40000 (6) obj. 0 iterations 3
Cbc0038I Pass  96: suminf.    1.75000 (6) obj. 0 iterations 9
Cbc0038I Pass  97: suminf.    1.08333 (6) obj. 0 iterations 4
Cbc0038I Pass  98: suminf.    2.50000 (7) obj. 0 iterations 8
Cbc0038I Pass  99: suminf.    1.60000 (8) obj. 0 iterations 5
Cbc0038I Pass 100: suminf.    4.10649 (14) obj. 0 iterations 93
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 653 integers at bound fixed and 0 continuous
Cbc0038I Full problem 178 rows 710 columns, reduced to 26 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (2.61 seconds)
Cbc0038I Full problem 179 rows 710 columns, reduced to 179 rows 710 columns - too large
Cbc0038I After 2.70 seconds - Feasibility pump exiting - took 0.90 seconds
Cbc0012I Integer solution of 0 found by DiveCoefficient after 233 iterations and 0 nodes (3.88 seconds)
Cbc0031I 24 added rows had average density of 87.041667
Cbc0013I At root node, 24 cuts changed objective from 0 to 0 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.258 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 48 row cuts average 207.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 22 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.592 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 40.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 85.4 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 58 row cuts average 136.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0001I Search completed - best objective 0, took 233 iterations and 0 nodes (3.88 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 6 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.257548 seconds)
Gomory was tried 6 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.024174 seconds)
liftKnapsack was tried 6 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.591504 seconds)
Clique was tried 6 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001043 seconds)
OddWheel was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001735 seconds)
MixedIntegerRounding2 was tried 6 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.018823 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001244 seconds)
TwoMirCuts was tried 6 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.031559 seconds)
ZeroHalf was tried 6 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.008861 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               0
Total iterations:               233
Time (CPU seconds):             3.78205
Time (Wallclock seconds):       3.91193
Total time (CPU seconds):       3.79434   (Wallclock seconds):       3.9254
