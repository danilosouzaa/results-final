Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3044/j3044_3.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3044_3.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 2.29744 - 0.04825 seconds
Cgl0002I 5 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 316 rows, 739 columns (739 integer (738 of which binary)) and 8607 elements
Coin3009W Conflict graph built in 0.028 seconds, density: 1.058%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 739 objects (739 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 70 integers unsatisfied sum - 21.5048
Cbc0038I Pass   1: suminf.    9.59126 (32) obj. 4 iterations 68
Cbc0038I Pass   2: suminf.    8.43681 (36) obj. 4 iterations 15
Cbc0038I Pass   3: suminf.    9.24354 (30) obj. 4 iterations 34
Cbc0038I Pass   4: suminf.    8.58599 (36) obj. 4 iterations 15
Cbc0038I Pass   5: suminf.    8.08370 (32) obj. 4 iterations 8
Cbc0038I Pass   6: suminf.    6.18855 (28) obj. 4 iterations 25
Cbc0038I Pass   7: suminf.    5.35714 (25) obj. 4 iterations 14
Cbc0038I Pass   8: suminf.    6.14490 (28) obj. 4 iterations 27
Cbc0038I Pass   9: suminf.    5.33810 (25) obj. 4 iterations 20
Cbc0038I Pass  10: suminf.    6.80890 (33) obj. 4 iterations 36
Cbc0038I Pass  11: suminf.    6.80890 (33) obj. 4 iterations 1
Cbc0038I Pass  12: suminf.    8.80609 (33) obj. 4 iterations 37
Cbc0038I Pass  13: suminf.    7.49537 (23) obj. 4 iterations 5
Cbc0038I Pass  14: suminf.    7.36111 (22) obj. 4 iterations 8
Cbc0038I Pass  15: suminf.    7.36111 (22) obj. 4 iterations 0
Cbc0038I Pass  16: suminf.    7.00847 (32) obj. 4 iterations 41
Cbc0038I Pass  17: suminf.    6.80890 (33) obj. 4 iterations 7
Cbc0038I Pass  18: suminf.    6.88095 (23) obj. 4 iterations 30
Cbc0038I Pass  19: suminf.    6.71587 (32) obj. 4 iterations 13
Cbc0038I Pass  20: suminf.    6.49834 (33) obj. 4 iterations 22
Cbc0038I Pass  21: suminf.    6.49834 (33) obj. 4 iterations 1
Cbc0038I Pass  22: suminf.    7.02413 (33) obj. 4 iterations 36
Cbc0038I Pass  23: suminf.    6.62015 (35) obj. 4 iterations 11
Cbc0038I Pass  24: suminf.    7.25241 (31) obj. 4 iterations 7
Cbc0038I Pass  25: suminf.    6.62015 (34) obj. 4 iterations 6
Cbc0038I Pass  26: suminf.   10.15160 (31) obj. 4 iterations 71
Cbc0038I Pass  27: suminf.    7.11833 (23) obj. 4 iterations 59
Cbc0038I Pass  28: suminf.    6.20924 (21) obj. 4 iterations 3
Cbc0038I Pass  29: suminf.    3.61616 (16) obj. 4 iterations 17
Cbc0038I Pass  30: suminf.    3.61616 (16) obj. 4 iterations 4
Cbc0038I Pass  31: suminf.    5.40722 (16) obj. 4 iterations 31
Cbc0038I Pass  32: suminf.    3.90188 (16) obj. 4 iterations 25
Cbc0038I Pass  33: suminf.    5.45108 (17) obj. 4 iterations 34
Cbc0038I Pass  34: suminf.    3.39394 (14) obj. 4 iterations 22
Cbc0038I Pass  35: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  36: suminf.    5.34981 (19) obj. 4 iterations 34
Cbc0038I Pass  37: suminf.    3.67965 (14) obj. 4 iterations 25
Cbc0038I Pass  38: suminf.    5.36775 (17) obj. 4 iterations 27
Cbc0038I Pass  39: suminf.    3.39394 (14) obj. 4 iterations 22
Cbc0038I Pass  40: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  41: suminf.    5.34981 (19) obj. 4 iterations 29
Cbc0038I Pass  42: suminf.    3.67965 (14) obj. 4 iterations 24
Cbc0038I Pass  43: suminf.    5.36775 (17) obj. 4 iterations 28
Cbc0038I Pass  44: suminf.    3.39394 (14) obj. 4 iterations 26
Cbc0038I Pass  45: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  46: suminf.    4.67706 (14) obj. 4 iterations 23
Cbc0038I Pass  47: suminf.    3.67965 (14) obj. 4 iterations 19
Cbc0038I Pass  48: suminf.    5.36775 (17) obj. 4 iterations 32
Cbc0038I Pass  49: suminf.    3.39394 (14) obj. 4 iterations 24
Cbc0038I Pass  50: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  51: suminf.    5.34981 (19) obj. 4 iterations 32
Cbc0038I Pass  52: suminf.    3.67965 (14) obj. 4 iterations 27
Cbc0038I Pass  53: suminf.    5.36775 (17) obj. 4 iterations 27
Cbc0038I Pass  54: suminf.    3.39394 (14) obj. 4 iterations 23
Cbc0038I Pass  55: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  56: suminf.    4.61991 (14) obj. 4 iterations 16
Cbc0038I Pass  57: suminf.    3.39394 (14) obj. 4 iterations 15
Cbc0038I Pass  58: suminf.    5.21277 (16) obj. 4 iterations 30
Cbc0038I Pass  59: suminf.    3.67965 (14) obj. 4 iterations 28
Cbc0038I Pass  60: suminf.    5.36775 (17) obj. 4 iterations 29
Cbc0038I Pass  61: suminf.    3.39394 (14) obj. 4 iterations 26
Cbc0038I Pass  62: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  63: suminf.    5.34981 (19) obj. 4 iterations 32
Cbc0038I Pass  64: suminf.    3.67965 (14) obj. 4 iterations 26
Cbc0038I Pass  65: suminf.    5.36775 (17) obj. 4 iterations 27
Cbc0038I Pass  66: suminf.    3.39394 (14) obj. 4 iterations 23
Cbc0038I Pass  67: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  68: suminf.    5.34981 (19) obj. 4 iterations 32
Cbc0038I Pass  69: suminf.    3.67965 (14) obj. 4 iterations 27
Cbc0038I Pass  70: suminf.    5.36775 (17) obj. 4 iterations 31
Cbc0038I Pass  71: suminf.    3.39394 (14) obj. 4 iterations 25
Cbc0038I Pass  72: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  73: suminf.    5.34981 (19) obj. 4 iterations 34
Cbc0038I Pass  74: suminf.    3.67965 (14) obj. 4 iterations 27
Cbc0038I Pass  75: suminf.    5.36775 (17) obj. 4 iterations 28
Cbc0038I Pass  76: suminf.    3.39394 (14) obj. 4 iterations 25
Cbc0038I Pass  77: suminf.    3.39394 (14) obj. 4 iterations 1
Cbc0038I Pass  78: suminf.    5.34981 (19) obj. 4 iterations 35
Cbc0038I Pass  79: suminf.    3.67965 (14) obj. 4 iterations 24
Cbc0038I Pass  80: suminf.    5.36775 (17) obj. 4 iterations 26
Cbc0038I Pass  81: suminf.    3.39394 (14) obj. 4 iterations 24
Cbc0038I Pass  82: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  83: suminf.    5.34981 (19) obj. 4 iterations 32
Cbc0038I Pass  84: suminf.    3.67965 (14) obj. 4 iterations 25
Cbc0038I Pass  85: suminf.    5.36775 (17) obj. 4 iterations 28
Cbc0038I Pass  86: suminf.    3.39394 (14) obj. 4 iterations 24
Cbc0038I Pass  87: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  88: suminf.    5.34981 (19) obj. 4 iterations 33
Cbc0038I Pass  89: suminf.    3.67965 (14) obj. 4 iterations 29
Cbc0038I Pass  90: suminf.    5.36775 (17) obj. 4 iterations 31
Cbc0038I Pass  91: suminf.    3.39394 (14) obj. 4 iterations 26
Cbc0038I Pass  92: suminf.    3.39394 (14) obj. 4 iterations 1
Cbc0038I Pass  93: suminf.    5.34981 (19) obj. 4 iterations 31
Cbc0038I Pass  94: suminf.    3.67965 (14) obj. 4 iterations 28
Cbc0038I Pass  95: suminf.    5.36775 (17) obj. 4 iterations 30
Cbc0038I Pass  96: suminf.    3.39394 (14) obj. 4 iterations 24
Cbc0038I Pass  97: suminf.    3.39394 (14) obj. 4 iterations 0
Cbc0038I Pass  98: suminf.    5.34981 (19) obj. 4 iterations 33
Cbc0038I Pass  99: suminf.    3.67965 (14) obj. 4 iterations 27
Cbc0038I Pass 100: suminf.    9.48697 (33) obj. 4 iterations 96
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 586 integers at bound fixed and 0 continuous
Cbc0038I Full problem 316 rows 739 columns, reduced to 166 rows 115 columns
Cbc0038I Mini branch and bound did not improve solution (3.55 seconds)
Cbc0038I After 3.55 seconds - Feasibility pump exiting - took 1.98 seconds
Cbc0031I 42 added rows had average density of 161.57143
Cbc0013I At root node, 42 cuts changed objective from 2.2974359 to 4 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 217 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.377 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 197 row cuts average 517.0 elements, 0 column cuts (0 active)  in 0.413 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 94 row cuts average 18.0 elements, 0 column cuts (0 active)  in 3.154 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 120 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 330 row cuts average 158.7 elements, 0 column cuts (0 active)  in 0.246 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 62 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 4 (10.26 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 4 (12.12 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 4 (13.86 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 4 (15.35 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 4 (16.38 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 4 (18.11 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 4 (19.00 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 4 (19.93 seconds)
Cbc0010I After 10 nodes, 8 on tree, 1e+50 best solution, best possible 4 (20.73 seconds)
Cbc0016I Integer solution of 4 found by strong branching after 2652 iterations and 13 nodes (21.50 seconds)
Cbc0001I Search completed - best objective 4, took 2673 iterations and 13 nodes (21.51 seconds)
Cbc0032I Strong branching done 452 times (13493 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 10, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.29744 to 4
Probing was tried 27 times and created 377 cuts of which 0 were active after adding rounds of cuts (0.453584 seconds)
Gomory was tried 27 times and created 197 cuts of which 0 were active after adding rounds of cuts (0.460692 seconds)
liftKnapsack was tried 27 times and created 170 cuts of which 0 were active after adding rounds of cuts (11.6804 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007445 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048434 seconds)
MixedIntegerRounding2 was tried 27 times and created 182 cuts of which 0 were active after adding rounds of cuts (0.140334 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002711 seconds)
TwoMirCuts was tried 27 times and created 345 cuts of which 0 were active after adding rounds of cuts (0.321004 seconds)
ZeroHalf was tried 27 times and created 103 cuts of which 0 were active after adding rounds of cuts (0.150041 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               13
Total iterations:               2673
Time (CPU seconds):             21.4447
Time (Wallclock seconds):       21.5563
Total time (CPU seconds):       21.459   (Wallclock seconds):       21.5695
