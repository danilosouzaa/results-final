Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_4.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3035_4.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 11.8947 - 0.100199 seconds
Cgl0003I 14 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 7 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 7 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 323 rows, 1138 columns (1138 integer (1137 of which binary)) and 14471 elements
Coin3009W Conflict graph built in 0.091 seconds, density: 0.967%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1138 objects (1138 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 64 integers unsatisfied sum - 16.2985
Cbc0038I Pass   1: suminf.    7.15144 (21) obj. 13 iterations 95
Cbc0038I Pass   2: suminf.    6.98477 (21) obj. 13 iterations 7
Cbc0038I Pass   3: suminf.    5.15931 (28) obj. 13 iterations 31
Cbc0038I Pass   4: suminf.    5.10931 (28) obj. 13 iterations 6
Cbc0038I Pass   5: suminf.    5.48598 (28) obj. 13 iterations 14
Cbc0038I Pass   6: suminf.   16.79821 (54) obj. 13 iterations 112
Cbc0038I Pass   7: suminf.   10.57458 (45) obj. 13 iterations 74
Cbc0038I Pass   8: suminf.    6.75072 (32) obj. 13 iterations 23
Cbc0038I Pass   9: suminf.    5.72500 (35) obj. 13 iterations 7
Cbc0038I Pass  10: suminf.    6.91464 (37) obj. 13 iterations 35
Cbc0038I Pass  11: suminf.    4.63130 (24) obj. 13 iterations 17
Cbc0038I Pass  12: suminf.    4.63130 (24) obj. 13 iterations 7
Cbc0038I Pass  13: suminf.    5.90329 (26) obj. 13 iterations 36
Cbc0038I Pass  14: suminf.    4.77232 (24) obj. 13 iterations 28
Cbc0038I Pass  15: suminf.    4.46463 (22) obj. 13 iterations 31
Cbc0038I Pass  16: suminf.    4.46463 (22) obj. 13 iterations 22
Cbc0038I Pass  17: suminf.    4.46463 (22) obj. 13 iterations 21
Cbc0038I Pass  18: suminf.    4.46463 (22) obj. 13 iterations 15
Cbc0038I Pass  19: suminf.    4.97934 (22) obj. 13 iterations 30
Cbc0038I Pass  20: suminf.    4.89600 (22) obj. 13 iterations 20
Cbc0038I Pass  21: suminf.    4.60749 (22) obj. 13 iterations 40
Cbc0038I Pass  22: suminf.   12.61616 (55) obj. 13 iterations 109
Cbc0038I Pass  23: suminf.    8.11293 (45) obj. 13 iterations 62
Cbc0038I Pass  24: suminf.    9.73810 (47) obj. 13 iterations 41
Cbc0038I Pass  25: suminf.    7.77241 (35) obj. 13 iterations 33
Cbc0038I Pass  26: suminf.    8.76629 (43) obj. 13 iterations 35
Cbc0038I Pass  27: suminf.    7.59463 (35) obj. 13 iterations 36
Cbc0038I Pass  28: suminf.    7.43756 (32) obj. 13 iterations 21
Cbc0038I Pass  29: suminf.    6.98653 (38) obj. 13 iterations 17
Cbc0038I Pass  30: suminf.    6.98653 (38) obj. 13 iterations 1
Cbc0038I Pass  31: suminf.    9.85394 (38) obj. 13 iterations 24
Cbc0038I Pass  32: suminf.    5.57992 (31) obj. 13 iterations 20
Cbc0038I Pass  33: suminf.    5.10505 (31) obj. 13 iterations 11
Cbc0038I Pass  34: suminf.    6.44371 (32) obj. 13 iterations 31
Cbc0038I Pass  35: suminf.    4.78759 (30) obj. 13 iterations 39
Cbc0038I Pass  36: suminf.    4.52325 (26) obj. 13 iterations 5
Cbc0038I Pass  37: suminf.    4.34607 (24) obj. 13 iterations 19
Cbc0038I Pass  38: suminf.    4.18991 (24) obj. 13 iterations 16
Cbc0038I Pass  39: suminf.    5.01593 (25) obj. 13 iterations 42
Cbc0038I Pass  40: suminf.   17.07767 (58) obj. 13 iterations 103
Cbc0038I Pass  41: suminf.   10.05048 (55) obj. 13 iterations 68
Cbc0038I Pass  42: suminf.    8.44961 (43) obj. 13 iterations 21
Cbc0038I Pass  43: suminf.    8.34961 (42) obj. 13 iterations 8
Cbc0038I Pass  44: suminf.    7.80627 (39) obj. 13 iterations 41
Cbc0038I Pass  45: suminf.    7.80627 (39) obj. 13 iterations 0
Cbc0038I Pass  46: suminf.    8.98677 (44) obj. 13 iterations 26
Cbc0038I Pass  47: suminf.    8.54926 (42) obj. 13 iterations 12
Cbc0038I Pass  48: suminf.    8.05627 (39) obj. 13 iterations 18
Cbc0038I Pass  49: suminf.    9.83942 (45) obj. 13 iterations 27
Cbc0038I Pass  50: suminf.    9.16006 (41) obj. 13 iterations 14
Cbc0038I Pass  51: suminf.    9.32280 (45) obj. 13 iterations 20
Cbc0038I Pass  52: suminf.    8.61183 (39) obj. 13 iterations 21
Cbc0038I Pass  53: suminf.    9.01556 (43) obj. 13 iterations 19
Cbc0038I Pass  54: suminf.    7.72294 (37) obj. 13 iterations 28
Cbc0038I Pass  55: suminf.    7.72294 (37) obj. 13 iterations 0
Cbc0038I Pass  56: suminf.   10.83648 (51) obj. 13 iterations 40
Cbc0038I Pass  57: suminf.    8.43722 (37) obj. 13 iterations 32
Cbc0038I Pass  58: suminf.    8.43722 (37) obj. 13 iterations 3
Cbc0038I Pass  59: suminf.    8.88818 (44) obj. 13 iterations 18
Cbc0038I Pass  60: suminf.    8.43722 (37) obj. 13 iterations 17
Cbc0038I Pass  61: suminf.   21.61628 (65) obj. 13 iterations 119
Cbc0038I Pass  62: suminf.   11.80368 (45) obj. 13 iterations 74
Cbc0038I Pass  63: suminf.   10.60544 (48) obj. 13 iterations 18
Cbc0038I Pass  64: suminf.   10.47982 (45) obj. 13 iterations 32
Cbc0038I Pass  65: suminf.   10.08061 (49) obj. 13 iterations 3
Cbc0038I Pass  66: suminf.    9.75495 (43) obj. 13 iterations 20
Cbc0038I Pass  67: suminf.    9.69877 (47) obj. 13 iterations 14
Cbc0038I Pass  68: suminf.    9.90580 (34) obj. 13 iterations 39
Cbc0038I Pass  69: suminf.    9.83516 (47) obj. 13 iterations 26
Cbc0038I Pass  70: suminf.    9.83516 (47) obj. 13 iterations 1
Cbc0038I Pass  71: suminf.   12.55356 (42) obj. 13 iterations 40
Cbc0038I Pass  72: suminf.   11.52088 (43) obj. 13 iterations 29
Cbc0038I Pass  73: suminf.   10.84313 (50) obj. 13 iterations 8
Cbc0038I Pass  74: suminf.   11.19169 (42) obj. 13 iterations 23
Cbc0038I Pass  75: suminf.   10.82497 (50) obj. 13 iterations 13
Cbc0038I Pass  76: suminf.   10.82497 (50) obj. 13 iterations 2
Cbc0038I Pass  77: suminf.   10.00904 (40) obj. 13 iterations 18
Cbc0038I Pass  78: suminf.    9.74237 (40) obj. 13 iterations 9
Cbc0038I Pass  79: suminf.   10.50563 (44) obj. 13 iterations 13
Cbc0038I Pass  80: suminf.   10.43540 (47) obj. 13 iterations 14
Cbc0038I Pass  81: suminf.    9.52698 (40) obj. 13 iterations 25
Cbc0038I Pass  82: suminf.    9.49062 (40) obj. 13 iterations 7
Cbc0038I Pass  83: suminf.    9.75389 (43) obj. 13 iterations 16
Cbc0038I Pass  84: suminf.    9.15424 (39) obj. 13 iterations 11
Cbc0038I Pass  85: suminf.   11.34152 (47) obj. 13 iterations 34
Cbc0038I Pass  86: suminf.   10.28443 (44) obj. 13 iterations 34
Cbc0038I Pass  87: suminf.   11.03414 (49) obj. 13 iterations 29
Cbc0038I Pass  88: suminf.   10.12818 (43) obj. 13 iterations 34
Cbc0038I Pass  89: suminf.   10.04202 (44) obj. 13 iterations 20
Cbc0038I Pass  90: suminf.    9.19237 (38) obj. 13 iterations 10
Cbc0038I Pass  91: suminf.    9.19237 (38) obj. 13 iterations 3
Cbc0038I Pass  92: suminf.    9.19237 (38) obj. 13 iterations 3
Cbc0038I Pass  93: suminf.   11.79959 (53) obj. 13 iterations 104
Cbc0038I Pass  94: suminf.    8.66459 (40) obj. 13 iterations 75
Cbc0038I Pass  95: suminf.    8.56829 (41) obj. 13 iterations 7
Cbc0038I Pass  96: suminf.    9.00802 (42) obj. 13 iterations 35
Cbc0038I Pass  97: suminf.    8.53679 (45) obj. 13 iterations 36
Cbc0038I Pass  98: suminf.    8.30928 (45) obj. 13 iterations 6
Cbc0038I Pass  99: suminf.    8.77521 (39) obj. 13 iterations 34
Cbc0038I Pass 100: suminf.   18.71367 (62) obj. 13 iterations 105
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 833 integers at bound fixed and 0 continuous
Cbc0038I Full problem 323 rows 1138 columns, reduced to 263 rows 281 columns
Cbc0038I Mini branch and bound did not improve solution (4.24 seconds)
Cbc0038I After 4.24 seconds - Feasibility pump exiting - took 2.42 seconds
Cbc0031I 43 added rows had average density of 102.34884
Cbc0013I At root node, 43 cuts changed objective from 11.894737 to 13 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 175 row cuts average 8.7 elements, 46 column cuts (46 active)  in 0.781 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 58 row cuts average 376.3 elements, 0 column cuts (0 active)  in 0.335 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 113 row cuts average 31.5 elements, 0 column cuts (0 active)  in 3.582 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 70.2 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 202 row cuts average 164.7 elements, 0 column cuts (0 active)  in 0.229 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 92 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 13 (10.60 seconds)
Cbc0010I After 2 nodes, 1 on tree, 1e+50 best solution, best possible 13 (11.53 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 13 (13.02 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 13 (15.22 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 13 (17.91 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 13 (20.24 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 13 (21.42 seconds)
Cbc0010I After 13 nodes, 8 on tree, 1e+50 best solution, best possible 13 (22.29 seconds)
Cbc0010I After 14 nodes, 9 on tree, 1e+50 best solution, best possible 13 (23.14 seconds)
Cbc0010I After 22 nodes, 13 on tree, 1e+50 best solution, best possible 13 (23.85 seconds)
Cbc0010I After 29 nodes, 14 on tree, 1e+50 best solution, best possible 13 (24.91 seconds)
Cbc0010I After 37 nodes, 14 on tree, 1e+50 best solution, best possible 13 (25.64 seconds)
Cbc0010I After 45 nodes, 13 on tree, 1e+50 best solution, best possible 13 (26.36 seconds)
Cbc0010I After 58 nodes, 13 on tree, 1e+50 best solution, best possible 13 (27.08 seconds)
Cbc0010I After 59 nodes, 13 on tree, 1e+50 best solution, best possible 13 (28.08 seconds)
Cbc0010I After 63 nodes, 11 on tree, 1e+50 best solution, best possible 13 (28.86 seconds)
Cbc0010I After 68 nodes, 11 on tree, 1e+50 best solution, best possible 13 (30.06 seconds)
Cbc0010I After 79 nodes, 10 on tree, 1e+50 best solution, best possible 13 (31.75 seconds)
Cbc0004I Integer solution of 13 found after 7568 iterations and 85 nodes (32.11 seconds)
Cbc0001I Search completed - best objective 13, took 7568 iterations and 85 nodes (32.11 seconds)
Cbc0032I Strong branching done 1068 times (19852 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 25, 0 variables fixed on reduced cost
Cuts at root node changed objective from 11.8947 to 13
Probing was tried 32 times and created 423 cuts of which 0 were active after adding rounds of cuts (0.951103 seconds)
Gomory was tried 32 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.439646 seconds)
liftKnapsack was tried 32 times and created 234 cuts of which 0 were active after adding rounds of cuts (17.609 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011378 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.052775 seconds)
MixedIntegerRounding2 was tried 32 times and created 409 cuts of which 0 were active after adding rounds of cuts (0.271155 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004131 seconds)
TwoMirCuts was tried 32 times and created 248 cuts of which 0 were active after adding rounds of cuts (0.298364 seconds)
ZeroHalf was tried 32 times and created 206 cuts of which 0 were active after adding rounds of cuts (0.257897 seconds)

Result - Optimal solution found
Objective value:                13
Enumerated nodes:               85
Total iterations:               7568
Time (CPU seconds):             32.082
Time (Wallclock seconds):       32.1648
Total time (CPU seconds):       32.1179   (Wallclock seconds):       32.1904
