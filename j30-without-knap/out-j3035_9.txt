Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_9.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3035_9.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.94416 - 0.119838 seconds
Cgl0002I 3 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 321 rows, 1099 columns (1099 integer (1098 of which binary)) and 12455 elements
Coin3009W Conflict graph built in 0.074 seconds, density: 1.010%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1099 objects (1099 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 88 integers unsatisfied sum - 22.9834
Cbc0038I Pass   1: suminf.   12.44530 (52) obj. 4 iterations 89
Cbc0038I Pass   2: suminf.    7.79169 (53) obj. 5 iterations 48
Cbc0038I Pass   3: suminf.    7.85810 (49) obj. 5 iterations 32
Cbc0038I Pass   4: suminf.    7.27784 (49) obj. 5 iterations 10
Cbc0038I Pass   5: suminf.    7.04927 (49) obj. 5 iterations 3
Cbc0038I Pass   6: suminf.    8.72169 (50) obj. 5 iterations 45
Cbc0038I Pass   7: suminf.    7.29332 (47) obj. 5 iterations 28
Cbc0038I Pass   8: suminf.    7.11247 (48) obj. 5 iterations 5
Cbc0038I Pass   9: suminf.    7.84093 (47) obj. 5 iterations 27
Cbc0038I Pass  10: suminf.    7.49217 (47) obj. 5 iterations 17
Cbc0038I Pass  11: suminf.    7.29808 (47) obj. 5 iterations 16
Cbc0038I Pass  12: suminf.    6.94931 (47) obj. 5 iterations 17
Cbc0038I Pass  13: suminf.    7.84093 (47) obj. 5 iterations 20
Cbc0038I Pass  14: suminf.   17.45874 (75) obj. 5 iterations 89
Cbc0038I Pass  15: suminf.   10.86405 (52) obj. 5 iterations 81
Cbc0038I Pass  16: suminf.   10.59634 (52) obj. 5 iterations 13
Cbc0038I Pass  17: suminf.   10.59634 (50) obj. 5 iterations 10
Cbc0038I Pass  18: suminf.    5.25419 (40) obj. 5 iterations 52
Cbc0038I Pass  19: suminf.    4.76548 (24) obj. 5 iterations 15
Cbc0038I Pass  20: suminf.    4.42710 (20) obj. 5 iterations 58
Cbc0038I Pass  21: suminf.    4.42710 (20) obj. 5 iterations 10
Cbc0038I Pass  22: suminf.    4.80780 (21) obj. 5 iterations 38
Cbc0038I Pass  23: suminf.    4.52209 (21) obj. 5 iterations 21
Cbc0038I Pass  24: suminf.    4.55595 (20) obj. 5 iterations 34
Cbc0038I Pass  25: suminf.    4.27024 (20) obj. 5 iterations 25
Cbc0038I Pass  26: suminf.    5.21282 (20) obj. 5 iterations 44
Cbc0038I Pass  27: suminf.    4.92710 (20) obj. 5 iterations 34
Cbc0038I Pass  28: suminf.    4.71282 (20) obj. 5 iterations 40
Cbc0038I Pass  29: suminf.    4.42710 (20) obj. 5 iterations 28
Cbc0038I Pass  30: suminf.    4.80780 (21) obj. 5 iterations 34
Cbc0038I Pass  31: suminf.    4.52209 (21) obj. 5 iterations 28
Cbc0038I Pass  32: suminf.    4.55595 (20) obj. 5 iterations 44
Cbc0038I Pass  33: suminf.    4.27024 (20) obj. 5 iterations 28
Cbc0038I Pass  34: suminf.    5.03768 (22) obj. 5 iterations 45
Cbc0038I Pass  35: suminf.    8.47086 (31) obj. 5 iterations 116
Cbc0038I Pass  36: suminf.    6.21137 (31) obj. 5 iterations 67
Cbc0038I Pass  37: suminf.    7.82624 (37) obj. 5 iterations 59
Cbc0038I Pass  38: suminf.    7.51975 (31) obj. 5 iterations 16
Cbc0038I Pass  39: suminf.    7.60546 (28) obj. 5 iterations 27
Cbc0038I Pass  40: suminf.    6.94356 (27) obj. 5 iterations 19
Cbc0038I Pass  41: suminf.    6.62689 (29) obj. 5 iterations 2
Cbc0038I Pass  42: suminf.    6.01022 (24) obj. 5 iterations 6
Cbc0038I Pass  43: suminf.    5.62689 (27) obj. 5 iterations 2
Cbc0038I Pass  44: suminf.    8.14356 (27) obj. 5 iterations 49
Cbc0038I Pass  45: suminf.    5.97689 (25) obj. 5 iterations 27
Cbc0038I Pass  46: suminf.    5.88165 (25) obj. 5 iterations 8
Cbc0038I Pass  47: suminf.    8.11069 (29) obj. 5 iterations 41
Cbc0038I Pass  48: suminf.    7.18324 (25) obj. 5 iterations 18
Cbc0038I Pass  49: suminf.    7.08800 (25) obj. 5 iterations 8
Cbc0038I Pass  50: suminf.    6.24481 (27) obj. 5 iterations 20
Cbc0038I Pass  51: suminf.    6.05308 (25) obj. 5 iterations 11
Cbc0038I Pass  52: suminf.    7.53291 (29) obj. 5 iterations 30
Cbc0038I Pass  53: suminf.    6.14832 (25) obj. 5 iterations 24
Cbc0038I Pass  54: suminf.    6.05308 (25) obj. 5 iterations 8
Cbc0038I Pass  55: suminf.    8.16317 (27) obj. 5 iterations 39
Cbc0038I Pass  56: suminf.    6.14832 (25) obj. 5 iterations 29
Cbc0038I Pass  57: suminf.    6.05308 (25) obj. 5 iterations 6
Cbc0038I Pass  58: suminf.    7.33590 (27) obj. 5 iterations 27
Cbc0038I Pass  59: suminf.    7.08800 (25) obj. 5 iterations 22
Cbc0038I Pass  60: suminf.    6.24481 (27) obj. 5 iterations 27
Cbc0038I Pass  61: suminf.   14.72540 (55) obj. 5 iterations 120
Cbc0038I Pass  62: suminf.    6.22767 (28) obj. 5 iterations 86
Cbc0038I Pass  63: suminf.    5.79910 (25) obj. 5 iterations 14
Cbc0038I Pass  64: suminf.    5.49477 (21) obj. 5 iterations 42
Cbc0038I Pass  65: suminf.    4.86815 (21) obj. 5 iterations 20
Cbc0038I Pass  66: suminf.    6.61224 (21) obj. 5 iterations 38
Cbc0038I Pass  67: suminf.    5.67532 (21) obj. 5 iterations 44
Cbc0038I Pass  68: suminf.    5.01817 (21) obj. 5 iterations 8
Cbc0038I Pass  69: suminf.    7.96022 (23) obj. 5 iterations 47
Cbc0038I Pass  70: suminf.    6.35784 (21) obj. 5 iterations 38
Cbc0038I Pass  71: suminf.    5.86805 (21) obj. 5 iterations 7
Cbc0038I Pass  72: suminf.    7.96022 (23) obj. 5 iterations 46
Cbc0038I Pass  73: suminf.    6.35784 (21) obj. 5 iterations 34
Cbc0038I Pass  74: suminf.    5.86805 (21) obj. 5 iterations 6
Cbc0038I Pass  75: suminf.    7.96022 (23) obj. 5 iterations 41
Cbc0038I Pass  76: suminf.    6.35784 (21) obj. 5 iterations 29
Cbc0038I Pass  77: suminf.    5.86805 (21) obj. 5 iterations 8
Cbc0038I Pass  78: suminf.    7.96022 (23) obj. 5 iterations 42
Cbc0038I Pass  79: suminf.    6.35784 (21) obj. 5 iterations 36
Cbc0038I Pass  80: suminf.    5.86805 (21) obj. 5 iterations 7
Cbc0038I Pass  81: suminf.    8.31317 (23) obj. 5 iterations 45
Cbc0038I Pass  82: suminf.    6.35784 (21) obj. 5 iterations 34
Cbc0038I Pass  83: suminf.    5.86805 (21) obj. 5 iterations 5
Cbc0038I Pass  84: suminf.    7.96022 (23) obj. 5 iterations 49
Cbc0038I Pass  85: suminf.    6.35784 (21) obj. 5 iterations 37
Cbc0038I Pass  86: suminf.    5.86805 (21) obj. 5 iterations 6
Cbc0038I Pass  87: suminf.    8.31317 (23) obj. 5 iterations 46
Cbc0038I Pass  88: suminf.    6.35784 (21) obj. 5 iterations 39
Cbc0038I Pass  89: suminf.    5.86805 (21) obj. 5 iterations 5
Cbc0038I Pass  90: suminf.    7.96022 (23) obj. 5 iterations 52
Cbc0038I Pass  91: suminf.    6.35784 (21) obj. 5 iterations 40
Cbc0038I Pass  92: suminf.    5.86805 (21) obj. 5 iterations 8
Cbc0038I Pass  93: suminf.    8.31317 (23) obj. 5 iterations 47
Cbc0038I Pass  94: suminf.    6.35784 (21) obj. 5 iterations 33
Cbc0038I Pass  95: suminf.    5.86805 (21) obj. 5 iterations 5
Cbc0038I Pass  96: suminf.    7.96022 (23) obj. 5 iterations 39
Cbc0038I Pass  97: suminf.    6.35784 (21) obj. 5 iterations 34
Cbc0038I Pass  98: suminf.    5.86805 (21) obj. 5 iterations 7
Cbc0038I Pass  99: suminf.    6.70849 (21) obj. 5 iterations 32
Cbc0038I Pass 100: suminf.   14.42225 (45) obj. 5 iterations 152
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 844 integers at bound fixed and 0 continuous
Cbc0038I Full problem 321 rows 1099 columns, reduced to 220 rows 214 columns
Cbc0038I Mini branch and bound did not improve solution (3.54 seconds)
Cbc0038I After 3.54 seconds - Feasibility pump exiting - took 2.00 seconds
Cbc0031I 65 added rows had average density of 66.646154
Cbc0013I At root node, 65 cuts changed objective from 1.944165 to 3 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 268 row cuts average 10.3 elements, 3 column cuts (3 active)  in 0.781 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 87 row cuts average 752.4 elements, 0 column cuts (0 active)  in 0.574 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 148 row cuts average 23.9 elements, 0 column cuts (0 active)  in 9.445 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 166 row cuts average 81.3 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 205 row cuts average 175.9 elements, 0 column cuts (0 active)  in 0.287 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 113 row cuts average 67.1 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 3 (16.33 seconds)
Cbc0010I After 1 nodes, 1 on tree, 1e+50 best solution, best possible 3 (17.06 seconds)
Cbc0010I After 2 nodes, 1 on tree, 1e+50 best solution, best possible 4 (18.25 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 4 (20.07 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 4 (22.11 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 4 (24.56 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 4 (27.16 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 4 (27.92 seconds)
Cbc0010I After 8 nodes, 7 on tree, 1e+50 best solution, best possible 4 (29.18 seconds)
Cbc0010I After 9 nodes, 7 on tree, 1e+50 best solution, best possible 4 (29.95 seconds)
Cbc0010I After 11 nodes, 9 on tree, 1e+50 best solution, best possible 4 (31.09 seconds)
Cbc0010I After 13 nodes, 10 on tree, 1e+50 best solution, best possible 4 (32.10 seconds)
Cbc0010I After 14 nodes, 11 on tree, 1e+50 best solution, best possible 4 (33.07 seconds)
Cbc0010I After 16 nodes, 11 on tree, 1e+50 best solution, best possible 4 (34.05 seconds)
Cbc0010I After 21 nodes, 9 on tree, 1e+50 best solution, best possible 4 (35.09 seconds)
Cbc0010I After 24 nodes, 8 on tree, 1e+50 best solution, best possible 4 (36.08 seconds)
Cbc0010I After 29 nodes, 7 on tree, 1e+50 best solution, best possible 4 (37.05 seconds)
Cbc0010I After 31 nodes, 9 on tree, 1e+50 best solution, best possible 4 (37.77 seconds)
Cbc0010I After 33 nodes, 10 on tree, 1e+50 best solution, best possible 4 (38.97 seconds)
Cbc0010I After 38 nodes, 7 on tree, 1e+50 best solution, best possible 4 (39.79 seconds)
Cbc0010I After 40 nodes, 7 on tree, 1e+50 best solution, best possible 4 (41.14 seconds)
Cbc0010I After 42 nodes, 8 on tree, 1e+50 best solution, best possible 4 (42.90 seconds)
Cbc0010I After 43 nodes, 8 on tree, 1e+50 best solution, best possible 4 (44.23 seconds)
Cbc0010I After 45 nodes, 10 on tree, 1e+50 best solution, best possible 4 (45.29 seconds)
Cbc0010I After 48 nodes, 9 on tree, 1e+50 best solution, best possible 4 (46.12 seconds)
Cbc0010I After 50 nodes, 10 on tree, 1e+50 best solution, best possible 4 (46.99 seconds)
Cbc0010I After 53 nodes, 10 on tree, 1e+50 best solution, best possible 4 (48.05 seconds)
Cbc0010I After 58 nodes, 9 on tree, 1e+50 best solution, best possible 4 (49.02 seconds)
Cbc0010I After 63 nodes, 8 on tree, 1e+50 best solution, best possible 4 (50.00 seconds)
Cbc0010I After 64 nodes, 9 on tree, 1e+50 best solution, best possible 4 (52.08 seconds)
Cbc0010I After 67 nodes, 10 on tree, 1e+50 best solution, best possible 4 (53.02 seconds)
Cbc0010I After 69 nodes, 12 on tree, 1e+50 best solution, best possible 4 (53.83 seconds)
Cbc0010I After 71 nodes, 13 on tree, 1e+50 best solution, best possible 4 (54.79 seconds)
Cbc0010I After 75 nodes, 12 on tree, 1e+50 best solution, best possible 4 (55.68 seconds)
Cbc0010I After 80 nodes, 12 on tree, 1e+50 best solution, best possible 4 (56.63 seconds)
Cbc0010I After 83 nodes, 13 on tree, 1e+50 best solution, best possible 4 (57.34 seconds)
Cbc0010I After 89 nodes, 10 on tree, 1e+50 best solution, best possible 4 (58.10 seconds)
Cbc0010I After 92 nodes, 10 on tree, 1e+50 best solution, best possible 4 (58.94 seconds)
Cbc0010I After 95 nodes, 11 on tree, 1e+50 best solution, best possible 4 (59.74 seconds)
Cbc0010I After 100 nodes, 11 on tree, 1e+50 best solution, best possible 4 (60.63 seconds)
Cbc0010I After 102 nodes, 11 on tree, 1e+50 best solution, best possible 4 (61.42 seconds)
Cbc0010I After 108 nodes, 9 on tree, 1e+50 best solution, best possible 4 (62.47 seconds)
Cbc0010I After 110 nodes, 9 on tree, 1e+50 best solution, best possible 4 (63.86 seconds)
Cbc0010I After 112 nodes, 9 on tree, 1e+50 best solution, best possible 4 (65.88 seconds)
Cbc0010I After 114 nodes, 11 on tree, 1e+50 best solution, best possible 4 (66.94 seconds)
Cbc0010I After 116 nodes, 13 on tree, 1e+50 best solution, best possible 4 (67.68 seconds)
Cbc0010I After 120 nodes, 14 on tree, 1e+50 best solution, best possible 4 (68.75 seconds)
Cbc0010I After 124 nodes, 14 on tree, 1e+50 best solution, best possible 4 (70.07 seconds)
Cbc0010I After 128 nodes, 13 on tree, 1e+50 best solution, best possible 4 (70.84 seconds)
Cbc0010I After 131 nodes, 15 on tree, 1e+50 best solution, best possible 4 (71.73 seconds)
Cbc0010I After 136 nodes, 14 on tree, 1e+50 best solution, best possible 4 (72.86 seconds)
Cbc0010I After 139 nodes, 16 on tree, 1e+50 best solution, best possible 4 (73.71 seconds)
Cbc0010I After 140 nodes, 16 on tree, 1e+50 best solution, best possible 4 (74.83 seconds)
Cbc0010I After 145 nodes, 17 on tree, 1e+50 best solution, best possible 4 (76.02 seconds)
Cbc0010I After 149 nodes, 16 on tree, 1e+50 best solution, best possible 4 (76.72 seconds)
Cbc0010I After 152 nodes, 18 on tree, 1e+50 best solution, best possible 4 (78.03 seconds)
Cbc0010I After 158 nodes, 18 on tree, 1e+50 best solution, best possible 4 (78.97 seconds)
Cbc0010I After 160 nodes, 17 on tree, 1e+50 best solution, best possible 4 (79.71 seconds)
Cbc0010I After 165 nodes, 18 on tree, 1e+50 best solution, best possible 4 (80.61 seconds)
Cbc0010I After 170 nodes, 16 on tree, 1e+50 best solution, best possible 4 (81.34 seconds)
Cbc0010I After 175 nodes, 16 on tree, 1e+50 best solution, best possible 4 (82.16 seconds)
Cbc0010I After 177 nodes, 15 on tree, 1e+50 best solution, best possible 4 (83.14 seconds)
Cbc0010I After 180 nodes, 16 on tree, 1e+50 best solution, best possible 4 (83.90 seconds)
Cbc0010I After 185 nodes, 17 on tree, 1e+50 best solution, best possible 4 (84.86 seconds)
Cbc0010I After 188 nodes, 18 on tree, 1e+50 best solution, best possible 4 (85.63 seconds)
Cbc0010I After 190 nodes, 18 on tree, 1e+50 best solution, best possible 4 (86.94 seconds)
Cbc0010I After 193 nodes, 17 on tree, 1e+50 best solution, best possible 4 (87.84 seconds)
Cbc0010I After 198 nodes, 17 on tree, 1e+50 best solution, best possible 4 (88.55 seconds)
Cbc0010I After 202 nodes, 14 on tree, 1e+50 best solution, best possible 4 (89.32 seconds)
Cbc0010I After 208 nodes, 12 on tree, 1e+50 best solution, best possible 4 (90.87 seconds)
Cbc0010I After 209 nodes, 13 on tree, 1e+50 best solution, best possible 4 (91.76 seconds)
Cbc0010I After 211 nodes, 13 on tree, 1e+50 best solution, best possible 4 (92.47 seconds)
Cbc0010I After 214 nodes, 11 on tree, 1e+50 best solution, best possible 4 (93.19 seconds)
Cbc0010I After 216 nodes, 10 on tree, 1e+50 best solution, best possible 4 (95.50 seconds)
Cbc0010I After 219 nodes, 9 on tree, 1e+50 best solution, best possible 4 (96.43 seconds)
Cbc0010I After 222 nodes, 9 on tree, 1e+50 best solution, best possible 4 (97.38 seconds)
Cbc0010I After 224 nodes, 9 on tree, 1e+50 best solution, best possible 4 (98.26 seconds)
Cbc0010I After 226 nodes, 9 on tree, 1e+50 best solution, best possible 4 (99.41 seconds)
Cbc0010I After 227 nodes, 9 on tree, 1e+50 best solution, best possible 4 (100.48 seconds)
Cbc0010I After 229 nodes, 8 on tree, 1e+50 best solution, best possible 4 (101.55 seconds)
Cbc0010I After 232 nodes, 7 on tree, 1e+50 best solution, best possible 4 (102.65 seconds)
Cbc0010I After 234 nodes, 9 on tree, 1e+50 best solution, best possible 4 (103.38 seconds)
Cbc0010I After 237 nodes, 7 on tree, 1e+50 best solution, best possible 4 (105.28 seconds)
Cbc0010I After 238 nodes, 7 on tree, 1e+50 best solution, best possible 4 (106.68 seconds)
Cbc0010I After 239 nodes, 8 on tree, 1e+50 best solution, best possible 4 (107.86 seconds)
Cbc0010I After 240 nodes, 9 on tree, 1e+50 best solution, best possible 4 (108.73 seconds)
Cbc0010I After 244 nodes, 6 on tree, 1e+50 best solution, best possible 4 (109.76 seconds)
Cbc0010I After 246 nodes, 4 on tree, 1e+50 best solution, best possible 4 (110.68 seconds)
Cbc0010I After 247 nodes, 4 on tree, 1e+50 best solution, best possible 4 (114.24 seconds)
Cbc0010I After 248 nodes, 4 on tree, 1e+50 best solution, best possible 4 (116.04 seconds)
Cbc0010I After 250 nodes, 3 on tree, 1e+50 best solution, best possible 4 (118.24 seconds)
Cbc0010I After 251 nodes, 4 on tree, 1e+50 best solution, best possible 4 (122.64 seconds)
Cbc0010I After 252 nodes, 5 on tree, 1e+50 best solution, best possible 4 (123.35 seconds)
Cbc0010I After 257 nodes, 2 on tree, 1e+50 best solution, best possible 4 (125.78 seconds)
Cbc0010I After 258 nodes, 2 on tree, 1e+50 best solution, best possible 4 (127.32 seconds)
Cbc0010I After 260 nodes, 1 on tree, 1e+50 best solution, best possible 5 (128.51 seconds)
Cbc0010I After 261 nodes, 2 on tree, 1e+50 best solution, best possible 5 (129.58 seconds)
Cbc0010I After 262 nodes, 3 on tree, 1e+50 best solution, best possible 5 (130.85 seconds)
Cbc0010I After 263 nodes, 4 on tree, 1e+50 best solution, best possible 5 (132.29 seconds)
Cbc0010I After 264 nodes, 5 on tree, 1e+50 best solution, best possible 5 (133.19 seconds)
Cbc0010I After 266 nodes, 7 on tree, 1e+50 best solution, best possible 5 (134.01 seconds)
Cbc0010I After 268 nodes, 8 on tree, 1e+50 best solution, best possible 5 (135.06 seconds)
Cbc0010I After 272 nodes, 11 on tree, 1e+50 best solution, best possible 5 (135.91 seconds)
Cbc0010I After 278 nodes, 12 on tree, 1e+50 best solution, best possible 5 (136.65 seconds)
Cbc0004I Integer solution of 5 found after 34393 iterations and 280 nodes (136.92 seconds)
Cbc0001I Search completed - best objective 5, took 34393 iterations and 280 nodes (136.92 seconds)
Cbc0032I Strong branching done 906 times (7521 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 25, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.94416 to 3
Probing was tried 215 times and created 1827 cuts of which 0 were active after adding rounds of cuts (1.79433 seconds)
Gomory was tried 212 times and created 93 cuts of which 0 were active after adding rounds of cuts (1.43062 seconds)
liftKnapsack was tried 212 times and created 1927 cuts of which 0 were active after adding rounds of cuts (109.312 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.014119 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.070061 seconds)
MixedIntegerRounding2 was tried 212 times and created 1908 cuts of which 0 were active after adding rounds of cuts (1.49603 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005277 seconds)
TwoMirCuts was tried 212 times and created 508 cuts of which 0 were active after adding rounds of cuts (0.666348 seconds)
ZeroHalf was tried 212 times and created 1205 cuts of which 0 were active after adding rounds of cuts (1.43226 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               280
Total iterations:               34393
Time (CPU seconds):             132.792
Time (Wallclock seconds):       136.974
Total time (CPU seconds):       132.815   (Wallclock seconds):       136.999
