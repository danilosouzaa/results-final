Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3039/j3039_1.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3039_1.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 8.31481 - 0.124976 seconds
Cgl0003I 9 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 8 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 318 rows, 1116 columns (1116 integer (1115 of which binary)) and 19656 elements
Coin3009W Conflict graph built in 0.081 seconds, density: 1.003%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1116 objects (1116 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 75 integers unsatisfied sum - 19.1113
Cbc0038I Pass   1: suminf.   10.76405 (65) obj. 9.00394 iterations 93
Cbc0038I Pass   2: suminf.    8.09495 (63) obj. 9.06364 iterations 24
Cbc0038I Pass   3: suminf.    7.73824 (63) obj. 9.06364 iterations 6
Cbc0038I Pass   4: suminf.   11.60348 (65) obj. 9.16667 iterations 38
Cbc0038I Pass   5: suminf.   10.22346 (59) obj. 9.47059 iterations 25
Cbc0038I Pass   6: suminf.   10.16464 (59) obj. 9.47059 iterations 1
Cbc0038I Pass   7: suminf.    7.36898 (53) obj. 10 iterations 26
Cbc0038I Pass   8: suminf.    7.14646 (52) obj. 10 iterations 6
Cbc0038I Pass   9: suminf.    8.14280 (40) obj. 10 iterations 26
Cbc0038I Pass  10: suminf.    7.63178 (54) obj. 10 iterations 16
Cbc0038I Pass  11: suminf.    7.49614 (54) obj. 10 iterations 2
Cbc0038I Pass  12: suminf.    8.37538 (42) obj. 10 iterations 20
Cbc0038I Pass  13: suminf.    7.17195 (52) obj. 10 iterations 19
Cbc0038I Pass  14: suminf.    7.14646 (52) obj. 10 iterations 1
Cbc0038I Pass  15: suminf.    7.77792 (40) obj. 10 iterations 17
Cbc0038I Pass  16: suminf.    7.18154 (54) obj. 10 iterations 15
Cbc0038I Pass  17: suminf.    7.04327 (52) obj. 10 iterations 3
Cbc0038I Pass  18: suminf.    7.86363 (40) obj. 10 iterations 17
Cbc0038I Pass  19: suminf.    7.27914 (52) obj. 10 iterations 14
Cbc0038I Pass  20: suminf.    7.14646 (52) obj. 10 iterations 2
Cbc0038I Pass  21: suminf.    7.65332 (57) obj. 10 iterations 10
Cbc0038I Pass  22: suminf.    7.63760 (57) obj. 10 iterations 7
Cbc0038I Pass  23: suminf.    7.31507 (51) obj. 10 iterations 18
Cbc0038I Pass  24: suminf.    7.14646 (52) obj. 10 iterations 9
Cbc0038I Pass  25: suminf.    7.67281 (57) obj. 10 iterations 20
Cbc0038I Pass  26: suminf.    6.76726 (52) obj. 10 iterations 15
Cbc0038I Pass  27: suminf.    7.52373 (57) obj. 10 iterations 13
Cbc0038I Pass  28: suminf.    6.87045 (52) obj. 10 iterations 13
Cbc0038I Pass  29: suminf.    8.47097 (39) obj. 10 iterations 35
Cbc0038I Pass  30: suminf.    8.07113 (55) obj. 10 iterations 15
Cbc0038I Pass  31: suminf.    7.93297 (53) obj. 10 iterations 3
Cbc0038I Pass  32: suminf.    8.63415 (56) obj. 10 iterations 27
Cbc0038I Pass  33: suminf.    7.68096 (59) obj. 10 iterations 23
Cbc0038I Pass  34: suminf.    7.62962 (57) obj. 10 iterations 8
Cbc0038I Pass  35: suminf.   12.39822 (59) obj. 10 iterations 50
Cbc0038I Pass  36: suminf.   10.37748 (53) obj. 10 iterations 21
Cbc0038I Pass  37: suminf.    7.84434 (53) obj. 10 iterations 56
Cbc0038I Pass  38: suminf.    7.29263 (52) obj. 10 iterations 24
Cbc0038I Pass  39: suminf.   11.65719 (61) obj. 10 iterations 48
Cbc0038I Pass  40: suminf.    8.72567 (30) obj. 10 iterations 53
Cbc0038I Pass  41: suminf.    7.82901 (52) obj. 10 iterations 10
Cbc0038I Pass  42: suminf.    9.55981 (52) obj. 10 iterations 47
Cbc0038I Pass  43: suminf.    8.67642 (53) obj. 10 iterations 21
Cbc0038I Pass  44: suminf.    8.02117 (53) obj. 10 iterations 3
Cbc0038I Pass  45: suminf.    9.06869 (56) obj. 10 iterations 35
Cbc0038I Pass  46: suminf.    7.66267 (53) obj. 10 iterations 29
Cbc0038I Pass  47: suminf.    7.55884 (50) obj. 10 iterations 9
Cbc0038I Pass  48: suminf.    8.38240 (32) obj. 10 iterations 44
Cbc0038I Pass  49: suminf.    7.76942 (49) obj. 10 iterations 27
Cbc0038I Pass  50: suminf.    7.76335 (49) obj. 10 iterations 1
Cbc0038I Pass  51: suminf.    9.89133 (57) obj. 10 iterations 44
Cbc0038I Pass  52: suminf.    7.99704 (28) obj. 10 iterations 47
Cbc0038I Pass  53: suminf.    7.76006 (50) obj. 10 iterations 6
Cbc0038I Pass  54: suminf.   10.62403 (55) obj. 10 iterations 53
Cbc0038I Pass  55: suminf.    7.88863 (34) obj. 10 iterations 61
Cbc0038I Pass  56: suminf.    7.65929 (52) obj. 10 iterations 6
Cbc0038I Pass  57: suminf.    9.17459 (38) obj. 10 iterations 37
Cbc0038I Pass  58: suminf.    8.00498 (28) obj. 10 iterations 17
Cbc0038I Pass  59: suminf.    9.20794 (38) obj. 10 iterations 50
Cbc0038I Pass  60: suminf.    8.22526 (38) obj. 10 iterations 16
Cbc0038I Pass  61: suminf.    8.22526 (38) obj. 10 iterations 0
Cbc0038I Pass  62: suminf.    9.34877 (33) obj. 10 iterations 22
Cbc0038I Pass  63: suminf.    8.03276 (28) obj. 10 iterations 18
Cbc0038I Pass  64: suminf.    7.78276 (28) obj. 10 iterations 5
Cbc0038I Pass  65: suminf.    7.87827 (52) obj. 10 iterations 13
Cbc0038I Pass  66: suminf.    7.65929 (52) obj. 10 iterations 12
Cbc0038I Pass  67: suminf.    8.12119 (50) obj. 10 iterations 22
Cbc0038I Pass  68: suminf.    8.12119 (50) obj. 10 iterations 7
Cbc0038I Pass  69: suminf.    8.74057 (37) obj. 10 iterations 40
Cbc0038I Pass  70: suminf.    7.67434 (34) obj. 10 iterations 29
Cbc0038I Pass  71: suminf.    9.97504 (39) obj. 10 iterations 33
Cbc0038I Pass  72: suminf.    7.78276 (28) obj. 10 iterations 21
Cbc0038I Pass  73: suminf.    7.66546 (50) obj. 10 iterations 11
Cbc0038I Pass  74: suminf.    9.30079 (55) obj. 10 iterations 58
Cbc0038I Pass  75: suminf.    7.96457 (49) obj. 10 iterations 33
Cbc0038I Pass  76: suminf.   10.19679 (55) obj. 10 iterations 42
Cbc0038I Pass  77: suminf.    7.99704 (28) obj. 10 iterations 43
Cbc0038I Pass  78: suminf.    7.76006 (50) obj. 10 iterations 6
Cbc0038I Pass  79: suminf.    8.29113 (32) obj. 10 iterations 41
Cbc0038I Pass  80: suminf.    7.97024 (49) obj. 10 iterations 20
Cbc0038I Pass  81: suminf.    7.96457 (49) obj. 10 iterations 1
Cbc0038I Pass  82: suminf.    8.87589 (38) obj. 10 iterations 38
Cbc0038I Pass  83: suminf.    7.78276 (28) obj. 10 iterations 20
Cbc0038I Pass  84: suminf.    9.37734 (31) obj. 10 iterations 48
Cbc0038I Pass  85: suminf.    8.14466 (26) obj. 10 iterations 23
Cbc0038I Pass  86: suminf.    9.93290 (31) obj. 10 iterations 34
Cbc0038I Pass  87: suminf.    8.36688 (26) obj. 10 iterations 28
Cbc0038I Pass  88: suminf.    8.11688 (26) obj. 10 iterations 8
Cbc0038I Pass  89: suminf.    8.03355 (26) obj. 10 iterations 5
Cbc0038I Pass  90: suminf.    8.03355 (26) obj. 10 iterations 1
Cbc0038I Pass  91: suminf.   12.96474 (48) obj. 10 iterations 112
Cbc0038I Pass  92: suminf.    7.75411 (47) obj. 10 iterations 76
Cbc0038I Pass  93: suminf.    7.26401 (28) obj. 10 iterations 35
Cbc0038I Pass  94: suminf.    7.26401 (28) obj. 10 iterations 9
Cbc0038I Pass  95: suminf.    7.26401 (28) obj. 10 iterations 7
Cbc0038I Pass  96: suminf.   12.79089 (51) obj. 10 iterations 102
Cbc0038I Pass  97: suminf.    9.23255 (40) obj. 10 iterations 78
Cbc0038I Pass  98: suminf.    9.73314 (42) obj. 10 iterations 69
Cbc0038I Pass  99: suminf.    8.12845 (33) obj. 10 iterations 27
Cbc0038I Pass 100: suminf.   11.60984 (48) obj. 10 iterations 89
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 860 integers at bound fixed and 0 continuous
Cbc0038I Full problem 318 rows 1116 columns, reduced to 230 rows 234 columns
Cbc0038I Mini branch and bound did not improve solution (3.29 seconds)
Cbc0038I After 3.29 seconds - Feasibility pump exiting - took 1.47 seconds
Cbc0031I 45 added rows had average density of 157.4
Cbc0013I At root node, 45 cuts changed objective from 8.3148148 to 9 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 227 row cuts average 8.6 elements, 6 column cuts (35 active)  in 0.868 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 192 row cuts average 707.4 elements, 0 column cuts (0 active)  in 1.090 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 164 row cuts average 27.4 elements, 0 column cuts (0 active)  in 17.350 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 238 row cuts average 64.6 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 171.9 elements, 0 column cuts (0 active)  in 0.299 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 129 row cuts average 66.6 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 9 (25.46 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 9 (27.44 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 9 (30.07 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 9 (35.10 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 9 (39.63 seconds)
Cbc0010I After 5 nodes, 5 on tree, 1e+50 best solution, best possible 9 (41.49 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 9 (44.45 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 9 (46.99 seconds)
Cbc0010I After 12 nodes, 5 on tree, 1e+50 best solution, best possible 9 (49.14 seconds)
Cbc0010I After 20 nodes, 8 on tree, 1e+50 best solution, best possible 9 (52.71 seconds)
Cbc0010I After 30 nodes, 9 on tree, 1e+50 best solution, best possible 9 (55.93 seconds)
Cbc0010I After 45 nodes, 8 on tree, 1e+50 best solution, best possible 9 (57.08 seconds)
Cbc0010I After 46 nodes, 8 on tree, 1e+50 best solution, best possible 9 (59.11 seconds)
Cbc0010I After 50 nodes, 8 on tree, 1e+50 best solution, best possible 9 (61.47 seconds)
Cbc0010I After 58 nodes, 1 on tree, 1e+50 best solution, best possible 10 (64.75 seconds)
Cbc0010I After 59 nodes, 2 on tree, 1e+50 best solution, best possible 10 (69.96 seconds)
Cbc0010I After 60 nodes, 3 on tree, 1e+50 best solution, best possible 10 (74.22 seconds)
Cbc0010I After 61 nodes, 4 on tree, 1e+50 best solution, best possible 10 (78.32 seconds)
Cbc0010I After 62 nodes, 5 on tree, 1e+50 best solution, best possible 10 (82.77 seconds)
Cbc0010I After 63 nodes, 6 on tree, 1e+50 best solution, best possible 10 (85.56 seconds)
Cbc0010I After 71 nodes, 11 on tree, 1e+50 best solution, best possible 10 (87.05 seconds)
Cbc0004I Integer solution of 10 found after 13712 iterations and 96 nodes (87.76 seconds)
Cbc0001I Search completed - best objective 10, took 13712 iterations and 96 nodes (87.76 seconds)
Cbc0032I Strong branching done 446 times (3983 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 17, 0 variables fixed on reduced cost
Cuts at root node changed objective from 8.31481 to 9
Probing was tried 41 times and created 605 cuts of which 29 were active after adding rounds of cuts (1.10661 seconds)
Gomory was tried 41 times and created 193 cuts of which 0 were active after adding rounds of cuts (1.24719 seconds)
liftKnapsack was tried 41 times and created 538 cuts of which 0 were active after adding rounds of cuts (73.6421 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.01402 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.065143 seconds)
MixedIntegerRounding2 was tried 41 times and created 622 cuts of which 0 were active after adding rounds of cuts (0.392795 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011413 seconds)
TwoMirCuts was tried 41 times and created 303 cuts of which 0 were active after adding rounds of cuts (0.471188 seconds)
ZeroHalf was tried 41 times and created 368 cuts of which 0 were active after adding rounds of cuts (0.367959 seconds)

Result - Optimal solution found
Objective value:                10
Enumerated nodes:               96
Total iterations:               13712
Time (CPU seconds):             87.8458
Time (Wallclock seconds):       87.8379
Total time (CPU seconds):       87.8803   (Wallclock seconds):       87.8682
