Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3039/j3039_4.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3039_4.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.97917 - 0.168071 seconds
Cgl0002I 2 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 351 rows, 1226 columns (1226 integer (1225 of which binary)) and 20370 elements
Coin3009W Conflict graph built in 0.106 seconds, density: 1.016%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1226 objects (1226 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 93 integers unsatisfied sum - 24.1261
Cbc0038I Pass   1: suminf.   12.76699 (70) obj. 6 iterations 240
Cbc0038I Pass   2: suminf.   10.99890 (56) obj. 6 iterations 84
Cbc0038I Pass   3: suminf.   10.41109 (63) obj. 6 iterations 15
Cbc0038I Pass   4: suminf.    9.67109 (42) obj. 6 iterations 135
Cbc0038I Pass   5: suminf.    9.24006 (45) obj. 6 iterations 33
Cbc0038I Pass   6: suminf.    9.10372 (43) obj. 6 iterations 38
Cbc0038I Pass   7: suminf.    9.20163 (39) obj. 6 iterations 144
Cbc0038I Pass   8: suminf.    8.63293 (47) obj. 6 iterations 51
Cbc0038I Pass   9: suminf.   12.95628 (40) obj. 6 iterations 167
Cbc0038I Pass  10: suminf.    9.46190 (48) obj. 6 iterations 69
Cbc0038I Pass  11: suminf.    9.25025 (43) obj. 6 iterations 56
Cbc0038I Pass  12: suminf.    8.79961 (41) obj. 6 iterations 130
Cbc0038I Pass  13: suminf.    8.42551 (36) obj. 6 iterations 55
Cbc0038I Pass  14: suminf.    9.91301 (37) obj. 6 iterations 145
Cbc0038I Pass  15: suminf.    7.81145 (34) obj. 6 iterations 85
Cbc0038I Pass  16: suminf.    8.34824 (34) obj. 6 iterations 69
Cbc0038I Pass  17: suminf.    7.30183 (31) obj. 6 iterations 50
Cbc0038I Pass  18: suminf.   10.90350 (37) obj. 6 iterations 107
Cbc0038I Pass  19: suminf.    8.80843 (35) obj. 6 iterations 95
Cbc0038I Pass  20: suminf.    7.92162 (34) obj. 6 iterations 55
Cbc0038I Pass  21: suminf.    7.68482 (33) obj. 6 iterations 55
Cbc0038I Pass  22: suminf.    8.77050 (34) obj. 6 iterations 72
Cbc0038I Pass  23: suminf.    7.37781 (34) obj. 6 iterations 77
Cbc0038I Pass  24: suminf.    6.84723 (31) obj. 6 iterations 28
Cbc0038I Pass  25: suminf.    7.86603 (29) obj. 6 iterations 62
Cbc0038I Pass  26: suminf.    6.79506 (29) obj. 6 iterations 67
Cbc0038I Pass  27: suminf.    8.29255 (29) obj. 6 iterations 114
Cbc0038I Pass  28: suminf.    6.36689 (37) obj. 6 iterations 72
Cbc0038I Pass  29: suminf.    6.17353 (39) obj. 6 iterations 20
Cbc0038I Pass  30: suminf.   10.92309 (42) obj. 6 iterations 134
Cbc0038I Pass  31: suminf.    8.15979 (36) obj. 6 iterations 112
Cbc0038I Pass  32: suminf.    7.55739 (35) obj. 6 iterations 48
Cbc0038I Pass  33: suminf.    7.27298 (35) obj. 6 iterations 36
Cbc0038I Pass  34: suminf.    8.30518 (42) obj. 6 iterations 108
Cbc0038I Pass  35: suminf.    8.08308 (40) obj. 6 iterations 32
Cbc0038I Pass  36: suminf.    7.66047 (36) obj. 6 iterations 19
Cbc0038I Pass  37: suminf.    7.37730 (36) obj. 6 iterations 36
Cbc0038I Pass  38: suminf.    7.70969 (42) obj. 6 iterations 97
Cbc0038I Pass  39: suminf.    6.11364 (33) obj. 6 iterations 70
Cbc0038I Pass  40: suminf.    6.03452 (32) obj. 6 iterations 22
Cbc0038I Pass  41: suminf.    8.73219 (37) obj. 6 iterations 158
Cbc0038I Pass  42: suminf.    8.48933 (37) obj. 6 iterations 57
Cbc0038I Pass  43: suminf.    8.81693 (32) obj. 6 iterations 185
Cbc0038I Pass  44: suminf.    6.99925 (30) obj. 6 iterations 76
Cbc0038I Pass  45: suminf.    6.69002 (36) obj. 6 iterations 55
Cbc0038I Pass  46: suminf.   10.38083 (36) obj. 6 iterations 169
Cbc0038I Pass  47: suminf.    7.55379 (34) obj. 6 iterations 115
Cbc0038I Pass  48: suminf.    7.12032 (35) obj. 6 iterations 48
Cbc0038I Pass  49: suminf.    6.64650 (32) obj. 6 iterations 79
Cbc0038I Pass  50: suminf.    6.17498 (39) obj. 6 iterations 32
Cbc0038I Pass  51: suminf.    6.17964 (35) obj. 6 iterations 11
Cbc0038I Pass  52: suminf.    8.05830 (30) obj. 6 iterations 88
Cbc0038I Pass  53: suminf.    6.86135 (32) obj. 6 iterations 69
Cbc0038I Pass  54: suminf.    6.61107 (35) obj. 6 iterations 12
Cbc0038I Pass  55: suminf.    6.28300 (33) obj. 6 iterations 23
Cbc0038I Pass  56: suminf.    9.54141 (29) obj. 6 iterations 104
Cbc0038I Pass  57: suminf.    6.67862 (30) obj. 6 iterations 75
Cbc0038I Pass  58: suminf.    6.26824 (28) obj. 6 iterations 48
Cbc0038I Pass  59: suminf.    5.20241 (23) obj. 6 iterations 110
Cbc0038I Pass  60: suminf.    4.79173 (27) obj. 6 iterations 64
Cbc0038I Pass  61: suminf.    4.70076 (26) obj. 6 iterations 23
Cbc0038I Pass  62: suminf.    9.22248 (31) obj. 6 iterations 137
Cbc0038I Pass  63: suminf.    5.64048 (23) obj. 6 iterations 112
Cbc0038I Pass  64: suminf.    5.41931 (27) obj. 6 iterations 30
Cbc0038I Pass  65: suminf.    5.28506 (27) obj. 6 iterations 25
Cbc0038I Pass  66: suminf.    8.96109 (29) obj. 6 iterations 101
Cbc0038I Pass  67: suminf.    6.55317 (29) obj. 6 iterations 87
Cbc0038I Pass  68: suminf.    5.69891 (29) obj. 6 iterations 43
Cbc0038I Pass  69: suminf.    6.83442 (25) obj. 6 iterations 119
Cbc0038I Pass  70: suminf.    5.65124 (24) obj. 6 iterations 57
Cbc0038I Pass  71: suminf.    5.21732 (26) obj. 6 iterations 41
Cbc0038I Pass  72: suminf.    7.49327 (27) obj. 6 iterations 109
Cbc0038I Pass  73: suminf.    4.99128 (23) obj. 6 iterations 123
Cbc0038I Pass  74: suminf.    4.92960 (22) obj. 6 iterations 43
Cbc0038I Pass  75: suminf.    7.07970 (22) obj. 6 iterations 140
Cbc0038I Pass  76: suminf.    5.30864 (24) obj. 6 iterations 58
Cbc0038I Pass  77: suminf.    5.23178 (23) obj. 6 iterations 25
Cbc0038I Pass  78: suminf.    5.30097 (21) obj. 6 iterations 90
Cbc0038I Pass  79: suminf.    4.64226 (23) obj. 6 iterations 77
Cbc0038I Pass  80: suminf.    4.60106 (22) obj. 6 iterations 44
Cbc0038I Pass  81: suminf.    9.35269 (32) obj. 6 iterations 122
Cbc0038I Pass  82: suminf.    6.80171 (30) obj. 6 iterations 102
Cbc0038I Pass  83: suminf.    5.91282 (26) obj. 6 iterations 63
Cbc0038I Pass  84: suminf.    5.31454 (23) obj. 6 iterations 35
Cbc0038I Pass  85: suminf.    4.20746 (21) obj. 6 iterations 53
Cbc0038I Pass  86: suminf.    5.04313 (23) obj. 6 iterations 96
Cbc0038I Pass  87: suminf.    4.15443 (21) obj. 6 iterations 103
Cbc0038I Pass  88: suminf.    6.20165 (25) obj. 6 iterations 106
Cbc0038I Pass  89: suminf.    4.36269 (30) obj. 6 iterations 73
Cbc0038I Pass  90: suminf.    3.98942 (28) obj. 6 iterations 32
Cbc0038I Pass  91: suminf.    5.19991 (19) obj. 6 iterations 114
Cbc0038I Pass  92: suminf.    3.69658 (22) obj. 6 iterations 77
Cbc0038I Pass  93: suminf.    7.25547 (31) obj. 6 iterations 164
Cbc0038I Pass  94: suminf.    5.44922 (25) obj. 6 iterations 145
Cbc0038I Pass  95: suminf.    4.76854 (21) obj. 6 iterations 23
Cbc0038I Pass  96: suminf.    5.70436 (28) obj. 6 iterations 128
Cbc0038I Pass  97: suminf.    4.71399 (25) obj. 6 iterations 67
Cbc0038I Pass  98: suminf.    4.13782 (29) obj. 6 iterations 17
Cbc0038I Pass  99: suminf.    3.93526 (28) obj. 6 iterations 4
Cbc0038I Pass 100: suminf.   14.49596 (53) obj. 6 iterations 193
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 942 integers at bound fixed and 0 continuous
Cbc0038I Full problem 351 rows 1226 columns, reduced to 224 rows 241 columns
Cbc0038I Mini branch and bound did not improve solution (3.74 seconds)
Cbc0038I After 3.74 seconds - Feasibility pump exiting - took 1.84 seconds
Cbc0031I 76 added rows had average density of 51.605263
Cbc0013I At root node, 76 cuts changed objective from 3.9791667 to 5.25 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 365 row cuts average 13.7 elements, 51 column cuts (55 active)  in 2.626 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 49 row cuts average 639.2 elements, 0 column cuts (0 active)  in 1.144 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 295 row cuts average 25.7 elements, 0 column cuts (0 active)  in 61.645 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 247 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.247 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 175.2 elements, 0 column cuts (0 active)  in 0.323 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 191 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.305 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 6 (74.93 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 6 (78.97 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 6 (83.36 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 6 (87.10 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 6 (89.44 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 6 (91.48 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 6 (93.42 seconds)
Cbc0010I After 8 nodes, 7 on tree, 1e+50 best solution, best possible 6 (95.56 seconds)
Cbc0010I After 9 nodes, 8 on tree, 1e+50 best solution, best possible 6 (97.88 seconds)
Cbc0010I After 10 nodes, 8 on tree, 1e+50 best solution, best possible 6 (100.15 seconds)
Cbc0010I After 11 nodes, 9 on tree, 1e+50 best solution, best possible 6 (102.81 seconds)
Cbc0010I After 12 nodes, 9 on tree, 1e+50 best solution, best possible 6 (105.83 seconds)
Cbc0010I After 13 nodes, 9 on tree, 1e+50 best solution, best possible 6 (108.00 seconds)
Cbc0010I After 14 nodes, 9 on tree, 1e+50 best solution, best possible 6 (110.45 seconds)
Cbc0010I After 16 nodes, 9 on tree, 1e+50 best solution, best possible 6 (112.19 seconds)
Cbc0010I After 17 nodes, 10 on tree, 1e+50 best solution, best possible 6 (113.77 seconds)
Cbc0010I After 18 nodes, 10 on tree, 1e+50 best solution, best possible 6 (116.60 seconds)
Cbc0010I After 21 nodes, 8 on tree, 1e+50 best solution, best possible 6 (118.96 seconds)
Cbc0010I After 22 nodes, 9 on tree, 1e+50 best solution, best possible 6 (120.57 seconds)
Cbc0010I After 24 nodes, 9 on tree, 1e+50 best solution, best possible 6 (123.54 seconds)
Cbc0010I After 25 nodes, 9 on tree, 1e+50 best solution, best possible 6 (125.42 seconds)
Cbc0010I After 28 nodes, 9 on tree, 1e+50 best solution, best possible 6 (126.74 seconds)
Cbc0010I After 36 nodes, 5 on tree, 1e+50 best solution, best possible 6 (132.69 seconds)
Cbc0010I After 37 nodes, 6 on tree, 1e+50 best solution, best possible 6 (133.54 seconds)
Cbc0010I After 39 nodes, 7 on tree, 1e+50 best solution, best possible 6 (135.89 seconds)
Cbc0010I After 41 nodes, 9 on tree, 1e+50 best solution, best possible 6 (136.60 seconds)
Cbc0010I After 43 nodes, 10 on tree, 1e+50 best solution, best possible 6 (139.29 seconds)
Cbc0010I After 46 nodes, 9 on tree, 1e+50 best solution, best possible 6 (140.19 seconds)
Cbc0010I After 49 nodes, 10 on tree, 1e+50 best solution, best possible 6 (141.00 seconds)
Cbc0010I After 51 nodes, 10 on tree, 1e+50 best solution, best possible 6 (144.96 seconds)
Cbc0010I After 53 nodes, 10 on tree, 1e+50 best solution, best possible 6 (146.52 seconds)
Cbc0010I After 56 nodes, 9 on tree, 1e+50 best solution, best possible 6 (147.49 seconds)
Cbc0010I After 57 nodes, 10 on tree, 1e+50 best solution, best possible 6 (151.41 seconds)
Cbc0010I After 59 nodes, 11 on tree, 1e+50 best solution, best possible 6 (152.96 seconds)
Cbc0010I After 61 nodes, 11 on tree, 1e+50 best solution, best possible 6 (156.38 seconds)
Cbc0010I After 62 nodes, 11 on tree, 1e+50 best solution, best possible 6 (158.14 seconds)
Cbc0010I After 63 nodes, 12 on tree, 1e+50 best solution, best possible 6 (162.13 seconds)
Cbc0010I After 64 nodes, 12 on tree, 1e+50 best solution, best possible 6 (164.79 seconds)
Cbc0010I After 67 nodes, 12 on tree, 1e+50 best solution, best possible 6 (165.66 seconds)
Cbc0010I After 68 nodes, 13 on tree, 1e+50 best solution, best possible 6 (168.11 seconds)
Cbc0010I After 70 nodes, 15 on tree, 1e+50 best solution, best possible 6 (168.86 seconds)
Cbc0010I After 73 nodes, 16 on tree, 1e+50 best solution, best possible 6 (169.77 seconds)
Cbc0010I After 77 nodes, 15 on tree, 1e+50 best solution, best possible 6 (170.60 seconds)
Cbc0010I After 78 nodes, 16 on tree, 1e+50 best solution, best possible 6 (171.39 seconds)
Cbc0010I After 82 nodes, 14 on tree, 1e+50 best solution, best possible 6 (175.40 seconds)
Cbc0010I After 84 nodes, 14 on tree, 1e+50 best solution, best possible 6 (180.54 seconds)
Cbc0010I After 85 nodes, 15 on tree, 1e+50 best solution, best possible 6 (182.42 seconds)
Cbc0010I After 86 nodes, 15 on tree, 1e+50 best solution, best possible 6 (184.89 seconds)
Cbc0010I After 87 nodes, 16 on tree, 1e+50 best solution, best possible 6 (188.10 seconds)
Cbc0010I After 89 nodes, 16 on tree, 1e+50 best solution, best possible 6 (190.97 seconds)
Cbc0010I After 92 nodes, 16 on tree, 1e+50 best solution, best possible 6 (191.68 seconds)
Cbc0010I After 94 nodes, 17 on tree, 1e+50 best solution, best possible 6 (192.90 seconds)
Cbc0010I After 96 nodes, 19 on tree, 1e+50 best solution, best possible 6 (193.77 seconds)
Cbc0004I Integer solution of 6 found after 20297 iterations and 97 nodes (193.88 seconds)
Cbc0001I Search completed - best objective 6, took 20297 iterations and 97 nodes (193.88 seconds)
Cbc0032I Strong branching done 430 times (5579 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 19, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.97917 to 6
Probing was tried 106 times and created 698 cuts of which 4 were active after adding rounds of cuts (2.98504 seconds)
Gomory was tried 29 times and created 49 cuts of which 0 were active after adding rounds of cuts (1.14426 seconds)
liftKnapsack was tried 106 times and created 1486 cuts of which 0 were active after adding rounds of cuts (173.311 seconds)
Clique was tried 29 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.034795 seconds)
OddWheel was tried 29 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.187246 seconds)
MixedIntegerRounding2 was tried 106 times and created 517 cuts of which 0 were active after adding rounds of cuts (0.731366 seconds)
FlowCover was tried 29 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014516 seconds)
TwoMirCuts was tried 106 times and created 308 cuts of which 0 were active after adding rounds of cuts (0.549511 seconds)
ZeroHalf was tried 106 times and created 544 cuts of which 0 were active after adding rounds of cuts (0.784795 seconds)

Result - Optimal solution found
Objective value:                6
Enumerated nodes:               97
Total iterations:               20297
Time (CPU seconds):             193.561
Time (Wallclock seconds):       193.946
Total time (CPU seconds):       193.607   (Wallclock seconds):       193.984
