Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3017/j3017_3.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3017_3.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.108692 seconds
Cgl0002I 17 variables fixed
Cgl0003I 12 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 233 rows, 537 columns (537 integer (535 of which binary)) and 6717 elements
Coin3009W Conflict graph built in 0.049 seconds, density: 2.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 537 objects (537 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 42 integers unsatisfied sum - 11.0382
Cbc0038I Pass   1: suminf.    8.63950 (38) obj. 7.77156e-16 iterations 94
Cbc0038I Pass   2: suminf.    7.93006 (41) obj. -8.21565e-15 iterations 19
Cbc0038I Pass   3: suminf.    7.73941 (39) obj. -8.21565e-15 iterations 27
Cbc0038I Pass   4: suminf.    5.84153 (32) obj. 7.77156e-16 iterations 94
Cbc0038I Pass   5: suminf.    5.38467 (28) obj. 7.77156e-16 iterations 23
Cbc0038I Pass   6: suminf.    6.14583 (21) obj. 7.77156e-16 iterations 82
Cbc0038I Pass   7: suminf.    4.00755 (20) obj. 7.77156e-16 iterations 29
Cbc0038I Pass   8: suminf.    4.26339 (14) obj. 7.77156e-16 iterations 29
Cbc0038I Pass   9: suminf.    2.98638 (19) obj. 7.77156e-16 iterations 32
Cbc0038I Pass  10: suminf.    7.00297 (19) obj. 7.77156e-16 iterations 57
Cbc0038I Pass  11: suminf.    4.53703 (19) obj. 7.77156e-16 iterations 23
Cbc0038I Pass  12: suminf.    3.50818 (14) obj. 7.77156e-16 iterations 24
Cbc0038I Pass  13: suminf.    3.41751 (16) obj. 7.77156e-16 iterations 3
Cbc0038I Pass  14: suminf.    3.92143 (13) obj. 7.77156e-16 iterations 29
Cbc0038I Pass  15: suminf.    3.14476 (16) obj. 7.77156e-16 iterations 25
Cbc0038I Pass  16: suminf.    5.85780 (35) obj. 0.032 iterations 59
Cbc0038I Pass  17: suminf.    4.54000 (14) obj. 8.10463e-15 iterations 34
Cbc0038I Pass  18: suminf.    4.78500 (31) obj. 0.032 iterations 32
Cbc0038I Pass  19: suminf.    3.36313 (18) obj. 4.44089e-15 iterations 29
Cbc0038I Pass  20: suminf.    4.78333 (12) obj. 4.44089e-15 iterations 52
Cbc0038I Pass  21: suminf.    3.27143 (13) obj. 4.44089e-15 iterations 21
Cbc0038I Pass  22: suminf.    5.50214 (17) obj. 4.44089e-15 iterations 39
Cbc0038I Pass  23: suminf.    4.98336 (16) obj. 4.44089e-15 iterations 23
Cbc0038I Pass  24: suminf.    3.93443 (15) obj. 4.44089e-15 iterations 19
Cbc0038I Pass  25: suminf.    3.92247 (14) obj. 4.44089e-15 iterations 1
Cbc0038I Pass  26: suminf.    5.10810 (15) obj. 7.77156e-16 iterations 36
Cbc0038I Pass  27: suminf.    3.36313 (18) obj. 7.77156e-16 iterations 37
Cbc0038I Pass  28: suminf.    5.07115 (17) obj. 7.77156e-16 iterations 48
Cbc0038I Pass  29: suminf.    4.63675 (14) obj. 7.77156e-16 iterations 15
Cbc0038I Pass  30: suminf.    4.77182 (17) obj. 7.77156e-16 iterations 39
Cbc0038I Pass  31: suminf.    4.23533 (17) obj. 7.77156e-16 iterations 21
Cbc0038I Pass  32: suminf.    3.36313 (18) obj. 7.77156e-16 iterations 9
Cbc0038I Pass  33: suminf.    5.66147 (18) obj. 7.77156e-16 iterations 54
Cbc0038I Pass  34: suminf.    4.68336 (16) obj. 7.77156e-16 iterations 20
Cbc0038I Pass  35: suminf.    3.92247 (14) obj. 7.77156e-16 iterations 16
Cbc0038I Pass  36: suminf.    6.11111 (19) obj. 7.77156e-16 iterations 52
Cbc0038I Pass  37: suminf.    4.23533 (17) obj. 7.77156e-16 iterations 43
Cbc0038I Pass  38: suminf.    3.36313 (18) obj. 7.77156e-16 iterations 11
Cbc0038I Pass  39: suminf.    5.07115 (17) obj. 7.77156e-16 iterations 45
Cbc0038I Pass  40: suminf.    4.63675 (14) obj. 7.77156e-16 iterations 15
Cbc0038I Pass  41: suminf.    3.76881 (13) obj. 7.77156e-16 iterations 35
Cbc0038I Pass  42: suminf.   11.42419 (49) obj. 0.0952381 iterations 97
Cbc0038I Pass  43: suminf.    6.94052 (40) obj. 0.0940171 iterations 55
Cbc0038I Pass  44: suminf.    6.27385 (38) obj. 0.0940171 iterations 2
Cbc0038I Pass  45: suminf.    6.34871 (37) obj. 0.0547504 iterations 43
Cbc0038I Pass  46: suminf.    5.56764 (37) obj. 0.0940171 iterations 26
Cbc0038I Pass  47: suminf.    5.56764 (37) obj. 0.0940171 iterations 0
Cbc0038I Pass  48: suminf.    5.61910 (35) obj. 0.00854701 iterations 27
Cbc0038I Pass  49: suminf.    4.61951 (24) obj. 4.44089e-15 iterations 43
Cbc0038I Pass  50: suminf.    4.61878 (26) obj. 4.44089e-15 iterations 10
Cbc0038I Pass  51: suminf.    6.10605 (25) obj. -6.43929e-15 iterations 76
Cbc0038I Pass  52: suminf.    4.19219 (27) obj. -6.43929e-15 iterations 50
Cbc0038I Pass  53: suminf.    4.00830 (26) obj. -6.43929e-15 iterations 8
Cbc0038I Pass  54: suminf.    6.10754 (23) obj. 4.44089e-15 iterations 71
Cbc0038I Pass  55: suminf.    4.81190 (24) obj. 7.77156e-16 iterations 35
Cbc0038I Pass  56: suminf.    6.39765 (21) obj. -6.43929e-15 iterations 47
Cbc0038I Pass  57: suminf.    4.11607 (22) obj. -6.43929e-15 iterations 29
Cbc0038I Pass  58: suminf.    3.65397 (19) obj. -6.43929e-15 iterations 16
Cbc0038I Pass  59: suminf.    3.54209 (23) obj. -6.43929e-15 iterations 25
Cbc0038I Pass  60: suminf.    5.96366 (23) obj. 4.44089e-15 iterations 55
Cbc0038I Pass  61: suminf.    4.25259 (22) obj. 4.44089e-15 iterations 24
Cbc0038I Pass  62: suminf.    6.04927 (21) obj. 7.77156e-16 iterations 60
Cbc0038I Pass  63: suminf.    4.46569 (24) obj. -6.43929e-15 iterations 38
Cbc0038I Pass  64: suminf.    4.49098 (21) obj. -6.43929e-15 iterations 37
Cbc0038I Pass  65: suminf.    4.14268 (40) obj. 0.00854701 iterations 28
Cbc0038I Pass  66: suminf.    6.02516 (25) obj. 7.77156e-16 iterations 57
Cbc0038I Pass  67: suminf.    3.98282 (21) obj. 7.77156e-16 iterations 47
Cbc0038I Pass  68: suminf.    3.78367 (22) obj. 7.77156e-16 iterations 26
Cbc0038I Pass  69: suminf.    4.76575 (18) obj. 7.77156e-16 iterations 75
Cbc0038I Pass  70: suminf.    4.61163 (25) obj. 7.77156e-16 iterations 35
Cbc0038I Pass  71: suminf.    5.17910 (22) obj. 7.77156e-16 iterations 59
Cbc0038I Pass  72: suminf.    3.19365 (19) obj. 7.77156e-16 iterations 49
Cbc0038I Pass  73: suminf.    3.05850 (20) obj. 7.77156e-16 iterations 34
Cbc0038I Pass  74: suminf.    5.16994 (20) obj. 7.77156e-16 iterations 43
Cbc0038I Pass  75: suminf.    3.87044 (20) obj. 7.77156e-16 iterations 17
Cbc0038I Pass  76: suminf.    5.86959 (41) obj. 0.0173913 iterations 47
Cbc0038I Pass  77: suminf.    4.62232 (21) obj. 7.77156e-16 iterations 27
Cbc0038I Pass  78: suminf.    4.45054 (28) obj. 4.44089e-15 iterations 39
Cbc0038I Pass  79: suminf.    5.75055 (24) obj. 7.77156e-16 iterations 82
Cbc0038I Pass  80: suminf.    2.98718 (14) obj. 1 iterations 57
Cbc0038I Pass  81: suminf.    2.98718 (14) obj. 1 iterations 9
Cbc0038I Pass  82: suminf.    2.98718 (14) obj. 1 iterations 14
Cbc0038I Pass  83: suminf.    3.83563 (25) obj. 1 iterations 74
Cbc0038I Pass  84: suminf.    3.02747 (13) obj. 1 iterations 35
Cbc0038I Pass  85: suminf.    2.92857 (13) obj. 1 iterations 20
Cbc0038I Pass  86: suminf.    2.80952 (11) obj. 1 iterations 45
Cbc0038I Pass  87: suminf.    2.65385 (12) obj. 1 iterations 36
Cbc0038I Pass  88: suminf.    2.97619 (13) obj. 1 iterations 33
Cbc0038I Pass  89: suminf.    2.97619 (13) obj. 1 iterations 12
Cbc0038I Pass  90: suminf.    2.92857 (13) obj. 1 iterations 12
Cbc0038I Pass  91: suminf.    2.80952 (11) obj. 1 iterations 37
Cbc0038I Pass  92: suminf.    2.65385 (12) obj. 1 iterations 38
Cbc0038I Pass  93: suminf.    2.97619 (13) obj. 1 iterations 32
Cbc0038I Pass  94: suminf.    7.43325 (37) obj. 1 iterations 114
Cbc0038I Pass  95: suminf.    3.47222 (19) obj. 1 iterations 73
Cbc0038I Pass  96: suminf.    3.47222 (19) obj. 1 iterations 0
Cbc0038I Pass  97: suminf.    2.23077 (14) obj. 1 iterations 65
Cbc0038I Pass  98: suminf.    2.23333 (14) obj. 1 iterations 3
Cbc0038I Pass  99: suminf.    4.32589 (19) obj. 1 iterations 50
Cbc0038I Pass 100: suminf.    5.27246 (29) obj. 1 iterations 87
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 354 integers at bound fixed and 0 continuous
Cbc0038I Full problem 233 rows 537 columns, reduced to 179 rows 169 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.95 seconds)
Cbc0038I Full problem 234 rows 537 columns, reduced to 234 rows 537 columns - too large
Cbc0038I After 3.03 seconds - Feasibility pump exiting - took 1.38 seconds
Cbc0031I 67 added rows had average density of 36.80597
Cbc0013I At root node, 67 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 158 row cuts average 7.7 elements, 0 column cuts (59 active)  in 0.605 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 208 row cuts average 448.0 elements, 0 column cuts (0 active)  in 0.302 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 337 row cuts average 8.0 elements, 0 column cuts (0 active)  in 6.985 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 62 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 6 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 206 row cuts average 313.7 elements, 0 column cuts (0 active)  in 0.593 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 86 row cuts average 64.6 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (13.17 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 0 (13.91 seconds)
Cbc0010I After 29 nodes, 6 on tree, 1e+50 best solution, best possible 0 (14.63 seconds)
Cbc0010I After 39 nodes, 4 on tree, 1e+50 best solution, best possible 1 (15.42 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 7216 iterations and 50 nodes (15.85 seconds)
Cbc0001I Search completed - best objective 1, took 7216 iterations and 50 nodes (15.85 seconds)
Cbc0032I Strong branching done 874 times (16405 iterations), fathomed 6 nodes and fixed 66 variables
Cbc0035I Maximum depth 12, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 158 cuts of which 59 were active after adding rounds of cuts (0.604938 seconds)
Gomory was tried 10 times and created 208 cuts of which 0 were active after adding rounds of cuts (0.30241 seconds)
liftKnapsack was tried 10 times and created 337 cuts of which 0 were active after adding rounds of cuts (6.98514 seconds)
Clique was tried 10 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.015138 seconds)
OddWheel was tried 10 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.037613 seconds)
MixedIntegerRounding2 was tried 10 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.031469 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004047 seconds)
TwoMirCuts was tried 10 times and created 206 cuts of which 0 were active after adding rounds of cuts (0.592575 seconds)
ZeroHalf was tried 10 times and created 86 cuts of which 0 were active after adding rounds of cuts (0.071266 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               50
Total iterations:               7216
Time (CPU seconds):             15.9469
Time (Wallclock seconds):       15.904
Total time (CPU seconds):       15.9617   (Wallclock seconds):       15.9292
