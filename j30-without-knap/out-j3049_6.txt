Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3049/j3049_6.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3049_6.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.517691 - 0.180413 seconds
Cgl0002I 5 variables fixed
Cgl0003I 1 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 314 rows, 682 columns (682 integer (681 of which binary)) and 7771 elements
Coin3009W Conflict graph built in 0.036 seconds, density: 1.485%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 682 objects (682 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 124 integers unsatisfied sum - 26.2859
Cbc0038I Pass   1: suminf.   13.07210 (76) obj. 1.38766 iterations 238
Cbc0038I Pass   2: suminf.   12.69133 (77) obj. 1.53069 iterations 37
Cbc0038I Pass   3: suminf.   11.85003 (67) obj. 1.90459 iterations 42
Cbc0038I Pass   4: suminf.    7.89959 (42) obj. 5 iterations 127
Cbc0038I Pass   5: suminf.    6.04157 (39) obj. 5 iterations 51
Cbc0038I Pass   6: suminf.    7.88130 (35) obj. 5 iterations 131
Cbc0038I Pass   7: suminf.    6.19090 (38) obj. 5 iterations 78
Cbc0038I Pass   8: suminf.    5.40781 (40) obj. 5 iterations 20
Cbc0038I Pass   9: suminf.    7.22990 (37) obj. 5 iterations 101
Cbc0038I Pass  10: suminf.    6.08559 (35) obj. 5 iterations 124
Cbc0038I Pass  11: suminf.    5.69935 (36) obj. 5 iterations 42
Cbc0038I Pass  12: suminf.    5.55519 (37) obj. 5 iterations 38
Cbc0038I Pass  13: suminf.    5.73239 (39) obj. 5 iterations 81
Cbc0038I Pass  14: suminf.    5.26238 (36) obj. 5 iterations 74
Cbc0038I Pass  15: suminf.    9.53932 (42) obj. 5 iterations 124
Cbc0038I Pass  16: suminf.    6.50608 (37) obj. 5 iterations 78
Cbc0038I Pass  17: suminf.    5.12629 (28) obj. 5 iterations 108
Cbc0038I Pass  18: suminf.    4.33163 (25) obj. 5 iterations 44
Cbc0038I Pass  19: suminf.    6.33987 (26) obj. 5 iterations 103
Cbc0038I Pass  20: suminf.    4.55306 (26) obj. 5 iterations 97
Cbc0038I Pass  21: suminf.    4.51814 (26) obj. 5 iterations 51
Cbc0038I Pass  22: suminf.    6.32671 (32) obj. 5 iterations 113
Cbc0038I Pass  23: suminf.    4.85465 (29) obj. 5 iterations 89
Cbc0038I Pass  24: suminf.    4.62052 (27) obj. 5 iterations 42
Cbc0038I Pass  25: suminf.    6.08429 (27) obj. 5 iterations 117
Cbc0038I Pass  26: suminf.    4.68798 (28) obj. 5 iterations 130
Cbc0038I Pass  27: suminf.   20.44118 (79) obj. 5 iterations 217
Cbc0038I Pass  28: suminf.    7.95702 (33) obj. 5 iterations 184
Cbc0038I Pass  29: suminf.    6.23333 (25) obj. 5 iterations 75
Cbc0038I Pass  30: suminf.    6.22154 (29) obj. 5 iterations 24
Cbc0038I Pass  31: suminf.    6.62271 (29) obj. 5 iterations 44
Cbc0038I Pass  32: suminf.    6.22381 (24) obj. 5 iterations 40
Cbc0038I Pass  33: suminf.    7.57619 (24) obj. 5 iterations 72
Cbc0038I Pass  34: suminf.   13.91109 (59) obj. 5 iterations 176
Cbc0038I Pass  35: suminf.    7.19762 (30) obj. 5 iterations 138
Cbc0038I Pass  36: suminf.    6.55952 (31) obj. 5 iterations 6
Cbc0038I Pass  37: suminf.    6.24345 (38) obj. 5 iterations 34
Cbc0038I Pass  38: suminf.   10.66794 (47) obj. 5 iterations 164
Cbc0038I Pass  39: suminf.    8.64614 (42) obj. 5 iterations 82
Cbc0038I Pass  40: suminf.    7.30478 (42) obj. 5 iterations 69
Cbc0038I Pass  41: suminf.    6.95503 (35) obj. 5 iterations 62
Cbc0038I Pass  42: suminf.    6.27396 (43) obj. 5 iterations 28
Cbc0038I Pass  43: suminf.    4.96278 (28) obj. 5 iterations 18
Cbc0038I Pass  44: suminf.    4.36000 (31) obj. 5 iterations 66
Cbc0038I Pass  45: suminf.    7.25030 (29) obj. 5 iterations 134
Cbc0038I Pass  46: suminf.    5.51347 (27) obj. 5 iterations 71
Cbc0038I Pass  47: suminf.    5.33965 (26) obj. 5 iterations 31
Cbc0038I Pass  48: suminf.    6.21389 (19) obj. 5 iterations 122
Cbc0038I Pass  49: suminf.    4.20833 (18) obj. 5 iterations 75
Cbc0038I Pass  50: suminf.    4.08333 (19) obj. 5 iterations 39
Cbc0038I Pass  51: suminf.    6.11333 (22) obj. 5 iterations 122
Cbc0038I Pass  52: suminf.    4.20238 (19) obj. 5 iterations 75
Cbc0038I Pass  53: suminf.    5.94762 (20) obj. 5 iterations 90
Cbc0038I Pass  54: suminf.    5.14444 (19) obj. 5 iterations 68
Cbc0038I Pass  55: suminf.    4.39444 (15) obj. 5 iterations 12
Cbc0038I Pass  56: suminf.    4.19444 (16) obj. 5 iterations 84
Cbc0038I Pass  57: suminf.    3.01984 (13) obj. 5 iterations 90
Cbc0038I Pass  58: suminf.    3.69167 (14) obj. 5 iterations 88
Cbc0038I Pass  59: suminf.    3.29861 (15) obj. 5 iterations 49
Cbc0038I Pass  60: suminf.    3.52778 (12) obj. 5 iterations 174
Cbc0038I Pass  61: suminf.    3.22222 (13) obj. 5 iterations 54
Cbc0038I Pass  62: suminf.    3.18889 (12) obj. 5 iterations 29
Cbc0038I Pass  63: suminf.    4.00057 (18) obj. 5 iterations 98
Cbc0038I Pass  64: suminf.    3.59983 (20) obj. 5 iterations 47
Cbc0038I Pass  65: suminf.    4.03519 (22) obj. 5 iterations 70
Cbc0038I Pass  66: suminf.    3.02778 (15) obj. 5 iterations 49
Cbc0038I Pass  67: suminf.    3.02778 (15) obj. 5 iterations 51
Cbc0038I Pass  68: suminf.    3.48730 (14) obj. 5 iterations 117
Cbc0038I Pass  69: suminf.    2.99048 (15) obj. 5 iterations 42
Cbc0038I Pass  70: suminf.    3.54234 (26) obj. 5 iterations 86
Cbc0038I Pass  71: suminf.    3.26587 (15) obj. 5 iterations 29
Cbc0038I Pass  72: suminf.    3.26587 (15) obj. 5 iterations 39
Cbc0038I Pass  73: suminf.    3.48730 (14) obj. 5 iterations 98
Cbc0038I Pass  74: suminf.    2.99048 (15) obj. 5 iterations 42
Cbc0038I Pass  75: suminf.    3.54234 (26) obj. 5 iterations 114
Cbc0038I Pass  76: suminf.    3.26587 (15) obj. 5 iterations 32
Cbc0038I Pass  77: suminf.    3.26587 (15) obj. 5 iterations 34
Cbc0038I Pass  78: suminf.    3.48730 (14) obj. 5 iterations 87
Cbc0038I Pass  79: suminf.    2.99048 (15) obj. 5 iterations 40
Cbc0038I Pass  80: suminf.    3.54234 (26) obj. 5 iterations 83
Cbc0038I Pass  81: suminf.    3.26587 (15) obj. 5 iterations 39
Cbc0038I Pass  82: suminf.    3.26587 (15) obj. 5 iterations 26
Cbc0038I Pass  83: suminf.    3.48730 (14) obj. 5 iterations 83
Cbc0038I Pass  84: suminf.    2.99048 (15) obj. 5 iterations 34
Cbc0038I Pass  85: suminf.    2.93254 (14) obj. 5 iterations 70
Cbc0038I Pass  86: suminf.    2.01032 (15) obj. 5 iterations 45
Cbc0038I Pass  87: suminf.    4.35175 (23) obj. 5 iterations 113
Cbc0038I Pass  88: suminf.    4.35175 (23) obj. 5 iterations 44
Cbc0038I Pass  89: suminf.    6.17446 (26) obj. 5 iterations 167
Cbc0038I Pass  90: suminf.    2.44365 (12) obj. 5 iterations 102
Cbc0038I Pass  91: suminf.    2.44365 (12) obj. 5 iterations 4
Cbc0038I Pass  92: suminf.    3.65000 (16) obj. 5 iterations 96
Cbc0038I Pass  93: suminf.    3.65000 (15) obj. 5 iterations 64
Cbc0038I Pass  94: suminf.    3.13889 (19) obj. 5 iterations 129
Cbc0038I Pass  95: suminf.    3.13889 (19) obj. 5 iterations 20
Cbc0038I Pass  96: suminf.    4.85952 (16) obj. 5 iterations 139
Cbc0038I Pass  97: suminf.    4.00000 (15) obj. 5 iterations 42
Cbc0038I Pass  98: suminf.    3.93333 (14) obj. 5 iterations 8
Cbc0038I Pass  99: suminf.    5.59761 (21) obj. 5 iterations 120
Cbc0038I Pass 100: suminf.   13.30645 (69) obj. 4.70679 iterations 230
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 368 integers at bound fixed and 0 continuous
Cbc0038I Full problem 314 rows 682 columns, reduced to 238 rows 285 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.54 seconds)
Cbc0038I After 3.54 seconds - Feasibility pump exiting - took 1.64 seconds
Cbc0031I 74 added rows had average density of 43.851351
Cbc0013I At root node, 74 cuts changed objective from 0.561355 to 1.9998269 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 199 row cuts average 5.8 elements, 1 column cuts (21 active)  in 0.506 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 169 row cuts average 668.1 elements, 0 column cuts (0 active)  in 0.971 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 539 row cuts average 10.5 elements, 0 column cuts (0 active)  in 24.244 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 49 row cuts average 17.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 33.8 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 183 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (32.65 seconds)
Cbc0010I After 1 nodes, 1 on tree, 1e+50 best solution, best possible 2 (34.91 seconds)
Cbc0010I After 2 nodes, 1 on tree, 1e+50 best solution, best possible 3 (41.14 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 3 (47.53 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 3 (54.71 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 3 (58.28 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 3 (67.39 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 3 (75.56 seconds)
Cbc0010I After 10 nodes, 4 on tree, 1e+50 best solution, best possible 3 (80.14 seconds)
Cbc0010I After 12 nodes, 2 on tree, 1e+50 best solution, best possible 3 (82.05 seconds)
Cbc0010I After 14 nodes, 1 on tree, 1e+50 best solution, best possible 4 (89.22 seconds)
Cbc0010I After 15 nodes, 2 on tree, 1e+50 best solution, best possible 4 (92.03 seconds)
Cbc0010I After 16 nodes, 3 on tree, 1e+50 best solution, best possible 4 (97.30 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 4 (105.60 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible 4 (109.84 seconds)
Cbc0010I After 19 nodes, 6 on tree, 1e+50 best solution, best possible 4 (112.81 seconds)
Cbc0010I After 20 nodes, 5 on tree, 1e+50 best solution, best possible 4 (114.95 seconds)
Cbc0010I After 21 nodes, 6 on tree, 1e+50 best solution, best possible 4 (119.18 seconds)
Cbc0010I After 22 nodes, 6 on tree, 1e+50 best solution, best possible 4 (123.04 seconds)
Cbc0010I After 23 nodes, 7 on tree, 1e+50 best solution, best possible 4 (125.20 seconds)
Cbc0010I After 24 nodes, 8 on tree, 1e+50 best solution, best possible 4 (128.33 seconds)
Cbc0010I After 25 nodes, 9 on tree, 1e+50 best solution, best possible 4 (131.30 seconds)
Cbc0010I After 27 nodes, 8 on tree, 1e+50 best solution, best possible 4 (134.22 seconds)
Cbc0010I After 28 nodes, 8 on tree, 1e+50 best solution, best possible 4 (137.03 seconds)
Cbc0010I After 31 nodes, 6 on tree, 1e+50 best solution, best possible 4 (139.25 seconds)
Cbc0010I After 33 nodes, 6 on tree, 1e+50 best solution, best possible 4 (143.32 seconds)
Cbc0010I After 34 nodes, 6 on tree, 1e+50 best solution, best possible 4 (145.65 seconds)
Cbc0010I After 36 nodes, 5 on tree, 1e+50 best solution, best possible 4 (147.99 seconds)
Cbc0010I After 37 nodes, 6 on tree, 1e+50 best solution, best possible 4 (150.81 seconds)
Cbc0010I After 38 nodes, 7 on tree, 1e+50 best solution, best possible 4 (154.11 seconds)
Cbc0010I After 39 nodes, 7 on tree, 1e+50 best solution, best possible 4 (156.41 seconds)
Cbc0010I After 40 nodes, 8 on tree, 1e+50 best solution, best possible 4 (158.92 seconds)
Cbc0010I After 42 nodes, 8 on tree, 1e+50 best solution, best possible 4 (160.89 seconds)
Cbc0010I After 43 nodes, 8 on tree, 1e+50 best solution, best possible 4 (163.33 seconds)
Cbc0010I After 45 nodes, 7 on tree, 1e+50 best solution, best possible 4 (166.44 seconds)
Cbc0010I After 46 nodes, 8 on tree, 1e+50 best solution, best possible 4 (170.18 seconds)
Cbc0010I After 47 nodes, 9 on tree, 1e+50 best solution, best possible 4 (172.27 seconds)
Cbc0010I After 48 nodes, 9 on tree, 1e+50 best solution, best possible 4 (173.52 seconds)
Cbc0010I After 49 nodes, 9 on tree, 1e+50 best solution, best possible 4 (175.46 seconds)
Cbc0010I After 52 nodes, 8 on tree, 1e+50 best solution, best possible 4 (179.07 seconds)
Cbc0010I After 54 nodes, 7 on tree, 1e+50 best solution, best possible 4 (180.09 seconds)
Cbc0010I After 55 nodes, 8 on tree, 1e+50 best solution, best possible 4 (181.41 seconds)
Cbc0010I After 57 nodes, 8 on tree, 1e+50 best solution, best possible 4 (182.57 seconds)
Cbc0010I After 60 nodes, 7 on tree, 1e+50 best solution, best possible 4 (184.81 seconds)
Cbc0010I After 62 nodes, 6 on tree, 1e+50 best solution, best possible 4 (187.54 seconds)
Cbc0010I After 64 nodes, 6 on tree, 1e+50 best solution, best possible 4 (191.25 seconds)
Cbc0010I After 65 nodes, 7 on tree, 1e+50 best solution, best possible 4 (194.92 seconds)
Cbc0010I After 66 nodes, 8 on tree, 1e+50 best solution, best possible 4 (196.64 seconds)
Cbc0010I After 67 nodes, 9 on tree, 1e+50 best solution, best possible 4 (200.57 seconds)
Cbc0010I After 68 nodes, 9 on tree, 1e+50 best solution, best possible 4 (202.51 seconds)
Cbc0010I After 72 nodes, 7 on tree, 1e+50 best solution, best possible 4 (204.91 seconds)
Cbc0010I After 74 nodes, 6 on tree, 1e+50 best solution, best possible 4 (206.55 seconds)
Cbc0010I After 75 nodes, 7 on tree, 1e+50 best solution, best possible 4 (208.36 seconds)
Cbc0010I After 77 nodes, 6 on tree, 1e+50 best solution, best possible 4 (210.64 seconds)
Cbc0010I After 79 nodes, 6 on tree, 1e+50 best solution, best possible 4 (213.08 seconds)
Cbc0010I After 80 nodes, 7 on tree, 1e+50 best solution, best possible 4 (217.17 seconds)
Cbc0010I After 82 nodes, 7 on tree, 1e+50 best solution, best possible 4 (220.88 seconds)
Cbc0010I After 84 nodes, 7 on tree, 1e+50 best solution, best possible 4 (226.49 seconds)
Cbc0010I After 85 nodes, 8 on tree, 1e+50 best solution, best possible 4 (230.49 seconds)
Cbc0010I After 86 nodes, 9 on tree, 1e+50 best solution, best possible 4 (234.18 seconds)
Cbc0010I After 87 nodes, 10 on tree, 1e+50 best solution, best possible 4 (236.80 seconds)
Cbc0010I After 89 nodes, 10 on tree, 1e+50 best solution, best possible 4 (239.59 seconds)
Cbc0010I After 93 nodes, 8 on tree, 1e+50 best solution, best possible 4 (244.67 seconds)
Cbc0010I After 95 nodes, 7 on tree, 1e+50 best solution, best possible 4 (249.82 seconds)
Cbc0010I After 96 nodes, 8 on tree, 1e+50 best solution, best possible 4 (254.60 seconds)
Cbc0010I After 98 nodes, 7 on tree, 1e+50 best solution, best possible 4 (256.88 seconds)
Cbc0010I After 99 nodes, 7 on tree, 1e+50 best solution, best possible 4 (260.32 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 4 (262.95 seconds)
Cbc0010I After 101 nodes, 6 on tree, 1e+50 best solution, best possible 4 (267.12 seconds)
Cbc0010I After 103 nodes, 6 on tree, 1e+50 best solution, best possible 4 (271.61 seconds)
Cbc0010I After 104 nodes, 7 on tree, 1e+50 best solution, best possible 4 (274.25 seconds)
Cbc0010I After 105 nodes, 7 on tree, 1e+50 best solution, best possible 4 (277.54 seconds)
Cbc0010I After 107 nodes, 5 on tree, 1e+50 best solution, best possible 4 (279.19 seconds)
Cbc0010I After 109 nodes, 4 on tree, 1e+50 best solution, best possible 4 (281.18 seconds)
Cbc0010I After 110 nodes, 5 on tree, 1e+50 best solution, best possible 4 (281.99 seconds)
Cbc0010I After 111 nodes, 5 on tree, 1e+50 best solution, best possible 4 (283.00 seconds)
Cbc0010I After 112 nodes, 4 on tree, 1e+50 best solution, best possible 4 (284.53 seconds)
Cbc0010I After 116 nodes, 1 on tree, 1e+50 best solution, best possible 5 (286.38 seconds)
Cbc0010I After 117 nodes, 2 on tree, 1e+50 best solution, best possible 5 (291.26 seconds)
Cbc0010I After 118 nodes, 3 on tree, 1e+50 best solution, best possible 5 (294.65 seconds)
Cbc0010I After 119 nodes, 4 on tree, 1e+50 best solution, best possible 5 (296.29 seconds)
Cbc0010I After 120 nodes, 5 on tree, 1e+50 best solution, best possible 5 (297.39 seconds)
Cbc0010I After 122 nodes, 5 on tree, 1e+50 best solution, best possible 5 (299.94 seconds)
Cbc0010I After 123 nodes, 6 on tree, 1e+50 best solution, best possible 5 (301.93 seconds)
Cbc0010I After 125 nodes, 6 on tree, 1e+50 best solution, best possible 5 (306.24 seconds)
Cbc0010I After 127 nodes, 7 on tree, 1e+50 best solution, best possible 5 (307.42 seconds)
Cbc0010I After 129 nodes, 7 on tree, 1e+50 best solution, best possible 5 (308.54 seconds)
Cbc0004I Integer solution of 5 found after 57329 iterations and 133 nodes (309.27 seconds)
Cbc0001I Search completed - best objective 5, took 57329 iterations and 133 nodes (309.27 seconds)
Cbc0032I Strong branching done 1328 times (57649 iterations), fathomed 1 nodes and fixed 19 variables
Cbc0035I Maximum depth 20, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.561355 to 2
Probing was tried 118 times and created 1365 cuts of which 20 were active after adding rounds of cuts (1.54832 seconds)
Gomory was tried 10 times and created 169 cuts of which 0 were active after adding rounds of cuts (0.970551 seconds)
liftKnapsack was tried 117 times and created 5592 cuts of which 0 were active after adding rounds of cuts (266.287 seconds)
Clique was tried 117 times and created 519 cuts of which 0 were active after adding rounds of cuts (0.339038 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.178842 seconds)
MixedIntegerRounding2 was tried 117 times and created 829 cuts of which 0 were active after adding rounds of cuts (0.511021 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002792 seconds)
TwoMirCuts was tried 117 times and created 911 cuts of which 0 were active after adding rounds of cuts (0.45178 seconds)
ZeroHalf was tried 117 times and created 1277 cuts of which 0 were active after adding rounds of cuts (1.83081 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               133
Total iterations:               57329
Time (CPU seconds):             307.39
Time (Wallclock seconds):       309.324
Total time (CPU seconds):       307.401   (Wallclock seconds):       309.336
