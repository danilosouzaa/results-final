Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3034/j3034_2.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3034_2.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 4.64252 - 0.147257 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 331 rows, 1175 columns (1175 integer (1174 of which binary)) and 13678 elements
Coin3009W Conflict graph built in 0.062 seconds, density: 0.826%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1175 objects (1175 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 87 integers unsatisfied sum - 23.8777
Cbc0038I Pass   1: suminf.    8.18028 (42) obj. 8 iterations 229
Cbc0038I Pass   2: suminf.    6.39661 (35) obj. 8 iterations 44
Cbc0038I Pass   3: suminf.    5.95217 (35) obj. 8 iterations 16
Cbc0038I Pass   4: suminf.    8.31119 (41) obj. 8 iterations 75
Cbc0038I Pass   5: suminf.    6.95433 (42) obj. 8 iterations 43
Cbc0038I Pass   6: suminf.    7.05289 (40) obj. 8 iterations 35
Cbc0038I Pass   7: suminf.    6.29597 (39) obj. 8 iterations 43
Cbc0038I Pass   8: suminf.    6.28188 (41) obj. 8 iterations 12
Cbc0038I Pass   9: suminf.   10.66326 (39) obj. 8 iterations 90
Cbc0038I Pass  10: suminf.    9.16600 (38) obj. 8 iterations 44
Cbc0038I Pass  11: suminf.    8.68301 (37) obj. 8 iterations 12
Cbc0038I Pass  12: suminf.    7.75438 (33) obj. 8 iterations 31
Cbc0038I Pass  13: suminf.    7.55062 (32) obj. 8 iterations 23
Cbc0038I Pass  14: suminf.    5.72443 (38) obj. 8 iterations 63
Cbc0038I Pass  15: suminf.    5.36935 (29) obj. 8 iterations 34
Cbc0038I Pass  16: suminf.    5.33013 (30) obj. 8 iterations 16
Cbc0038I Pass  17: suminf.    8.76175 (33) obj. 8 iterations 83
Cbc0038I Pass  18: suminf.    5.93560 (30) obj. 8 iterations 78
Cbc0038I Pass  19: suminf.    5.75565 (32) obj. 8 iterations 22
Cbc0038I Pass  20: suminf.    5.95841 (29) obj. 8 iterations 62
Cbc0038I Pass  21: suminf.    5.61802 (31) obj. 8 iterations 39
Cbc0038I Pass  22: suminf.    6.63838 (35) obj. 8 iterations 79
Cbc0038I Pass  23: suminf.    5.99727 (29) obj. 8 iterations 26
Cbc0038I Pass  24: suminf.    4.99844 (28) obj. 8 iterations 13
Cbc0038I Pass  25: suminf.    5.82702 (24) obj. 8 iterations 94
Cbc0038I Pass  26: suminf.    4.32939 (23) obj. 8 iterations 77
Cbc0038I Pass  27: suminf.    6.32704 (25) obj. 8 iterations 49
Cbc0038I Pass  28: suminf.    4.86022 (26) obj. 8 iterations 35
Cbc0038I Pass  29: suminf.    4.83304 (24) obj. 8 iterations 64
Cbc0038I Pass  30: suminf.    4.80414 (23) obj. 8 iterations 12
Cbc0038I Pass  31: suminf.    9.97172 (52) obj. 8 iterations 145
Cbc0038I Pass  32: suminf.    6.03982 (36) obj. 8 iterations 135
Cbc0038I Pass  33: suminf.    4.91186 (34) obj. 8 iterations 52
Cbc0038I Pass  34: suminf.    7.82381 (41) obj. 8 iterations 120
Cbc0038I Pass  35: suminf.    6.13414 (30) obj. 8 iterations 90
Cbc0038I Pass  36: suminf.    4.99740 (24) obj. 8 iterations 32
Cbc0038I Pass  37: suminf.    5.71188 (22) obj. 8 iterations 69
Cbc0038I Pass  38: suminf.    4.91407 (23) obj. 8 iterations 41
Cbc0038I Pass  39: suminf.    7.81887 (31) obj. 8 iterations 81
Cbc0038I Pass  40: suminf.    6.23861 (26) obj. 8 iterations 63
Cbc0038I Pass  41: suminf.    7.02441 (32) obj. 8 iterations 52
Cbc0038I Pass  42: suminf.    6.32861 (31) obj. 8 iterations 47
Cbc0038I Pass  43: suminf.    6.08179 (32) obj. 8 iterations 27
Cbc0038I Pass  44: suminf.    5.53222 (28) obj. 8 iterations 33
Cbc0038I Pass  45: suminf.    5.34767 (31) obj. 8 iterations 20
Cbc0038I Pass  46: suminf.    8.41334 (27) obj. 8 iterations 69
Cbc0038I Pass  47: suminf.    6.61212 (27) obj. 8 iterations 71
Cbc0038I Pass  48: suminf.    6.51207 (29) obj. 8 iterations 76
Cbc0038I Pass  49: suminf.    5.93013 (28) obj. 8 iterations 49
Cbc0038I Pass  50: suminf.    7.62720 (26) obj. 8 iterations 101
Cbc0038I Pass  51: suminf.    7.09016 (27) obj. 8 iterations 4
Cbc0038I Pass  52: suminf.    5.68831 (25) obj. 8 iterations 22
Cbc0038I Pass  53: suminf.    5.13925 (30) obj. 8 iterations 32
Cbc0038I Pass  54: suminf.    4.72818 (29) obj. 8 iterations 55
Cbc0038I Pass  55: suminf.    6.42180 (27) obj. 8 iterations 52
Cbc0038I Pass  56: suminf.    5.64665 (26) obj. 8 iterations 35
Cbc0038I Pass  57: suminf.    7.42420 (25) obj. 8 iterations 60
Cbc0038I Pass  58: suminf.    5.69750 (23) obj. 8 iterations 54
Cbc0038I Pass  59: suminf.    8.81795 (36) obj. 8 iterations 93
Cbc0038I Pass  60: suminf.    6.68547 (33) obj. 8 iterations 91
Cbc0038I Pass  61: suminf.    6.22910 (30) obj. 8 iterations 19
Cbc0038I Pass  62: suminf.    8.28680 (28) obj. 8 iterations 119
Cbc0038I Pass  63: suminf.    7.00602 (29) obj. 8 iterations 53
Cbc0038I Pass  64: suminf.    6.24122 (28) obj. 8 iterations 16
Cbc0038I Pass  65: suminf.    6.07456 (27) obj. 8 iterations 13
Cbc0038I Pass  66: suminf.    9.17630 (32) obj. 8 iterations 84
Cbc0038I Pass  67: suminf.    7.56312 (29) obj. 8 iterations 60
Cbc0038I Pass  68: suminf.    6.62799 (29) obj. 8 iterations 42
Cbc0038I Pass  69: suminf.    6.10058 (28) obj. 8 iterations 29
Cbc0038I Pass  70: suminf.    7.96848 (30) obj. 8 iterations 87
Cbc0038I Pass  71: suminf.    6.47465 (29) obj. 8 iterations 63
Cbc0038I Pass  72: suminf.    8.26385 (34) obj. 8 iterations 99
Cbc0038I Pass  73: suminf.    6.60803 (31) obj. 8 iterations 86
Cbc0038I Pass  74: suminf.    6.62958 (28) obj. 8 iterations 92
Cbc0038I Pass  75: suminf.    4.98196 (26) obj. 8 iterations 33
Cbc0038I Pass  76: suminf.    4.98196 (26) obj. 8 iterations 0
Cbc0038I Pass  77: suminf.    9.34653 (31) obj. 8 iterations 123
Cbc0038I Pass  78: suminf.    7.62570 (27) obj. 8 iterations 60
Cbc0038I Pass  79: suminf.    7.31492 (28) obj. 8 iterations 9
Cbc0038I Pass  80: suminf.    6.50346 (24) obj. 8 iterations 99
Cbc0038I Pass  81: suminf.    4.58752 (25) obj. 8 iterations 61
Cbc0038I Pass  82: suminf.    4.01918 (24) obj. 8 iterations 33
Cbc0038I Pass  83: suminf.    6.11785 (28) obj. 8 iterations 126
Cbc0038I Pass  84: suminf.    4.98954 (24) obj. 8 iterations 69
Cbc0038I Pass  85: suminf.    6.29759 (30) obj. 8 iterations 107
Cbc0038I Pass  86: suminf.    3.98831 (25) obj. 8 iterations 93
Cbc0038I Pass  87: suminf.    3.82165 (25) obj. 8 iterations 17
Cbc0038I Pass  88: suminf.    8.26710 (30) obj. 8 iterations 121
Cbc0038I Pass  89: suminf.    5.80615 (22) obj. 8 iterations 64
Cbc0038I Pass  90: suminf.    5.57879 (24) obj. 8 iterations 16
Cbc0038I Pass  91: suminf.    5.98124 (23) obj. 8 iterations 63
Cbc0038I Pass  92: suminf.    4.28055 (29) obj. 8 iterations 76
Cbc0038I Pass  93: suminf.    4.11388 (29) obj. 8 iterations 9
Cbc0038I Pass  94: suminf.    5.60779 (28) obj. 8 iterations 58
Cbc0038I Pass  95: suminf.   18.02000 (67) obj. 8 iterations 178
Cbc0038I Pass  96: suminf.    8.98047 (45) obj. 8 iterations 180
Cbc0038I Pass  97: suminf.    8.93131 (48) obj. 8 iterations 18
Cbc0038I Pass  98: suminf.    8.29107 (47) obj. 8 iterations 12
Cbc0038I Pass  99: suminf.    8.47509 (35) obj. 8 iterations 116
Cbc0038I Pass 100: suminf.   12.04424 (56) obj. 8 iterations 200
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 864 integers at bound fixed and 0 continuous
Cbc0038I Full problem 331 rows 1175 columns, reduced to 220 rows 273 columns
Cbc0038I Mini branch and bound did not improve solution (4.23 seconds)
Cbc0038I After 4.23 seconds - Feasibility pump exiting - took 2.56 seconds
Cbc0031I 93 added rows had average density of 63.946237
Cbc0013I At root node, 93 cuts changed objective from 4.6425221 to 6.9996809 in 52 passes
Cbc0014I Cut generator 0 (Probing) - 490 row cuts average 20.8 elements, 2 column cuts (39 active)  in 4.420 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 168 row cuts average 938.0 elements, 0 column cuts (0 active)  in 5.826 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 589 row cuts average 19.4 elements, 0 column cuts (0 active)  in 130.692 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.802 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 692 row cuts average 67.0 elements, 0 column cuts (0 active)  in 0.795 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 210 row cuts average 90.7 elements, 0 column cuts (0 active)  in 0.395 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 218 row cuts average 76.6 elements, 0 column cuts (0 active)  in 1.191 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 6.9996809 (155.39 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 6.9996809 (157.23 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 6.9996809 (159.16 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (161.08 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (162.63 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (165.34 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (166.23 seconds)
Cbc0010I After 9 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (167.73 seconds)
Cbc0010I After 10 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (169.10 seconds)
Cbc0010I After 12 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (171.51 seconds)
Cbc0010I After 13 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (173.40 seconds)
Cbc0010I After 14 nodes, 9 on tree, 1e+50 best solution, best possible 6.9996809 (175.60 seconds)
Cbc0010I After 15 nodes, 9 on tree, 1e+50 best solution, best possible 6.9996809 (177.26 seconds)
Cbc0010I After 18 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (179.83 seconds)
Cbc0010I After 20 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (182.70 seconds)
Cbc0010I After 21 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (184.06 seconds)
Cbc0010I After 22 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (185.44 seconds)
Cbc0010I After 26 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (186.39 seconds)
Cbc0010I After 27 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (187.22 seconds)
Cbc0010I After 29 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (190.24 seconds)
Cbc0010I After 31 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (193.84 seconds)
Cbc0010I After 32 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (195.21 seconds)
Cbc0010I After 33 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (195.92 seconds)
Cbc0010I After 34 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (196.66 seconds)
Cbc0010I After 35 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (197.84 seconds)
Cbc0010I After 36 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (199.14 seconds)
Cbc0010I After 37 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (199.94 seconds)
Cbc0010I After 38 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (201.00 seconds)
Cbc0010I After 40 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (203.25 seconds)
Cbc0010I After 41 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (204.17 seconds)
Cbc0010I After 42 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (205.18 seconds)
Cbc0010I After 44 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (205.89 seconds)
Cbc0010I After 46 nodes, 3 on tree, 1e+50 best solution, best possible 6.9996809 (209.07 seconds)
Cbc0010I After 47 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (212.11 seconds)
Cbc0010I After 49 nodes, 3 on tree, 1e+50 best solution, best possible 6.9996809 (214.32 seconds)
Cbc0010I After 50 nodes, 3 on tree, 1e+50 best solution, best possible 6.9996809 (216.62 seconds)
Cbc0010I After 51 nodes, 3 on tree, 1e+50 best solution, best possible 6.9996809 (219.32 seconds)
Cbc0010I After 53 nodes, 2 on tree, 1e+50 best solution, best possible 6.9996809 (221.13 seconds)
Cbc0010I After 54 nodes, 3 on tree, 1e+50 best solution, best possible 6.9996809 (222.44 seconds)
Cbc0010I After 55 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (223.76 seconds)
Cbc0010I After 56 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (225.76 seconds)
Cbc0010I After 57 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (227.29 seconds)
Cbc0010I After 58 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (228.43 seconds)
Cbc0010I After 59 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (229.65 seconds)
Cbc0010I After 60 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (230.63 seconds)
Cbc0010I After 62 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (231.58 seconds)
Cbc0010I After 63 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (232.98 seconds)
Cbc0010I After 64 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (234.15 seconds)
Cbc0010I After 65 nodes, 9 on tree, 1e+50 best solution, best possible 6.9996809 (234.90 seconds)
Cbc0010I After 67 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (236.18 seconds)
Cbc0010I After 68 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (236.96 seconds)
Cbc0010I After 70 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (238.33 seconds)
Cbc0010I After 71 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (239.49 seconds)
Cbc0010I After 72 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (240.67 seconds)
Cbc0010I After 73 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (241.90 seconds)
Cbc0010I After 75 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (243.09 seconds)
Cbc0010I After 76 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (244.20 seconds)
Cbc0010I After 77 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (245.07 seconds)
Cbc0010I After 80 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (245.86 seconds)
Cbc0010I After 81 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (246.85 seconds)
Cbc0010I After 82 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (247.87 seconds)
Cbc0010I After 85 nodes, 4 on tree, 1e+50 best solution, best possible 6.9996809 (250.09 seconds)
Cbc0010I After 86 nodes, 5 on tree, 1e+50 best solution, best possible 6.9996809 (251.42 seconds)
Cbc0010I After 87 nodes, 6 on tree, 1e+50 best solution, best possible 6.9996809 (252.82 seconds)
Cbc0010I After 89 nodes, 7 on tree, 1e+50 best solution, best possible 6.9996809 (253.90 seconds)
Cbc0010I After 91 nodes, 9 on tree, 1e+50 best solution, best possible 6.9996809 (254.96 seconds)
Cbc0010I After 95 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (256.28 seconds)
Cbc0010I After 96 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (257.60 seconds)
Cbc0010I After 98 nodes, 8 on tree, 1e+50 best solution, best possible 6.9996809 (258.64 seconds)
Cbc0010I After 99 nodes, 9 on tree, 1e+50 best solution, best possible 6.9996809 (259.71 seconds)
Cbc0010I After 102 nodes, 10 on tree, 1e+50 best solution, best possible 6.9996809 (260.80 seconds)
Cbc0010I After 106 nodes, 10 on tree, 1e+50 best solution, best possible 6.9996809 (261.78 seconds)
Cbc0010I After 108 nodes, 9 on tree, 1e+50 best solution, best possible 6.9996809 (262.93 seconds)
Cbc0010I After 110 nodes, 9 on tree, 1e+50 best solution, best possible 6.9996809 (263.91 seconds)
Cbc0010I After 113 nodes, 10 on tree, 1e+50 best solution, best possible 6.9996809 (265.19 seconds)
Cbc0010I After 115 nodes, 10 on tree, 1e+50 best solution, best possible 6.9996809 (266.06 seconds)
Cbc0010I After 119 nodes, 10 on tree, 1e+50 best solution, best possible 6.9996809 (267.65 seconds)
Cbc0010I After 121 nodes, 12 on tree, 1e+50 best solution, best possible 6.9996809 (268.50 seconds)
Cbc0016I Integer solution of 8 found by strong branching after 48672 iterations and 122 nodes (268.64 seconds)
Cbc0001I Search completed - best objective 8, took 48711 iterations and 123 nodes (268.66 seconds)
Cbc0032I Strong branching done 588 times (5547 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 19, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.64252 to 6.99968
Probing was tried 158 times and created 1809 cuts of which 37 were active after adding rounds of cuts (5.62636 seconds)
Gomory was tried 52 times and created 168 cuts of which 0 were active after adding rounds of cuts (5.82602 seconds)
liftKnapsack was tried 158 times and created 3397 cuts of which 0 were active after adding rounds of cuts (225.849 seconds)
Clique was tried 52 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.187826 seconds)
OddWheel was tried 52 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.802485 seconds)
MixedIntegerRounding2 was tried 158 times and created 1966 cuts of which 0 were active after adding rounds of cuts (1.6496 seconds)
FlowCover was tried 52 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025985 seconds)
TwoMirCuts was tried 158 times and created 580 cuts of which 0 were active after adding rounds of cuts (0.696848 seconds)
ZeroHalf was tried 158 times and created 1108 cuts of which 0 were active after adding rounds of cuts (2.72638 seconds)

Result - Optimal solution found
Objective value:                8
Enumerated nodes:               123
Total iterations:               48711
Time (CPU seconds):             268.391
Time (Wallclock seconds):       268.733
Total time (CPU seconds):       268.414   (Wallclock seconds):       268.752
