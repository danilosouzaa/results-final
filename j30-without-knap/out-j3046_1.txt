Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3046/j3046_1.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3046_1.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.68678 - 0.262681 seconds
Cgl0002I 7 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 312 rows, 752 columns (752 integer (751 of which binary)) and 11168 elements
Coin3009W Conflict graph built in 0.037 seconds, density: 1.061%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 752 objects (752 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 117 integers unsatisfied sum - 30.8588
Cbc0038I Pass   1: suminf.   14.62488 (67) obj. 4 iterations 207
Cbc0038I Pass   2: suminf.   11.70948 (51) obj. 4 iterations 113
Cbc0038I Pass   3: suminf.   11.73374 (52) obj. 4 iterations 11
Cbc0038I Pass   4: suminf.    8.88538 (47) obj. 4 iterations 129
Cbc0038I Pass   5: suminf.    7.36108 (41) obj. 4 iterations 75
Cbc0038I Pass   6: suminf.    7.37878 (36) obj. 4 iterations 78
Cbc0038I Pass   7: suminf.    6.48915 (38) obj. 4 iterations 75
Cbc0038I Pass   8: suminf.    6.29519 (37) obj. 4 iterations 26
Cbc0038I Pass   9: suminf.    9.54183 (39) obj. 4 iterations 92
Cbc0038I Pass  10: suminf.    8.32587 (37) obj. 4 iterations 77
Cbc0038I Pass  11: suminf.    7.21529 (38) obj. 4 iterations 63
Cbc0038I Pass  12: suminf.    7.07520 (38) obj. 4 iterations 28
Cbc0038I Pass  13: suminf.    7.08486 (49) obj. 4 iterations 108
Cbc0038I Pass  14: suminf.    6.52508 (31) obj. 4 iterations 76
Cbc0038I Pass  15: suminf.    5.67688 (29) obj. 4 iterations 37
Cbc0038I Pass  16: suminf.    6.78396 (26) obj. 4 iterations 97
Cbc0038I Pass  17: suminf.    6.09285 (26) obj. 4 iterations 52
Cbc0038I Pass  18: suminf.    8.16411 (32) obj. 4 iterations 66
Cbc0038I Pass  19: suminf.    6.37032 (29) obj. 4 iterations 81
Cbc0038I Pass  20: suminf.    8.58842 (30) obj. 4 iterations 75
Cbc0038I Pass  21: suminf.    6.52098 (32) obj. 4 iterations 57
Cbc0038I Pass  22: suminf.    6.51680 (32) obj. 4 iterations 5
Cbc0038I Pass  23: suminf.    8.91970 (31) obj. 4 iterations 121
Cbc0038I Pass  24: suminf.    7.28779 (29) obj. 4 iterations 65
Cbc0038I Pass  25: suminf.    6.35238 (31) obj. 4 iterations 42
Cbc0038I Pass  26: suminf.    5.83492 (25) obj. 4 iterations 13
Cbc0038I Pass  27: suminf.    5.78503 (26) obj. 4 iterations 16
Cbc0038I Pass  28: suminf.    5.37556 (29) obj. 4 iterations 37
Cbc0038I Pass  29: suminf.    5.37493 (26) obj. 4 iterations 66
Cbc0038I Pass  30: suminf.    5.07272 (28) obj. 4 iterations 34
Cbc0038I Pass  31: suminf.    4.89325 (28) obj. 4 iterations 28
Cbc0038I Pass  32: suminf.    9.38573 (31) obj. 4 iterations 109
Cbc0038I Pass  33: suminf.    6.39048 (27) obj. 4 iterations 89
Cbc0038I Pass  34: suminf.    5.91469 (27) obj. 4 iterations 33
Cbc0038I Pass  35: suminf.    7.38004 (29) obj. 4 iterations 92
Cbc0038I Pass  36: suminf.    6.45219 (26) obj. 4 iterations 59
Cbc0038I Pass  37: suminf.    6.45219 (28) obj. 4 iterations 15
Cbc0038I Pass  38: suminf.    4.61699 (23) obj. 4 iterations 74
Cbc0038I Pass  39: suminf.    4.61699 (23) obj. 4 iterations 25
Cbc0038I Pass  40: suminf.    7.59241 (31) obj. 4 iterations 122
Cbc0038I Pass  41: suminf.    3.37767 (20) obj. 4 iterations 165
Cbc0038I Pass  42: suminf.    3.37755 (20) obj. 4 iterations 6
Cbc0038I Pass  43: suminf.    4.04126 (18) obj. 4 iterations 89
Cbc0038I Pass  44: suminf.    2.37755 (15) obj. 4 iterations 127
Cbc0038I Pass  45: suminf.    4.69951 (18) obj. 4 iterations 96
Cbc0038I Pass  46: suminf.    3.01488 (14) obj. 4 iterations 119
Cbc0038I Pass  47: suminf.    2.61905 (15) obj. 4 iterations 20
Cbc0038I Pass  48: suminf.    2.50000 (15) obj. 4 iterations 34
Cbc0038I Pass  49: suminf.    4.92460 (17) obj. 4 iterations 97
Cbc0038I Pass  50: suminf.    3.41667 (16) obj. 4 iterations 87
Cbc0038I Pass  51: suminf.    3.20145 (17) obj. 4 iterations 36
Cbc0038I Pass  52: suminf.    4.73413 (18) obj. 4 iterations 78
Cbc0038I Pass  53: suminf.    2.70238 (16) obj. 4 iterations 111
Cbc0038I Pass  54: suminf.    2.49674 (16) obj. 4 iterations 36
Cbc0038I Pass  55: suminf.    4.59575 (19) obj. 4 iterations 101
Cbc0038I Pass  56: suminf.    3.53788 (18) obj. 4 iterations 75
Cbc0038I Pass  57: suminf.    3.04067 (18) obj. 4 iterations 69
Cbc0038I Pass  58: suminf.    5.70964 (20) obj. 4 iterations 94
Cbc0038I Pass  59: suminf.    4.03265 (21) obj. 4 iterations 115
Cbc0038I Pass  60: suminf.    7.02242 (31) obj. 4 iterations 113
Cbc0038I Pass  61: suminf.    4.49690 (21) obj. 4 iterations 121
Cbc0038I Pass  62: suminf.    3.85219 (18) obj. 4 iterations 106
Cbc0038I Pass  63: suminf.    3.58209 (17) obj. 4 iterations 36
Cbc0038I Pass  64: suminf.    4.91513 (23) obj. 4 iterations 73
Cbc0038I Pass  65: suminf.    3.92804 (23) obj. 4 iterations 77
Cbc0038I Pass  66: suminf.    3.27372 (19) obj. 4 iterations 45
Cbc0038I Pass  67: suminf.    5.46632 (21) obj. 4 iterations 133
Cbc0038I Pass  68: suminf.    4.29882 (18) obj. 4 iterations 67
Cbc0038I Pass  69: suminf.    4.54371 (21) obj. 4 iterations 112
Cbc0038I Pass  70: suminf.    3.25893 (16) obj. 4 iterations 77
Cbc0038I Pass  71: suminf.    5.55385 (20) obj. 4 iterations 77
Cbc0038I Pass  72: suminf.    3.76531 (19) obj. 4 iterations 136
Cbc0038I Pass  73: suminf.    5.77181 (23) obj. 4 iterations 137
Cbc0038I Pass  74: suminf.    5.03978 (20) obj. 4 iterations 81
Cbc0038I Pass  75: suminf.    2.90267 (16) obj. 4 iterations 51
Cbc0038I Pass  76: suminf.    2.82179 (19) obj. 4 iterations 29
Cbc0038I Pass  77: suminf.    6.26132 (26) obj. 4 iterations 117
Cbc0038I Pass  78: suminf.    4.55730 (24) obj. 4 iterations 76
Cbc0038I Pass  79: suminf.    6.03580 (27) obj. 4 iterations 125
Cbc0038I Pass  80: suminf.    4.79658 (28) obj. 4 iterations 78
Cbc0038I Pass  81: suminf.    6.36691 (25) obj. 4 iterations 150
Cbc0038I Pass  82: suminf.    4.16683 (23) obj. 4 iterations 124
Cbc0038I Pass  83: suminf.    5.70263 (20) obj. 4 iterations 74
Cbc0038I Pass  84: suminf.    4.07772 (25) obj. 4 iterations 77
Cbc0038I Pass  85: suminf.    3.57213 (27) obj. 4 iterations 29
Cbc0038I Pass  86: suminf.    5.03385 (20) obj. 4 iterations 83
Cbc0038I Pass  87: suminf.    3.45277 (25) obj. 4 iterations 75
Cbc0038I Pass  88: suminf.    5.84933 (26) obj. 4 iterations 85
Cbc0038I Pass  89: suminf.    3.86078 (18) obj. 4 iterations 96
Cbc0038I Pass  90: suminf.    3.79412 (16) obj. 4 iterations 15
Cbc0038I Pass  91: suminf.    4.47299 (25) obj. 4 iterations 83
Cbc0038I Pass  92: suminf.    3.57213 (27) obj. 4 iterations 72
Cbc0038I Pass  93: suminf.    5.22562 (24) obj. 4 iterations 108
Cbc0038I Pass  94: suminf.    3.45277 (25) obj. 4 iterations 98
Cbc0038I Pass  95: suminf.    4.74938 (18) obj. 4 iterations 122
Cbc0038I Pass  96: suminf.    3.67606 (21) obj. 4 iterations 43
Cbc0038I Pass  97: suminf.   14.00073 (58) obj. 4 iterations 159
Cbc0038I Pass  98: suminf.    6.31566 (28) obj. 4 iterations 144
Cbc0038I Pass  99: suminf.    5.30335 (30) obj. 4 iterations 49
Cbc0038I Pass 100: suminf.   11.09912 (52) obj. 4 iterations 149
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 464 integers at bound fixed and 0 continuous
Cbc0038I Full problem 312 rows 752 columns, reduced to 210 rows 252 columns
Cbc0038I Mini branch and bound did not improve solution (8.51 seconds)
Cbc0038I After 8.51 seconds - Feasibility pump exiting - took 4.82 seconds
Cbc0031I 76 added rows had average density of 52.710526
Cbc0013I At root node, 76 cuts changed objective from 1.686784 to 1.9998967 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 190 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.431 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 159 row cuts average 742.3 elements, 0 column cuts (0 active)  in 1.082 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 113 row cuts average 13.8 elements, 0 column cuts (0 active)  in 21.466 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 166 row cuts average 43.3 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 66 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 106 row cuts average 52.2 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1.9998967 (36.15 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1.9998967 (69.47 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1.9998967 (74.79 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1.9998967 (80.62 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1.9998967 (86.40 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1.9998967 (92.43 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1.9998967 (95.35 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1.9998967 (96.57 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (99.25 seconds)
Cbc0010I After 10 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (101.81 seconds)
Cbc0010I After 11 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (104.02 seconds)
Cbc0010I After 13 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (106.27 seconds)
Cbc0010I After 14 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (108.52 seconds)
Cbc0010I After 16 nodes, 8 on tree, 1e+50 best solution, best possible 1.9998967 (111.31 seconds)
Cbc0010I After 17 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (113.37 seconds)
Cbc0010I After 18 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (115.59 seconds)
Cbc0010I After 20 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (118.40 seconds)
Cbc0010I After 21 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (122.83 seconds)
Cbc0010I After 22 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (126.19 seconds)
Cbc0010I After 24 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (129.59 seconds)
Cbc0010I After 26 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (131.51 seconds)
Cbc0010I After 27 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (134.53 seconds)
Cbc0010I After 28 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (136.94 seconds)
Cbc0010I After 29 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (139.12 seconds)
Cbc0010I After 31 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (142.37 seconds)
Cbc0010I After 32 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (144.39 seconds)
Cbc0010I After 35 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (147.58 seconds)
Cbc0010I After 36 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (149.23 seconds)
Cbc0010I After 38 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (151.23 seconds)
Cbc0010I After 39 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (153.69 seconds)
Cbc0010I After 40 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (156.07 seconds)
Cbc0010I After 42 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (157.77 seconds)
Cbc0010I After 43 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (160.01 seconds)
Cbc0010I After 46 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (163.57 seconds)
Cbc0010I After 49 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (167.06 seconds)
Cbc0010I After 51 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (168.76 seconds)
Cbc0010I After 52 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (170.83 seconds)
Cbc0010I After 56 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (173.93 seconds)
Cbc0010I After 57 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (176.42 seconds)
Cbc0010I After 58 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (180.78 seconds)
Cbc0010I After 61 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (183.24 seconds)
Cbc0010I After 62 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (186.21 seconds)
Cbc0010I After 63 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (188.96 seconds)
Cbc0010I After 67 nodes, 8 on tree, 1e+50 best solution, best possible 1.9998967 (191.10 seconds)
Cbc0010I After 69 nodes, 8 on tree, 1e+50 best solution, best possible 1.9998967 (193.79 seconds)
Cbc0010I After 70 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (195.80 seconds)
Cbc0010I After 77 nodes, 4 on tree, 1e+50 best solution, best possible 1.9998967 (201.97 seconds)
Cbc0010I After 78 nodes, 4 on tree, 1e+50 best solution, best possible 1.9998967 (204.97 seconds)
Cbc0010I After 80 nodes, 3 on tree, 1e+50 best solution, best possible 1.9998967 (211.47 seconds)
Cbc0010I After 81 nodes, 4 on tree, 1e+50 best solution, best possible 1.9998967 (218.84 seconds)
Cbc0010I After 82 nodes, 4 on tree, 1e+50 best solution, best possible 1.9998967 (220.17 seconds)
Cbc0010I After 85 nodes, 2 on tree, 1e+50 best solution, best possible 1.9998967 (225.87 seconds)
Cbc0010I After 86 nodes, 3 on tree, 1e+50 best solution, best possible 1.9998967 (233.05 seconds)
Cbc0010I After 87 nodes, 4 on tree, 1e+50 best solution, best possible 1.9998967 (238.61 seconds)
Cbc0010I After 88 nodes, 5 on tree, 1e+50 best solution, best possible 1.9998967 (242.42 seconds)
Cbc0010I After 89 nodes, 6 on tree, 1e+50 best solution, best possible 1.9998967 (244.62 seconds)
Cbc0010I After 90 nodes, 7 on tree, 1e+50 best solution, best possible 1.9998967 (246.49 seconds)
Cbc0010I After 91 nodes, 8 on tree, 1e+50 best solution, best possible 1.9998967 (249.39 seconds)
Cbc0010I After 92 nodes, 9 on tree, 1e+50 best solution, best possible 1.9998967 (250.53 seconds)
Cbc0010I After 93 nodes, 10 on tree, 1e+50 best solution, best possible 1.9998967 (251.82 seconds)
Cbc0010I After 95 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (253.43 seconds)
Cbc0010I After 96 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (255.78 seconds)
Cbc0010I After 97 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (258.39 seconds)
Cbc0010I After 99 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (260.88 seconds)
Cbc0010I After 104 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (261.67 seconds)
Cbc0010I After 108 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (263.41 seconds)
Cbc0010I After 109 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (265.41 seconds)
Cbc0010I After 111 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (267.07 seconds)
Cbc0010I After 112 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (268.06 seconds)
Cbc0010I After 113 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (269.12 seconds)
Cbc0010I After 117 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (271.84 seconds)
Cbc0010I After 118 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (272.87 seconds)
Cbc0010I After 120 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (273.75 seconds)
Cbc0010I After 123 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (274.50 seconds)
Cbc0010I After 126 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (276.50 seconds)
Cbc0010I After 127 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (279.00 seconds)
Cbc0010I After 128 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (280.31 seconds)
Cbc0010I After 129 nodes, 14 on tree, 1e+50 best solution, best possible 1.9998967 (281.75 seconds)
Cbc0010I After 130 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (282.52 seconds)
Cbc0010I After 134 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (285.32 seconds)
Cbc0010I After 135 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (286.26 seconds)
Cbc0010I After 136 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (287.65 seconds)
Cbc0010I After 139 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (290.53 seconds)
Cbc0010I After 140 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (292.28 seconds)
Cbc0010I After 143 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (293.98 seconds)
Cbc0010I After 144 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (296.22 seconds)
Cbc0010I After 145 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (297.70 seconds)
Cbc0010I After 146 nodes, 14 on tree, 1e+50 best solution, best possible 1.9998967 (299.64 seconds)
Cbc0010I After 149 nodes, 15 on tree, 1e+50 best solution, best possible 1.9998967 (300.43 seconds)
Cbc0010I After 157 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (302.70 seconds)
Cbc0010I After 159 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (304.13 seconds)
Cbc0010I After 161 nodes, 14 on tree, 1e+50 best solution, best possible 1.9998967 (305.56 seconds)
Cbc0010I After 164 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (306.43 seconds)
Cbc0010I After 166 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (307.63 seconds)
Cbc0010I After 167 nodes, 14 on tree, 1e+50 best solution, best possible 1.9998967 (308.74 seconds)
Cbc0010I After 169 nodes, 14 on tree, 1e+50 best solution, best possible 1.9998967 (310.02 seconds)
Cbc0010I After 171 nodes, 14 on tree, 1e+50 best solution, best possible 1.9998967 (310.86 seconds)
Cbc0010I After 177 nodes, 11 on tree, 1e+50 best solution, best possible 1.9998967 (313.55 seconds)
Cbc0010I After 178 nodes, 12 on tree, 1e+50 best solution, best possible 1.9998967 (314.82 seconds)
Cbc0010I After 181 nodes, 13 on tree, 1e+50 best solution, best possible 1.9998967 (315.62 seconds)
Cbc0010I After 182 nodes, 14 on tree, 1e+50 best solution, best possible 1.9998967 (317.26 seconds)
Cbc0010I After 187 nodes, 16 on tree, 1e+50 best solution, best possible 1.9998967 (318.10 seconds)
Cbc0004I Integer solution of 4 found after 41644 iterations and 191 nodes (318.39 seconds)
Cbc0001I Search completed - best objective 4, took 41644 iterations and 192 nodes (318.39 seconds)
Cbc0032I Strong branching done 1330 times (48430 iterations), fathomed 0 nodes and fixed 21 variables
Cbc0035I Maximum depth 28, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.68678 to 1.9999
Probing was tried 153 times and created 1223 cuts of which 0 were active after adding rounds of cuts (1.3286 seconds)
Gomory was tried 10 times and created 159 cuts of which 0 were active after adding rounds of cuts (1.08185 seconds)
liftKnapsack was tried 152 times and created 2447 cuts of which 0 were active after adding rounds of cuts (269.024 seconds)
Clique was tried 10 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.025345 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.103703 seconds)
MixedIntegerRounding2 was tried 152 times and created 933 cuts of which 0 were active after adding rounds of cuts (0.733738 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003299 seconds)
TwoMirCuts was tried 152 times and created 431 cuts of which 0 were active after adding rounds of cuts (0.598662 seconds)
ZeroHalf was tried 152 times and created 1146 cuts of which 0 were active after adding rounds of cuts (1.64844 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               192
Total iterations:               41644
Time (CPU seconds):             305.648
Time (Wallclock seconds):       318.448
Total time (CPU seconds):       305.67   (Wallclock seconds):       318.471
