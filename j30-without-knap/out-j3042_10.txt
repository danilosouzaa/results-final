Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3042/j3042_10.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3042_10.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.329412 - 0.069361 seconds
Cgl0002I 14 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 273 rows, 483 columns (483 integer (481 of which binary)) and 5478 elements
Coin3009W Conflict graph built in 0.010 seconds, density: 1.393%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 483 objects (483 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 62 integers unsatisfied sum - 18.0811
Cbc0038I Pass   1: suminf.    9.87413 (43) obj. 0.688218 iterations 63
Cbc0038I Pass   2: suminf.    5.33001 (26) obj. 1 iterations 35
Cbc0038I Pass   3: suminf.    5.85003 (27) obj. 1 iterations 21
Cbc0038I Pass   4: suminf.    5.00000 (28) obj. 1 iterations 16
Cbc0038I Pass   5: suminf.    3.96875 (23) obj. 1 iterations 21
Cbc0038I Pass   6: suminf.    3.64792 (24) obj. 1 iterations 16
Cbc0038I Pass   7: suminf.    6.08571 (20) obj. 1 iterations 26
Cbc0038I Pass   8: suminf.    5.69683 (21) obj. 1 iterations 19
Cbc0038I Pass   9: suminf.    3.75744 (23) obj. 1 iterations 37
Cbc0038I Pass  10: suminf.    3.63023 (22) obj. 1 iterations 18
Cbc0038I Pass  11: suminf.    5.71004 (25) obj. 1 iterations 49
Cbc0038I Pass  12: suminf.    5.31266 (26) obj. 1 iterations 25
Cbc0038I Pass  13: suminf.    5.38869 (26) obj. 1 iterations 21
Cbc0038I Pass  14: suminf.    5.10647 (25) obj. 1 iterations 21
Cbc0038I Pass  15: suminf.    6.43387 (23) obj. 1 iterations 47
Cbc0038I Pass  16: suminf.    5.35364 (25) obj. 1 iterations 26
Cbc0038I Pass  17: suminf.    6.26413 (25) obj. 1 iterations 39
Cbc0038I Pass  18: suminf.    4.04355 (24) obj. 1 iterations 51
Cbc0038I Pass  19: suminf.    5.65909 (17) obj. 1 iterations 31
Cbc0038I Pass  20: suminf.    5.14242 (17) obj. 1 iterations 22
Cbc0038I Pass  21: suminf.    5.07778 (17) obj. 1 iterations 41
Cbc0038I Pass  22: suminf.    4.55556 (18) obj. 1 iterations 20
Cbc0038I Pass  23: suminf.    4.45000 (18) obj. 1 iterations 18
Cbc0038I Pass  24: suminf.    3.73333 (15) obj. 1 iterations 24
Cbc0038I Pass  25: suminf.    4.56667 (18) obj. 1 iterations 20
Cbc0038I Pass  26: suminf.   12.46152 (31) obj. 1 iterations 54
Cbc0038I Pass  27: suminf.    6.70000 (19) obj. 1 iterations 62
Cbc0038I Pass  28: suminf.    6.31111 (19) obj. 1 iterations 12
Cbc0038I Pass  29: suminf.    5.19583 (16) obj. 1 iterations 40
Cbc0038I Pass  30: suminf.    4.42500 (16) obj. 1 iterations 14
Cbc0038I Pass  31: suminf.    5.39524 (17) obj. 1 iterations 32
Cbc0038I Pass  32: suminf.    3.57143 (14) obj. 1 iterations 26
Cbc0038I Pass  33: suminf.    4.33333 (11) obj. 1 iterations 33
Cbc0038I Pass  34: suminf.    2.44444 (10) obj. 1 iterations 28
Cbc0038I Pass  35: suminf.    2.44444 (10) obj. 1 iterations 3
Cbc0038I Pass  36: suminf.    4.33333 (11) obj. 1 iterations 21
Cbc0038I Pass  37: suminf.    7.78124 (34) obj. 1 iterations 71
Cbc0038I Pass  38: suminf.    4.98599 (26) obj. 1 iterations 50
Cbc0038I Pass  39: suminf.    4.98410 (22) obj. 1 iterations 2
Cbc0038I Pass  40: suminf.    7.97143 (29) obj. 1 iterations 37
Cbc0038I Pass  41: suminf.    5.12698 (25) obj. 1 iterations 40
Cbc0038I Pass  42: suminf.    6.09332 (29) obj. 1 iterations 32
Cbc0038I Pass  43: suminf.    5.43071 (29) obj. 1 iterations 15
Cbc0038I Pass  44: suminf.    5.16888 (24) obj. 1 iterations 5
Cbc0038I Pass  45: suminf.    5.16888 (24) obj. 1 iterations 2
Cbc0038I Pass  46: suminf.    7.05896 (24) obj. 1 iterations 59
Cbc0038I Pass  47: suminf.    4.67937 (24) obj. 1 iterations 30
Cbc0038I Pass  48: suminf.    4.56667 (22) obj. 1 iterations 11
Cbc0038I Pass  49: suminf.    5.54495 (21) obj. 1 iterations 40
Cbc0038I Pass  50: suminf.    5.40890 (26) obj. 1 iterations 20
Cbc0038I Pass  51: suminf.    6.23889 (24) obj. 1 iterations 48
Cbc0038I Pass  52: suminf.    6.07222 (23) obj. 1 iterations 21
Cbc0038I Pass  53: suminf.    5.75000 (18) obj. 1 iterations 33
Cbc0038I Pass  54: suminf.    5.55556 (19) obj. 1 iterations 9
Cbc0038I Pass  55: suminf.    5.22222 (19) obj. 1 iterations 9
Cbc0038I Pass  56: suminf.    5.53333 (17) obj. 1 iterations 50
Cbc0038I Pass  57: suminf.    4.97639 (17) obj. 1 iterations 24
Cbc0038I Pass  58: suminf.    5.60317 (21) obj. 1 iterations 43
Cbc0038I Pass  59: suminf.    4.55556 (16) obj. 1 iterations 26
Cbc0038I Pass  60: suminf.    5.75000 (16) obj. 1 iterations 47
Cbc0038I Pass  61: suminf.    5.30556 (16) obj. 1 iterations 27
Cbc0038I Pass  62: suminf.    5.60317 (21) obj. 1 iterations 42
Cbc0038I Pass  63: suminf.    7.42653 (27) obj. 1 iterations 62
Cbc0038I Pass  64: suminf.    5.85129 (23) obj. 1 iterations 55
Cbc0038I Pass  65: suminf.    5.85129 (23) obj. 1 iterations 7
Cbc0038I Pass  66: suminf.    6.07698 (21) obj. 1 iterations 61
Cbc0038I Pass  67: suminf.    4.60079 (20) obj. 1 iterations 20
Cbc0038I Pass  68: suminf.    4.60079 (20) obj. 1 iterations 3
Cbc0038I Pass  69: suminf.    7.22222 (24) obj. 1 iterations 48
Cbc0038I Pass  70: suminf.    5.29259 (22) obj. 1 iterations 32
Cbc0038I Pass  71: suminf.    5.07778 (18) obj. 1 iterations 6
Cbc0038I Pass  72: suminf.    3.80556 (14) obj. 1 iterations 46
Cbc0038I Pass  73: suminf.    3.47222 (14) obj. 1 iterations 12
Cbc0038I Pass  74: suminf.    5.38889 (15) obj. 1 iterations 44
Cbc0038I Pass  75: suminf.    4.38889 (14) obj. 1 iterations 38
Cbc0038I Pass  76: suminf.    4.05556 (14) obj. 1 iterations 6
Cbc0038I Pass  77: suminf.    4.38889 (15) obj. 1 iterations 46
Cbc0038I Pass  78: suminf.    3.38889 (14) obj. 1 iterations 33
Cbc0038I Pass  79: suminf.    3.05556 (14) obj. 1 iterations 6
Cbc0038I Pass  80: suminf.    5.38889 (15) obj. 1 iterations 50
Cbc0038I Pass  81: suminf.    4.38889 (14) obj. 1 iterations 36
Cbc0038I Pass  82: suminf.    4.05556 (14) obj. 1 iterations 4
Cbc0038I Pass  83: suminf.    4.38889 (15) obj. 1 iterations 42
Cbc0038I Pass  84: suminf.    3.38889 (14) obj. 1 iterations 34
Cbc0038I Pass  85: suminf.    3.05556 (14) obj. 1 iterations 4
Cbc0038I Pass  86: suminf.    5.38889 (15) obj. 1 iterations 45
Cbc0038I Pass  87: suminf.    4.38889 (14) obj. 1 iterations 37
Cbc0038I Pass  88: suminf.    4.05556 (14) obj. 1 iterations 6
Cbc0038I Pass  89: suminf.    3.80556 (14) obj. 1 iterations 17
Cbc0038I Pass  90: suminf.    3.47222 (14) obj. 1 iterations 13
Cbc0038I Pass  91: suminf.    5.38889 (15) obj. 1 iterations 42
Cbc0038I Pass  92: suminf.    4.38889 (14) obj. 1 iterations 35
Cbc0038I Pass  93: suminf.    4.05556 (14) obj. 1 iterations 4
Cbc0038I Pass  94: suminf.    4.38889 (15) obj. 1 iterations 41
Cbc0038I Pass  95: suminf.    3.38889 (14) obj. 1 iterations 31
Cbc0038I Pass  96: suminf.    3.05556 (14) obj. 1 iterations 4
Cbc0038I Pass  97: suminf.    5.38889 (15) obj. 1 iterations 48
Cbc0038I Pass  98: suminf.    4.38889 (14) obj. 1 iterations 37
Cbc0038I Pass  99: suminf.    4.05556 (14) obj. 1 iterations 4
Cbc0038I Pass 100: suminf.    8.45010 (30) obj. 1 iterations 74
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 307 integers at bound fixed and 0 continuous
Cbc0038I Full problem 273 rows 483 columns, reduced to 164 rows 151 columns
Cbc0038I Mini branch and bound did not improve solution (2.98 seconds)
Cbc0038I Full problem 274 rows 483 columns, reduced to 273 rows 483 columns - too large
Cbc0038I After 3.03 seconds - Feasibility pump exiting - took 2.17 seconds
Cbc0031I 61 added rows had average density of 70
Cbc0013I At root node, 61 cuts changed objective from 0.32941176 to 1 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 971 row cuts average 9.3 elements, 7 column cuts (7 active)  in 3.264 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2351 row cuts average 460.7 elements, 0 column cuts (0 active)  in 4.672 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 716 row cuts average 11.5 elements, 0 column cuts (0 active)  in 93.640 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.397 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 191 row cuts average 43.7 elements, 0 column cuts (0 active)  in 0.298 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 361 row cuts average 171.6 elements, 0 column cuts (0 active)  in 0.527 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 312 row cuts average 52.7 elements, 0 column cuts (0 active)  in 0.626 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (115.00 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (120.48 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (126.52 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (131.21 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (134.74 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (138.71 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (139.93 seconds)
Cbc0010I After 10 nodes, 7 on tree, 1e+50 best solution, best possible 1 (140.90 seconds)
Cbc0010I After 16 nodes, 9 on tree, 1e+50 best solution, best possible 1 (141.73 seconds)
Cbc0010I After 25 nodes, 5 on tree, 1e+50 best solution, best possible 1 (142.52 seconds)
Cbc0010I After 27 nodes, 4 on tree, 1e+50 best solution, best possible 1 (144.39 seconds)
Cbc0010I After 28 nodes, 5 on tree, 1e+50 best solution, best possible 1 (147.68 seconds)
Cbc0010I After 30 nodes, 7 on tree, 1e+50 best solution, best possible 1 (148.63 seconds)
Cbc0010I After 38 nodes, 7 on tree, 1e+50 best solution, best possible 1 (149.55 seconds)
Cbc0010I After 42 nodes, 9 on tree, 1e+50 best solution, best possible 1 (150.35 seconds)
Cbc0010I After 50 nodes, 12 on tree, 1e+50 best solution, best possible 1 (151.08 seconds)
Cbc0010I After 66 nodes, 7 on tree, 1e+50 best solution, best possible 1 (151.91 seconds)
Cbc0010I After 70 nodes, 8 on tree, 1e+50 best solution, best possible 1 (152.72 seconds)
Cbc0010I After 76 nodes, 11 on tree, 1e+50 best solution, best possible 1 (153.54 seconds)
Cbc0010I After 81 nodes, 12 on tree, 1e+50 best solution, best possible 1 (154.36 seconds)
Cbc0010I After 92 nodes, 10 on tree, 1e+50 best solution, best possible 1 (155.20 seconds)
Cbc0010I After 97 nodes, 12 on tree, 1e+50 best solution, best possible 1 (155.92 seconds)
Cbc0004I Integer solution of 1 found after 13412 iterations and 102 nodes (156.09 seconds)
Cbc0001I Search completed - best objective 1, took 13412 iterations and 102 nodes (156.09 seconds)
Cbc0032I Strong branching done 1158 times (26299 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 18, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.329412 to 1
Probing was tried 186 times and created 1619 cuts of which 0 were active after adding rounds of cuts (3.5391 seconds)
Gomory was tried 185 times and created 2358 cuts of which 0 were active after adding rounds of cuts (4.85457 seconds)
liftKnapsack was tried 185 times and created 1291 cuts of which 0 were active after adding rounds of cuts (128.655 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.082055 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.396882 seconds)
MixedIntegerRounding2 was tried 185 times and created 317 cuts of which 0 were active after adding rounds of cuts (0.487106 seconds)
FlowCover was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.175 seconds)
TwoMirCuts was tried 185 times and created 460 cuts of which 0 were active after adding rounds of cuts (0.706563 seconds)
ZeroHalf was tried 185 times and created 499 cuts of which 0 were active after adding rounds of cuts (0.986148 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               102
Total iterations:               13412
Time (CPU seconds):             155.89
Time (Wallclock seconds):       156.241
Total time (CPU seconds):       155.899   (Wallclock seconds):       156.252
