Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3016/j3016_9.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3016_9.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.070221 seconds
Cgl0002I 26 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 182 rows, 381 columns (381 integer (381 of which binary)) and 5309 elements
Coin3009W Conflict graph built in 0.008 seconds, density: 1.584%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 381 objects (381 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.02547
Cbc0038I Pass   1: suminf.    4.45806 (20) obj. 0 iterations 42
Cbc0038I Pass   2: suminf.    3.15006 (17) obj. 0 iterations 3
Cbc0038I Pass   3: suminf.    3.12164 (16) obj. 0 iterations 5
Cbc0038I Pass   4: suminf.    3.55787 (14) obj. 0 iterations 47
Cbc0038I Pass   5: suminf.    3.42593 (13) obj. 0 iterations 6
Cbc0038I Pass   6: suminf.    3.51389 (11) obj. 0 iterations 34
Cbc0038I Pass   7: suminf.    2.58889 (10) obj. 0 iterations 26
Cbc0038I Pass   8: suminf.    2.43056 (8) obj. 0 iterations 20
Cbc0038I Pass   9: suminf.    1.62735 (9) obj. 0 iterations 25
Cbc0038I Pass  10: suminf.    1.35043 (8) obj. 0 iterations 7
Cbc0038I Pass  11: suminf.    2.10764 (8) obj. 0 iterations 24
Cbc0038I Pass  12: suminf.    5.39674 (23) obj. 0 iterations 58
Cbc0038I Pass  13: suminf.    4.34444 (17) obj. 0 iterations 41
Cbc0038I Pass  14: suminf.    2.74603 (6) obj. 0 iterations 49
Cbc0038I Pass  15: suminf.    0.44444 (2) obj. 0 iterations 19
Cbc0038I Pass  16: suminf.    0.44444 (2) obj. 0 iterations 0
Cbc0038I Pass  17: suminf.    0.88889 (2) obj. 0 iterations 4
Cbc0038I Pass  18: suminf.    4.53061 (14) obj. 0 iterations 70
Cbc0038I Pass  19: suminf.    3.20610 (14) obj. 0 iterations 38
Cbc0038I Pass  20: suminf.    4.76077 (21) obj. 0 iterations 59
Cbc0038I Pass  21: suminf.    4.76077 (21) obj. 0 iterations 0
Cbc0038I Pass  22: suminf.    5.98525 (19) obj. 0 iterations 47
Cbc0038I Pass  23: suminf.    4.15909 (13) obj. 0 iterations 21
Cbc0038I Pass  24: suminf.    4.15909 (13) obj. 0 iterations 0
Cbc0038I Pass  25: suminf.    3.66919 (11) obj. 0 iterations 38
Cbc0038I Pass  26: suminf.    2.55808 (11) obj. 0 iterations 19
Cbc0038I Pass  27: suminf.    2.24260 (12) obj. 0 iterations 8
Cbc0038I Pass  28: suminf.    3.31650 (10) obj. 0 iterations 41
Cbc0038I Pass  29: suminf.    3.22126 (10) obj. 0 iterations 6
Cbc0038I Pass  30: suminf.    2.77951 (10) obj. 0 iterations 26
Cbc0038I Pass  31: suminf.    2.10094 (10) obj. 0 iterations 14
Cbc0038I Pass  32: suminf.    1.83308 (9) obj. 0 iterations 15
Cbc0038I Pass  33: suminf.    3.58399 (10) obj. 0 iterations 27
Cbc0038I Pass  34: suminf.    3.48875 (10) obj. 0 iterations 5
Cbc0038I Pass  35: suminf.    2.77951 (10) obj. 0 iterations 23
Cbc0038I Pass  36: suminf.    2.10094 (10) obj. 0 iterations 12
Cbc0038I Pass  37: suminf.    1.83308 (9) obj. 0 iterations 15
Cbc0038I Pass  38: suminf.    3.58399 (10) obj. 0 iterations 24
Cbc0038I Pass  39: suminf.    3.48875 (10) obj. 0 iterations 5
Cbc0038I Pass  40: suminf.    2.77951 (10) obj. 0 iterations 23
Cbc0038I Pass  41: suminf.    2.10094 (10) obj. 0 iterations 12
Cbc0038I Pass  42: suminf.    1.83308 (9) obj. 0 iterations 13
Cbc0038I Pass  43: suminf.    3.58399 (10) obj. 0 iterations 28
Cbc0038I Pass  44: suminf.    3.48875 (10) obj. 0 iterations 2
Cbc0038I Pass  45: suminf.    2.77951 (10) obj. 0 iterations 23
Cbc0038I Pass  46: suminf.    2.10094 (10) obj. 0 iterations 11
Cbc0038I Pass  47: suminf.    1.83308 (9) obj. 0 iterations 15
Cbc0038I Pass  48: suminf.    3.58399 (10) obj. 0 iterations 26
Cbc0038I Pass  49: suminf.    3.48875 (10) obj. 0 iterations 8
Cbc0038I Pass  50: suminf.    2.77951 (10) obj. 0 iterations 27
Cbc0038I Pass  51: suminf.    2.10094 (10) obj. 0 iterations 13
Cbc0038I Pass  52: suminf.    1.83308 (9) obj. 0 iterations 14
Cbc0038I Pass  53: suminf.    3.58399 (10) obj. 0 iterations 25
Cbc0038I Pass  54: suminf.    3.48875 (10) obj. 0 iterations 5
Cbc0038I Pass  55: suminf.    2.77951 (10) obj. 0 iterations 23
Cbc0038I Pass  56: suminf.    2.10094 (10) obj. 0 iterations 12
Cbc0038I Pass  57: suminf.    1.83308 (9) obj. 0 iterations 13
Cbc0038I Pass  58: suminf.    3.58399 (10) obj. 0 iterations 26
Cbc0038I Pass  59: suminf.    3.48875 (10) obj. 0 iterations 5
Cbc0038I Pass  60: suminf.    2.77951 (10) obj. 0 iterations 23
Cbc0038I Pass  61: suminf.    2.10094 (10) obj. 0 iterations 13
Cbc0038I Pass  62: suminf.    1.83308 (9) obj. 0 iterations 12
Cbc0038I Pass  63: suminf.    3.58399 (10) obj. 0 iterations 26
Cbc0038I Pass  64: suminf.    3.48875 (10) obj. 0 iterations 5
Cbc0038I Pass  65: suminf.    2.77951 (10) obj. 0 iterations 21
Cbc0038I Pass  66: suminf.    2.10094 (10) obj. 0 iterations 12
Cbc0038I Pass  67: suminf.    1.83308 (9) obj. 0 iterations 15
Cbc0038I Pass  68: suminf.    3.58399 (10) obj. 0 iterations 26
Cbc0038I Pass  69: suminf.    3.48875 (10) obj. 0 iterations 7
Cbc0038I Pass  70: suminf.    2.77951 (10) obj. 0 iterations 26
Cbc0038I Pass  71: suminf.    2.10094 (10) obj. 0 iterations 14
Cbc0038I Pass  72: suminf.    1.83308 (9) obj. 0 iterations 14
Cbc0038I Pass  73: suminf.    3.58399 (10) obj. 0 iterations 27
Cbc0038I Pass  74: suminf.    3.48875 (10) obj. 0 iterations 5
Cbc0038I Pass  75: suminf.    2.77951 (10) obj. 0 iterations 24
Cbc0038I Pass  76: suminf.    2.10094 (10) obj. 0 iterations 14
Cbc0038I Pass  77: suminf.    1.83308 (9) obj. 0 iterations 16
Cbc0038I Pass  78: suminf.    3.58399 (10) obj. 0 iterations 27
Cbc0038I Pass  79: suminf.    3.48875 (10) obj. 0 iterations 6
Cbc0038I Pass  80: suminf.    2.77951 (10) obj. 0 iterations 29
Cbc0038I Pass  81: suminf.    2.10094 (10) obj. 0 iterations 14
Cbc0038I Pass  82: suminf.    1.83308 (9) obj. 0 iterations 11
Cbc0038I Pass  83: suminf.    3.58399 (10) obj. 0 iterations 25
Cbc0038I Pass  84: suminf.    3.48875 (10) obj. 0 iterations 7
Cbc0038I Pass  85: suminf.    2.77951 (10) obj. 0 iterations 25
Cbc0038I Pass  86: suminf.    2.10094 (10) obj. 0 iterations 13
Cbc0038I Pass  87: suminf.    1.83308 (9) obj. 0 iterations 12
Cbc0038I Pass  88: suminf.    3.58399 (10) obj. 0 iterations 23
Cbc0038I Pass  89: suminf.    3.48875 (10) obj. 0 iterations 2
Cbc0038I Pass  90: suminf.    2.77951 (10) obj. 0 iterations 23
Cbc0038I Pass  91: suminf.    2.10094 (10) obj. 0 iterations 14
Cbc0038I Pass  92: suminf.    1.83308 (9) obj. 0 iterations 12
Cbc0038I Pass  93: suminf.    3.58399 (10) obj. 0 iterations 24
Cbc0038I Pass  94: suminf.    3.48875 (10) obj. 0 iterations 2
Cbc0038I Pass  95: suminf.    2.77951 (10) obj. 0 iterations 25
Cbc0038I Pass  96: suminf.    2.10094 (10) obj. 0 iterations 14
Cbc0038I Pass  97: suminf.    1.83308 (9) obj. 0 iterations 12
Cbc0038I Pass  98: suminf.    3.58399 (10) obj. 0 iterations 26
Cbc0038I Pass  99: suminf.    3.48875 (10) obj. 0 iterations 5
Cbc0038I Pass 100: suminf.    5.07971 (21) obj. 0 iterations 55
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 182 rows 381 columns, reduced to 133 rows 111 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.30 seconds)
Cbc0038I Full problem 183 rows 381 columns, reduced to 182 rows 381 columns - too large
Cbc0038I After 1.34 seconds - Feasibility pump exiting - took 0.70 seconds
Cbc0031I 52 added rows had average density of 84.692308
Cbc0013I At root node, 52 cuts changed objective from 0 to 0 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 529 row cuts average 8.6 elements, 0 column cuts (0 active)  in 2.763 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2100 row cuts average 367.2 elements, 0 column cuts (0 active)  in 1.881 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 535 row cuts average 16.4 elements, 0 column cuts (0 active)  in 70.177 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 232 row cuts average 48.4 elements, 0 column cuts (0 active)  in 0.452 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 204.3 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 220 row cuts average 50.1 elements, 0 column cuts (0 active)  in 0.257 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (81.37 seconds)
Cbc0010I After 16 nodes, 15 on tree, 1e+50 best solution, best possible 0 (82.08 seconds)
Cbc0016I Integer solution of 0 found by strong branching after 4653 iterations and 39 nodes (82.47 seconds)
Cbc0001I Search completed - best objective 0, took 4653 iterations and 39 nodes (82.47 seconds)
Cbc0032I Strong branching done 750 times (10067 iterations), fathomed 1 nodes and fixed 20 variables
Cbc0035I Maximum depth 24, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 100 times and created 529 cuts of which 0 were active after adding rounds of cuts (2.76287 seconds)
Gomory was tried 100 times and created 2100 cuts of which 0 were active after adding rounds of cuts (1.88054 seconds)
liftKnapsack was tried 100 times and created 535 cuts of which 0 were active after adding rounds of cuts (70.1775 seconds)
Clique was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.025721 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.106384 seconds)
MixedIntegerRounding2 was tried 100 times and created 232 cuts of which 0 were active after adding rounds of cuts (0.452299 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019236 seconds)
TwoMirCuts was tried 100 times and created 239 cuts of which 0 were active after adding rounds of cuts (0.261656 seconds)
ZeroHalf was tried 100 times and created 220 cuts of which 0 were active after adding rounds of cuts (0.257498 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               39
Total iterations:               4653
Time (CPU seconds):             82.5109
Time (Wallclock seconds):       82.5793
Total time (CPU seconds):       82.5203   (Wallclock seconds):       82.5903
