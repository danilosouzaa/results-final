Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3042/j3042_1.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3042_1.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.043201 seconds
Cgl0002I 28 variables fixed
Cgl0003I 19 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 212 rows, 564 columns (564 integer (564 of which binary)) and 6013 elements
Coin3009W Conflict graph built in 0.079 seconds, density: 2.650%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 564 objects (564 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 36 integers unsatisfied sum - 10.6025
Cbc0038I Pass   1: suminf.    7.56812 (25) obj. 0 iterations 47
Cbc0038I Pass   2: suminf.    7.02629 (23) obj. 0 iterations 11
Cbc0038I Pass   3: suminf.    5.46419 (22) obj. 0 iterations 50
Cbc0038I Pass   4: suminf.    4.37222 (14) obj. 0 iterations 10
Cbc0038I Pass   5: suminf.    3.93472 (13) obj. 0 iterations 5
Cbc0038I Pass   6: suminf.    5.00000 (11) obj. 0 iterations 37
Cbc0038I Pass   7: suminf.    3.63194 (12) obj. 0 iterations 24
Cbc0038I Pass   8: suminf.    3.85556 (11) obj. 0 iterations 28
Cbc0038I Pass   9: suminf.    3.60556 (11) obj. 0 iterations 6
Cbc0038I Pass  10: suminf.    3.75000 (10) obj. 0 iterations 25
Cbc0038I Pass  11: suminf.    3.62500 (10) obj. 0 iterations 2
Cbc0038I Pass  12: suminf.    3.30000 (9) obj. 0 iterations 14
Cbc0038I Pass  13: suminf.    3.04444 (10) obj. 0 iterations 10
Cbc0038I Pass  14: suminf.    4.00000 (10) obj. 0 iterations 18
Cbc0038I Pass  15: suminf.    5.69210 (23) obj. 0 iterations 65
Cbc0038I Pass  16: suminf.    4.45185 (16) obj. 0 iterations 39
Cbc0038I Pass  17: suminf.    4.31852 (16) obj. 0 iterations 12
Cbc0038I Pass  18: suminf.    4.75000 (12) obj. 0 iterations 40
Cbc0038I Pass  19: suminf.    4.62500 (12) obj. 0 iterations 6
Cbc0038I Pass  20: suminf.    3.62500 (10) obj. 0 iterations 7
Cbc0038I Pass  21: suminf.    3.30000 (9) obj. 0 iterations 11
Cbc0038I Pass  22: suminf.    3.04444 (10) obj. 0 iterations 8
Cbc0038I Pass  23: suminf.    4.00000 (10) obj. 0 iterations 18
Cbc0038I Pass  24: suminf.    6.67164 (23) obj. 0 iterations 54
Cbc0038I Pass  25: suminf.    4.63810 (19) obj. 0 iterations 34
Cbc0038I Pass  26: suminf.    4.35839 (19) obj. 0 iterations 2
Cbc0038I Pass  27: suminf.    5.59952 (19) obj. 0 iterations 32
Cbc0038I Pass  28: suminf.    4.29417 (16) obj. 0 iterations 21
Cbc0038I Pass  29: suminf.    5.06952 (15) obj. 0 iterations 43
Cbc0038I Pass  30: suminf.    4.36595 (14) obj. 0 iterations 13
Cbc0038I Pass  31: suminf.    5.20667 (16) obj. 0 iterations 36
Cbc0038I Pass  32: suminf.    4.60250 (16) obj. 0 iterations 8
Cbc0038I Pass  33: suminf.    4.29417 (16) obj. 0 iterations 3
Cbc0038I Pass  34: suminf.    5.06952 (15) obj. 0 iterations 38
Cbc0038I Pass  35: suminf.    3.37389 (14) obj. 0 iterations 15
Cbc0038I Pass  36: suminf.    3.37389 (14) obj. 0 iterations 5
Cbc0038I Pass  37: suminf.    5.69000 (16) obj. 0 iterations 40
Cbc0038I Pass  38: suminf.    4.45111 (16) obj. 0 iterations 13
Cbc0038I Pass  39: suminf.    4.79452 (15) obj. 0 iterations 40
Cbc0038I Pass  40: suminf.    6.99913 (26) obj. 0 iterations 71
Cbc0038I Pass  41: suminf.    4.13810 (12) obj. 0 iterations 66
Cbc0038I Pass  42: suminf.    3.31667 (11) obj. 0 iterations 20
Cbc0038I Pass  43: suminf.    3.17381 (10) obj. 0 iterations 5
Cbc0038I Pass  44: suminf.    2.31667 (8) obj. 0 iterations 4
Cbc0038I Pass  45: suminf.    3.55000 (9) obj. 0 iterations 30
Cbc0038I Pass  46: suminf.    2.31667 (9) obj. 0 iterations 19
Cbc0038I Pass  47: suminf.    3.15000 (8) obj. 0 iterations 29
Cbc0038I Pass  48: suminf.    6.64069 (25) obj. 0 iterations 61
Cbc0038I Pass  49: suminf.    3.84470 (19) obj. 0 iterations 49
Cbc0038I Pass  50: suminf.    4.47222 (15) obj. 0 iterations 41
Cbc0038I Pass  51: suminf.    3.45556 (13) obj. 0 iterations 7
Cbc0038I Pass  52: suminf.    3.34444 (12) obj. 0 iterations 4
Cbc0038I Pass  53: suminf.    2.72917 (11) obj. 0 iterations 22
Cbc0038I Pass  54: suminf.    2.05909 (7) obj. 0 iterations 17
Cbc0038I Pass  55: suminf.    1.69167 (9) obj. 0 iterations 2
Cbc0038I Pass  56: suminf.    2.82500 (10) obj. 0 iterations 28
Cbc0038I Pass  57: suminf.    2.83333 (14) obj. 0 iterations 1
Cbc0038I Pass  58: suminf.    4.88333 (15) obj. 0 iterations 14
Cbc0038I Pass  59: suminf.    4.53889 (15) obj. 0 iterations 5
Cbc0038I Pass  60: suminf.    4.22500 (16) obj. 0 iterations 2
Cbc0038I Pass  61: suminf.    4.25779 (15) obj. 0 iterations 14
Cbc0038I Pass  62: suminf.    4.17500 (16) obj. 0 iterations 2
Cbc0038I Pass  63: suminf.    5.23016 (15) obj. 0 iterations 21
Cbc0038I Pass  64: suminf.    3.50000 (14) obj. 0 iterations 8
Cbc0038I Pass  65: suminf.    3.50000 (14) obj. 0 iterations 0
Cbc0038I Pass  66: suminf.    3.07323 (11) obj. 0 iterations 37
Cbc0038I Pass  67: suminf.    3.07323 (11) obj. 0 iterations 0
Cbc0038I Pass  68: suminf.    4.97500 (16) obj. 0 iterations 19
Cbc0038I Pass  69: suminf.    3.82323 (14) obj. 0 iterations 20
Cbc0038I Pass  70: suminf.    3.82323 (14) obj. 0 iterations 1
Cbc0038I Pass  71: suminf.    4.62500 (16) obj. 0 iterations 29
Cbc0038I Pass  72: suminf.    4.58889 (14) obj. 0 iterations 1
Cbc0038I Pass  73: suminf.    3.85101 (13) obj. 0 iterations 24
Cbc0038I Pass  74: suminf.    7.28023 (32) obj. 0 iterations 57
Cbc0038I Pass  75: suminf.    5.69792 (24) obj. 0 iterations 44
Cbc0038I Pass  76: suminf.    3.90805 (18) obj. 0 iterations 20
Cbc0038I Pass  77: suminf.    3.90805 (18) obj. 0 iterations 0
Cbc0038I Pass  78: suminf.    5.50714 (15) obj. 0 iterations 45
Cbc0038I Pass  79: suminf.    5.05714 (17) obj. 0 iterations 7
Cbc0038I Pass  80: suminf.    5.05714 (17) obj. 0 iterations 4
Cbc0038I Pass  81: suminf.    4.30000 (11) obj. 0 iterations 31
Cbc0038I Pass  82: suminf.    4.30000 (11) obj. 0 iterations 7
Cbc0038I Pass  83: suminf.    4.30000 (11) obj. 0 iterations 3
Cbc0038I Pass  84: suminf.    6.61389 (31) obj. 0 iterations 62
Cbc0038I Pass  85: suminf.    5.70883 (29) obj. 0 iterations 41
Cbc0038I Pass  86: suminf.    5.13000 (17) obj. 0 iterations 29
Cbc0038I Pass  87: suminf.    4.93000 (17) obj. 0 iterations 4
Cbc0038I Pass  88: suminf.    4.11667 (17) obj. 0 iterations 10
Cbc0038I Pass  89: suminf.    4.83750 (17) obj. 0 iterations 43
Cbc0038I Pass  90: suminf.    3.58750 (15) obj. 0 iterations 10
Cbc0038I Pass  91: suminf.    5.64167 (21) obj. 0 iterations 40
Cbc0038I Pass  92: suminf.    5.64167 (21) obj. 0 iterations 4
Cbc0038I Pass  93: suminf.    5.64167 (21) obj. 0 iterations 1
Cbc0038I Pass  94: suminf.    4.65000 (14) obj. 0 iterations 38
Cbc0038I Pass  95: suminf.    3.45556 (13) obj. 0 iterations 11
Cbc0038I Pass  96: suminf.    5.49667 (19) obj. 0 iterations 37
Cbc0038I Pass  97: suminf.    4.64167 (19) obj. 0 iterations 12
Cbc0038I Pass  98: suminf.    4.35000 (15) obj. 0 iterations 36
Cbc0038I Pass  99: suminf.    3.85000 (15) obj. 0 iterations 12
Cbc0038I Pass 100: suminf.   10.38645 (36) obj. 0 iterations 73
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 397 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 564 columns, reduced to 142 rows 123 columns
Cbc0038I Mini branch and bound did not improve solution (3.05 seconds)
Cbc0038I Full problem 213 rows 564 columns, reduced to 212 rows 564 columns - too large
Cbc0038I After 3.09 seconds - Feasibility pump exiting - took 1.52 seconds
Cbc0031I 40 added rows had average density of 105.6
Cbc0013I At root node, 40 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 83 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.538 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 201 row cuts average 391.8 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 75 row cuts average 8.7 elements, 0 column cuts (0 active)  in 2.223 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 69.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 213 row cuts average 203.5 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 60.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (7.16 seconds)
Cbc0010I After 22 nodes, 8 on tree, 1e+50 best solution, best possible 0 (7.87 seconds)
Cbc0010I After 69 nodes, 14 on tree, 1e+50 best solution, best possible 0 (8.58 seconds)
Cbc0010I After 139 nodes, 6 on tree, 1e+50 best solution, best possible 0 (9.38 seconds)
Cbc0010I After 240 nodes, 21 on tree, 1e+50 best solution, best possible 0 (10.09 seconds)
Cbc0010I After 370 nodes, 15 on tree, 1e+50 best solution, best possible 0 (10.79 seconds)
Cbc0010I After 512 nodes, 17 on tree, 1e+50 best solution, best possible 0 (11.50 seconds)
Cbc0004I Integer solution of 0 found after 9900 iterations and 526 nodes (11.55 seconds)
Cbc0001I Search completed - best objective 0, took 9900 iterations and 526 nodes (11.55 seconds)
Cbc0032I Strong branching done 2466 times (21319 iterations), fathomed 105 nodes and fixed 180 variables
Cbc0035I Maximum depth 45, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 83 cuts of which 0 were active after adding rounds of cuts (0.538082 seconds)
Gomory was tried 10 times and created 201 cuts of which 0 were active after adding rounds of cuts (0.2422 seconds)
liftKnapsack was tried 10 times and created 75 cuts of which 0 were active after adding rounds of cuts (2.22303 seconds)
Clique was tried 10 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.005528 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024243 seconds)
MixedIntegerRounding2 was tried 10 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.036069 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002025 seconds)
TwoMirCuts was tried 10 times and created 213 cuts of which 0 were active after adding rounds of cuts (0.204266 seconds)
ZeroHalf was tried 10 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.034702 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               526
Total iterations:               9900
Time (CPU seconds):             11.6599
Time (Wallclock seconds):       11.5819
Total time (CPU seconds):       11.6701   (Wallclock seconds):       11.5935
