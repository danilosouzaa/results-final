Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3048/j3048_2.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3048_2.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.801042 - 0.133462 seconds
Cgl0002I 10 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 295 rows, 784 columns (784 integer (783 of which binary)) and 11705 elements
Coin3009W Conflict graph built in 0.050 seconds, density: 1.156%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 784 objects (784 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 87 integers unsatisfied sum - 24.0543
Cbc0038I Pass   1: suminf.   10.57695 (48) obj. 2.80882 iterations 83
Cbc0038I Pass   2: suminf.    9.46636 (37) obj. 3 iterations 6
Cbc0038I Pass   3: suminf.    9.22794 (41) obj. 3 iterations 11
Cbc0038I Pass   4: suminf.   10.26797 (45) obj. 3 iterations 50
Cbc0038I Pass   5: suminf.    9.82461 (37) obj. 3 iterations 5
Cbc0038I Pass   6: suminf.    7.41224 (30) obj. 3 iterations 28
Cbc0038I Pass   7: suminf.    7.41224 (30) obj. 3 iterations 5
Cbc0038I Pass   8: suminf.   11.35972 (36) obj. 3 iterations 49
Cbc0038I Pass   9: suminf.    7.66731 (29) obj. 3 iterations 32
Cbc0038I Pass  10: suminf.    9.02184 (33) obj. 3 iterations 40
Cbc0038I Pass  11: suminf.    6.06754 (33) obj. 3 iterations 20
Cbc0038I Pass  12: suminf.    5.87550 (26) obj. 3 iterations 29
Cbc0038I Pass  13: suminf.    5.50710 (33) obj. 3 iterations 9
Cbc0038I Pass  14: suminf.    5.24186 (32) obj. 3 iterations 20
Cbc0038I Pass  15: suminf.    4.85325 (31) obj. 3 iterations 11
Cbc0038I Pass  16: suminf.    9.50565 (35) obj. 3 iterations 52
Cbc0038I Pass  17: suminf.    8.48793 (29) obj. 3 iterations 23
Cbc0038I Pass  18: suminf.    6.93851 (29) obj. 3 iterations 51
Cbc0038I Pass  19: suminf.    5.63620 (25) obj. 3 iterations 20
Cbc0038I Pass  20: suminf.    6.99593 (25) obj. 3 iterations 62
Cbc0038I Pass  21: suminf.    6.07782 (33) obj. 3 iterations 30
Cbc0038I Pass  22: suminf.    5.41856 (32) obj. 3 iterations 13
Cbc0038I Pass  23: suminf.    5.03650 (30) obj. 3 iterations 1
Cbc0038I Pass  24: suminf.    8.63082 (30) obj. 3 iterations 52
Cbc0038I Pass  25: suminf.    5.84082 (29) obj. 3 iterations 49
Cbc0038I Pass  26: suminf.   10.85598 (30) obj. 3 iterations 70
Cbc0038I Pass  27: suminf.    6.27686 (24) obj. 3 iterations 21
Cbc0038I Pass  28: suminf.    5.67686 (24) obj. 3 iterations 23
Cbc0038I Pass  29: suminf.    8.81548 (35) obj. 3 iterations 53
Cbc0038I Pass  30: suminf.    7.22279 (24) obj. 3 iterations 16
Cbc0038I Pass  31: suminf.    6.72279 (24) obj. 3 iterations 6
Cbc0038I Pass  32: suminf.    7.21846 (28) obj. 3 iterations 28
Cbc0038I Pass  33: suminf.    6.27047 (29) obj. 3 iterations 11
Cbc0038I Pass  34: suminf.    6.64319 (28) obj. 3 iterations 28
Cbc0038I Pass  35: suminf.    6.47387 (23) obj. 3 iterations 9
Cbc0038I Pass  36: suminf.    4.99865 (19) obj. 3 iterations 7
Cbc0038I Pass  37: suminf.    4.85827 (19) obj. 3 iterations 14
Cbc0038I Pass  38: suminf.    8.41350 (25) obj. 3 iterations 40
Cbc0038I Pass  39: suminf.    6.46290 (23) obj. 3 iterations 7
Cbc0038I Pass  40: suminf.    5.88070 (23) obj. 3 iterations 32
Cbc0038I Pass  41: suminf.    5.29311 (24) obj. 3 iterations 17
Cbc0038I Pass  42: suminf.    7.74975 (23) obj. 3 iterations 33
Cbc0038I Pass  43: suminf.    9.40079 (36) obj. 3 iterations 102
Cbc0038I Pass  44: suminf.    4.31111 (15) obj. 3 iterations 72
Cbc0038I Pass  45: suminf.    5.51608 (24) obj. 3 iterations 31
Cbc0038I Pass  46: suminf.    4.19341 (16) obj. 3 iterations 5
Cbc0038I Pass  47: suminf.    3.85302 (16) obj. 3 iterations 9
Cbc0038I Pass  48: suminf.    3.85302 (16) obj. 3 iterations 0
Cbc0038I Pass  49: suminf.    6.25866 (32) obj. 3 iterations 24
Cbc0038I Pass  50: suminf.    6.15026 (23) obj. 3 iterations 4
Cbc0038I Pass  51: suminf.    5.07546 (18) obj. 3 iterations 14
Cbc0038I Pass  52: suminf.    5.02418 (18) obj. 3 iterations 4
Cbc0038I Pass  53: suminf.    7.40536 (28) obj. 3 iterations 17
Cbc0038I Pass  54: suminf.    5.96619 (33) obj. 3 iterations 5
Cbc0038I Pass  55: suminf.    5.42149 (31) obj. 3 iterations 8
Cbc0038I Pass  56: suminf.    6.11632 (31) obj. 3 iterations 34
Cbc0038I Pass  57: suminf.    4.57162 (30) obj. 3 iterations 15
Cbc0038I Pass  58: suminf.    9.89524 (31) obj. 3 iterations 32
Cbc0038I Pass  59: suminf.    6.42173 (26) obj. 3 iterations 19
Cbc0038I Pass  60: suminf.    4.92092 (23) obj. 3 iterations 14
Cbc0038I Pass  61: suminf.    4.55054 (23) obj. 3 iterations 3
Cbc0038I Pass  62: suminf.    6.47630 (22) obj. 3 iterations 21
Cbc0038I Pass  63: suminf.    5.25268 (30) obj. 3 iterations 13
Cbc0038I Pass  64: suminf.    9.91911 (27) obj. 3 iterations 36
Cbc0038I Pass  65: suminf.    5.73491 (28) obj. 3 iterations 21
Cbc0038I Pass  66: suminf.    7.20296 (24) obj. 3 iterations 43
Cbc0038I Pass  67: suminf.    5.84018 (24) obj. 3 iterations 7
Cbc0038I Pass  68: suminf.    7.14116 (25) obj. 3 iterations 32
Cbc0038I Pass  69: suminf.    6.94914 (22) obj. 3 iterations 8
Cbc0038I Pass  70: suminf.    7.24591 (28) obj. 3 iterations 20
Cbc0038I Pass  71: suminf.    6.13983 (28) obj. 3 iterations 5
Cbc0038I Pass  72: suminf.    5.57282 (28) obj. 3 iterations 5
Cbc0038I Pass  73: suminf.    5.13109 (21) obj. 3 iterations 12
Cbc0038I Pass  74: suminf.    4.43885 (21) obj. 3 iterations 4
Cbc0038I Pass  75: suminf.    8.62692 (25) obj. 3 iterations 27
Cbc0038I Pass  76: suminf.    7.23064 (31) obj. 3 iterations 16
Cbc0038I Pass  77: suminf.    6.69592 (31) obj. 3 iterations 4
Cbc0038I Pass  78: suminf.    5.82859 (24) obj. 3 iterations 22
Cbc0038I Pass  79: suminf.    4.79700 (30) obj. 3 iterations 5
Cbc0038I Pass  80: suminf.    6.85385 (28) obj. 3 iterations 16
Cbc0038I Pass  81: suminf.    6.55148 (28) obj. 3 iterations 5
Cbc0038I Pass  82: suminf.    5.25567 (21) obj. 3 iterations 15
Cbc0038I Pass  83: suminf.    5.04702 (24) obj. 3 iterations 11
Cbc0038I Pass  84: suminf.    7.75655 (25) obj. 3 iterations 28
Cbc0038I Pass  85: suminf.    7.56452 (22) obj. 3 iterations 8
Cbc0038I Pass  86: suminf.    7.24591 (28) obj. 3 iterations 23
Cbc0038I Pass  87: suminf.    6.13983 (28) obj. 3 iterations 3
Cbc0038I Pass  88: suminf.    5.57282 (28) obj. 3 iterations 5
Cbc0038I Pass  89: suminf.    5.13109 (21) obj. 3 iterations 12
Cbc0038I Pass  90: suminf.    4.43885 (21) obj. 3 iterations 4
Cbc0038I Pass  91: suminf.    5.10041 (19) obj. 3 iterations 21
Cbc0038I Pass  92: suminf.    3.16707 (16) obj. 3 iterations 9
Cbc0038I Pass  93: suminf.    5.56172 (16) obj. 3 iterations 28
Cbc0038I Pass  94: suminf.    3.87476 (16) obj. 3 iterations 20
Cbc0038I Pass  95: suminf.    4.79249 (16) obj. 3 iterations 30
Cbc0038I Pass  96: suminf.   11.03571 (40) obj. 3 iterations 114
Cbc0038I Pass  97: suminf.    6.10594 (27) obj. 3 iterations 69
Cbc0038I Pass  98: suminf.    6.10594 (27) obj. 3 iterations 4
Cbc0038I Pass  99: suminf.    9.04390 (26) obj. 3 iterations 32
Cbc0038I Pass 100: suminf.   12.83829 (52) obj. 3 iterations 99
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 580 integers at bound fixed and 0 continuous
Cbc0038I Full problem 295 rows 784 columns, reduced to 203 rows 170 columns
Cbc0038I Mini branch and bound did not improve solution (2.46 seconds)
Cbc0038I After 2.46 seconds - Feasibility pump exiting - took 0.98 seconds
Cbc0031I 57 added rows had average density of 46.596491
Cbc0013I At root node, 57 cuts changed objective from 0.80104167 to 2 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 381 row cuts average 6.1 elements, 3 column cuts (3 active)  in 0.533 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 255 row cuts average 466.0 elements, 0 column cuts (0 active)  in 0.565 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 140 row cuts average 22.7 elements, 0 column cuts (0 active)  in 17.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 164 row cuts average 51.1 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 368 row cuts average 136.7 elements, 0 column cuts (0 active)  in 0.326 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 110 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (22.66 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2 (26.50 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2 (30.38 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2 (34.11 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 2 (37.27 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 2 (40.38 seconds)
Cbc0010I After 12 nodes, 1 on tree, 1e+50 best solution, best possible 3 (42.75 seconds)
Cbc0010I After 13 nodes, 2 on tree, 1e+50 best solution, best possible 3 (44.75 seconds)
Cbc0010I After 14 nodes, 3 on tree, 1e+50 best solution, best possible 3 (45.60 seconds)
Cbc0010I After 15 nodes, 4 on tree, 1e+50 best solution, best possible 3 (47.24 seconds)
Cbc0010I After 16 nodes, 5 on tree, 1e+50 best solution, best possible 3 (49.14 seconds)
Cbc0010I After 17 nodes, 6 on tree, 1e+50 best solution, best possible 3 (50.20 seconds)
Cbc0010I After 18 nodes, 7 on tree, 1e+50 best solution, best possible 3 (51.88 seconds)
Cbc0010I After 20 nodes, 8 on tree, 1e+50 best solution, best possible 3 (53.93 seconds)
Cbc0010I After 22 nodes, 9 on tree, 1e+50 best solution, best possible 3 (55.79 seconds)
Cbc0010I After 23 nodes, 10 on tree, 1e+50 best solution, best possible 3 (58.03 seconds)
Cbc0010I After 26 nodes, 11 on tree, 1e+50 best solution, best possible 3 (60.19 seconds)
Cbc0010I After 27 nodes, 12 on tree, 1e+50 best solution, best possible 3 (60.99 seconds)
Cbc0010I After 28 nodes, 13 on tree, 1e+50 best solution, best possible 3 (61.88 seconds)
Cbc0010I After 30 nodes, 14 on tree, 1e+50 best solution, best possible 3 (63.01 seconds)
Cbc0010I After 35 nodes, 13 on tree, 1e+50 best solution, best possible 3 (64.26 seconds)
Cbc0010I After 46 nodes, 11 on tree, 1e+50 best solution, best possible 3 (65.47 seconds)
Cbc0010I After 47 nodes, 10 on tree, 1e+50 best solution, best possible 3 (66.21 seconds)
Cbc0010I After 49 nodes, 12 on tree, 1e+50 best solution, best possible 3 (66.96 seconds)
Cbc0010I After 51 nodes, 13 on tree, 1e+50 best solution, best possible 3 (67.71 seconds)
Cbc0010I After 53 nodes, 14 on tree, 1e+50 best solution, best possible 3 (69.87 seconds)
Cbc0016I Integer solution of 3 found by strong branching after 8151 iterations and 58 nodes (70.65 seconds)
Cbc0001I Search completed - best objective 3, took 8151 iterations and 58 nodes (70.65 seconds)
Cbc0032I Strong branching done 924 times (19230 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 14, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.801042 to 2
Probing was tried 63 times and created 1062 cuts of which 0 were active after adding rounds of cuts (0.766207 seconds)
Gomory was tried 63 times and created 261 cuts of which 0 were active after adding rounds of cuts (0.747864 seconds)
liftKnapsack was tried 63 times and created 502 cuts of which 0 were active after adding rounds of cuts (58.7111 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.011929 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.055701 seconds)
MixedIntegerRounding2 was tried 63 times and created 488 cuts of which 0 were active after adding rounds of cuts (0.297991 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003863 seconds)
TwoMirCuts was tried 63 times and created 503 cuts of which 0 were active after adding rounds of cuts (0.495211 seconds)
ZeroHalf was tried 63 times and created 361 cuts of which 0 were active after adding rounds of cuts (0.357797 seconds)

Result - Optimal solution found
Objective value:                3
Enumerated nodes:               58
Total iterations:               8151
Time (CPU seconds):             70.6776
Time (Wallclock seconds):       70.7031
Total time (CPU seconds):       70.6923   (Wallclock seconds):       70.7241
