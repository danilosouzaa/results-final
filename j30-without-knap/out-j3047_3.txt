Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3047/j3047_3.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3047_3.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.57669 - 0.24696 seconds
Cgl0002I 6 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 303 rows, 731 columns (731 integer (730 of which binary)) and 10901 elements
Coin3009W Conflict graph built in 0.021 seconds, density: 0.980%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 731 objects (731 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 121 integers unsatisfied sum - 31.1942
Cbc0038I Pass   1: suminf.   12.83162 (62) obj. 4 iterations 247
Cbc0038I Pass   2: suminf.   11.74564 (56) obj. 4 iterations 72
Cbc0038I Pass   3: suminf.    9.65695 (49) obj. 4 iterations 58
Cbc0038I Pass   4: suminf.    7.89879 (62) obj. 4 iterations 65
Cbc0038I Pass   5: suminf.    7.86741 (68) obj. 4 iterations 19
Cbc0038I Pass   6: suminf.    9.32889 (37) obj. 4 iterations 170
Cbc0038I Pass   7: suminf.    7.70859 (42) obj. 4 iterations 78
Cbc0038I Pass   8: suminf.    7.67434 (40) obj. 4 iterations 35
Cbc0038I Pass   9: suminf.    9.06366 (38) obj. 4 iterations 155
Cbc0038I Pass  10: suminf.    6.18526 (30) obj. 4 iterations 119
Cbc0038I Pass  11: suminf.    6.79861 (28) obj. 4 iterations 67
Cbc0038I Pass  12: suminf.    4.37540 (23) obj. 4 iterations 77
Cbc0038I Pass  13: suminf.    4.37540 (23) obj. 4 iterations 0
Cbc0038I Pass  14: suminf.    5.58764 (23) obj. 4 iterations 80
Cbc0038I Pass  15: suminf.    5.06277 (23) obj. 4 iterations 49
Cbc0038I Pass  16: suminf.    5.88686 (23) obj. 4 iterations 76
Cbc0038I Pass  17: suminf.    4.30300 (22) obj. 4 iterations 49
Cbc0038I Pass  18: suminf.    9.09603 (24) obj. 4 iterations 112
Cbc0038I Pass  19: suminf.    7.74561 (27) obj. 4 iterations 52
Cbc0038I Pass  20: suminf.    7.09688 (26) obj. 4 iterations 18
Cbc0038I Pass  21: suminf.    5.60459 (25) obj. 4 iterations 57
Cbc0038I Pass  22: suminf.    5.38481 (21) obj. 4 iterations 37
Cbc0038I Pass  23: suminf.    7.10707 (27) obj. 4 iterations 95
Cbc0038I Pass  24: suminf.    5.70445 (24) obj. 4 iterations 79
Cbc0038I Pass  25: suminf.    5.70445 (24) obj. 4 iterations 3
Cbc0038I Pass  26: suminf.    7.11261 (28) obj. 4 iterations 106
Cbc0038I Pass  27: suminf.    6.10168 (35) obj. 4 iterations 46
Cbc0038I Pass  28: suminf.    6.39122 (26) obj. 4 iterations 60
Cbc0038I Pass  29: suminf.    5.04938 (24) obj. 4 iterations 68
Cbc0038I Pass  30: suminf.    7.63812 (33) obj. 4 iterations 93
Cbc0038I Pass  31: suminf.    6.43416 (21) obj. 4 iterations 60
Cbc0038I Pass  32: suminf.    5.24867 (24) obj. 4 iterations 51
Cbc0038I Pass  33: suminf.    6.58194 (24) obj. 4 iterations 102
Cbc0038I Pass  34: suminf.    5.60313 (22) obj. 4 iterations 40
Cbc0038I Pass  35: suminf.    4.71723 (20) obj. 4 iterations 29
Cbc0038I Pass  36: suminf.    6.02399 (23) obj. 4 iterations 86
Cbc0038I Pass  37: suminf.    4.88333 (16) obj. 4 iterations 30
Cbc0038I Pass  38: suminf.    4.88333 (16) obj. 4 iterations 6
Cbc0038I Pass  39: suminf.    5.30000 (21) obj. 4 iterations 62
Cbc0038I Pass  40: suminf.    4.98889 (17) obj. 4 iterations 38
Cbc0038I Pass  41: suminf.    4.98889 (17) obj. 4 iterations 10
Cbc0038I Pass  42: suminf.    5.10494 (17) obj. 4 iterations 72
Cbc0038I Pass  43: suminf.    4.88333 (16) obj. 4 iterations 30
Cbc0038I Pass  44: suminf.    4.88333 (16) obj. 4 iterations 10
Cbc0038I Pass  45: suminf.    5.30000 (21) obj. 4 iterations 71
Cbc0038I Pass  46: suminf.    4.98889 (17) obj. 4 iterations 40
Cbc0038I Pass  47: suminf.    4.98889 (17) obj. 4 iterations 12
Cbc0038I Pass  48: suminf.    5.10494 (17) obj. 4 iterations 73
Cbc0038I Pass  49: suminf.    4.88333 (16) obj. 4 iterations 24
Cbc0038I Pass  50: suminf.    4.88333 (16) obj. 4 iterations 16
Cbc0038I Pass  51: suminf.    5.27222 (21) obj. 4 iterations 66
Cbc0038I Pass  52: suminf.    4.98889 (17) obj. 4 iterations 32
Cbc0038I Pass  53: suminf.    4.98889 (17) obj. 4 iterations 16
Cbc0038I Pass  54: suminf.    5.10494 (17) obj. 4 iterations 82
Cbc0038I Pass  55: suminf.    4.88333 (16) obj. 4 iterations 24
Cbc0038I Pass  56: suminf.    4.88333 (16) obj. 4 iterations 15
Cbc0038I Pass  57: suminf.    4.80926 (17) obj. 4 iterations 3
Cbc0038I Pass  58: suminf.    5.52222 (20) obj. 4 iterations 84
Cbc0038I Pass  59: suminf.    5.21111 (16) obj. 4 iterations 45
Cbc0038I Pass  60: suminf.    5.21111 (16) obj. 4 iterations 30
Cbc0038I Pass  61: suminf.    4.98889 (17) obj. 4 iterations 7
Cbc0038I Pass  62: suminf.    5.10494 (17) obj. 4 iterations 61
Cbc0038I Pass  63: suminf.    4.88333 (16) obj. 4 iterations 26
Cbc0038I Pass  64: suminf.    4.88333 (16) obj. 4 iterations 17
Cbc0038I Pass  65: suminf.    5.63889 (20) obj. 4 iterations 49
Cbc0038I Pass  66: suminf.    4.66111 (17) obj. 4 iterations 45
Cbc0038I Pass  67: suminf.    4.66111 (17) obj. 4 iterations 17
Cbc0038I Pass  68: suminf.    5.32778 (21) obj. 4 iterations 91
Cbc0038I Pass  69: suminf.    4.92222 (17) obj. 4 iterations 38
Cbc0038I Pass  70: suminf.    4.92222 (17) obj. 4 iterations 19
Cbc0038I Pass  71: suminf.    5.10494 (17) obj. 4 iterations 84
Cbc0038I Pass  72: suminf.    4.66111 (17) obj. 4 iterations 36
Cbc0038I Pass  73: suminf.    4.66111 (17) obj. 4 iterations 18
Cbc0038I Pass  74: suminf.    5.52222 (20) obj. 4 iterations 94
Cbc0038I Pass  75: suminf.    5.21111 (16) obj. 4 iterations 44
Cbc0038I Pass  76: suminf.    5.13704 (17) obj. 4 iterations 32
Cbc0038I Pass  77: suminf.    5.10494 (17) obj. 4 iterations 67
Cbc0038I Pass  78: suminf.    4.88333 (16) obj. 4 iterations 30
Cbc0038I Pass  79: suminf.    4.66111 (17) obj. 4 iterations 19
Cbc0038I Pass  80: suminf.    5.30505 (19) obj. 4 iterations 91
Cbc0038I Pass  81: suminf.    4.92222 (17) obj. 4 iterations 41
Cbc0038I Pass  82: suminf.    5.10494 (17) obj. 4 iterations 94
Cbc0038I Pass  83: suminf.    4.88333 (16) obj. 4 iterations 28
Cbc0038I Pass  84: suminf.    4.66111 (17) obj. 4 iterations 18
Cbc0038I Pass  85: suminf.    5.52222 (20) obj. 4 iterations 91
Cbc0038I Pass  86: suminf.    5.21111 (16) obj. 4 iterations 42
Cbc0038I Pass  87: suminf.    5.21111 (16) obj. 4 iterations 29
Cbc0038I Pass  88: suminf.    4.88272 (18) obj. 4 iterations 76
Cbc0038I Pass  89: suminf.    4.66111 (17) obj. 4 iterations 47
Cbc0038I Pass  90: suminf.    4.66111 (17) obj. 4 iterations 24
Cbc0038I Pass  91: suminf.    5.52222 (20) obj. 4 iterations 87
Cbc0038I Pass  92: suminf.    5.21111 (16) obj. 4 iterations 48
Cbc0038I Pass  93: suminf.    5.21111 (16) obj. 4 iterations 27
Cbc0038I Pass  94: suminf.    4.88272 (18) obj. 4 iterations 82
Cbc0038I Pass  95: suminf.    4.66111 (17) obj. 4 iterations 42
Cbc0038I Pass  96: suminf.    4.66111 (17) obj. 4 iterations 30
Cbc0038I Pass  97: suminf.    5.35556 (21) obj. 4 iterations 87
Cbc0038I Pass  98: suminf.    4.92222 (17) obj. 4 iterations 44
Cbc0038I Pass  99: suminf.    4.92222 (17) obj. 4 iterations 12
Cbc0038I Pass 100: suminf.   12.55826 (45) obj. 4 iterations 170
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 475 integers at bound fixed and 0 continuous
Cbc0038I Full problem 303 rows 731 columns, reduced to 211 rows 225 columns
Cbc0038I Mini branch and bound did not improve solution (6.31 seconds)
Cbc0038I After 6.31 seconds - Feasibility pump exiting - took 4.71 seconds
Cbc0031I 73 added rows had average density of 35.808219
Cbc0013I At root node, 73 cuts changed objective from 1.5766893 to 2.9954893 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 267 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.413 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 169 row cuts average 710.4 elements, 0 column cuts (0 active)  in 1.280 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 133 row cuts average 18.3 elements, 0 column cuts (0 active)  in 19.096 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 170 row cuts average 46.8 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 70 row cuts average 39.0 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 130 row cuts average 48.3 elements, 0 column cuts (0 active)  in 0.196 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2.9954893 (30.50 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2.9954893 (34.71 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2.9954893 (38.61 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2.9954893 (43.30 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 2.9954893 (48.80 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 2.9954893 (51.96 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 2.9954893 (53.73 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 2.9954893 (55.62 seconds)
Cbc0010I After 9 nodes, 7 on tree, 1e+50 best solution, best possible 2.9954893 (57.55 seconds)
Cbc0010I After 15 nodes, 2 on tree, 1e+50 best solution, best possible 2.9954893 (62.18 seconds)
Cbc0010I After 16 nodes, 3 on tree, 1e+50 best solution, best possible 2.9954893 (67.77 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 2.9954893 (71.22 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible 2.9954893 (74.39 seconds)
Cbc0010I After 19 nodes, 6 on tree, 1e+50 best solution, best possible 2.9954893 (76.27 seconds)
Cbc0010I After 20 nodes, 7 on tree, 1e+50 best solution, best possible 2.9954893 (77.50 seconds)
Cbc0010I After 21 nodes, 7 on tree, 1e+50 best solution, best possible 2.9954893 (80.35 seconds)
Cbc0010I After 22 nodes, 8 on tree, 1e+50 best solution, best possible 2.9954893 (82.47 seconds)
Cbc0010I After 23 nodes, 8 on tree, 1e+50 best solution, best possible 2.9954893 (85.93 seconds)
Cbc0010I After 24 nodes, 9 on tree, 1e+50 best solution, best possible 2.9954893 (87.79 seconds)
Cbc0010I After 25 nodes, 9 on tree, 1e+50 best solution, best possible 2.9954893 (89.97 seconds)
Cbc0010I After 26 nodes, 10 on tree, 1e+50 best solution, best possible 2.9954893 (93.54 seconds)
Cbc0010I After 28 nodes, 10 on tree, 1e+50 best solution, best possible 2.9954893 (95.31 seconds)
Cbc0010I After 30 nodes, 10 on tree, 1e+50 best solution, best possible 2.9954893 (96.61 seconds)
Cbc0010I After 32 nodes, 10 on tree, 1e+50 best solution, best possible 2.9954893 (99.77 seconds)
Cbc0010I After 33 nodes, 11 on tree, 1e+50 best solution, best possible 2.9954893 (101.06 seconds)
Cbc0010I After 35 nodes, 11 on tree, 1e+50 best solution, best possible 2.9954893 (102.68 seconds)
Cbc0010I After 36 nodes, 12 on tree, 1e+50 best solution, best possible 2.9954893 (105.50 seconds)
Cbc0010I After 38 nodes, 11 on tree, 1e+50 best solution, best possible 2.9954893 (107.41 seconds)
Cbc0010I After 39 nodes, 12 on tree, 1e+50 best solution, best possible 2.9954893 (111.49 seconds)
Cbc0010I After 40 nodes, 13 on tree, 1e+50 best solution, best possible 2.9954893 (114.32 seconds)
Cbc0010I After 42 nodes, 11 on tree, 1e+50 best solution, best possible 2.9954893 (115.87 seconds)
Cbc0010I After 43 nodes, 12 on tree, 1e+50 best solution, best possible 2.9954893 (118.05 seconds)
Cbc0010I After 44 nodes, 12 on tree, 1e+50 best solution, best possible 2.9954893 (120.06 seconds)
Cbc0010I After 45 nodes, 13 on tree, 1e+50 best solution, best possible 2.9954893 (122.70 seconds)
Cbc0010I After 46 nodes, 14 on tree, 1e+50 best solution, best possible 2.9954893 (124.59 seconds)
Cbc0010I After 47 nodes, 15 on tree, 1e+50 best solution, best possible 2.9954893 (125.51 seconds)
Cbc0010I After 48 nodes, 16 on tree, 1e+50 best solution, best possible 2.9954893 (127.51 seconds)
Cbc0010I After 50 nodes, 17 on tree, 1e+50 best solution, best possible 2.9954893 (129.36 seconds)
Cbc0010I After 51 nodes, 17 on tree, 1e+50 best solution, best possible 2.9954893 (131.01 seconds)
Cbc0010I After 54 nodes, 18 on tree, 1e+50 best solution, best possible 2.9954893 (131.81 seconds)
Cbc0010I After 58 nodes, 17 on tree, 1e+50 best solution, best possible 2.9954893 (132.74 seconds)
Cbc0010I After 59 nodes, 18 on tree, 1e+50 best solution, best possible 2.9954893 (134.63 seconds)
Cbc0010I After 60 nodes, 18 on tree, 1e+50 best solution, best possible 2.9954893 (135.35 seconds)
Cbc0010I After 63 nodes, 15 on tree, 1e+50 best solution, best possible 2.9954893 (137.05 seconds)
Cbc0010I After 66 nodes, 14 on tree, 1e+50 best solution, best possible 2.9954893 (138.09 seconds)
Cbc0010I After 68 nodes, 16 on tree, 1e+50 best solution, best possible 2.9954893 (138.94 seconds)
Cbc0010I After 71 nodes, 16 on tree, 1e+50 best solution, best possible 2.9954893 (139.74 seconds)
Cbc0010I After 72 nodes, 15 on tree, 1e+50 best solution, best possible 2.9954893 (141.03 seconds)
Cbc0010I After 73 nodes, 15 on tree, 1e+50 best solution, best possible 2.9954893 (142.23 seconds)
Cbc0010I After 74 nodes, 15 on tree, 1e+50 best solution, best possible 2.9954893 (144.90 seconds)
Cbc0010I After 75 nodes, 16 on tree, 1e+50 best solution, best possible 2.9954893 (148.59 seconds)
Cbc0010I After 79 nodes, 15 on tree, 1e+50 best solution, best possible 2.9954893 (149.81 seconds)
Cbc0010I After 81 nodes, 14 on tree, 1e+50 best solution, best possible 2.9954893 (152.53 seconds)
Cbc0010I After 84 nodes, 14 on tree, 1e+50 best solution, best possible 2.9954893 (155.23 seconds)
Cbc0010I After 85 nodes, 15 on tree, 1e+50 best solution, best possible 2.9954893 (158.81 seconds)
Cbc0010I After 86 nodes, 16 on tree, 1e+50 best solution, best possible 2.9954893 (161.07 seconds)
Cbc0010I After 87 nodes, 17 on tree, 1e+50 best solution, best possible 2.9954893 (162.88 seconds)
Cbc0010I After 88 nodes, 18 on tree, 1e+50 best solution, best possible 2.9954893 (163.78 seconds)
Cbc0010I After 89 nodes, 19 on tree, 1e+50 best solution, best possible 2.9954893 (165.53 seconds)
Cbc0010I After 90 nodes, 19 on tree, 1e+50 best solution, best possible 2.9954893 (167.50 seconds)
Cbc0010I After 91 nodes, 19 on tree, 1e+50 best solution, best possible 2.9954893 (169.13 seconds)
Cbc0010I After 92 nodes, 20 on tree, 1e+50 best solution, best possible 2.9954893 (172.36 seconds)
Cbc0010I After 94 nodes, 20 on tree, 1e+50 best solution, best possible 2.9954893 (173.36 seconds)
Cbc0010I After 97 nodes, 18 on tree, 1e+50 best solution, best possible 2.9954893 (176.41 seconds)
Cbc0010I After 98 nodes, 19 on tree, 1e+50 best solution, best possible 2.9954893 (179.28 seconds)
Cbc0010I After 99 nodes, 19 on tree, 1e+50 best solution, best possible 2.9954893 (182.42 seconds)
Cbc0010I After 100 nodes, 20 on tree, 1e+50 best solution, best possible 2.9954893 (184.75 seconds)
Cbc0010I After 101 nodes, 21 on tree, 1e+50 best solution, best possible 2.9954893 (187.62 seconds)
Cbc0010I After 103 nodes, 21 on tree, 1e+50 best solution, best possible 2.9954893 (189.42 seconds)
Cbc0010I After 104 nodes, 22 on tree, 1e+50 best solution, best possible 2.9954893 (190.14 seconds)
Cbc0010I After 105 nodes, 22 on tree, 1e+50 best solution, best possible 2.9954893 (193.07 seconds)
Cbc0010I After 106 nodes, 23 on tree, 1e+50 best solution, best possible 2.9954893 (196.10 seconds)
Cbc0010I After 108 nodes, 22 on tree, 1e+50 best solution, best possible 2.9954893 (198.76 seconds)
Cbc0010I After 109 nodes, 22 on tree, 1e+50 best solution, best possible 2.9954893 (201.01 seconds)
Cbc0010I After 112 nodes, 22 on tree, 1e+50 best solution, best possible 2.9954893 (203.31 seconds)
Cbc0010I After 113 nodes, 22 on tree, 1e+50 best solution, best possible 2.9954893 (204.20 seconds)
Cbc0010I After 116 nodes, 22 on tree, 1e+50 best solution, best possible 2.9954893 (205.98 seconds)
Cbc0010I After 118 nodes, 22 on tree, 1e+50 best solution, best possible 2.9954893 (208.03 seconds)
Cbc0010I After 119 nodes, 23 on tree, 1e+50 best solution, best possible 2.9954893 (209.76 seconds)
Cbc0010I After 120 nodes, 24 on tree, 1e+50 best solution, best possible 2.9954893 (212.92 seconds)
Cbc0010I After 121 nodes, 24 on tree, 1e+50 best solution, best possible 2.9954893 (215.95 seconds)
Cbc0010I After 123 nodes, 24 on tree, 1e+50 best solution, best possible 2.9954893 (219.62 seconds)
Cbc0010I After 124 nodes, 23 on tree, 1e+50 best solution, best possible 2.9954893 (220.54 seconds)
Cbc0010I After 125 nodes, 23 on tree, 1e+50 best solution, best possible 2.9954893 (221.99 seconds)
Cbc0010I After 126 nodes, 24 on tree, 1e+50 best solution, best possible 2.9954893 (224.46 seconds)
Cbc0010I After 127 nodes, 25 on tree, 1e+50 best solution, best possible 2.9954893 (227.41 seconds)
Cbc0010I After 130 nodes, 24 on tree, 1e+50 best solution, best possible 2.9954893 (229.94 seconds)
Cbc0010I After 135 nodes, 23 on tree, 1e+50 best solution, best possible 2.9954893 (231.62 seconds)
Cbc0010I After 136 nodes, 24 on tree, 1e+50 best solution, best possible 2.9954893 (232.88 seconds)
Cbc0010I After 139 nodes, 25 on tree, 1e+50 best solution, best possible 2.9954893 (234.06 seconds)
Cbc0010I After 140 nodes, 26 on tree, 1e+50 best solution, best possible 2.9954893 (234.94 seconds)
Cbc0010I After 142 nodes, 26 on tree, 1e+50 best solution, best possible 2.9954893 (235.91 seconds)
Cbc0010I After 147 nodes, 29 on tree, 1e+50 best solution, best possible 2.9954893 (236.88 seconds)
Cbc0010I After 153 nodes, 27 on tree, 1e+50 best solution, best possible 2.9954893 (239.27 seconds)
Cbc0004I Integer solution of 4 found after 31677 iterations and 154 nodes (239.32 seconds)
Cbc0001I Search completed - best objective 4, took 31677 iterations and 155 nodes (239.32 seconds)
Cbc0032I Strong branching done 1464 times (36479 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 29, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.57669 to 2.99549
Probing was tried 132 times and created 1326 cuts of which 0 were active after adding rounds of cuts (0.944293 seconds)
Gomory was tried 131 times and created 173 cuts of which 0 were active after adding rounds of cuts (1.68679 seconds)
liftKnapsack was tried 131 times and created 2116 cuts of which 0 were active after adding rounds of cuts (209.161 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026585 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.101785 seconds)
MixedIntegerRounding2 was tried 131 times and created 810 cuts of which 0 were active after adding rounds of cuts (0.552209 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003258 seconds)
TwoMirCuts was tried 131 times and created 429 cuts of which 0 were active after adding rounds of cuts (0.460437 seconds)
ZeroHalf was tried 131 times and created 1004 cuts of which 0 were active after adding rounds of cuts (1.23215 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               155
Total iterations:               31677
Time (CPU seconds):             239.038
Time (Wallclock seconds):       239.378
Total time (CPU seconds):       239.058   (Wallclock seconds):       239.441
