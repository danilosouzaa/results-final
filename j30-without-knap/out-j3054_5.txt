Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3054/j3054_5.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3054_5.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.137946 seconds
Cgl0002I 17 variables fixed
Cgl0003I 18 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 243 rows, 556 columns (556 integer (556 of which binary)) and 8318 elements
Coin3009W Conflict graph built in 0.021 seconds, density: 1.636%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 556 objects (556 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 69 integers unsatisfied sum - 11.357
Cbc0038I Pass   1: suminf.    5.57093 (33) obj. 0 iterations 88
Cbc0038I Pass   2: suminf.    4.82822 (33) obj. 0 iterations 33
Cbc0038I Pass   3: suminf.    5.19655 (27) obj. 0 iterations 67
Cbc0038I Pass   4: suminf.    4.76883 (25) obj. 0 iterations 36
Cbc0038I Pass   5: suminf.    4.29618 (25) obj. 0 iterations 29
Cbc0038I Pass   6: suminf.    4.20317 (28) obj. 0 iterations 22
Cbc0038I Pass   7: suminf.    5.68323 (21) obj. 0 iterations 91
Cbc0038I Pass   8: suminf.    3.91057 (26) obj. 0 iterations 39
Cbc0038I Pass   9: suminf.    3.80687 (25) obj. 0 iterations 6
Cbc0038I Pass  10: suminf.    6.17283 (30) obj. 0 iterations 86
Cbc0038I Pass  11: suminf.    4.39466 (29) obj. 0 iterations 78
Cbc0038I Pass  12: suminf.    4.33109 (28) obj. 0 iterations 5
Cbc0038I Pass  13: suminf.    5.73867 (28) obj. 0 iterations 103
Cbc0038I Pass  14: suminf.    4.86218 (20) obj. 0 iterations 79
Cbc0038I Pass  15: suminf.    4.83171 (19) obj. 0 iterations 12
Cbc0038I Pass  16: suminf.    5.14700 (23) obj. 0 iterations 55
Cbc0038I Pass  17: suminf.    3.05515 (18) obj. 0 iterations 57
Cbc0038I Pass  18: suminf.    2.60315 (20) obj. 0 iterations 33
Cbc0038I Pass  19: suminf.    2.52174 (20) obj. 0 iterations 21
Cbc0038I Pass  20: suminf.    6.60811 (22) obj. 0 iterations 67
Cbc0038I Pass  21: suminf.    4.45887 (15) obj. 0 iterations 33
Cbc0038I Pass  22: suminf.    3.45887 (13) obj. 0 iterations 37
Cbc0038I Pass  23: suminf.    3.40664 (13) obj. 0 iterations 68
Cbc0038I Pass  24: suminf.    2.81443 (11) obj. 0 iterations 20
Cbc0038I Pass  25: suminf.    4.45887 (13) obj. 0 iterations 81
Cbc0038I Pass  26: suminf.    3.45887 (13) obj. 0 iterations 52
Cbc0038I Pass  27: suminf.    2.73233 (13) obj. 0 iterations 59
Cbc0038I Pass  28: suminf.    2.44300 (12) obj. 0 iterations 28
Cbc0038I Pass  29: suminf.    3.23346 (16) obj. 0 iterations 56
Cbc0038I Pass  30: suminf.    2.86060 (14) obj. 0 iterations 33
Cbc0038I Pass  31: suminf.    3.51095 (14) obj. 0 iterations 44
Cbc0038I Pass  32: suminf.    9.15320 (36) obj. 0 iterations 102
Cbc0038I Pass  33: suminf.    5.82933 (29) obj. 0 iterations 79
Cbc0038I Pass  34: suminf.    5.24941 (26) obj. 0 iterations 31
Cbc0038I Pass  35: suminf.    4.78321 (25) obj. 0 iterations 18
Cbc0038I Pass  36: suminf.    4.74830 (27) obj. 0 iterations 14
Cbc0038I Pass  37: suminf.    4.16499 (16) obj. 0 iterations 82
Cbc0038I Pass  38: suminf.    2.53628 (14) obj. 0 iterations 55
Cbc0038I Pass  39: suminf.    4.49329 (16) obj. 0 iterations 50
Cbc0038I Pass  40: suminf.    3.65030 (13) obj. 0 iterations 24
Cbc0038I Pass  41: suminf.    3.64479 (14) obj. 0 iterations 75
Cbc0038I Pass  42: suminf.    2.53695 (14) obj. 0 iterations 50
Cbc0038I Pass  43: suminf.    2.53628 (14) obj. 0 iterations 7
Cbc0038I Pass  44: suminf.    4.49329 (16) obj. 0 iterations 52
Cbc0038I Pass  45: suminf.    3.65030 (13) obj. 0 iterations 22
Cbc0038I Pass  46: suminf.    3.64479 (14) obj. 0 iterations 77
Cbc0038I Pass  47: suminf.    2.53695 (14) obj. 0 iterations 45
Cbc0038I Pass  48: suminf.    2.53628 (14) obj. 0 iterations 5
Cbc0038I Pass  49: suminf.    4.49329 (16) obj. 0 iterations 51
Cbc0038I Pass  50: suminf.    3.65030 (13) obj. 0 iterations 18
Cbc0038I Pass  51: suminf.    3.64479 (14) obj. 0 iterations 76
Cbc0038I Pass  52: suminf.    2.53695 (14) obj. 0 iterations 46
Cbc0038I Pass  53: suminf.    2.53628 (14) obj. 0 iterations 5
Cbc0038I Pass  54: suminf.    4.49329 (16) obj. 0 iterations 48
Cbc0038I Pass  55: suminf.    3.65030 (13) obj. 0 iterations 19
Cbc0038I Pass  56: suminf.    3.77418 (15) obj. 0 iterations 52
Cbc0038I Pass  57: suminf.    6.83003 (31) obj. 0 iterations 81
Cbc0038I Pass  58: suminf.    4.70197 (21) obj. 0 iterations 107
Cbc0038I Pass  59: suminf.    3.19917 (19) obj. 0 iterations 58
Cbc0038I Pass  60: suminf.    5.73621 (19) obj. 0 iterations 57
Cbc0038I Pass  61: suminf.    4.51648 (15) obj. 0 iterations 58
Cbc0038I Pass  62: suminf.    3.99683 (14) obj. 0 iterations 17
Cbc0038I Pass  63: suminf.    4.73527 (15) obj. 0 iterations 75
Cbc0038I Pass  64: suminf.    2.62177 (15) obj. 0 iterations 62
Cbc0038I Pass  65: suminf.    2.53605 (17) obj. 0 iterations 16
Cbc0038I Pass  66: suminf.    5.49734 (23) obj. 0 iterations 101
Cbc0038I Pass  67: suminf.    4.15368 (21) obj. 0 iterations 61
Cbc0038I Pass  68: suminf.    3.66447 (19) obj. 0 iterations 14
Cbc0038I Pass  69: suminf.    3.35228 (19) obj. 0 iterations 4
Cbc0038I Pass  70: suminf.    5.18126 (18) obj. 0 iterations 94
Cbc0038I Pass  71: suminf.    4.31938 (20) obj. 0 iterations 43
Cbc0038I Pass  72: suminf.    3.90655 (20) obj. 0 iterations 53
Cbc0038I Pass  73: suminf.    4.27857 (15) obj. 0 iterations 24
Cbc0038I Pass  74: suminf.    3.10147 (16) obj. 0 iterations 47
Cbc0038I Pass  75: suminf.    2.58698 (14) obj. 0 iterations 38
Cbc0038I Pass  76: suminf.    4.44278 (21) obj. 0 iterations 66
Cbc0038I Pass  77: suminf.    4.38811 (21) obj. 0 iterations 25
Cbc0038I Pass  78: suminf.    5.33472 (20) obj. 0 iterations 81
Cbc0038I Pass  79: suminf.    3.80741 (18) obj. 0 iterations 40
Cbc0038I Pass  80: suminf.    3.51471 (22) obj. 0 iterations 8
Cbc0038I Pass  81: suminf.    3.49994 (20) obj. 0 iterations 6
Cbc0038I Pass  82: suminf.    7.28674 (24) obj. 0 iterations 80
Cbc0038I Pass  83: suminf.    6.41528 (24) obj. 0 iterations 55
Cbc0038I Pass  84: suminf.    3.61802 (20) obj. 0 iterations 85
Cbc0038I Pass  85: suminf.    3.24044 (23) obj. 0 iterations 27
Cbc0038I Pass  86: suminf.    3.17320 (22) obj. 0 iterations 14
Cbc0038I Pass  87: suminf.    5.92697 (26) obj. 0 iterations 65
Cbc0038I Pass  88: suminf.    5.08543 (20) obj. 0 iterations 49
Cbc0038I Pass  89: suminf.    3.96227 (21) obj. 0 iterations 54
Cbc0038I Pass  90: suminf.    3.46825 (16) obj. 0 iterations 39
Cbc0038I Pass  91: suminf.    3.42242 (17) obj. 0 iterations 25
Cbc0038I Pass  92: suminf.    5.36592 (23) obj. 0 iterations 74
Cbc0038I Pass  93: suminf.    4.12231 (17) obj. 0 iterations 49
Cbc0038I Pass  94: suminf.    4.07738 (15) obj. 0 iterations 18
Cbc0038I Pass  95: suminf.    6.80508 (24) obj. 0 iterations 72
Cbc0038I Pass  96: suminf.    4.24504 (21) obj. 0 iterations 27
Cbc0038I Pass  97: suminf.    3.33095 (15) obj. 0 iterations 39
Cbc0038I Pass  98: suminf.    3.62302 (21) obj. 0 iterations 81
Cbc0038I Pass  99: suminf.    2.58586 (17) obj. 0 iterations 51
Cbc0038I Pass 100: suminf.   14.24030 (42) obj. 0 iterations 116
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 359 integers at bound fixed and 0 continuous
Cbc0038I Full problem 243 rows 556 columns, reduced to 152 rows 177 columns
Cbc0038I Mini branch and bound did not improve solution (3.96 seconds)
Cbc0038I Full problem 244 rows 556 columns, reduced to 243 rows 556 columns - too large
Cbc0038I After 4.04 seconds - Feasibility pump exiting - took 2.90 seconds
Cbc0031I 61 added rows had average density of 39.360656
Cbc0013I At root node, 61 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 131 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.509 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 199 row cuts average 524.1 elements, 0 column cuts (0 active)  in 0.381 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 417 row cuts average 9.6 elements, 0 column cuts (0 active)  in 8.710 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 20 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 41 row cuts average 42.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 192 row cuts average 331.5 elements, 0 column cuts (0 active)  in 0.326 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 70 row cuts average 102.7 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (15.69 seconds)
Cbc0010I After 7 nodes, 4 on tree, 1e+50 best solution, best possible 0 (16.43 seconds)
Cbc0010I After 13 nodes, 8 on tree, 1e+50 best solution, best possible 0 (17.13 seconds)
Cbc0010I After 32 nodes, 15 on tree, 1e+50 best solution, best possible 0 (17.86 seconds)
Cbc0010I After 77 nodes, 18 on tree, 1e+50 best solution, best possible 0 (18.56 seconds)
Cbc0010I After 213 nodes, 27 on tree, 1e+50 best solution, best possible 0 (19.26 seconds)
Cbc0010I After 350 nodes, 42 on tree, 1e+50 best solution, best possible 0 (19.97 seconds)
Cbc0010I After 520 nodes, 50 on tree, 1e+50 best solution, best possible 0 (20.67 seconds)
Cbc0010I After 655 nodes, 44 on tree, 1e+50 best solution, best possible 0 (21.38 seconds)
Cbc0010I After 701 nodes, 46 on tree, 1e+50 best solution, best possible 0 (22.08 seconds)
Cbc0010I After 755 nodes, 42 on tree, 1e+50 best solution, best possible 0 (22.78 seconds)
Cbc0010I After 828 nodes, 40 on tree, 1e+50 best solution, best possible 0 (23.51 seconds)
Cbc0010I After 897 nodes, 37 on tree, 1e+50 best solution, best possible 0 (24.23 seconds)
Cbc0010I After 957 nodes, 38 on tree, 1e+50 best solution, best possible 0 (25.00 seconds)
Cbc0010I After 1002 nodes, 37 on tree, 1e+50 best solution, best possible 0 (25.85 seconds)
Cbc0010I After 1053 nodes, 31 on tree, 1e+50 best solution, best possible 0 (26.58 seconds)
Cbc0010I After 1113 nodes, 29 on tree, 1e+50 best solution, best possible 0 (27.29 seconds)
Cbc0010I After 1166 nodes, 34 on tree, 1e+50 best solution, best possible 0 (27.99 seconds)
Cbc0010I After 1233 nodes, 33 on tree, 1e+50 best solution, best possible 0 (28.70 seconds)
Cbc0010I After 1283 nodes, 14 on tree, 1e+50 best solution, best possible 0 (29.42 seconds)
Cbc0010I After 1345 nodes, 17 on tree, 1e+50 best solution, best possible 0 (30.13 seconds)
Cbc0010I After 1408 nodes, 16 on tree, 1e+50 best solution, best possible 0 (30.84 seconds)
Cbc0010I After 1463 nodes, 16 on tree, 1e+50 best solution, best possible 0 (31.57 seconds)
Cbc0010I After 1528 nodes, 23 on tree, 1e+50 best solution, best possible 0 (32.27 seconds)
Cbc0010I After 1595 nodes, 22 on tree, 1e+50 best solution, best possible 0 (32.99 seconds)
Cbc0010I After 1648 nodes, 19 on tree, 1e+50 best solution, best possible 0 (33.71 seconds)
Cbc0010I After 1698 nodes, 25 on tree, 1e+50 best solution, best possible 0 (34.42 seconds)
Cbc0010I After 1752 nodes, 23 on tree, 1e+50 best solution, best possible 0 (35.13 seconds)
Cbc0010I After 1815 nodes, 36 on tree, 1e+50 best solution, best possible 0 (35.84 seconds)
Cbc0010I After 1860 nodes, 19 on tree, 1e+50 best solution, best possible 0 (36.55 seconds)
Cbc0010I After 1923 nodes, 18 on tree, 1e+50 best solution, best possible 0 (37.25 seconds)
Cbc0010I After 1981 nodes, 12 on tree, 1e+50 best solution, best possible 0 (37.95 seconds)
Cbc0010I After 2019 nodes, 21 on tree, 1e+50 best solution, best possible 0 (38.66 seconds)
Cbc0010I After 2077 nodes, 14 on tree, 1e+50 best solution, best possible 0 (39.40 seconds)
Cbc0010I After 2122 nodes, 51 on tree, 1e+50 best solution, best possible 0 (40.11 seconds)
Cbc0010I After 2170 nodes, 54 on tree, 1e+50 best solution, best possible 0 (40.82 seconds)
Cbc0010I After 2261 nodes, 49 on tree, 1e+50 best solution, best possible 0 (41.52 seconds)
Cbc0010I After 2353 nodes, 54 on tree, 1e+50 best solution, best possible 0 (42.24 seconds)
Cbc0010I After 2399 nodes, 44 on tree, 1e+50 best solution, best possible 0 (42.94 seconds)
Cbc0010I After 2493 nodes, 44 on tree, 1e+50 best solution, best possible 0 (43.65 seconds)
Cbc0010I After 2604 nodes, 45 on tree, 1e+50 best solution, best possible 0 (44.38 seconds)
Cbc0010I After 2698 nodes, 47 on tree, 1e+50 best solution, best possible 0 (45.08 seconds)
Cbc0010I After 2821 nodes, 62 on tree, 1e+50 best solution, best possible 0 (45.78 seconds)
Cbc0010I After 2965 nodes, 51 on tree, 1e+50 best solution, best possible 0 (46.49 seconds)
Cbc0010I After 3078 nodes, 53 on tree, 1e+50 best solution, best possible 0 (47.19 seconds)
Cbc0010I After 3211 nodes, 48 on tree, 1e+50 best solution, best possible 0 (47.90 seconds)
Cbc0010I After 3313 nodes, 48 on tree, 1e+50 best solution, best possible 0 (48.61 seconds)
Cbc0010I After 3419 nodes, 40 on tree, 1e+50 best solution, best possible 0 (49.31 seconds)
Cbc0010I After 3484 nodes, 40 on tree, 1e+50 best solution, best possible 0 (50.01 seconds)
Cbc0010I After 3552 nodes, 42 on tree, 1e+50 best solution, best possible 0 (50.73 seconds)
Cbc0010I After 3607 nodes, 39 on tree, 1e+50 best solution, best possible 0 (51.43 seconds)
Cbc0010I After 3679 nodes, 47 on tree, 1e+50 best solution, best possible 0 (52.13 seconds)
Cbc0010I After 3769 nodes, 50 on tree, 1e+50 best solution, best possible 0 (52.85 seconds)
Cbc0010I After 3883 nodes, 49 on tree, 1e+50 best solution, best possible 0 (53.56 seconds)
Cbc0010I After 3974 nodes, 42 on tree, 1e+50 best solution, best possible 0 (54.26 seconds)
Cbc0010I After 4071 nodes, 40 on tree, 1e+50 best solution, best possible 0 (54.98 seconds)
Cbc0010I After 4164 nodes, 49 on tree, 1e+50 best solution, best possible 0 (55.68 seconds)
Cbc0010I After 4241 nodes, 38 on tree, 1e+50 best solution, best possible 0 (56.39 seconds)
Cbc0010I After 4339 nodes, 34 on tree, 1e+50 best solution, best possible 0 (57.10 seconds)
Cbc0010I After 4422 nodes, 40 on tree, 1e+50 best solution, best possible 0 (57.80 seconds)
Cbc0010I After 4497 nodes, 40 on tree, 1e+50 best solution, best possible 0 (58.51 seconds)
Cbc0010I After 4595 nodes, 39 on tree, 1e+50 best solution, best possible 0 (59.21 seconds)
Cbc0010I After 4680 nodes, 34 on tree, 1e+50 best solution, best possible 0 (59.91 seconds)
Cbc0004I Integer solution of 0 found after 172150 iterations and 4728 nodes (60.35 seconds)
Cbc0001I Search completed - best objective 0, took 172150 iterations and 4728 nodes (60.35 seconds)
Cbc0032I Strong branching done 9944 times (180224 iterations), fathomed 281 nodes and fixed 628 variables
Cbc0035I Maximum depth 76, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 131 cuts of which 0 were active after adding rounds of cuts (0.508684 seconds)
Gomory was tried 10 times and created 199 cuts of which 0 were active after adding rounds of cuts (0.38146 seconds)
liftKnapsack was tried 10 times and created 417 cuts of which 0 were active after adding rounds of cuts (8.70973 seconds)
Clique was tried 10 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.011273 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.046869 seconds)
MixedIntegerRounding2 was tried 10 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.034508 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002295 seconds)
TwoMirCuts was tried 10 times and created 192 cuts of which 0 were active after adding rounds of cuts (0.325916 seconds)
ZeroHalf was tried 10 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.067362 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               4728
Total iterations:               172150
Time (CPU seconds):             60.4448
Time (Wallclock seconds):       60.3997
Total time (CPU seconds):       60.4565   (Wallclock seconds):       60.4141
