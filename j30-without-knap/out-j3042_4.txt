Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3042/j3042_4.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3042_4.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.074494 seconds
Cgl0002I 17 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 255 rows, 746 columns (746 integer (746 of which binary)) and 8143 elements
Coin3009W Conflict graph built in 0.031 seconds, density: 1.286%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 746 objects (746 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 84 integers unsatisfied sum - 24.2037
Cbc0038I Pass   1: suminf.    8.81755 (33) obj. 0 iterations 84
Cbc0038I Pass   2: suminf.    8.32518 (32) obj. 0 iterations 5
Cbc0038I Pass   3: suminf.    7.74885 (30) obj. 0 iterations 13
Cbc0038I Pass   4: suminf.    7.30679 (32) obj. 0 iterations 10
Cbc0038I Pass   5: suminf.    8.89402 (33) obj. 0 iterations 52
Cbc0038I Pass   6: suminf.    7.12717 (32) obj. 0 iterations 24
Cbc0038I Pass   7: suminf.    6.74613 (34) obj. 0 iterations 12
Cbc0038I Pass   8: suminf.    8.72527 (36) obj. 0 iterations 40
Cbc0038I Pass   9: suminf.    7.24442 (29) obj. 0 iterations 42
Cbc0038I Pass  10: suminf.    9.05936 (28) obj. 0 iterations 54
Cbc0038I Pass  11: suminf.    6.82603 (28) obj. 0 iterations 55
Cbc0038I Pass  12: suminf.    6.82603 (28) obj. 0 iterations 0
Cbc0038I Pass  13: suminf.    7.57003 (32) obj. 0 iterations 29
Cbc0038I Pass  14: suminf.    7.24442 (29) obj. 0 iterations 25
Cbc0038I Pass  15: suminf.    9.73477 (28) obj. 0 iterations 57
Cbc0038I Pass  16: suminf.    7.40936 (28) obj. 0 iterations 41
Cbc0038I Pass  17: suminf.    8.26690 (36) obj. 0 iterations 24
Cbc0038I Pass  18: suminf.    7.90490 (32) obj. 0 iterations 10
Cbc0038I Pass  19: suminf.    8.14370 (36) obj. 0 iterations 41
Cbc0038I Pass  20: suminf.    7.84246 (31) obj. 0 iterations 24
Cbc0038I Pass  21: suminf.    8.53966 (37) obj. 0 iterations 31
Cbc0038I Pass  22: suminf.   12.99897 (45) obj. 0 iterations 95
Cbc0038I Pass  23: suminf.    7.35072 (33) obj. 0 iterations 72
Cbc0038I Pass  24: suminf.    7.24357 (33) obj. 0 iterations 15
Cbc0038I Pass  25: suminf.    6.77987 (34) obj. 0 iterations 58
Cbc0038I Pass  26: suminf.    5.75248 (29) obj. 0 iterations 19
Cbc0038I Pass  27: suminf.    5.70944 (28) obj. 0 iterations 12
Cbc0038I Pass  28: suminf.    8.08251 (26) obj. 0 iterations 46
Cbc0038I Pass  29: suminf.    6.51888 (26) obj. 0 iterations 25
Cbc0038I Pass  30: suminf.    6.51888 (26) obj. 0 iterations 1
Cbc0038I Pass  31: suminf.    8.21208 (32) obj. 0 iterations 34
Cbc0038I Pass  32: suminf.    7.65955 (27) obj. 0 iterations 18
Cbc0038I Pass  33: suminf.    7.26394 (27) obj. 0 iterations 6
Cbc0038I Pass  34: suminf.    7.61802 (33) obj. 0 iterations 29
Cbc0038I Pass  35: suminf.   14.68304 (48) obj. 0 iterations 101
Cbc0038I Pass  36: suminf.    9.04149 (29) obj. 0 iterations 75
Cbc0038I Pass  37: suminf.    6.84304 (31) obj. 0 iterations 33
Cbc0038I Pass  38: suminf.   11.92286 (40) obj. 0 iterations 67
Cbc0038I Pass  39: suminf.    9.64734 (40) obj. 0 iterations 32
Cbc0038I Pass  40: suminf.    7.73994 (32) obj. 0 iterations 15
Cbc0038I Pass  41: suminf.    6.32253 (24) obj. 0 iterations 31
Cbc0038I Pass  42: suminf.    6.23919 (24) obj. 0 iterations 1
Cbc0038I Pass  43: suminf.    6.99710 (25) obj. 0 iterations 43
Cbc0038I Pass  44: suminf.    6.47528 (22) obj. 0 iterations 14
Cbc0038I Pass  45: suminf.    6.09766 (21) obj. 0 iterations 11
Cbc0038I Pass  46: suminf.    7.76711 (21) obj. 0 iterations 66
Cbc0038I Pass  47: suminf.    6.24161 (21) obj. 0 iterations 33
Cbc0038I Pass  48: suminf.    5.78065 (20) obj. 0 iterations 8
Cbc0038I Pass  49: suminf.    7.56711 (21) obj. 0 iterations 41
Cbc0038I Pass  50: suminf.    6.29161 (21) obj. 0 iterations 27
Cbc0038I Pass  51: suminf.    5.91398 (20) obj. 0 iterations 10
Cbc0038I Pass  52: suminf.    6.87408 (21) obj. 0 iterations 34
Cbc0038I Pass  53: suminf.    6.36853 (20) obj. 0 iterations 17
Cbc0038I Pass  54: suminf.    6.52437 (20) obj. 0 iterations 30
Cbc0038I Pass  55: suminf.    6.52437 (20) obj. 0 iterations 2
Cbc0038I Pass  56: suminf.    6.27437 (20) obj. 0 iterations 3
Cbc0038I Pass  57: suminf.    7.76711 (21) obj. 0 iterations 50
Cbc0038I Pass  58: suminf.    6.49161 (21) obj. 0 iterations 23
Cbc0038I Pass  59: suminf.    5.91398 (20) obj. 0 iterations 11
Cbc0038I Pass  60: suminf.    7.56711 (21) obj. 0 iterations 44
Cbc0038I Pass  61: suminf.    6.29161 (21) obj. 0 iterations 28
Cbc0038I Pass  62: suminf.    5.91398 (20) obj. 0 iterations 10
Cbc0038I Pass  63: suminf.    7.76711 (21) obj. 0 iterations 43
Cbc0038I Pass  64: suminf.    6.49161 (21) obj. 0 iterations 27
Cbc0038I Pass  65: suminf.    5.86398 (20) obj. 0 iterations 9
Cbc0038I Pass  66: suminf.    5.78065 (20) obj. 0 iterations 3
Cbc0038I Pass  67: suminf.    7.56711 (21) obj. 0 iterations 40
Cbc0038I Pass  68: suminf.    6.29161 (21) obj. 0 iterations 30
Cbc0038I Pass  69: suminf.    5.91398 (20) obj. 0 iterations 9
Cbc0038I Pass  70: suminf.    6.68040 (20) obj. 0 iterations 30
Cbc0038I Pass  71: suminf.    6.11398 (20) obj. 0 iterations 17
Cbc0038I Pass  72: suminf.    6.21954 (21) obj. 0 iterations 24
Cbc0038I Pass  73: suminf.   10.69499 (38) obj. 0 iterations 93
Cbc0038I Pass  74: suminf.    7.70384 (36) obj. 0 iterations 59
Cbc0038I Pass  75: suminf.    8.24420 (30) obj. 0 iterations 56
Cbc0038I Pass  76: suminf.    7.49860 (32) obj. 0 iterations 16
Cbc0038I Pass  77: suminf.    8.00629 (31) obj. 0 iterations 33
Cbc0038I Pass  78: suminf.    7.45105 (33) obj. 0 iterations 40
Cbc0038I Pass  79: suminf.    7.57870 (32) obj. 0 iterations 32
Cbc0038I Pass  80: suminf.    7.05719 (31) obj. 0 iterations 27
Cbc0038I Pass  81: suminf.    7.59218 (32) obj. 0 iterations 33
Cbc0038I Pass  82: suminf.    7.05719 (31) obj. 0 iterations 27
Cbc0038I Pass  83: suminf.   14.62184 (51) obj. 0 iterations 112
Cbc0038I Pass  84: suminf.    7.92246 (33) obj. 0 iterations 64
Cbc0038I Pass  85: suminf.    7.77934 (34) obj. 0 iterations 15
Cbc0038I Pass  86: suminf.    9.22088 (36) obj. 0 iterations 62
Cbc0038I Pass  87: suminf.    8.17589 (35) obj. 0 iterations 21
Cbc0038I Pass  88: suminf.    8.15673 (32) obj. 0 iterations 17
Cbc0038I Pass  89: suminf.    9.52446 (33) obj. 0 iterations 50
Cbc0038I Pass  90: suminf.    7.19545 (24) obj. 0 iterations 36
Cbc0038I Pass  91: suminf.    4.62402 (19) obj. 0 iterations 10
Cbc0038I Pass  92: suminf.    4.62402 (19) obj. 0 iterations 3
Cbc0038I Pass  93: suminf.    6.22150 (20) obj. 0 iterations 34
Cbc0038I Pass  94: suminf.   15.09814 (57) obj. 0 iterations 126
Cbc0038I Pass  95: suminf.    8.16784 (35) obj. 0 iterations 98
Cbc0038I Pass  96: suminf.    8.16784 (35) obj. 0 iterations 5
Cbc0038I Pass  97: suminf.    8.37479 (26) obj. 0 iterations 41
Cbc0038I Pass  98: suminf.    7.38037 (31) obj. 0 iterations 26
Cbc0038I Pass  99: suminf.    9.35512 (29) obj. 0 iterations 84
Cbc0038I Pass 100: suminf.   13.59802 (50) obj. 0 iterations 113
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 486 integers at bound fixed and 0 continuous
Cbc0038I Full problem 255 rows 746 columns, reduced to 204 rows 244 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.44 seconds)
Cbc0038I Full problem 256 rows 746 columns, reduced to 254 rows 746 columns - too large
Cbc0038I After 2.53 seconds - Feasibility pump exiting - took 0.71 seconds
Cbc0031I 84 added rows had average density of 70.190476
Cbc0013I At root node, 84 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 211 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.482 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 174 row cuts average 650.3 elements, 0 column cuts (0 active)  in 0.591 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 145 row cuts average 21.7 elements, 0 column cuts (0 active)  in 3.904 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 140 row cuts average 66.6 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 157.4 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 64 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (9.25 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 0 (10.06 seconds)
Cbc0010I After 9 nodes, 7 on tree, 1e+50 best solution, best possible 0 (10.76 seconds)
Cbc0010I After 24 nodes, 13 on tree, 1e+50 best solution, best possible 0 (11.46 seconds)
Cbc0010I After 63 nodes, 17 on tree, 1e+50 best solution, best possible 0 (12.16 seconds)
Cbc0004I Integer solution of 0 found after 6347 iterations and 102 nodes (12.72 seconds)
Cbc0001I Search completed - best objective 0, took 6347 iterations and 102 nodes (12.73 seconds)
Cbc0032I Strong branching done 1168 times (18907 iterations), fathomed 2 nodes and fixed 12 variables
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 211 cuts of which 0 were active after adding rounds of cuts (0.481935 seconds)
Gomory was tried 10 times and created 174 cuts of which 0 were active after adding rounds of cuts (0.591191 seconds)
liftKnapsack was tried 10 times and created 145 cuts of which 0 were active after adding rounds of cuts (3.90422 seconds)
Clique was tried 10 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.01146 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.052503 seconds)
MixedIntegerRounding2 was tried 10 times and created 140 cuts of which 0 were active after adding rounds of cuts (0.077871 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002705 seconds)
TwoMirCuts was tried 10 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.121438 seconds)
ZeroHalf was tried 10 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.074748 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               102
Total iterations:               6347
Time (CPU seconds):             12.8231
Time (Wallclock seconds):       12.773
Total time (CPU seconds):       12.8361   (Wallclock seconds):       12.7858
