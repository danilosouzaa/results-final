Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3041/j3041_10.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3041_10.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.149892 seconds
Cgl0002I 15 variables fixed
Cgl0003I 6 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 287 rows, 782 columns (782 integer (779 of which binary)) and 9185 elements
Coin3009W Conflict graph built in 0.084 seconds, density: 1.819%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 782 objects (782 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 61 integers unsatisfied sum - 18.9804
Cbc0038I Pass   1: suminf.   11.54345 (51) obj. 0.574794 iterations 172
Cbc0038I Pass   2: suminf.    8.68125 (44) obj. 1 iterations 49
Cbc0038I Pass   3: suminf.    8.37547 (44) obj. 1 iterations 14
Cbc0038I Pass   4: suminf.    7.82435 (34) obj. 1 iterations 47
Cbc0038I Pass   5: suminf.    7.74125 (32) obj. 1 iterations 10
Cbc0038I Pass   6: suminf.    7.51351 (40) obj. 1 iterations 27
Cbc0038I Pass   7: suminf.    7.51087 (41) obj. 1 iterations 14
Cbc0038I Pass   8: suminf.    7.73051 (30) obj. 1 iterations 73
Cbc0038I Pass   9: suminf.    7.65705 (34) obj. 1 iterations 26
Cbc0038I Pass  10: suminf.    8.14812 (29) obj. 1 iterations 108
Cbc0038I Pass  11: suminf.    6.07282 (25) obj. 1 iterations 40
Cbc0038I Pass  12: suminf.    5.92044 (27) obj. 1 iterations 10
Cbc0038I Pass  13: suminf.    6.47937 (24) obj. 1 iterations 48
Cbc0038I Pass  14: suminf.    5.92070 (30) obj. 1 iterations 60
Cbc0038I Pass  15: suminf.    9.57689 (51) obj. 1 iterations 94
Cbc0038I Pass  16: suminf.    8.90607 (45) obj. 1 iterations 34
Cbc0038I Pass  17: suminf.    8.16974 (44) obj. 1 iterations 16
Cbc0038I Pass  18: suminf.    9.55069 (32) obj. 1 iterations 86
Cbc0038I Pass  19: suminf.    9.24883 (33) obj. 1 iterations 43
Cbc0038I Pass  20: suminf.    8.50598 (32) obj. 1 iterations 14
Cbc0038I Pass  21: suminf.    7.70079 (27) obj. 1 iterations 94
Cbc0038I Pass  22: suminf.    7.46709 (33) obj. 1 iterations 66
Cbc0038I Pass  23: suminf.    8.41053 (32) obj. 1 iterations 63
Cbc0038I Pass  24: suminf.    7.77496 (31) obj. 1 iterations 51
Cbc0038I Pass  25: suminf.    7.59744 (31) obj. 1 iterations 42
Cbc0038I Pass  26: suminf.    7.43536 (28) obj. 1 iterations 25
Cbc0038I Pass  27: suminf.    8.86837 (28) obj. 1 iterations 84
Cbc0038I Pass  28: suminf.    8.68316 (39) obj. 1 iterations 27
Cbc0038I Pass  29: suminf.    8.58164 (42) obj. 1 iterations 14
Cbc0038I Pass  30: suminf.    8.35281 (34) obj. 1 iterations 101
Cbc0038I Pass  31: suminf.    8.20995 (34) obj. 1 iterations 26
Cbc0038I Pass  32: suminf.    7.46709 (33) obj. 1 iterations 19
Cbc0038I Pass  33: suminf.    8.41053 (32) obj. 1 iterations 73
Cbc0038I Pass  34: suminf.    7.74397 (29) obj. 1 iterations 48
Cbc0038I Pass  35: suminf.    7.71040 (48) obj. 1 iterations 65
Cbc0038I Pass  36: suminf.    7.41655 (29) obj. 1 iterations 34
Cbc0038I Pass  37: suminf.   10.02768 (45) obj. 1 iterations 82
Cbc0038I Pass  38: suminf.    9.57692 (45) obj. 1 iterations 27
Cbc0038I Pass  39: suminf.    8.82914 (44) obj. 1 iterations 22
Cbc0038I Pass  40: suminf.    8.26461 (47) obj. 1 iterations 71
Cbc0038I Pass  41: suminf.    7.84472 (45) obj. 1 iterations 42
Cbc0038I Pass  42: suminf.    7.87174 (46) obj. 1 iterations 8
Cbc0038I Pass  43: suminf.    8.78899 (30) obj. 1 iterations 75
Cbc0038I Pass  44: suminf.    8.14833 (27) obj. 1 iterations 25
Cbc0038I Pass  45: suminf.    7.93926 (28) obj. 1 iterations 40
Cbc0038I Pass  46: suminf.    7.71361 (26) obj. 1 iterations 21
Cbc0038I Pass  47: suminf.    8.40577 (30) obj. 1 iterations 36
Cbc0038I Pass  48: suminf.   15.15875 (64) obj. 1 iterations 133
Cbc0038I Pass  49: suminf.    9.73306 (54) obj. 1 iterations 87
Cbc0038I Pass  50: suminf.    9.84758 (54) obj. 1 iterations 43
Cbc0038I Pass  51: suminf.    8.99766 (54) obj. 1 iterations 38
Cbc0038I Pass  52: suminf.    8.97144 (54) obj. 1 iterations 4
Cbc0038I Pass  53: suminf.   12.34079 (56) obj. 1 iterations 68
Cbc0038I Pass  54: suminf.   11.13314 (48) obj. 1 iterations 39
Cbc0038I Pass  55: suminf.    8.50552 (40) obj. 1 iterations 42
Cbc0038I Pass  56: suminf.    8.28423 (41) obj. 1 iterations 14
Cbc0038I Pass  57: suminf.    7.81392 (37) obj. 1 iterations 28
Cbc0038I Pass  58: suminf.    7.64128 (41) obj. 1 iterations 27
Cbc0038I Pass  59: suminf.    7.59492 (28) obj. 1 iterations 75
Cbc0038I Pass  60: suminf.    6.66952 (25) obj. 1 iterations 28
Cbc0038I Pass  61: suminf.    6.78048 (27) obj. 1 iterations 54
Cbc0038I Pass  62: suminf.    2.38476 (10) obj. 1 iterations 56
Cbc0038I Pass  63: suminf.    2.38476 (10) obj. 1 iterations 3
Cbc0038I Pass  64: suminf.    2.38476 (10) obj. 1 iterations 2
Cbc0038I Pass  65: suminf.    2.40000 (9) obj. 1 iterations 38
Cbc0038I Pass  66: suminf.    2.00000 (8) obj. 1 iterations 14
Cbc0038I Pass  67: suminf.    1.46032 (6) obj. 1 iterations 15
Cbc0038I Pass  68: suminf.    1.46032 (6) obj. 1 iterations 14
Cbc0038I Pass  69: suminf.    3.00000 (8) obj. 1 iterations 37
Cbc0038I Pass  70: suminf.    2.00000 (8) obj. 1 iterations 20
Cbc0038I Pass  71: suminf.    2.00000 (8) obj. 1 iterations 0
Cbc0038I Pass  72: suminf.    1.46032 (6) obj. 1 iterations 15
Cbc0038I Pass  73: suminf.    1.46032 (6) obj. 1 iterations 13
Cbc0038I Pass  74: suminf.    3.00000 (8) obj. 1 iterations 40
Cbc0038I Pass  75: suminf.    2.00000 (8) obj. 1 iterations 12
Cbc0038I Pass  76: suminf.    2.00000 (8) obj. 1 iterations 0
Cbc0038I Pass  77: suminf.    1.46032 (6) obj. 1 iterations 20
Cbc0038I Pass  78: suminf.    1.46032 (6) obj. 1 iterations 12
Cbc0038I Pass  79: suminf.    3.00000 (8) obj. 1 iterations 34
Cbc0038I Pass  80: suminf.    1.44444 (6) obj. 1 iterations 17
Cbc0038I Pass  81: suminf.    1.44444 (6) obj. 1 iterations 0
Cbc0038I Pass  82: suminf.    1.01587 (5) obj. 1 iterations 13
Cbc0038I Pass  83: suminf.    1.01587 (5) obj. 1 iterations 3
Cbc0038I Pass  84: suminf.    1.44444 (6) obj. 1 iterations 44
Cbc0038I Pass  85: suminf.   14.21254 (50) obj. 1 iterations 128
Cbc0038I Pass  86: suminf.    7.23492 (30) obj. 1 iterations 135
Cbc0038I Pass  87: suminf.    7.01433 (29) obj. 1 iterations 29
Cbc0038I Pass  88: suminf.    7.35819 (32) obj. 1 iterations 127
Cbc0038I Pass  89: suminf.    5.54167 (28) obj. 1 iterations 28
Cbc0038I Pass  90: suminf.    4.70357 (24) obj. 1 iterations 46
Cbc0038I Pass  91: suminf.    5.43447 (20) obj. 1 iterations 79
Cbc0038I Pass  92: suminf.    5.43447 (20) obj. 1 iterations 7
Cbc0038I Pass  93: suminf.    4.08148 (19) obj. 1 iterations 47
Cbc0038I Pass  94: suminf.    4.08148 (19) obj. 1 iterations 4
Cbc0038I Pass  95: suminf.    4.54762 (15) obj. 1 iterations 67
Cbc0038I Pass  96: suminf.    4.48413 (18) obj. 1 iterations 27
Cbc0038I Pass  97: suminf.    1.50794 (6) obj. 1 iterations 71
Cbc0038I Pass  98: suminf.    1.28571 (6) obj. 1 iterations 11
Cbc0038I Pass  99: suminf.    1.92460 (8) obj. 1 iterations 43
Cbc0038I Pass 100: suminf.   10.14091 (34) obj. 1 iterations 102
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 536 integers at bound fixed and 0 continuous
Cbc0038I Full problem 287 rows 782 columns, reduced to 224 rows 218 columns
Cbc0038I Mini branch and bound did not improve solution (4.64 seconds)
Cbc0038I Full problem 288 rows 782 columns, reduced to 288 rows 782 columns - too large
Cbc0038I After 4.73 seconds - Feasibility pump exiting - took 2.26 seconds
Cbc0031I 55 added rows had average density of 55.545455
Cbc0013I At root node, 55 cuts changed objective from 0 to 1 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 133 row cuts average 3.4 elements, 2 column cuts (2 active)  in 0.581 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 207 row cuts average 487.1 elements, 0 column cuts (0 active)  in 0.361 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 280 row cuts average 10.6 elements, 0 column cuts (0 active)  in 4.236 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 21 row cuts average 19.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 55.9 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 168.7 elements, 0 column cuts (0 active)  in 0.258 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 75 row cuts average 57.4 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (12.90 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (14.32 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (15.51 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (16.29 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (17.60 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (18.63 seconds)
Cbc0010I After 6 nodes, 6 on tree, 1e+50 best solution, best possible 1 (19.33 seconds)
Cbc0010I After 12 nodes, 3 on tree, 1e+50 best solution, best possible 1 (20.63 seconds)
Cbc0010I After 13 nodes, 4 on tree, 1e+50 best solution, best possible 1 (21.39 seconds)
Cbc0010I After 14 nodes, 5 on tree, 1e+50 best solution, best possible 1 (22.20 seconds)
Cbc0010I After 16 nodes, 7 on tree, 1e+50 best solution, best possible 1 (23.24 seconds)
Cbc0010I After 19 nodes, 8 on tree, 1e+50 best solution, best possible 1 (24.10 seconds)
Cbc0010I After 22 nodes, 10 on tree, 1e+50 best solution, best possible 1 (24.82 seconds)
Cbc0010I After 27 nodes, 11 on tree, 1e+50 best solution, best possible 1 (25.75 seconds)
Cbc0010I After 34 nodes, 10 on tree, 1e+50 best solution, best possible 1 (26.46 seconds)
Cbc0010I After 38 nodes, 10 on tree, 1e+50 best solution, best possible 1 (27.22 seconds)
Cbc0010I After 41 nodes, 10 on tree, 1e+50 best solution, best possible 1 (28.02 seconds)
Cbc0010I After 44 nodes, 10 on tree, 1e+50 best solution, best possible 1 (28.92 seconds)
Cbc0010I After 45 nodes, 10 on tree, 1e+50 best solution, best possible 1 (29.66 seconds)
Cbc0010I After 47 nodes, 11 on tree, 1e+50 best solution, best possible 1 (30.47 seconds)
Cbc0010I After 51 nodes, 12 on tree, 1e+50 best solution, best possible 1 (31.54 seconds)
Cbc0010I After 55 nodes, 10 on tree, 1e+50 best solution, best possible 1 (32.60 seconds)
Cbc0010I After 59 nodes, 11 on tree, 1e+50 best solution, best possible 1 (33.39 seconds)
Cbc0010I After 63 nodes, 12 on tree, 1e+50 best solution, best possible 1 (34.12 seconds)
Cbc0010I After 67 nodes, 15 on tree, 1e+50 best solution, best possible 1 (34.90 seconds)
Cbc0010I After 75 nodes, 14 on tree, 1e+50 best solution, best possible 1 (35.69 seconds)
Cbc0010I After 79 nodes, 15 on tree, 1e+50 best solution, best possible 1 (36.42 seconds)
Cbc0010I After 90 nodes, 13 on tree, 1e+50 best solution, best possible 1 (37.22 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 12752 iterations and 93 nodes (37.70 seconds)
Cbc0001I Search completed - best objective 1, took 12752 iterations and 93 nodes (37.70 seconds)
Cbc0032I Strong branching done 1380 times (26223 iterations), fathomed 3 nodes and fixed 2 variables
Cbc0035I Maximum depth 20, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 92 times and created 566 cuts of which 0 were active after adding rounds of cuts (0.883637 seconds)
Gomory was tried 87 times and created 208 cuts of which 0 were active after adding rounds of cuts (0.513844 seconds)
liftKnapsack was tried 87 times and created 1750 cuts of which 0 were active after adding rounds of cuts (22.087 seconds)
Clique was tried 10 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.010381 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042788 seconds)
MixedIntegerRounding2 was tried 87 times and created 234 cuts of which 0 were active after adding rounds of cuts (0.275162 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008118 seconds)
TwoMirCuts was tried 87 times and created 380 cuts of which 0 were active after adding rounds of cuts (0.394916 seconds)
ZeroHalf was tried 87 times and created 384 cuts of which 0 were active after adding rounds of cuts (0.407382 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               93
Total iterations:               12752
Time (CPU seconds):             37.7327
Time (Wallclock seconds):       37.7497
Total time (CPU seconds):       37.7461   (Wallclock seconds):       37.7638
