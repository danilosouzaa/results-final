Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3035/j3035_6.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3035_6.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.14567 - 0.048893 seconds
Cgl0002I 6 variables fixed
Cgl0003I 2 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 285 rows, 869 columns (869 integer (868 of which binary)) and 10406 elements
Coin3009W Conflict graph built in 0.044 seconds, density: 1.223%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 869 objects (869 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 49 integers unsatisfied sum - 10.6779
Cbc0038I Pass   1: suminf.    3.44486 (18) obj. 4 iterations 41
Cbc0038I Pass   2: suminf.    4.95551 (15) obj. 4 iterations 41
Cbc0038I Pass   3: suminf.    4.95551 (15) obj. 4 iterations 12
Cbc0038I Pass   4: suminf.    4.95551 (15) obj. 4 iterations 2
Cbc0038I Pass   5: suminf.    3.45551 (10) obj. 4 iterations 32
Cbc0038I Pass   6: suminf.    3.45551 (10) obj. 4 iterations 10
Cbc0038I Pass   7: suminf.    2.95551 (10) obj. 4 iterations 26
Cbc0038I Pass   8: suminf.    2.95551 (10) obj. 4 iterations 9
Cbc0038I Pass   9: suminf.    3.45551 (10) obj. 4 iterations 25
Cbc0038I Pass  10: suminf.    5.89399 (39) obj. 3.94366 iterations 87
Cbc0038I Pass  11: suminf.    2.90714 (12) obj. 4 iterations 53
Cbc0038I Pass  12: suminf.    4.63758 (16) obj. 4 iterations 29
Cbc0038I Pass  13: suminf.    3.60820 (16) obj. 4 iterations 16
Cbc0038I Pass  14: suminf.    5.00017 (15) obj. 4 iterations 34
Cbc0038I Pass  15: suminf.    3.66294 (10) obj. 4 iterations 25
Cbc0038I Pass  16: suminf.    3.57315 (11) obj. 4 iterations 24
Cbc0038I Pass  17: suminf.    3.57315 (11) obj. 4 iterations 20
Cbc0038I Pass  18: suminf.    3.92609 (11) obj. 4 iterations 25
Cbc0038I Pass  19: suminf.    3.17609 (10) obj. 4 iterations 21
Cbc0038I Pass  20: suminf.    3.09276 (10) obj. 4 iterations 1
Cbc0038I Pass  21: suminf.    3.58450 (13) obj. 4 iterations 27
Cbc0038I Pass  22: suminf.    3.54942 (13) obj. 4 iterations 19
Cbc0038I Pass  23: suminf.    5.37847 (13) obj. 4 iterations 27
Cbc0038I Pass  24: suminf.    5.37847 (13) obj. 4 iterations 11
Cbc0038I Pass  25: suminf.    5.37847 (13) obj. 4 iterations 1
Cbc0038I Pass  26: suminf.    3.07315 (9) obj. 4 iterations 32
Cbc0038I Pass  27: suminf.    3.07315 (9) obj. 4 iterations 11
Cbc0038I Pass  28: suminf.    3.26820 (8) obj. 4 iterations 27
Cbc0038I Pass  29: suminf.    3.26820 (8) obj. 4 iterations 9
Cbc0038I Pass  30: suminf.    3.07315 (9) obj. 4 iterations 26
Cbc0038I Pass  31: suminf.    5.77619 (17) obj. 4 iterations 97
Cbc0038I Pass  32: suminf.    1.26667 (7) obj. 4 iterations 56
Cbc0038I Pass  33: suminf.    0.75385 (4) obj. 4 iterations 5
Cbc0038I Pass  34: suminf.    1.78571 (4) obj. 4 iterations 17
Cbc0038I Pass  35: suminf.    1.78571 (4) obj. 4 iterations 8
Cbc0038I Pass  36: suminf.    1.69048 (4) obj. 4 iterations 14
Cbc0038I Pass  37: suminf.    1.69048 (4) obj. 4 iterations 6
Cbc0038I Pass  38: suminf.    6.55000 (26) obj. 4 iterations 90
Cbc0038I Pass  39: suminf.    1.70000 (8) obj. 4 iterations 61
Cbc0038I Pass  40: suminf.    2.08839 (6) obj. 4 iterations 27
Cbc0038I Pass  41: suminf.    2.08839 (6) obj. 4 iterations 5
Cbc0038I Pass  42: suminf.    2.24224 (6) obj. 4 iterations 15
Cbc0038I Pass  43: suminf.    3.19730 (15) obj. 4 iterations 79
Cbc0038I Pass  44: suminf.    1.02051 (6) obj. 4 iterations 55
Cbc0038I Pass  45: suminf.    2.04342 (6) obj. 4 iterations 23
Cbc0038I Pass  46: suminf.    2.04342 (6) obj. 4 iterations 5
Cbc0038I Pass  47: suminf.    2.18347 (6) obj. 4 iterations 16
Cbc0038I Pass  48: suminf.    2.18347 (6) obj. 4 iterations 5
Cbc0038I Pass  49: suminf.    9.08879 (41) obj. 4 iterations 86
Cbc0038I Pass  50: suminf.    4.24858 (15) obj. 4 iterations 56
Cbc0038I Pass  51: suminf.    4.02475 (14) obj. 4 iterations 29
Cbc0038I Pass  52: suminf.    4.02475 (14) obj. 4 iterations 6
Cbc0038I Pass  53: suminf.    5.57946 (16) obj. 4 iterations 28
Cbc0038I Pass  54: suminf.    3.93180 (14) obj. 4 iterations 17
Cbc0038I Pass  55: suminf.    3.82069 (14) obj. 4 iterations 3
Cbc0038I Pass  56: suminf.    4.59082 (14) obj. 4 iterations 23
Cbc0038I Pass  57: suminf.    3.89654 (14) obj. 4 iterations 10
Cbc0038I Pass  58: suminf.    5.57946 (16) obj. 4 iterations 31
Cbc0038I Pass  59: suminf.    3.93180 (14) obj. 4 iterations 18
Cbc0038I Pass  60: suminf.    3.82069 (14) obj. 4 iterations 3
Cbc0038I Pass  61: suminf.    4.71902 (14) obj. 4 iterations 29
Cbc0038I Pass  62: suminf.    4.02475 (14) obj. 4 iterations 13
Cbc0038I Pass  63: suminf.    5.57946 (16) obj. 4 iterations 28
Cbc0038I Pass  64: suminf.    3.93180 (14) obj. 4 iterations 18
Cbc0038I Pass  65: suminf.    3.82069 (14) obj. 4 iterations 3
Cbc0038I Pass  66: suminf.    4.71902 (14) obj. 4 iterations 28
Cbc0038I Pass  67: suminf.    4.02475 (14) obj. 4 iterations 13
Cbc0038I Pass  68: suminf.    5.57946 (16) obj. 4 iterations 25
Cbc0038I Pass  69: suminf.    3.93180 (14) obj. 4 iterations 17
Cbc0038I Pass  70: suminf.    3.82069 (14) obj. 4 iterations 3
Cbc0038I Pass  71: suminf.    4.71902 (14) obj. 4 iterations 26
Cbc0038I Pass  72: suminf.    4.02475 (14) obj. 4 iterations 13
Cbc0038I Pass  73: suminf.    4.67258 (14) obj. 4 iterations 24
Cbc0038I Pass  74: suminf.    3.94890 (14) obj. 4 iterations 12
Cbc0038I Pass  75: suminf.    9.38928 (46) obj. 4 iterations 87
Cbc0038I Pass  76: suminf.    5.87965 (24) obj. 4 iterations 57
Cbc0038I Pass  77: suminf.    4.54750 (23) obj. 4 iterations 10
Cbc0038I Pass  78: suminf.    4.52821 (24) obj. 4 iterations 2
Cbc0038I Pass  79: suminf.    6.50022 (19) obj. 4 iterations 28
Cbc0038I Pass  80: suminf.    4.02463 (14) obj. 4 iterations 16
Cbc0038I Pass  81: suminf.    4.02463 (14) obj. 4 iterations 5
Cbc0038I Pass  82: suminf.    5.93590 (16) obj. 4 iterations 23
Cbc0038I Pass  83: suminf.    3.79701 (13) obj. 4 iterations 27
Cbc0038I Pass  84: suminf.    3.53590 (14) obj. 4 iterations 8
Cbc0038I Pass  85: suminf.    4.41835 (14) obj. 4 iterations 27
Cbc0038I Pass  86: suminf.   10.49949 (34) obj. 4 iterations 90
Cbc0038I Pass  87: suminf.    5.34249 (20) obj. 4 iterations 53
Cbc0038I Pass  88: suminf.    5.23535 (20) obj. 4 iterations 2
Cbc0038I Pass  89: suminf.    4.73535 (22) obj. 4 iterations 31
Cbc0038I Pass  90: suminf.    4.31100 (18) obj. 4 iterations 22
Cbc0038I Pass  91: suminf.    3.99282 (18) obj. 4 iterations 3
Cbc0038I Pass  92: suminf.    5.20513 (19) obj. 4 iterations 31
Cbc0038I Pass  93: suminf.    3.90321 (15) obj. 4 iterations 24
Cbc0038I Pass  94: suminf.    3.81987 (15) obj. 4 iterations 4
Cbc0038I Pass  95: suminf.    4.01299 (14) obj. 4 iterations 17
Cbc0038I Pass  96: suminf.    2.12471 (8) obj. 4 iterations 15
Cbc0038I Pass  97: suminf.    3.06410 (9) obj. 4 iterations 28
Cbc0038I Pass  98: suminf.    3.06410 (9) obj. 4 iterations 9
Cbc0038I Pass  99: suminf.    2.90621 (8) obj. 4 iterations 16
Cbc0038I Pass 100: suminf.    5.87785 (19) obj. 4 iterations 66
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 634 integers at bound fixed and 0 continuous
Cbc0038I Full problem 285 rows 869 columns, reduced to 235 rows 222 columns
Cbc0038I Mini branch and bound did not improve solution (4.38 seconds)
Cbc0038I After 4.38 seconds - Feasibility pump exiting - took 1.95 seconds
Cbc0012I Integer solution of 4 found by DiveCoefficient after 216 iterations and 0 nodes (5.67 seconds)
Cbc0031I 33 added rows had average density of 101.81818
Cbc0013I At root node, 33 cuts changed objective from 3.1456679 to 4 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 48 row cuts average 5.1 elements, 3 column cuts (3 active)  in 0.269 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 49 row cuts average 321.9 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 19 row cuts average 29.1 elements, 0 column cuts (0 active)  in 0.641 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 226.7 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 53.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective 4, took 216 iterations and 0 nodes (5.67 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.14567 to 4
Probing was tried 4 times and created 51 cuts of which 0 were active after adding rounds of cuts (0.269234 seconds)
Gomory was tried 4 times and created 49 cuts of which 0 were active after adding rounds of cuts (0.044767 seconds)
liftKnapsack was tried 4 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.640617 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001045 seconds)
OddWheel was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006754 seconds)
MixedIntegerRounding2 was tried 4 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.016446 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001197 seconds)
TwoMirCuts was tried 4 times and created 121 cuts of which 0 were active after adding rounds of cuts (0.093885 seconds)
ZeroHalf was tried 4 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.010225 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               0
Total iterations:               216
Time (CPU seconds):             5.72399
Time (Wallclock seconds):       5.71315
Total time (CPU seconds):       5.74595   (Wallclock seconds):       5.73296
