Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3062/j3062_4.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3062_4.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.080195 seconds
Cgl0002I 31 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 204 rows, 524 columns (524 integer (524 of which binary)) and 9275 elements
Coin3009W Conflict graph built in 0.059 seconds, density: 2.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 524 objects (524 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 52 integers unsatisfied sum - 13.3372
Cbc0038I Pass   1: suminf.    5.20102 (21) obj. 0 iterations 51
Cbc0038I Pass   2: suminf.    2.86886 (11) obj. 0 iterations 105
Cbc0038I Pass   3: suminf.    2.45079 (11) obj. 0 iterations 36
Cbc0038I Pass   4: suminf.    2.96508 (11) obj. 0 iterations 55
Cbc0038I Pass   5: suminf.    2.01623 (10) obj. 0 iterations 42
Cbc0038I Pass   6: suminf.    2.80825 (10) obj. 0 iterations 77
Cbc0038I Pass   7: suminf.    2.01000 (10) obj. 0 iterations 60
Cbc0038I Pass   8: suminf.    2.86596 (10) obj. 0 iterations 63
Cbc0038I Pass   9: suminf.    2.12789 (9) obj. 0 iterations 35
Cbc0038I Pass  10: suminf.    3.24616 (14) obj. 0 iterations 78
Cbc0038I Pass  11: suminf.    1.47312 (10) obj. 0 iterations 68
Cbc0038I Pass  12: suminf.    1.34222 (10) obj. 0 iterations 23
Cbc0038I Pass  13: suminf.    2.27619 (9) obj. 0 iterations 64
Cbc0038I Pass  14: suminf.    1.79714 (9) obj. 0 iterations 45
Cbc0038I Pass  15: suminf.    3.65733 (12) obj. 0 iterations 52
Cbc0038I Pass  16: suminf.    2.56019 (11) obj. 0 iterations 40
Cbc0038I Pass  17: suminf.    3.00000 (11) obj. 0 iterations 53
Cbc0038I Pass  18: suminf.    1.90476 (8) obj. 0 iterations 32
Cbc0038I Pass  19: suminf.    1.90476 (8) obj. 0 iterations 6
Cbc0038I Pass  20: suminf.    2.44444 (9) obj. 0 iterations 44
Cbc0038I Pass  21: suminf.    2.11587 (10) obj. 0 iterations 37
Cbc0038I Pass  22: suminf.    3.33862 (15) obj. 0 iterations 49
Cbc0038I Pass  23: suminf.    1.11111 (6) obj. 0 iterations 77
Cbc0038I Pass  24: suminf.    1.90476 (8) obj. 0 iterations 54
Cbc0038I Pass  25: suminf.    2.04444 (9) obj. 0 iterations 50
Cbc0038I Pass  26: suminf.    1.47778 (11) obj. 0 iterations 32
Cbc0038I Pass  27: suminf.    3.74815 (14) obj. 0 iterations 37
Cbc0038I Pass  28: suminf.    2.17460 (7) obj. 0 iterations 34
Cbc0038I Pass  29: suminf.    1.88889 (8) obj. 0 iterations 33
Cbc0038I Pass  30: suminf.    1.94841 (9) obj. 0 iterations 46
Cbc0038I Pass  31: suminf.    1.36364 (7) obj. 0 iterations 26
Cbc0038I Pass  32: suminf.    1.66667 (4) obj. 0 iterations 27
Cbc0038I Pass  33: suminf.    1.66667 (6) obj. 0 iterations 29
Cbc0038I Pass  34: suminf.    1.41558 (8) obj. 0 iterations 56
Cbc0038I Pass  35: suminf.    5.60590 (22) obj. 0 iterations 84
Cbc0038I Pass  36: suminf.    3.59911 (17) obj. 0 iterations 60
Cbc0038I Pass  37: suminf.    3.37143 (12) obj. 0 iterations 70
Cbc0038I Pass  38: suminf.    2.93939 (13) obj. 0 iterations 40
Cbc0038I Pass  39: suminf.    2.93939 (13) obj. 0 iterations 19
Cbc0038I Pass  40: suminf.    3.59392 (15) obj. 0 iterations 41
Cbc0038I Pass  41: suminf.    3.52963 (15) obj. 0 iterations 28
Cbc0038I Pass  42: suminf.    4.35310 (16) obj. 0 iterations 75
Cbc0038I Pass  43: suminf.    3.85577 (17) obj. 0 iterations 48
Cbc0038I Pass  44: suminf.    4.10384 (13) obj. 0 iterations 65
Cbc0038I Pass  45: suminf.    3.30547 (15) obj. 0 iterations 42
Cbc0038I Pass  46: suminf.    3.30547 (15) obj. 0 iterations 19
Cbc0038I Pass  47: suminf.    3.41905 (12) obj. 0 iterations 77
Cbc0038I Pass  48: suminf.    3.30392 (13) obj. 0 iterations 31
Cbc0038I Pass  49: suminf.    4.64444 (14) obj. 0 iterations 75
Cbc0038I Pass  50: suminf.    3.65744 (16) obj. 0 iterations 55
Cbc0038I Pass  51: suminf.    3.60536 (15) obj. 0 iterations 22
Cbc0038I Pass  52: suminf.    3.14018 (14) obj. 0 iterations 82
Cbc0038I Pass  53: suminf.    2.95387 (20) obj. 0 iterations 34
Cbc0038I Pass  54: suminf.    3.30376 (14) obj. 0 iterations 111
Cbc0038I Pass  55: suminf.    2.08623 (16) obj. 0 iterations 33
Cbc0038I Pass  56: suminf.    3.98985 (16) obj. 0 iterations 63
Cbc0038I Pass  57: suminf.    2.90338 (16) obj. 0 iterations 22
Cbc0038I Pass  58: suminf.    2.08195 (9) obj. 0 iterations 17
Cbc0038I Pass  59: suminf.    2.08195 (9) obj. 0 iterations 22
Cbc0038I Pass  60: suminf.    3.34301 (20) obj. 0 iterations 70
Cbc0038I Pass  61: suminf.    2.15266 (17) obj. 0 iterations 32
Cbc0038I Pass  62: suminf.    2.15266 (17) obj. 0 iterations 0
Cbc0038I Pass  63: suminf.    4.76779 (21) obj. 0 iterations 82
Cbc0038I Pass  64: suminf.    3.63946 (20) obj. 0 iterations 38
Cbc0038I Pass  65: suminf.    2.34709 (14) obj. 0 iterations 14
Cbc0038I Pass  66: suminf.    2.06138 (13) obj. 0 iterations 20
Cbc0038I Pass  67: suminf.    5.05281 (22) obj. 0 iterations 96
Cbc0038I Pass  68: suminf.    4.11838 (19) obj. 0 iterations 32
Cbc0038I Pass  69: suminf.    3.32897 (19) obj. 0 iterations 22
Cbc0038I Pass  70: suminf.    3.18004 (21) obj. 0 iterations 24
Cbc0038I Pass  71: suminf.    2.92857 (14) obj. 0 iterations 101
Cbc0038I Pass  72: suminf.    1.80688 (9) obj. 0 iterations 51
Cbc0038I Pass  73: suminf.    1.63637 (13) obj. 0 iterations 39
Cbc0038I Pass  74: suminf.    3.91720 (17) obj. 0 iterations 80
Cbc0038I Pass  75: suminf.    3.05952 (12) obj. 0 iterations 30
Cbc0038I Pass  76: suminf.    2.13333 (11) obj. 0 iterations 45
Cbc0038I Pass  77: suminf.    2.00000 (7) obj. 0 iterations 50
Cbc0038I Pass  78: suminf.    2.00000 (7) obj. 0 iterations 2
Cbc0038I Pass  79: suminf.    7.19239 (27) obj. 0 iterations 91
Cbc0038I Pass  80: suminf.    3.11000 (16) obj. 0 iterations 58
Cbc0038I Pass  81: suminf.    3.11000 (16) obj. 0 iterations 1
Cbc0038I Pass  82: suminf.    4.93963 (17) obj. 0 iterations 57
Cbc0038I Pass  83: suminf.    3.20432 (10) obj. 0 iterations 77
Cbc0038I Pass  84: suminf.    1.85714 (7) obj. 0 iterations 30
Cbc0038I Pass  85: suminf.    1.85210 (8) obj. 0 iterations 5
Cbc0038I Pass  86: suminf.    2.46667 (10) obj. 0 iterations 46
Cbc0038I Pass  87: suminf.    1.40000 (5) obj. 0 iterations 41
Cbc0038I Pass  88: suminf.    1.80000 (5) obj. 0 iterations 26
Cbc0038I Pass  89: suminf.    8.86864 (39) obj. 0 iterations 81
Cbc0038I Pass  90: suminf.    3.63082 (30) obj. 0 iterations 90
Cbc0038I Pass  91: suminf.    4.55132 (19) obj. 0 iterations 99
Cbc0038I Pass  92: suminf.    3.54129 (18) obj. 0 iterations 63
Cbc0038I Pass  93: suminf.    4.38095 (20) obj. 0 iterations 78
Cbc0038I Pass  94: suminf.    3.89048 (17) obj. 0 iterations 37
Cbc0038I Pass  95: suminf.    2.89630 (13) obj. 0 iterations 103
Cbc0038I Pass  96: suminf.    2.57778 (12) obj. 0 iterations 53
Cbc0038I Pass  97: suminf.    4.65873 (17) obj. 0 iterations 71
Cbc0038I Pass  98: suminf.    3.37175 (17) obj. 0 iterations 36
Cbc0038I Pass  99: suminf.    3.23810 (12) obj. 0 iterations 87
Cbc0038I Pass 100: suminf.    4.51242 (25) obj. 0 iterations 90
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 325 integers at bound fixed and 0 continuous
Cbc0038I Full problem 204 rows 524 columns, reduced to 157 rows 189 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.41 seconds)
Cbc0038I Full problem 205 rows 524 columns, reduced to 204 rows 524 columns - too large
Cbc0038I After 2.47 seconds - Feasibility pump exiting - took 1.36 seconds
Cbc0031I 51 added rows had average density of 66.54902
Cbc0013I At root node, 51 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.505 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 230 row cuts average 476.4 elements, 0 column cuts (0 active)  in 0.313 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 324 row cuts average 8.8 elements, 0 column cuts (0 active)  in 5.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 383.7 elements, 0 column cuts (0 active)  in 0.403 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 124.6 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (9.94 seconds)
Cbc0010I After 14 nodes, 10 on tree, 1e+50 best solution, best possible 0 (10.65 seconds)
Cbc0004I Integer solution of 0 found after 1651 iterations and 21 nodes (10.72 seconds)
Cbc0001I Search completed - best objective 0, took 1651 iterations and 21 nodes (10.72 seconds)
Cbc0032I Strong branching done 438 times (7850 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 16, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.504629 seconds)
Gomory was tried 10 times and created 230 cuts of which 0 were active after adding rounds of cuts (0.313378 seconds)
liftKnapsack was tried 10 times and created 324 cuts of which 0 were active after adding rounds of cuts (5.02142 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005067 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024743 seconds)
MixedIntegerRounding2 was tried 10 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.036534 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002334 seconds)
TwoMirCuts was tried 10 times and created 187 cuts of which 0 were active after adding rounds of cuts (0.402848 seconds)
ZeroHalf was tried 10 times and created 39 cuts of which 0 were active after adding rounds of cuts (0.06295 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               21
Total iterations:               1651
Time (CPU seconds):             10.8081
Time (Wallclock seconds):       10.7741
Total time (CPU seconds):       10.8199   (Wallclock seconds):       10.8027
