Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3056/j3056_2.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j3056_2.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.054509 seconds
Cgl0002I 29 variables fixed
Cgl0003I 12 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 188 rows, 414 columns (414 integer (414 of which binary)) and 6082 elements
Coin3009W Conflict graph built in 0.016 seconds, density: 1.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 414 objects (414 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 61 integers unsatisfied sum - 15.8854
Cbc0038I Pass   1: suminf.    6.96809 (27) obj. 0 iterations 80
Cbc0038I Pass   2: suminf.    6.55477 (26) obj. 0 iterations 21
Cbc0038I Pass   3: suminf.    5.77689 (24) obj. 0 iterations 13
Cbc0038I Pass   4: suminf.    7.01472 (32) obj. 0 iterations 51
Cbc0038I Pass   5: suminf.    6.09935 (29) obj. 0 iterations 27
Cbc0038I Pass   6: suminf.    5.76901 (30) obj. 0 iterations 20
Cbc0038I Pass   7: suminf.    5.55499 (29) obj. 0 iterations 15
Cbc0038I Pass   8: suminf.    4.49221 (25) obj. 0 iterations 31
Cbc0038I Pass   9: suminf.    4.22520 (20) obj. 0 iterations 26
Cbc0038I Pass  10: suminf.    2.69548 (17) obj. 0 iterations 41
Cbc0038I Pass  11: suminf.    2.54762 (10) obj. 0 iterations 37
Cbc0038I Pass  12: suminf.    2.66667 (9) obj. 0 iterations 41
Cbc0038I Pass  13: suminf.    1.99012 (14) obj. 0 iterations 70
Cbc0038I Pass  14: suminf.    3.66667 (12) obj. 0 iterations 38
Cbc0038I Pass  15: suminf.    3.35715 (16) obj. 0 iterations 42
Cbc0038I Pass  16: suminf.    3.66667 (12) obj. 0 iterations 39
Cbc0038I Pass  17: suminf.   10.80808 (42) obj. 0 iterations 101
Cbc0038I Pass  18: suminf.    2.93810 (11) obj. 0 iterations 86
Cbc0038I Pass  19: suminf.    2.64524 (13) obj. 0 iterations 36
Cbc0038I Pass  20: suminf.    4.07714 (15) obj. 0 iterations 53
Cbc0038I Pass  21: suminf.    4.07714 (15) obj. 0 iterations 27
Cbc0038I Pass  22: suminf.    4.52419 (15) obj. 0 iterations 72
Cbc0038I Pass  23: suminf.    3.51429 (14) obj. 0 iterations 51
Cbc0038I Pass  24: suminf.    2.71304 (16) obj. 0 iterations 19
Cbc0038I Pass  25: suminf.    2.98563 (21) obj. 0 iterations 48
Cbc0038I Pass  26: suminf.    2.65185 (10) obj. 0 iterations 38
Cbc0038I Pass  27: suminf.    3.32679 (18) obj. 0 iterations 34
Cbc0038I Pass  28: suminf.    4.69269 (18) obj. 0 iterations 79
Cbc0038I Pass  29: suminf.    1.20714 (10) obj. 0 iterations 37
Cbc0038I Pass  30: suminf.    0.71429 (4) obj. 0 iterations 14
Cbc0038I Pass  31: suminf.    1.66667 (6) obj. 0 iterations 42
Cbc0038I Pass  32: suminf.    1.66667 (7) obj. 0 iterations 18
Cbc0038I Pass  33: suminf.    1.04762 (4) obj. 0 iterations 18
Cbc0038I Pass  34: suminf.    1.04762 (4) obj. 0 iterations 26
Cbc0038I Pass  35: suminf.    1.67917 (13) obj. 0 iterations 30
Cbc0038I Pass  36: suminf.    1.67917 (13) obj. 0 iterations 3
Cbc0038I Pass  37: suminf.    6.16621 (21) obj. 0 iterations 65
Cbc0038I Pass  38: suminf.    5.33333 (18) obj. 0 iterations 37
Cbc0038I Pass  39: suminf.    3.86667 (13) obj. 0 iterations 29
Cbc0038I Pass  40: suminf.    3.08889 (12) obj. 0 iterations 24
Cbc0038I Pass  41: suminf.    3.11864 (12) obj. 0 iterations 38
Cbc0038I Pass  42: suminf.    3.00000 (11) obj. 0 iterations 22
Cbc0038I Pass  43: suminf.    3.40171 (12) obj. 0 iterations 42
Cbc0038I Pass  44: suminf.    2.70370 (11) obj. 0 iterations 28
Cbc0038I Pass  45: suminf.    3.22505 (12) obj. 0 iterations 38
Cbc0038I Pass  46: suminf.   12.06358 (48) obj. 0 iterations 49
Cbc0038I Pass  47: suminf.    5.40516 (20) obj. 0 iterations 98
Cbc0038I Pass  48: suminf.    4.61987 (20) obj. 0 iterations 8
Cbc0038I Pass  49: suminf.    5.71792 (23) obj. 0 iterations 63
Cbc0038I Pass  50: suminf.    5.09524 (24) obj. 0 iterations 36
Cbc0038I Pass  51: suminf.    5.73325 (22) obj. 0 iterations 73
Cbc0038I Pass  52: suminf.    2.83163 (13) obj. 0 iterations 82
Cbc0038I Pass  53: suminf.    3.48509 (15) obj. 0 iterations 64
Cbc0038I Pass  54: suminf.    2.71304 (15) obj. 0 iterations 77
Cbc0038I Pass  55: suminf.    3.18963 (13) obj. 0 iterations 34
Cbc0038I Pass  56: suminf.    2.44463 (14) obj. 0 iterations 42
Cbc0038I Pass  57: suminf.    3.20000 (10) obj. 0 iterations 36
Cbc0038I Pass  58: suminf.    2.67325 (14) obj. 0 iterations 60
Cbc0038I Pass  59: suminf.    2.55000 (13) obj. 0 iterations 40
Cbc0038I Pass  60: suminf.    1.97222 (10) obj. 0 iterations 50
Cbc0038I Pass  61: suminf.    2.06349 (10) obj. 0 iterations 12
Cbc0038I Pass  62: suminf.    6.57135 (35) obj. 0 iterations 75
Cbc0038I Pass  63: suminf.    3.21517 (14) obj. 0 iterations 81
Cbc0038I Pass  64: suminf.    2.97608 (15) obj. 0 iterations 17
Cbc0038I Pass  65: suminf.    2.76402 (16) obj. 0 iterations 32
Cbc0038I Pass  66: suminf.    5.34580 (17) obj. 0 iterations 67
Cbc0038I Pass  67: suminf.    3.05952 (18) obj. 0 iterations 54
Cbc0038I Pass  68: suminf.    2.49018 (17) obj. 0 iterations 31
Cbc0038I Pass  69: suminf.    2.40271 (20) obj. 0 iterations 11
Cbc0038I Pass  70: suminf.    6.88340 (23) obj. 0 iterations 101
Cbc0038I Pass  71: suminf.    6.82813 (22) obj. 0 iterations 34
Cbc0038I Pass  72: suminf.    7.96565 (25) obj. 0 iterations 80
Cbc0038I Pass  73: suminf.    7.05847 (26) obj. 0 iterations 24
Cbc0038I Pass  74: suminf.    7.03806 (26) obj. 0 iterations 8
Cbc0038I Pass  75: suminf.    3.44187 (14) obj. 0 iterations 55
Cbc0038I Pass  76: suminf.    2.55074 (12) obj. 0 iterations 41
Cbc0038I Pass  77: suminf.    3.89280 (13) obj. 0 iterations 54
Cbc0038I Pass  78: suminf.    3.64943 (13) obj. 0 iterations 19
Cbc0038I Pass  79: suminf.    2.96165 (13) obj. 0 iterations 71
Cbc0038I Pass  80: suminf.    2.77521 (14) obj. 0 iterations 29
Cbc0038I Pass  81: suminf.    2.42835 (11) obj. 0 iterations 13
Cbc0038I Pass  82: suminf.    2.39600 (14) obj. 0 iterations 14
Cbc0038I Pass  83: suminf.    4.56642 (18) obj. 0 iterations 63
Cbc0038I Pass  84: suminf.    3.17736 (18) obj. 0 iterations 42
Cbc0038I Pass  85: suminf.    1.99004 (14) obj. 0 iterations 37
Cbc0038I Pass  86: suminf.    4.25048 (16) obj. 0 iterations 67
Cbc0038I Pass  87: suminf.    3.77271 (11) obj. 0 iterations 12
Cbc0038I Pass  88: suminf.    3.64966 (11) obj. 0 iterations 9
Cbc0038I Pass  89: suminf.    3.43326 (12) obj. 0 iterations 25
Cbc0038I Pass  90: suminf.    3.04141 (12) obj. 0 iterations 38
Cbc0038I Pass  91: suminf.    2.72753 (14) obj. 0 iterations 18
Cbc0038I Pass  92: suminf.    3.00453 (12) obj. 0 iterations 42
Cbc0038I Pass  93: suminf.    2.39631 (9) obj. 0 iterations 13
Cbc0038I Pass  94: suminf.    2.39631 (9) obj. 0 iterations 1
Cbc0038I Pass  95: suminf.    2.78968 (12) obj. 0 iterations 47
Cbc0038I Pass  96: suminf.    1.99004 (14) obj. 0 iterations 58
Cbc0038I Pass  97: suminf.    4.25048 (16) obj. 0 iterations 65
Cbc0038I Pass  98: suminf.    3.77271 (12) obj. 0 iterations 28
Cbc0038I Pass  99: suminf.    3.43326 (12) obj. 0 iterations 4
Cbc0038I Pass 100: suminf.    5.87049 (25) obj. 0 iterations 75
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 414 columns, reduced to 145 rows 145 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.27 seconds)
Cbc0038I Full problem 189 rows 414 columns, reduced to 189 rows 414 columns - too large
Cbc0038I After 2.32 seconds - Feasibility pump exiting - took 1.46 seconds
Cbc0031I 50 added rows had average density of 80.72
Cbc0013I At root node, 50 cuts changed objective from 0 to 0 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 212 row cuts average 9.2 elements, 0 column cuts (0 active)  in 3.780 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2650 row cuts average 409.8 elements, 0 column cuts (0 active)  in 3.911 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 919 row cuts average 10.0 elements, 0 column cuts (0 active)  in 136.239 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.281 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 167 row cuts average 49.2 elements, 0 column cuts (0 active)  in 0.519 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 264 row cuts average 250.2 elements, 0 column cuts (0 active)  in 0.506 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 229 row cuts average 57.8 elements, 0 column cuts (0 active)  in 0.620 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (154.40 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 0 (155.23 seconds)
Cbc0010I After 18 nodes, 8 on tree, 1e+50 best solution, best possible 0 (156.01 seconds)
Cbc0010I After 30 nodes, 13 on tree, 1e+50 best solution, best possible 0 (156.73 seconds)
Cbc0010I After 71 nodes, 15 on tree, 1e+50 best solution, best possible 0 (157.45 seconds)
Cbc0010I After 121 nodes, 18 on tree, 1e+50 best solution, best possible 0 (158.15 seconds)
Cbc0010I After 189 nodes, 17 on tree, 1e+50 best solution, best possible 0 (158.85 seconds)
Cbc0010I After 261 nodes, 19 on tree, 1e+50 best solution, best possible 0 (159.56 seconds)
Cbc0010I After 330 nodes, 16 on tree, 1e+50 best solution, best possible 0 (160.27 seconds)
Cbc0010I After 400 nodes, 19 on tree, 1e+50 best solution, best possible 0 (160.97 seconds)
Cbc0010I After 520 nodes, 32 on tree, 1e+50 best solution, best possible 0 (161.68 seconds)
Cbc0010I After 615 nodes, 33 on tree, 1e+50 best solution, best possible 0 (162.40 seconds)
Cbc0010I After 690 nodes, 47 on tree, 1e+50 best solution, best possible 0 (163.11 seconds)
Cbc0010I After 762 nodes, 49 on tree, 1e+50 best solution, best possible 0 (163.81 seconds)
Cbc0010I After 849 nodes, 50 on tree, 1e+50 best solution, best possible 0 (164.51 seconds)
Cbc0010I After 908 nodes, 55 on tree, 1e+50 best solution, best possible 0 (165.23 seconds)
Cbc0010I After 984 nodes, 51 on tree, 1e+50 best solution, best possible 0 (165.93 seconds)
Cbc0010I After 1056 nodes, 45 on tree, 1e+50 best solution, best possible 0 (166.65 seconds)
Cbc0010I After 1116 nodes, 42 on tree, 1e+50 best solution, best possible 0 (167.35 seconds)
Cbc0010I After 1176 nodes, 34 on tree, 1e+50 best solution, best possible 0 (168.06 seconds)
Cbc0010I After 1233 nodes, 34 on tree, 1e+50 best solution, best possible 0 (168.77 seconds)
Cbc0016I Integer solution of 0 found by strong branching after 54289 iterations and 1287 nodes (169.17 seconds)
Cbc0001I Search completed - best objective 0, took 54289 iterations and 1287 nodes (169.17 seconds)
Cbc0032I Strong branching done 3148 times (54375 iterations), fathomed 50 nodes and fixed 51 variables
Cbc0035I Maximum depth 48, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 100 times and created 212 cuts of which 0 were active after adding rounds of cuts (3.78048 seconds)
Gomory was tried 100 times and created 2650 cuts of which 0 were active after adding rounds of cuts (3.91115 seconds)
liftKnapsack was tried 100 times and created 919 cuts of which 0 were active after adding rounds of cuts (136.239 seconds)
Clique was tried 100 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.065887 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.280604 seconds)
MixedIntegerRounding2 was tried 100 times and created 167 cuts of which 0 were active after adding rounds of cuts (0.519124 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021489 seconds)
TwoMirCuts was tried 100 times and created 264 cuts of which 0 were active after adding rounds of cuts (0.505935 seconds)
ZeroHalf was tried 100 times and created 229 cuts of which 0 were active after adding rounds of cuts (0.619956 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               1287
Total iterations:               54289
Time (CPU seconds):             169.023
Time (Wallclock seconds):       169.328
Total time (CPU seconds):       169.032   (Wallclock seconds):       169.339
