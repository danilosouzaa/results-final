Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j307/j307_8.lp -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-prop/sol-j307_8.txt -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 11.7037 - 0.065336 seconds
Cgl0003I 48 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 24 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 18 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 255 rows, 1249 columns (1249 integer (1248 of which binary)) and 21246 elements
Coin3009W Conflict graph built in 0.173 seconds, density: 1.198%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1249 objects (1249 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 51 integers unsatisfied sum - 15.8869
Cbc0038I Pass   1: suminf.    7.14571 (31) obj. 14 iterations 87
Cbc0038I Pass   2: suminf.    6.37307 (26) obj. 14 iterations 27
Cbc0038I Pass   3: suminf.    6.28320 (26) obj. 14 iterations 9
Cbc0038I Pass   4: suminf.    7.37715 (24) obj. 14 iterations 75
Cbc0038I Pass   5: suminf.    5.58102 (21) obj. 14 iterations 28
Cbc0038I Pass   6: suminf.    5.58102 (21) obj. 14 iterations 2
Cbc0038I Pass   7: suminf.    7.50015 (21) obj. 14 iterations 31
Cbc0038I Pass   8: suminf.    6.42899 (22) obj. 14 iterations 35
Cbc0038I Pass   9: suminf.    6.03779 (23) obj. 14 iterations 19
Cbc0038I Pass  10: suminf.    5.05718 (19) obj. 14 iterations 34
Cbc0038I Pass  11: suminf.    4.80866 (18) obj. 14 iterations 20
Cbc0038I Pass  12: suminf.    6.27243 (18) obj. 14 iterations 22
Cbc0038I Pass  13: suminf.    5.78418 (20) obj. 14 iterations 9
Cbc0038I Pass  14: suminf.    6.18831 (21) obj. 14 iterations 30
Cbc0038I Pass  15: suminf.    4.80866 (18) obj. 14 iterations 8
Cbc0038I Pass  16: suminf.    4.80866 (18) obj. 14 iterations 4
Cbc0038I Pass  17: suminf.    6.27243 (18) obj. 14 iterations 18
Cbc0038I Pass  18: suminf.    5.78418 (20) obj. 14 iterations 10
Cbc0038I Pass  19: suminf.    4.86290 (20) obj. 14 iterations 18
Cbc0038I Pass  20: suminf.    4.72351 (21) obj. 14 iterations 7
Cbc0038I Pass  21: suminf.    8.10174 (22) obj. 14 iterations 26
Cbc0038I Pass  22: suminf.    6.46605 (27) obj. 14 iterations 12
Cbc0038I Pass  23: suminf.    6.23563 (27) obj. 14 iterations 4
Cbc0038I Pass  24: suminf.    4.29787 (26) obj. 14 iterations 26
Cbc0038I Pass  25: suminf.    4.05217 (27) obj. 14 iterations 12
Cbc0038I Pass  26: suminf.    9.23825 (28) obj. 14 iterations 80
Cbc0038I Pass  27: suminf.    7.01180 (27) obj. 14 iterations 45
Cbc0038I Pass  28: suminf.    6.36217 (25) obj. 14 iterations 33
Cbc0038I Pass  29: suminf.    6.18646 (27) obj. 14 iterations 19
Cbc0038I Pass  30: suminf.    6.10910 (27) obj. 14 iterations 10
Cbc0038I Pass  31: suminf.    9.32841 (25) obj. 14 iterations 35
Cbc0038I Pass  32: suminf.    8.10931 (24) obj. 14 iterations 15
Cbc0038I Pass  33: suminf.    7.56947 (25) obj. 14 iterations 9
Cbc0038I Pass  34: suminf.    6.66574 (26) obj. 14 iterations 7
Cbc0038I Pass  35: suminf.    7.42742 (23) obj. 14 iterations 23
Cbc0038I Pass  36: suminf.    6.09812 (23) obj. 14 iterations 30
Cbc0038I Pass  37: suminf.    5.98651 (24) obj. 14 iterations 3
Cbc0038I Pass  38: suminf.    7.56315 (23) obj. 14 iterations 47
Cbc0038I Pass  39: suminf.    6.79123 (24) obj. 14 iterations 17
Cbc0038I Pass  40: suminf.    6.46632 (26) obj. 14 iterations 11
Cbc0038I Pass  41: suminf.    6.48168 (26) obj. 14 iterations 30
Cbc0038I Pass  42: suminf.    5.27336 (25) obj. 14 iterations 40
Cbc0038I Pass  43: suminf.    4.99469 (26) obj. 14 iterations 10
Cbc0038I Pass  44: suminf.    4.61566 (24) obj. 14 iterations 13
Cbc0038I Pass  45: suminf.    6.47656 (22) obj. 14 iterations 48
Cbc0038I Pass  46: suminf.    5.38467 (22) obj. 14 iterations 15
Cbc0038I Pass  47: suminf.    5.19016 (24) obj. 14 iterations 13
Cbc0038I Pass  48: suminf.    4.99411 (24) obj. 14 iterations 6
Cbc0038I Pass  49: suminf.    8.35767 (26) obj. 14 iterations 56
Cbc0038I Pass  50: suminf.    6.31007 (29) obj. 14 iterations 19
Cbc0038I Pass  51: suminf.    6.38612 (24) obj. 14 iterations 39
Cbc0038I Pass  52: suminf.    5.67168 (25) obj. 14 iterations 31
Cbc0038I Pass  53: suminf.    5.35036 (22) obj. 14 iterations 26
Cbc0038I Pass  54: suminf.    4.17749 (22) obj. 14 iterations 21
Cbc0038I Pass  55: suminf.    3.97341 (22) obj. 14 iterations 3
Cbc0038I Pass  56: suminf.    6.72267 (21) obj. 14 iterations 42
Cbc0038I Pass  57: suminf.    5.04384 (19) obj. 14 iterations 23
Cbc0038I Pass  58: suminf.    4.48752 (22) obj. 14 iterations 12
Cbc0038I Pass  59: suminf.    4.28204 (23) obj. 14 iterations 27
Cbc0038I Pass  60: suminf.    7.31213 (27) obj. 14 iterations 53
Cbc0038I Pass  61: suminf.    5.52614 (21) obj. 14 iterations 10
Cbc0038I Pass  62: suminf.    4.79222 (30) obj. 14 iterations 12
Cbc0038I Pass  63: suminf.    8.17327 (30) obj. 14 iterations 59
Cbc0038I Pass  64: suminf.    6.84857 (31) obj. 14 iterations 24
Cbc0038I Pass  65: suminf.    7.03497 (28) obj. 14 iterations 43
Cbc0038I Pass  66: suminf.    5.91315 (28) obj. 14 iterations 23
Cbc0038I Pass  67: suminf.    5.90778 (33) obj. 14 iterations 6
Cbc0038I Pass  68: suminf.    6.09513 (28) obj. 14 iterations 23
Cbc0038I Pass  69: suminf.    5.61849 (27) obj. 14 iterations 13
Cbc0038I Pass  70: suminf.    8.86582 (30) obj. 14 iterations 15
Cbc0038I Pass  71: suminf.    6.19041 (27) obj. 14 iterations 23
Cbc0038I Pass  72: suminf.    5.54907 (28) obj. 14 iterations 18
Cbc0038I Pass  73: suminf.    8.02374 (31) obj. 14 iterations 29
Cbc0038I Pass  74: suminf.    6.18049 (28) obj. 14 iterations 24
Cbc0038I Pass  75: suminf.    5.87981 (28) obj. 14 iterations 5
Cbc0038I Pass  76: suminf.    8.34198 (27) obj. 14 iterations 38
Cbc0038I Pass  77: suminf.    7.46607 (28) obj. 14 iterations 14
Cbc0038I Pass  78: suminf.    7.46607 (28) obj. 14 iterations 2
Cbc0038I Pass  79: suminf.    9.04824 (31) obj. 14 iterations 46
Cbc0038I Pass  80: suminf.    7.78274 (27) obj. 14 iterations 30
Cbc0038I Pass  81: suminf.    6.92434 (28) obj. 14 iterations 27
Cbc0038I Pass  82: suminf.    6.89347 (29) obj. 14 iterations 9
Cbc0038I Pass  83: suminf.    6.83751 (29) obj. 14 iterations 11
Cbc0038I Pass  84: suminf.    8.01403 (25) obj. 14 iterations 31
Cbc0038I Pass  85: suminf.    6.74559 (30) obj. 14 iterations 22
Cbc0038I Pass  86: suminf.    6.48694 (30) obj. 14 iterations 12
Cbc0038I Pass  87: suminf.    7.49157 (30) obj. 14 iterations 24
Cbc0038I Pass  88: suminf.    7.46565 (28) obj. 14 iterations 5
Cbc0038I Pass  89: suminf.    7.79697 (25) obj. 14 iterations 37
Cbc0038I Pass  90: suminf.    6.70497 (27) obj. 14 iterations 20
Cbc0038I Pass  91: suminf.    6.63553 (28) obj. 14 iterations 3
Cbc0038I Pass  92: suminf.    8.33074 (27) obj. 14 iterations 44
Cbc0038I Pass  93: suminf.    6.40406 (27) obj. 14 iterations 43
Cbc0038I Pass  94: suminf.    6.16483 (29) obj. 14 iterations 9
Cbc0038I Pass  95: suminf.    8.34166 (31) obj. 14 iterations 42
Cbc0038I Pass  96: suminf.    8.04289 (29) obj. 14 iterations 19
Cbc0038I Pass  97: suminf.    7.74079 (28) obj. 14 iterations 23
Cbc0038I Pass  98: suminf.    7.42785 (32) obj. 14 iterations 15
Cbc0038I Pass  99: suminf.    7.31078 (26) obj. 14 iterations 36
Cbc0038I Pass 100: suminf.   15.45482 (52) obj. 14 iterations 127
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1032 integers at bound fixed and 0 continuous
Cbc0038I Full problem 255 rows 1249 columns, reduced to 218 rows 195 columns
Cbc0038I Mini branch and bound did not improve solution (4.42 seconds)
Cbc0038I After 4.42 seconds - Feasibility pump exiting - took 2.12 seconds
Cbc0031I 57 added rows had average density of 113.03509
Cbc0013I At root node, 57 cuts changed objective from 11.703704 to 14 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 181 row cuts average 17.3 elements, 36 column cuts (36 active)  in 1.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 47 row cuts average 692.5 elements, 0 column cuts (0 active)  in 0.444 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 153 row cuts average 34.4 elements, 0 column cuts (0 active)  in 29.401 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 165 row cuts average 68.6 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 138 row cuts average 135.8 elements, 0 column cuts (0 active)  in 0.218 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 91 row cuts average 107.5 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 14 (37.76 seconds)
Cbc0010I After 2 nodes, 1 on tree, 1e+50 best solution, best possible 14 (39.98 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 14 (46.25 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 14 (53.03 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 14 (62.86 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 14 (69.73 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 14 (73.48 seconds)
Cbc0010I After 8 nodes, 7 on tree, 1e+50 best solution, best possible 14 (76.70 seconds)
Cbc0010I After 9 nodes, 8 on tree, 1e+50 best solution, best possible 14 (81.88 seconds)
Cbc0010I After 12 nodes, 7 on tree, 1e+50 best solution, best possible 14 (84.56 seconds)
Cbc0010I After 13 nodes, 7 on tree, 1e+50 best solution, best possible 14 (88.38 seconds)
Cbc0010I After 14 nodes, 7 on tree, 1e+50 best solution, best possible 14 (91.16 seconds)
Cbc0010I After 15 nodes, 8 on tree, 1e+50 best solution, best possible 14 (95.08 seconds)
Cbc0010I After 17 nodes, 8 on tree, 1e+50 best solution, best possible 14 (96.84 seconds)
Cbc0010I After 18 nodes, 9 on tree, 1e+50 best solution, best possible 14 (97.78 seconds)
Cbc0010I After 22 nodes, 7 on tree, 1e+50 best solution, best possible 14 (102.46 seconds)
Cbc0010I After 23 nodes, 8 on tree, 1e+50 best solution, best possible 14 (107.14 seconds)
Cbc0010I After 24 nodes, 9 on tree, 1e+50 best solution, best possible 14 (110.28 seconds)
Cbc0010I After 25 nodes, 10 on tree, 1e+50 best solution, best possible 14 (113.15 seconds)
Cbc0010I After 26 nodes, 11 on tree, 1e+50 best solution, best possible 14 (115.61 seconds)
Cbc0010I After 32 nodes, 7 on tree, 1e+50 best solution, best possible 14 (120.04 seconds)
Cbc0010I After 34 nodes, 7 on tree, 1e+50 best solution, best possible 14 (124.75 seconds)
Cbc0010I After 35 nodes, 8 on tree, 1e+50 best solution, best possible 14 (125.48 seconds)
Cbc0010I After 36 nodes, 9 on tree, 1e+50 best solution, best possible 14 (126.24 seconds)
Cbc0010I After 38 nodes, 9 on tree, 1e+50 best solution, best possible 14 (127.00 seconds)
Cbc0010I After 41 nodes, 10 on tree, 1e+50 best solution, best possible 14 (128.08 seconds)
Cbc0010I After 45 nodes, 10 on tree, 1e+50 best solution, best possible 14 (129.32 seconds)
Cbc0010I After 47 nodes, 11 on tree, 1e+50 best solution, best possible 14 (130.24 seconds)
Cbc0010I After 48 nodes, 12 on tree, 1e+50 best solution, best possible 14 (131.01 seconds)
Cbc0010I After 51 nodes, 13 on tree, 1e+50 best solution, best possible 14 (132.21 seconds)
Cbc0010I After 52 nodes, 14 on tree, 1e+50 best solution, best possible 14 (133.00 seconds)
Cbc0010I After 54 nodes, 14 on tree, 1e+50 best solution, best possible 14 (133.71 seconds)
Cbc0016I Integer solution of 14 found by strong branching after 8743 iterations and 57 nodes (134.66 seconds)
Cbc0001I Search completed - best objective 14, took 8743 iterations and 57 nodes (134.66 seconds)
Cbc0032I Strong branching done 882 times (20221 iterations), fathomed 1 nodes and fixed 34 variables
Cbc0035I Maximum depth 35, 0 variables fixed on reduced cost
Cuts at root node changed objective from 11.7037 to 14
Probing was tried 54 times and created 424 cuts of which 0 were active after adding rounds of cuts (1.25611 seconds)
Gomory was tried 10 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.443689 seconds)
liftKnapsack was tried 54 times and created 652 cuts of which 0 were active after adding rounds of cuts (117.324 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006709 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021676 seconds)
MixedIntegerRounding2 was tried 54 times and created 399 cuts of which 0 were active after adding rounds of cuts (0.499815 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006257 seconds)
TwoMirCuts was tried 54 times and created 197 cuts of which 0 were active after adding rounds of cuts (0.343951 seconds)
ZeroHalf was tried 54 times and created 305 cuts of which 0 were active after adding rounds of cuts (0.338625 seconds)

Result - Optimal solution found
Objective value:                14
Enumerated nodes:               57
Total iterations:               8743
Time (CPU seconds):             134.084
Time (Wallclock seconds):       134.723
Total time (CPU seconds):       134.125   (Wallclock seconds):       134.857
