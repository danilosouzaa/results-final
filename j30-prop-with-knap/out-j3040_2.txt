Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3040/j3040_2.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 4.13043 - 0.128755 seconds
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 336 rows, 1044 columns (1044 integer (1043 of which binary)) and 16847 elements
Coin3009W Conflict graph built in 0.076 seconds, density: 1.106%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1044 objects (1044 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 86 integers unsatisfied sum - 22.2736
Cbc0038I Pass   1: suminf.   10.57781 (56) obj. 5.0842 iterations 174
Cbc0038I Pass   2: suminf.    7.48456 (41) obj. 6 iterations 17
Cbc0038I Pass   3: suminf.    7.42509 (35) obj. 6 iterations 83
Cbc0038I Pass   4: suminf.    7.07047 (42) obj. 6 iterations 45
Cbc0038I Pass   5: suminf.    5.68508 (33) obj. 6 iterations 72
Cbc0038I Pass   6: suminf.    5.68508 (33) obj. 6 iterations 2
Cbc0038I Pass   7: suminf.    5.29635 (28) obj. 6 iterations 91
Cbc0038I Pass   8: suminf.    5.20968 (28) obj. 6 iterations 12
Cbc0038I Pass   9: suminf.    5.76026 (23) obj. 6 iterations 65
Cbc0038I Pass  10: suminf.    5.62692 (25) obj. 6 iterations 17
Cbc0038I Pass  11: suminf.    5.52388 (25) obj. 6 iterations 41
Cbc0038I Pass  12: suminf.    5.24485 (25) obj. 6 iterations 18
Cbc0038I Pass  13: suminf.    5.56179 (23) obj. 6 iterations 37
Cbc0038I Pass  14: suminf.    4.90822 (21) obj. 6 iterations 40
Cbc0038I Pass  15: suminf.    5.01875 (25) obj. 6 iterations 39
Cbc0038I Pass  16: suminf.    4.85208 (24) obj. 6 iterations 10
Cbc0038I Pass  17: suminf.    7.54188 (26) obj. 6 iterations 48
Cbc0038I Pass  18: suminf.    6.18122 (25) obj. 6 iterations 29
Cbc0038I Pass  19: suminf.    5.45208 (25) obj. 6 iterations 30
Cbc0038I Pass  20: suminf.    4.74054 (23) obj. 6 iterations 18
Cbc0038I Pass  21: suminf.    5.37790 (21) obj. 6 iterations 46
Cbc0038I Pass  22: suminf.    5.20013 (23) obj. 6 iterations 14
Cbc0038I Pass  23: suminf.    5.00721 (23) obj. 6 iterations 29
Cbc0038I Pass  24: suminf.    4.66746 (24) obj. 6 iterations 14
Cbc0038I Pass  25: suminf.    7.54188 (26) obj. 6 iterations 51
Cbc0038I Pass  26: suminf.    6.18122 (25) obj. 6 iterations 28
Cbc0038I Pass  27: suminf.    4.86875 (23) obj. 6 iterations 33
Cbc0038I Pass  28: suminf.    4.86875 (23) obj. 6 iterations 16
Cbc0038I Pass  29: suminf.    5.31124 (21) obj. 6 iterations 21
Cbc0038I Pass  30: suminf.    5.19457 (23) obj. 6 iterations 7
Cbc0038I Pass  31: suminf.    5.05208 (20) obj. 6 iterations 29
Cbc0038I Pass  32: suminf.    4.85208 (20) obj. 6 iterations 13
Cbc0038I Pass  33: suminf.    5.02790 (22) obj. 6 iterations 27
Cbc0038I Pass  34: suminf.    5.02790 (22) obj. 6 iterations 5
Cbc0038I Pass  35: suminf.    4.49494 (20) obj. 6 iterations 28
Cbc0038I Pass  36: suminf.    4.36160 (20) obj. 6 iterations 21
Cbc0038I Pass  37: suminf.    6.80753 (26) obj. 6 iterations 44
Cbc0038I Pass  38: suminf.    5.61614 (22) obj. 6 iterations 19
Cbc0038I Pass  39: suminf.    3.30208 (16) obj. 6 iterations 37
Cbc0038I Pass  40: suminf.    3.01362 (16) obj. 6 iterations 11
Cbc0038I Pass  41: suminf.    5.10515 (17) obj. 6 iterations 40
Cbc0038I Pass  42: suminf.    3.98281 (14) obj. 6 iterations 28
Cbc0038I Pass  43: suminf.    3.37406 (14) obj. 6 iterations 29
Cbc0038I Pass  44: suminf.    3.21875 (16) obj. 6 iterations 27
Cbc0038I Pass  45: suminf.   11.18757 (43) obj. 6 iterations 148
Cbc0038I Pass  46: suminf.    6.03972 (25) obj. 6 iterations 121
Cbc0038I Pass  47: suminf.    5.68972 (25) obj. 6 iterations 5
Cbc0038I Pass  48: suminf.    6.01455 (27) obj. 6 iterations 109
Cbc0038I Pass  49: suminf.    5.77938 (28) obj. 6 iterations 51
Cbc0038I Pass  50: suminf.    5.67797 (28) obj. 6 iterations 45
Cbc0038I Pass  51: suminf.    5.24940 (28) obj. 6 iterations 3
Cbc0038I Pass  52: suminf.    7.51101 (24) obj. 6 iterations 112
Cbc0038I Pass  53: suminf.    7.11101 (24) obj. 6 iterations 41
Cbc0038I Pass  54: suminf.    6.02940 (24) obj. 6 iterations 78
Cbc0038I Pass  55: suminf.    6.02940 (24) obj. 6 iterations 28
Cbc0038I Pass  56: suminf.    7.91653 (22) obj. 6 iterations 92
Cbc0038I Pass  57: suminf.    7.26229 (24) obj. 6 iterations 65
Cbc0038I Pass  58: suminf.    7.26229 (24) obj. 6 iterations 1
Cbc0038I Pass  59: suminf.    6.33214 (23) obj. 6 iterations 40
Cbc0038I Pass  60: suminf.    5.94881 (24) obj. 6 iterations 33
Cbc0038I Pass  61: suminf.    5.68214 (24) obj. 6 iterations 4
Cbc0038I Pass  62: suminf.    8.01069 (24) obj. 6 iterations 79
Cbc0038I Pass  63: suminf.    6.84402 (24) obj. 6 iterations 54
Cbc0038I Pass  64: suminf.    6.42735 (24) obj. 6 iterations 3
Cbc0038I Pass  65: suminf.    7.93226 (25) obj. 6 iterations 66
Cbc0038I Pass  66: suminf.    6.51559 (24) obj. 6 iterations 66
Cbc0038I Pass  67: suminf.    6.08718 (25) obj. 6 iterations 41
Cbc0038I Pass  68: suminf.    7.75668 (23) obj. 6 iterations 74
Cbc0038I Pass  69: suminf.    6.82840 (25) obj. 6 iterations 75
Cbc0038I Pass  70: suminf.    6.39983 (25) obj. 6 iterations 3
Cbc0038I Pass  71: suminf.    7.79966 (27) obj. 6 iterations 87
Cbc0038I Pass  72: suminf.    5.65116 (20) obj. 6 iterations 91
Cbc0038I Pass  73: suminf.    7.40142 (22) obj. 6 iterations 82
Cbc0038I Pass  74: suminf.    5.80778 (19) obj. 6 iterations 51
Cbc0038I Pass  75: suminf.    5.43880 (20) obj. 6 iterations 13
Cbc0038I Pass  76: suminf.    5.64413 (18) obj. 6 iterations 72
Cbc0038I Pass  77: suminf.    5.31080 (18) obj. 6 iterations 23
Cbc0038I Pass  78: suminf.    6.68405 (20) obj. 6 iterations 77
Cbc0038I Pass  79: suminf.    6.28846 (21) obj. 6 iterations 43
Cbc0038I Pass  80: suminf.    6.28846 (21) obj. 6 iterations 3
Cbc0038I Pass  81: suminf.   12.40529 (54) obj. 6 iterations 167
Cbc0038I Pass  82: suminf.    8.41526 (41) obj. 6 iterations 112
Cbc0038I Pass  83: suminf.    9.15198 (32) obj. 6 iterations 26
Cbc0038I Pass  84: suminf.    8.77489 (39) obj. 6 iterations 24
Cbc0038I Pass  85: suminf.    7.89926 (31) obj. 6 iterations 85
Cbc0038I Pass  86: suminf.    7.56255 (35) obj. 6 iterations 31
Cbc0038I Pass  87: suminf.    7.26292 (32) obj. 6 iterations 6
Cbc0038I Pass  88: suminf.    8.21737 (31) obj. 6 iterations 45
Cbc0038I Pass  89: suminf.    6.60452 (29) obj. 6 iterations 27
Cbc0038I Pass  90: suminf.    7.82027 (31) obj. 6 iterations 37
Cbc0038I Pass  91: suminf.    7.29569 (32) obj. 6 iterations 24
Cbc0038I Pass  92: suminf.    7.69140 (31) obj. 6 iterations 33
Cbc0038I Pass  93: suminf.    6.26077 (29) obj. 6 iterations 30
Cbc0038I Pass  94: suminf.    7.37321 (30) obj. 6 iterations 34
Cbc0038I Pass  95: suminf.    6.85452 (31) obj. 6 iterations 18
Cbc0038I Pass  96: suminf.    8.16255 (36) obj. 6 iterations 50
Cbc0038I Pass  97: suminf.    6.60452 (29) obj. 6 iterations 44
Cbc0038I Pass  98: suminf.    9.12728 (30) obj. 6 iterations 62
Cbc0038I Pass  99: suminf.    7.64612 (30) obj. 6 iterations 26
Cbc0038I Pass 100: suminf.   16.41772 (52) obj. 6 iterations 127
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 797 integers at bound fixed and 0 continuous
Cbc0038I Full problem 336 rows 1044 columns, reduced to 217 rows 221 columns
Cbc0038I Mini branch and bound did not improve solution (2.50 seconds)
Cbc0038I After 2.50 seconds - Feasibility pump exiting - took 1.06 seconds
Cbc0031I 54 added rows had average density of 38.648148
Cbc0013I At root node, 54 cuts changed objective from 4.1304348 to 5 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 279 row cuts average 7.0 elements, 12 column cuts (12 active)  in 0.761 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 78 row cuts average 591.1 elements, 0 column cuts (0 active)  in 0.502 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 133 row cuts average 23.2 elements, 0 column cuts (0 active)  in 18.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 154 row cuts average 55.1 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 94 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 117 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 5 (24.00 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 5 (27.73 seconds)
Cbc0010I After 2 nodes, 2 on tree, 1e+50 best solution, best possible 5 (29.79 seconds)
Cbc0010I After 4 nodes, 1 on tree, 1e+50 best solution, best possible 6 (33.13 seconds)
Cbc0010I After 5 nodes, 2 on tree, 1e+50 best solution, best possible 6 (36.52 seconds)
Cbc0016I Integer solution of 6 found by strong branching after 5633 iterations and 6 nodes (39.93 seconds)
Cbc0001I Search completed - best objective 6, took 5660 iterations and 6 nodes (39.95 seconds)
Cbc0032I Strong branching done 32 times (314 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Cuts at root node changed objective from 4.13043 to 5
Probing was tried 21 times and created 596 cuts of which 0 were active after adding rounds of cuts (0.849011 seconds)
Gomory was tried 20 times and created 80 cuts of which 0 were active after adding rounds of cuts (0.541036 seconds)
Knapsack was tried 20 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.198671 seconds)
liftKnapsack was tried 20 times and created 270 cuts of which 0 were active after adding rounds of cuts (32.7307 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013611 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.070275 seconds)
MixedIntegerRounding2 was tried 20 times and created 241 cuts of which 0 were active after adding rounds of cuts (0.139267 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005178 seconds)
TwoMirCuts was tried 20 times and created 174 cuts of which 0 were active after adding rounds of cuts (0.276367 seconds)
ZeroHalf was tried 20 times and created 198 cuts of which 0 were active after adding rounds of cuts (0.189185 seconds)

Result - Optimal solution found
Objective value:                6
Enumerated nodes:               6
Total iterations:               5660
Time (CPU seconds):             40.0289
Time (Wallclock seconds):       40.0039
Total time (CPU seconds):       40.0523   (Wallclock seconds):       40.0254
