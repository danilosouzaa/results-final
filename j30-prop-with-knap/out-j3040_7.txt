Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3040/j3040_7.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 15.2848 - 0.062617 seconds
Cgl0003I 71 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 22 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 5 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 10 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 268 rows, 959 columns (959 integer (958 of which binary)) and 18134 elements
Coin3009W Conflict graph built in 0.065 seconds, density: 1.140%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 959 objects (959 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 62 integers unsatisfied sum - 16.8049
Cbc0038I Pass   1: suminf.   12.41570 (46) obj. 16 iterations 35
Cbc0038I Pass   2: suminf.   12.36570 (46) obj. 16 iterations 7
Cbc0038I Pass   3: suminf.   12.26680 (44) obj. 16 iterations 6
Cbc0038I Pass   4: suminf.   13.25705 (40) obj. 16 iterations 21
Cbc0038I Pass   5: suminf.   13.20116 (40) obj. 16 iterations 6
Cbc0038I Pass   6: suminf.   12.90060 (46) obj. 16 iterations 8
Cbc0038I Pass   7: suminf.   12.65817 (46) obj. 16 iterations 4
Cbc0038I Pass   8: suminf.   12.63393 (46) obj. 16 iterations 1
Cbc0038I Pass   9: suminf.   13.14111 (44) obj. 16 iterations 25
Cbc0038I Pass  10: suminf.   12.72978 (46) obj. 16 iterations 18
Cbc0038I Pass  11: suminf.   12.69341 (46) obj. 16 iterations 6
Cbc0038I Pass  12: suminf.   12.61444 (48) obj. 16 iterations 2
Cbc0038I Pass  13: suminf.   13.04514 (43) obj. 16 iterations 26
Cbc0038I Pass  14: suminf.   10.76978 (43) obj. 16 iterations 18
Cbc0038I Pass  15: suminf.   10.56950 (44) obj. 16 iterations 7
Cbc0038I Pass  16: suminf.   11.78260 (44) obj. 16 iterations 22
Cbc0038I Pass  17: suminf.   10.65718 (44) obj. 16 iterations 14
Cbc0038I Pass  18: suminf.   10.65718 (44) obj. 16 iterations 0
Cbc0038I Pass  19: suminf.   11.68058 (42) obj. 16 iterations 22
Cbc0038I Pass  20: suminf.   10.81566 (44) obj. 16 iterations 15
Cbc0038I Pass  21: suminf.   12.00277 (43) obj. 16 iterations 24
Cbc0038I Pass  22: suminf.   10.65718 (44) obj. 16 iterations 17
Cbc0038I Pass  23: suminf.   10.65718 (44) obj. 16 iterations 0
Cbc0038I Pass  24: suminf.   11.63422 (44) obj. 16 iterations 23
Cbc0038I Pass  25: suminf.   10.81566 (44) obj. 16 iterations 15
Cbc0038I Pass  26: suminf.   10.66209 (43) obj. 16 iterations 7
Cbc0038I Pass  27: suminf.   10.28681 (44) obj. 16 iterations 6
Cbc0038I Pass  28: suminf.   12.53417 (45) obj. 16 iterations 20
Cbc0038I Pass  29: suminf.   11.00182 (44) obj. 16 iterations 12
Cbc0038I Pass  30: suminf.   10.93603 (44) obj. 16 iterations 1
Cbc0038I Pass  31: suminf.   11.30772 (42) obj. 16 iterations 15
Cbc0038I Pass  32: suminf.   10.03681 (44) obj. 16 iterations 12
Cbc0038I Pass  33: suminf.   10.03681 (44) obj. 16 iterations 2
Cbc0038I Pass  34: suminf.   11.65908 (43) obj. 16 iterations 21
Cbc0038I Pass  35: suminf.   10.93603 (44) obj. 16 iterations 9
Cbc0038I Pass  36: suminf.   11.83629 (45) obj. 16 iterations 14
Cbc0038I Pass  37: suminf.   10.03681 (44) obj. 16 iterations 13
Cbc0038I Pass  38: suminf.   10.03681 (44) obj. 16 iterations 1
Cbc0038I Pass  39: suminf.   11.48614 (42) obj. 16 iterations 19
Cbc0038I Pass  40: suminf.   10.93603 (44) obj. 16 iterations 11
Cbc0038I Pass  41: suminf.   10.41209 (43) obj. 16 iterations 10
Cbc0038I Pass  42: suminf.   16.64609 (58) obj. 16 iterations 79
Cbc0038I Pass  43: suminf.   12.71145 (47) obj. 16 iterations 46
Cbc0038I Pass  44: suminf.   12.87918 (42) obj. 16 iterations 26
Cbc0038I Pass  45: suminf.   12.21476 (47) obj. 16 iterations 16
Cbc0038I Pass  46: suminf.   12.05962 (54) obj. 16 iterations 9
Cbc0038I Pass  47: suminf.   11.37931 (57) obj. 16 iterations 3
Cbc0038I Pass  48: suminf.   10.92937 (57) obj. 16 iterations 2
Cbc0038I Pass  49: suminf.   10.00110 (45) obj. 16 iterations 2
Cbc0038I Pass  50: suminf.   12.09850 (50) obj. 16 iterations 32
Cbc0038I Pass  51: suminf.   10.73854 (46) obj. 16 iterations 10
Cbc0038I Pass  52: suminf.   10.66197 (46) obj. 16 iterations 5
Cbc0038I Pass  53: suminf.   11.88221 (38) obj. 16 iterations 20
Cbc0038I Pass  54: suminf.   11.81043 (49) obj. 16 iterations 5
Cbc0038I Pass  55: suminf.   11.41792 (40) obj. 16 iterations 9
Cbc0038I Pass  56: suminf.   10.96554 (36) obj. 16 iterations 6
Cbc0038I Pass  57: suminf.   11.47138 (38) obj. 16 iterations 18
Cbc0038I Pass  58: suminf.   10.44223 (39) obj. 16 iterations 16
Cbc0038I Pass  59: suminf.   10.72730 (36) obj. 16 iterations 13
Cbc0038I Pass  60: suminf.   10.32685 (39) obj. 16 iterations 10
Cbc0038I Pass  61: suminf.   10.27016 (36) obj. 16 iterations 15
Cbc0038I Pass  62: suminf.   10.22685 (39) obj. 16 iterations 7
Cbc0038I Pass  63: suminf.   10.27016 (36) obj. 16 iterations 12
Cbc0038I Pass  64: suminf.   10.22685 (39) obj. 16 iterations 8
Cbc0038I Pass  65: suminf.   10.22685 (39) obj. 16 iterations 1
Cbc0038I Pass  66: suminf.   14.96627 (53) obj. 16 iterations 87
Cbc0038I Pass  67: suminf.   10.25067 (47) obj. 16 iterations 42
Cbc0038I Pass  68: suminf.    9.82201 (48) obj. 16 iterations 4
Cbc0038I Pass  69: suminf.   10.65114 (46) obj. 16 iterations 24
Cbc0038I Pass  70: suminf.    9.75818 (46) obj. 16 iterations 6
Cbc0038I Pass  71: suminf.   13.44103 (50) obj. 16 iterations 26
Cbc0038I Pass  72: suminf.   10.95079 (42) obj. 16 iterations 16
Cbc0038I Pass  73: suminf.   10.33579 (42) obj. 16 iterations 2
Cbc0038I Pass  74: suminf.   12.05230 (47) obj. 16 iterations 17
Cbc0038I Pass  75: suminf.   10.43598 (45) obj. 16 iterations 17
Cbc0038I Pass  76: suminf.    9.74755 (42) obj. 16 iterations 4
Cbc0038I Pass  77: suminf.   10.56269 (45) obj. 16 iterations 13
Cbc0038I Pass  78: suminf.   10.04288 (45) obj. 16 iterations 11
Cbc0038I Pass  79: suminf.   12.06084 (46) obj. 16 iterations 18
Cbc0038I Pass  80: suminf.   10.65211 (42) obj. 16 iterations 15
Cbc0038I Pass  81: suminf.   10.03711 (42) obj. 16 iterations 2
Cbc0038I Pass  82: suminf.   10.59383 (45) obj. 16 iterations 14
Cbc0038I Pass  83: suminf.   10.15826 (45) obj. 16 iterations 12
Cbc0038I Pass  84: suminf.   10.36206 (41) obj. 16 iterations 18
Cbc0038I Pass  85: suminf.    9.74755 (42) obj. 16 iterations 15
Cbc0038I Pass  86: suminf.   10.32093 (45) obj. 16 iterations 8
Cbc0038I Pass  87: suminf.   13.13241 (50) obj. 16 iterations 67
Cbc0038I Pass  88: suminf.    8.99606 (45) obj. 16 iterations 51
Cbc0038I Pass  89: suminf.    8.87537 (43) obj. 16 iterations 5
Cbc0038I Pass  90: suminf.    9.40032 (38) obj. 16 iterations 29
Cbc0038I Pass  91: suminf.    8.98428 (39) obj. 16 iterations 11
Cbc0038I Pass  92: suminf.    8.98428 (39) obj. 16 iterations 1
Cbc0038I Pass  93: suminf.    9.84704 (38) obj. 16 iterations 28
Cbc0038I Pass  94: suminf.    9.49931 (38) obj. 16 iterations 13
Cbc0038I Pass  95: suminf.    9.12873 (39) obj. 16 iterations 10
Cbc0038I Pass  96: suminf.    9.12873 (39) obj. 16 iterations 1
Cbc0038I Pass  97: suminf.   11.09712 (43) obj. 16 iterations 29
Cbc0038I Pass  98: suminf.    9.78218 (38) obj. 16 iterations 18
Cbc0038I Pass  99: suminf.    9.78218 (38) obj. 16 iterations 2
Cbc0038I Pass 100: suminf.   12.50239 (44) obj. 16 iterations 79
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 713 integers at bound fixed and 0 continuous
Cbc0038I Full problem 268 rows 959 columns, reduced to 241 rows 239 columns
Cbc0038I Mini branch and bound did not improve solution (2.85 seconds)
Cbc0038I After 2.85 seconds - Feasibility pump exiting - took 0.63 seconds
Cbc0031I 48 added rows had average density of 63.541667
Cbc0013I At root node, 48 cuts changed objective from 15.28481 to 16 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 208 row cuts average 6.4 elements, 12 column cuts (51 active)  in 0.680 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 181 row cuts average 602.4 elements, 0 column cuts (0 active)  in 0.594 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 194 row cuts average 28.5 elements, 0 column cuts (0 active)  in 9.933 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 216 row cuts average 61.6 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 189 row cuts average 161.6 elements, 0 column cuts (0 active)  in 0.243 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 99 row cuts average 64.2 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 16 (16.26 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 16 (19.02 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 16 (24.38 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 16 (29.54 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 16 (32.97 seconds)
Cbc0010I After 5 nodes, 5 on tree, 1e+50 best solution, best possible 16 (38.05 seconds)
Cbc0010I After 9 nodes, 2 on tree, 1e+50 best solution, best possible 16 (41.21 seconds)
Cbc0010I After 10 nodes, 3 on tree, 1e+50 best solution, best possible 16 (44.65 seconds)
Cbc0010I After 11 nodes, 4 on tree, 1e+50 best solution, best possible 16 (45.39 seconds)
Cbc0010I After 13 nodes, 6 on tree, 1e+50 best solution, best possible 16 (46.28 seconds)
Cbc0010I After 21 nodes, 8 on tree, 1e+50 best solution, best possible 16 (46.98 seconds)
Cbc0016I Integer solution of 16 found by strong branching after 6075 iterations and 25 nodes (47.28 seconds)
Cbc0001I Search completed - best objective 16, took 6075 iterations and 25 nodes (47.28 seconds)
Cbc0032I Strong branching done 512 times (12021 iterations), fathomed 2 nodes and fixed 48 variables
Cbc0035I Maximum depth 11, 0 variables fixed on reduced cost
Cuts at root node changed objective from 15.2848 to 16
Probing was tried 31 times and created 503 cuts of which 39 were active after adding rounds of cuts (0.85725 seconds)
Gomory was tried 31 times and created 182 cuts of which 0 were active after adding rounds of cuts (0.672969 seconds)
Knapsack was tried 31 times and created 73 cuts of which 0 were active after adding rounds of cuts (0.2328 seconds)
liftKnapsack was tried 31 times and created 448 cuts of which 0 were active after adding rounds of cuts (36.1152 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006894 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023735 seconds)
MixedIntegerRounding2 was tried 31 times and created 488 cuts of which 0 were active after adding rounds of cuts (0.280582 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010526 seconds)
TwoMirCuts was tried 31 times and created 280 cuts of which 0 were active after adding rounds of cuts (0.334299 seconds)
ZeroHalf was tried 31 times and created 213 cuts of which 0 were active after adding rounds of cuts (0.20265 seconds)

Result - Optimal solution found
Objective value:                16
Enumerated nodes:               25
Total iterations:               6075
Time (CPU seconds):             47.316
Time (Wallclock seconds):       47.348
Total time (CPU seconds):       47.4341   (Wallclock seconds):       47.4148
