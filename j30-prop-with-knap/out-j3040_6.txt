Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3040/j3040_6.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 9.60417 - 0.115 seconds
Cgl0003I 75 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 20 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 27 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 303 rows, 871 columns (871 integer (870 of which binary)) and 14684 elements
Coin3009W Conflict graph built in 0.039 seconds, density: 1.008%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 871 objects (871 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 70 integers unsatisfied sum - 17.8396
Cbc0038I Pass   1: suminf.   10.93072 (54) obj. 10.2482 iterations 104
Cbc0038I Pass   2: suminf.   10.54704 (53) obj. 10.4729 iterations 77
Cbc0038I Pass   3: suminf.    9.81114 (47) obj. 10 iterations 17
Cbc0038I Pass   4: suminf.    9.02304 (45) obj. 11 iterations 92
Cbc0038I Pass   5: suminf.    8.18640 (40) obj. 11 iterations 52
Cbc0038I Pass   6: suminf.    8.87100 (37) obj. 11 iterations 55
Cbc0038I Pass   7: suminf.    7.79488 (34) obj. 11 iterations 30
Cbc0038I Pass   8: suminf.    7.32999 (38) obj. 11 iterations 82
Cbc0038I Pass   9: suminf.    7.32999 (38) obj. 11 iterations 5
Cbc0038I Pass  10: suminf.    9.34428 (40) obj. 11 iterations 62
Cbc0038I Pass  11: suminf.    8.75482 (39) obj. 11 iterations 44
Cbc0038I Pass  12: suminf.    6.23680 (30) obj. 11 iterations 77
Cbc0038I Pass  13: suminf.    6.23680 (30) obj. 11 iterations 6
Cbc0038I Pass  14: suminf.    6.23680 (30) obj. 11 iterations 2
Cbc0038I Pass  15: suminf.   15.14651 (62) obj. 11 iterations 127
Cbc0038I Pass  16: suminf.   10.63754 (48) obj. 11 iterations 65
Cbc0038I Pass  17: suminf.    9.46293 (39) obj. 11 iterations 17
Cbc0038I Pass  18: suminf.    8.84908 (49) obj. 11 iterations 75
Cbc0038I Pass  19: suminf.    8.68042 (49) obj. 11 iterations 7
Cbc0038I Pass  20: suminf.    7.83067 (45) obj. 11 iterations 65
Cbc0038I Pass  21: suminf.    7.50124 (44) obj. 11 iterations 10
Cbc0038I Pass  22: suminf.    8.46716 (41) obj. 11 iterations 78
Cbc0038I Pass  23: suminf.    6.33903 (32) obj. 11 iterations 45
Cbc0038I Pass  24: suminf.    8.45671 (37) obj. 11 iterations 44
Cbc0038I Pass  25: suminf.    6.65046 (32) obj. 11 iterations 31
Cbc0038I Pass  26: suminf.   12.69403 (47) obj. 11 iterations 127
Cbc0038I Pass  27: suminf.    7.64202 (37) obj. 11 iterations 105
Cbc0038I Pass  28: suminf.    6.95608 (35) obj. 11 iterations 49
Cbc0038I Pass  29: suminf.    8.59921 (33) obj. 11 iterations 41
Cbc0038I Pass  30: suminf.    6.29613 (36) obj. 11 iterations 36
Cbc0038I Pass  31: suminf.    5.80682 (36) obj. 11 iterations 4
Cbc0038I Pass  32: suminf.    8.77929 (35) obj. 11 iterations 85
Cbc0038I Pass  33: suminf.    7.33552 (30) obj. 11 iterations 40
Cbc0038I Pass  34: suminf.    6.36165 (29) obj. 11 iterations 28
Cbc0038I Pass  35: suminf.    7.18586 (26) obj. 11 iterations 39
Cbc0038I Pass  36: suminf.    6.36165 (29) obj. 11 iterations 34
Cbc0038I Pass  37: suminf.    6.75729 (26) obj. 11 iterations 36
Cbc0038I Pass  38: suminf.    6.09975 (29) obj. 11 iterations 30
Cbc0038I Pass  39: suminf.    7.75379 (29) obj. 11 iterations 52
Cbc0038I Pass  40: suminf.    6.17760 (28) obj. 11 iterations 46
Cbc0038I Pass  41: suminf.    6.35833 (28) obj. 11 iterations 30
Cbc0038I Pass  42: suminf.   12.30417 (49) obj. 10.25 iterations 123
Cbc0038I Pass  43: suminf.    9.14069 (47) obj. 10.25 iterations 84
Cbc0038I Pass  44: suminf.    8.85497 (45) obj. 10.25 iterations 5
Cbc0038I Pass  45: suminf.    7.20343 (29) obj. 11 iterations 71
Cbc0038I Pass  46: suminf.    5.38003 (28) obj. 11 iterations 27
Cbc0038I Pass  47: suminf.    5.38003 (28) obj. 11 iterations 2
Cbc0038I Pass  48: suminf.    5.90112 (24) obj. 11 iterations 35
Cbc0038I Pass  49: suminf.    5.04544 (28) obj. 11 iterations 31
Cbc0038I Pass  50: suminf.    7.02160 (29) obj. 11 iterations 50
Cbc0038I Pass  51: suminf.    5.91629 (32) obj. 11 iterations 35
Cbc0038I Pass  52: suminf.    6.81410 (28) obj. 11 iterations 50
Cbc0038I Pass  53: suminf.    6.30382 (27) obj. 11 iterations 34
Cbc0038I Pass  54: suminf.    8.11526 (30) obj. 11 iterations 75
Cbc0038I Pass  55: suminf.    6.80003 (27) obj. 11 iterations 63
Cbc0038I Pass  56: suminf.    6.54762 (26) obj. 11 iterations 18
Cbc0038I Pass  57: suminf.    7.60504 (29) obj. 11 iterations 58
Cbc0038I Pass  58: suminf.    6.10942 (27) obj. 11 iterations 84
Cbc0038I Pass  59: suminf.    5.90942 (27) obj. 11 iterations 11
Cbc0038I Pass  60: suminf.    5.90942 (27) obj. 11 iterations 11
Cbc0038I Pass  61: suminf.    7.46517 (27) obj. 11 iterations 82
Cbc0038I Pass  62: suminf.    6.90595 (28) obj. 11 iterations 66
Cbc0038I Pass  63: suminf.    6.30017 (27) obj. 11 iterations 53
Cbc0038I Pass  64: suminf.    5.52752 (27) obj. 11 iterations 61
Cbc0038I Pass  65: suminf.    7.39795 (24) obj. 11 iterations 73
Cbc0038I Pass  66: suminf.    6.67100 (24) obj. 11 iterations 55
Cbc0038I Pass  67: suminf.    7.75714 (28) obj. 11 iterations 63
Cbc0038I Pass  68: suminf.    7.00335 (30) obj. 11 iterations 62
Cbc0038I Pass  69: suminf.    6.97302 (29) obj. 11 iterations 14
Cbc0038I Pass  70: suminf.    6.67302 (26) obj. 11 iterations 45
Cbc0038I Pass  71: suminf.    6.30635 (26) obj. 11 iterations 57
Cbc0038I Pass  72: suminf.    7.25860 (30) obj. 11 iterations 69
Cbc0038I Pass  73: suminf.    5.86194 (28) obj. 11 iterations 82
Cbc0038I Pass  74: suminf.    6.15644 (27) obj. 11 iterations 60
Cbc0038I Pass  75: suminf.    6.07778 (27) obj. 11 iterations 31
Cbc0038I Pass  76: suminf.    6.63564 (30) obj. 11 iterations 45
Cbc0038I Pass  77: suminf.    6.63564 (30) obj. 11 iterations 9
Cbc0038I Pass  78: suminf.    9.79286 (32) obj. 11 iterations 82
Cbc0038I Pass  79: suminf.    6.66561 (27) obj. 11 iterations 57
Cbc0038I Pass  80: suminf.    6.61138 (30) obj. 11 iterations 19
Cbc0038I Pass  81: suminf.    5.83932 (24) obj. 11 iterations 39
Cbc0038I Pass  82: suminf.    5.71233 (24) obj. 11 iterations 9
Cbc0038I Pass  83: suminf.    7.39525 (26) obj. 11 iterations 62
Cbc0038I Pass  84: suminf.    6.90791 (29) obj. 11 iterations 38
Cbc0038I Pass  85: suminf.    8.87419 (31) obj. 11 iterations 75
Cbc0038I Pass  86: suminf.    5.54490 (26) obj. 11 iterations 79
Cbc0038I Pass  87: suminf.    7.79870 (26) obj. 11 iterations 74
Cbc0038I Pass  88: suminf.    5.85227 (25) obj. 11 iterations 38
Cbc0038I Pass  89: suminf.    8.91178 (27) obj. 11 iterations 99
Cbc0038I Pass  90: suminf.    6.14906 (25) obj. 11 iterations 79
Cbc0038I Pass  91: suminf.    5.95051 (24) obj. 11 iterations 14
Cbc0038I Pass  92: suminf.    8.13203 (26) obj. 11 iterations 57
Cbc0038I Pass  93: suminf.    6.28084 (25) obj. 11 iterations 42
Cbc0038I Pass  94: suminf.    7.43074 (26) obj. 11 iterations 33
Cbc0038I Pass  95: suminf.    6.09903 (25) obj. 11 iterations 25
Cbc0038I Pass  96: suminf.    5.89903 (25) obj. 11 iterations 1
Cbc0038I Pass  97: suminf.    8.63203 (26) obj. 11 iterations 62
Cbc0038I Pass  98: suminf.    5.89394 (26) obj. 11 iterations 57
Cbc0038I Pass  99: suminf.    5.81255 (26) obj. 11 iterations 42
Cbc0038I Pass 100: suminf.   13.48447 (49) obj. 11 iterations 144
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 585 integers at bound fixed and 0 continuous
Cbc0038I Full problem 303 rows 871 columns, reduced to 228 rows 272 columns
Cbc0038I Mini branch and bound did not improve solution (4.41 seconds)
Cbc0038I After 4.41 seconds - Feasibility pump exiting - took 2.48 seconds
Cbc0031I 57 added rows had average density of 63.701754
Cbc0013I At root node, 57 cuts changed objective from 9.6041667 to 11 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 154 row cuts average 4.1 elements, 98 column cuts (98 active)  in 0.620 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 85 row cuts average 519.2 elements, 0 column cuts (0 active)  in 0.333 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 111 row cuts average 20.8 elements, 0 column cuts (0 active)  in 13.509 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 104 row cuts average 50.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 250 row cuts average 226.3 elements, 0 column cuts (0 active)  in 0.295 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 104 row cuts average 61.3 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 11 (21.78 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 11 (25.87 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 11 (29.61 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 11 (32.45 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 11 (35.58 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 11 (39.37 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 11 (40.82 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 11 (43.37 seconds)
Cbc0010I After 8 nodes, 8 on tree, 1e+50 best solution, best possible 11 (46.84 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 11 (48.85 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible 11 (50.30 seconds)
Cbc0010I After 11 nodes, 11 on tree, 1e+50 best solution, best possible 11 (53.14 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible 11 (55.54 seconds)
Cbc0010I After 14 nodes, 12 on tree, 1e+50 best solution, best possible 11 (57.14 seconds)
Cbc0010I After 15 nodes, 12 on tree, 1e+50 best solution, best possible 11 (57.84 seconds)
Cbc0016I Integer solution of 11 found by strong branching after 3304 iterations and 16 nodes (57.94 seconds)
Cbc0001I Search completed - best objective 11, took 3304 iterations and 16 nodes (57.95 seconds)
Cbc0032I Strong branching done 506 times (14179 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 0 variables fixed on reduced cost
Cuts at root node changed objective from 9.60417 to 11
Probing was tried 30 times and created 380 cuts of which 0 were active after adding rounds of cuts (0.722677 seconds)
Gomory was tried 30 times and created 87 cuts of which 0 were active after adding rounds of cuts (0.453392 seconds)
Knapsack was tried 30 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.298222 seconds)
liftKnapsack was tried 30 times and created 190 cuts of which 0 were active after adding rounds of cuts (46.6991 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00724 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038447 seconds)
MixedIntegerRounding2 was tried 30 times and created 200 cuts of which 0 were active after adding rounds of cuts (0.171729 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003785 seconds)
TwoMirCuts was tried 30 times and created 264 cuts of which 0 were active after adding rounds of cuts (0.382457 seconds)
ZeroHalf was tried 30 times and created 172 cuts of which 0 were active after adding rounds of cuts (0.212858 seconds)

Result - Optimal solution found
Objective value:                11
Enumerated nodes:               16
Total iterations:               3304
Time (CPU seconds):             57.9562
Time (Wallclock seconds):       58.0057
Total time (CPU seconds):       58.0093   (Wallclock seconds):       58.0484
