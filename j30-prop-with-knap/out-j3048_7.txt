Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3048/j3048_7.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.73111 - 0.076759 seconds
Cgl0002I 10 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 294 rows, 645 columns (645 integer (644 of which binary)) and 9949 elements
Coin3009W Conflict graph built in 0.020 seconds, density: 1.091%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 645 objects (645 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 59 integers unsatisfied sum - 17.0087
Cbc0038I Pass   1: suminf.    9.27778 (33) obj. 4 iterations 58
Cbc0038I Pass   2: suminf.    8.60488 (34) obj. 4 iterations 11
Cbc0038I Pass   3: suminf.    7.54444 (28) obj. 4 iterations 26
Cbc0038I Pass   4: suminf.    7.25873 (28) obj. 4 iterations 8
Cbc0038I Pass   5: suminf.    8.04365 (28) obj. 4 iterations 30
Cbc0038I Pass   6: suminf.    7.54167 (28) obj. 4 iterations 14
Cbc0038I Pass   7: suminf.    6.29365 (25) obj. 4 iterations 17
Cbc0038I Pass   8: suminf.    5.79167 (26) obj. 4 iterations 16
Cbc0038I Pass   9: suminf.    5.91667 (25) obj. 4 iterations 23
Cbc0038I Pass  10: suminf.    5.63095 (25) obj. 4 iterations 9
Cbc0038I Pass  11: suminf.    6.38889 (25) obj. 4 iterations 17
Cbc0038I Pass  12: suminf.    5.80595 (25) obj. 4 iterations 19
Cbc0038I Pass  13: suminf.    6.69365 (23) obj. 4 iterations 21
Cbc0038I Pass  14: suminf.    5.80595 (25) obj. 4 iterations 18
Cbc0038I Pass  15: suminf.    5.80595 (25) obj. 4 iterations 1
Cbc0038I Pass  16: suminf.    6.28889 (23) obj. 4 iterations 18
Cbc0038I Pass  17: suminf.    6.00317 (23) obj. 4 iterations 12
Cbc0038I Pass  18: suminf.    5.80595 (25) obj. 4 iterations 9
Cbc0038I Pass  19: suminf.    8.69815 (27) obj. 4 iterations 36
Cbc0038I Pass  20: suminf.    7.98148 (26) obj. 4 iterations 10
Cbc0038I Pass  21: suminf.    7.93020 (26) obj. 4 iterations 7
Cbc0038I Pass  22: suminf.    6.86667 (23) obj. 4 iterations 32
Cbc0038I Pass  23: suminf.    6.58095 (23) obj. 4 iterations 10
Cbc0038I Pass  24: suminf.    7.01481 (23) obj. 4 iterations 16
Cbc0038I Pass  25: suminf.    6.72910 (23) obj. 4 iterations 11
Cbc0038I Pass  26: suminf.    7.06762 (28) obj. 4 iterations 38
Cbc0038I Pass  27: suminf.    6.29554 (25) obj. 4 iterations 19
Cbc0038I Pass  28: suminf.    7.19365 (25) obj. 4 iterations 19
Cbc0038I Pass  29: suminf.    5.86190 (25) obj. 4 iterations 13
Cbc0038I Pass  30: suminf.    5.86190 (25) obj. 4 iterations 0
Cbc0038I Pass  31: suminf.    8.09783 (28) obj. 4 iterations 20
Cbc0038I Pass  32: suminf.    7.75317 (26) obj. 4 iterations 10
Cbc0038I Pass  33: suminf.    6.50317 (25) obj. 4 iterations 11
Cbc0038I Pass  34: suminf.    6.50317 (25) obj. 4 iterations 2
Cbc0038I Pass  35: suminf.    7.90556 (24) obj. 4 iterations 39
Cbc0038I Pass  36: suminf.    7.13889 (25) obj. 4 iterations 22
Cbc0038I Pass  37: suminf.    6.93148 (24) obj. 4 iterations 2
Cbc0038I Pass  38: suminf.    6.09167 (25) obj. 4 iterations 48
Cbc0038I Pass  39: suminf.    5.80595 (25) obj. 4 iterations 8
Cbc0038I Pass  40: suminf.    6.69365 (23) obj. 4 iterations 23
Cbc0038I Pass  41: suminf.    6.40794 (23) obj. 4 iterations 10
Cbc0038I Pass  42: suminf.    5.80595 (25) obj. 4 iterations 7
Cbc0038I Pass  43: suminf.    5.80595 (25) obj. 4 iterations 1
Cbc0038I Pass  44: suminf.    8.81481 (27) obj. 4 iterations 30
Cbc0038I Pass  45: suminf.    8.48148 (27) obj. 4 iterations 8
Cbc0038I Pass  46: suminf.    8.43020 (27) obj. 4 iterations 7
Cbc0038I Pass  47: suminf.    7.49365 (27) obj. 4 iterations 20
Cbc0038I Pass  48: suminf.    7.13386 (27) obj. 4 iterations 13
Cbc0038I Pass  49: suminf.    8.51508 (27) obj. 4 iterations 16
Cbc0038I Pass  50: suminf.    8.22937 (27) obj. 4 iterations 10
Cbc0038I Pass  51: suminf.    9.00159 (27) obj. 4 iterations 18
Cbc0038I Pass  52: suminf.    8.10767 (27) obj. 4 iterations 10
Cbc0038I Pass  53: suminf.    7.85639 (27) obj. 4 iterations 10
Cbc0038I Pass  54: suminf.    7.74356 (27) obj. 4 iterations 20
Cbc0038I Pass  55: suminf.    7.18413 (25) obj. 4 iterations 22
Cbc0038I Pass  56: suminf.    6.91429 (24) obj. 4 iterations 2
Cbc0038I Pass  57: suminf.    6.52143 (24) obj. 4 iterations 11
Cbc0038I Pass  58: suminf.    6.31468 (23) obj. 4 iterations 10
Cbc0038I Pass  59: suminf.    7.22857 (25) obj. 4 iterations 28
Cbc0038I Pass  60: suminf.    7.22857 (25) obj. 4 iterations 24
Cbc0038I Pass  61: suminf.    7.05556 (24) obj. 4 iterations 25
Cbc0038I Pass  62: suminf.    6.09815 (21) obj. 4 iterations 12
Cbc0038I Pass  63: suminf.    6.20000 (21) obj. 4 iterations 19
Cbc0038I Pass  64: suminf.    6.20000 (21) obj. 4 iterations 2
Cbc0038I Pass  65: suminf.    6.22857 (22) obj. 4 iterations 15
Cbc0038I Pass  66: suminf.    6.22857 (22) obj. 4 iterations 5
Cbc0038I Pass  67: suminf.    5.88889 (22) obj. 4 iterations 16
Cbc0038I Pass  68: suminf.    5.30000 (21) obj. 4 iterations 6
Cbc0038I Pass  69: suminf.    5.64125 (25) obj. 4 iterations 25
Cbc0038I Pass  70: suminf.    5.64125 (25) obj. 4 iterations 1
Cbc0038I Pass  71: suminf.    5.58125 (22) obj. 4 iterations 11
Cbc0038I Pass  72: suminf.    5.58125 (22) obj. 4 iterations 11
Cbc0038I Pass  73: suminf.    8.40556 (26) obj. 4 iterations 30
Cbc0038I Pass  74: suminf.    8.40556 (26) obj. 4 iterations 1
Cbc0038I Pass  75: suminf.    6.88016 (27) obj. 4 iterations 25
Cbc0038I Pass  76: suminf.    6.78284 (26) obj. 4 iterations 7
Cbc0038I Pass  77: suminf.    7.35556 (22) obj. 4 iterations 21
Cbc0038I Pass  78: suminf.    7.35556 (22) obj. 4 iterations 2
Cbc0038I Pass  79: suminf.    6.68889 (21) obj. 4 iterations 22
Cbc0038I Pass  80: suminf.    6.09815 (21) obj. 4 iterations 3
Cbc0038I Pass  81: suminf.    6.20000 (21) obj. 4 iterations 18
Cbc0038I Pass  82: suminf.    6.20000 (21) obj. 4 iterations 2
Cbc0038I Pass  83: suminf.    6.22857 (22) obj. 4 iterations 20
Cbc0038I Pass  84: suminf.    6.22857 (22) obj. 4 iterations 6
Cbc0038I Pass  85: suminf.    6.34815 (21) obj. 4 iterations 22
Cbc0038I Pass  86: suminf.    6.09815 (21) obj. 4 iterations 2
Cbc0038I Pass  87: suminf.    5.58125 (23) obj. 4 iterations 34
Cbc0038I Pass  88: suminf.    8.27222 (26) obj. 4 iterations 29
Cbc0038I Pass  89: suminf.    8.06481 (25) obj. 4 iterations 4
Cbc0038I Pass  90: suminf.    6.44722 (26) obj. 4 iterations 17
Cbc0038I Pass  91: suminf.    6.10741 (20) obj. 4 iterations 7
Cbc0038I Pass  92: suminf.    6.10741 (20) obj. 4 iterations 0
Cbc0038I Pass  93: suminf.    4.35556 (20) obj. 4 iterations 15
Cbc0038I Pass  94: suminf.    4.26667 (19) obj. 4 iterations 7
Cbc0038I Pass  95: suminf.    6.28889 (26) obj. 4 iterations 26
Cbc0038I Pass  96: suminf.    6.28889 (26) obj. 4 iterations 0
Cbc0038I Pass  97: suminf.    6.22857 (21) obj. 4 iterations 19
Cbc0038I Pass  98: suminf.    6.22857 (21) obj. 4 iterations 4
Cbc0038I Pass  99: suminf.    6.68889 (22) obj. 4 iterations 19
Cbc0038I Pass 100: suminf.    7.17537 (26) obj. 4 iterations 88
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 532 integers at bound fixed and 0 continuous
Cbc0038I Full problem 294 rows 645 columns, reduced to 126 rows 75 columns
Cbc0038I Mini branch and bound did not improve solution (1.51 seconds)
Cbc0038I After 1.51 seconds - Feasibility pump exiting - took 0.47 seconds
Cbc0031I 38 added rows had average density of 49.131579
Cbc0013I At root node, 38 cuts changed objective from 1.7311111 to 4 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 164 row cuts average 5.0 elements, 3 column cuts (3 active)  in 0.412 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 184 row cuts average 406.8 elements, 0 column cuts (0 active)  in 0.328 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 71 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 85 row cuts average 15.0 elements, 0 column cuts (0 active)  in 9.073 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 2 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 121 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 295 row cuts average 250.3 elements, 0 column cuts (0 active)  in 0.756 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 84 row cuts average 34.5 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 4 (13.80 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 4 (15.79 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 4 (17.64 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 4 (18.65 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 4 (20.57 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 4 (24.05 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 4 (25.83 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 4 (27.14 seconds)
Cbc0010I After 9 nodes, 8 on tree, 1e+50 best solution, best possible 4 (28.68 seconds)
Cbc0010I After 11 nodes, 9 on tree, 1e+50 best solution, best possible 4 (30.01 seconds)
Cbc0010I After 14 nodes, 10 on tree, 1e+50 best solution, best possible 4 (30.87 seconds)
Cbc0010I After 19 nodes, 10 on tree, 1e+50 best solution, best possible 4 (31.78 seconds)
Cbc0010I After 23 nodes, 10 on tree, 1e+50 best solution, best possible 4 (32.76 seconds)
Cbc0010I After 27 nodes, 10 on tree, 1e+50 best solution, best possible 4 (34.24 seconds)
Cbc0010I After 30 nodes, 10 on tree, 1e+50 best solution, best possible 4 (35.26 seconds)
Cbc0010I After 34 nodes, 11 on tree, 1e+50 best solution, best possible 4 (36.82 seconds)
Cbc0010I After 43 nodes, 9 on tree, 1e+50 best solution, best possible 4 (39.23 seconds)
Cbc0004I Integer solution of 4 found after 3804 iterations and 46 nodes (39.87 seconds)
Cbc0001I Search completed - best objective 4, took 3804 iterations and 46 nodes (39.87 seconds)
Cbc0032I Strong branching done 692 times (14563 iterations), fathomed 1 nodes and fixed 10 variables
Cbc0035I Maximum depth 19, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.73111 to 4
Probing was tried 47 times and created 311 cuts of which 0 were active after adding rounds of cuts (0.50674 seconds)
Gomory was tried 47 times and created 185 cuts of which 0 were active after adding rounds of cuts (0.454171 seconds)
Knapsack was tried 47 times and created 99 cuts of which 0 were active after adding rounds of cuts (0.423295 seconds)
liftKnapsack was tried 47 times and created 156 cuts of which 0 were active after adding rounds of cuts (31.478 seconds)
Clique was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.006467 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.03703 seconds)
MixedIntegerRounding2 was tried 47 times and created 233 cuts of which 0 were active after adding rounds of cuts (0.173881 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00423 seconds)
TwoMirCuts was tried 47 times and created 314 cuts of which 0 were active after adding rounds of cuts (0.821477 seconds)
ZeroHalf was tried 47 times and created 213 cuts of which 0 were active after adding rounds of cuts (0.202973 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               46
Total iterations:               3804
Time (CPU seconds):             39.9348
Time (Wallclock seconds):       39.9167
Total time (CPU seconds):       39.9496   (Wallclock seconds):       39.9305
