Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3038/j3038_1.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.78125 - 0.347966 seconds
Cgl0002I 2 variables fixed
Cgl0003I 6 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 347 rows, 1288 columns (1288 integer (1287 of which binary)) and 20534 elements
Coin3009W Conflict graph built in 0.180 seconds, density: 1.090%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1288 objects (1288 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 109 integers unsatisfied sum - 25.2743
Cbc0038I Pass   1: suminf.   11.50569 (54) obj. 5 iterations 341
Cbc0038I Pass   2: suminf.   10.92525 (58) obj. 5 iterations 43
Cbc0038I Pass   3: suminf.   10.55612 (61) obj. 5 iterations 43
Cbc0038I Pass   4: suminf.   10.63171 (54) obj. 5 iterations 177
Cbc0038I Pass   5: suminf.    9.77110 (54) obj. 5 iterations 105
Cbc0038I Pass   6: suminf.    8.76437 (47) obj. 5 iterations 152
Cbc0038I Pass   7: suminf.    7.50882 (52) obj. 5 iterations 100
Cbc0038I Pass   8: suminf.    9.13418 (53) obj. 5 iterations 145
Cbc0038I Pass   9: suminf.    7.86176 (49) obj. 5 iterations 125
Cbc0038I Pass  10: suminf.    8.93433 (41) obj. 5 iterations 180
Cbc0038I Pass  11: suminf.    6.83722 (43) obj. 5 iterations 150
Cbc0038I Pass  12: suminf.    8.94725 (40) obj. 5 iterations 150
Cbc0038I Pass  13: suminf.    7.20190 (50) obj. 5 iterations 124
Cbc0038I Pass  14: suminf.    6.75464 (51) obj. 5 iterations 83
Cbc0038I Pass  15: suminf.    7.35636 (36) obj. 5 iterations 119
Cbc0038I Pass  16: suminf.    6.88285 (44) obj. 5 iterations 84
Cbc0038I Pass  17: suminf.    6.82499 (50) obj. 5 iterations 32
Cbc0038I Pass  18: suminf.    7.80300 (45) obj. 5 iterations 88
Cbc0038I Pass  19: suminf.    6.77107 (45) obj. 5 iterations 97
Cbc0038I Pass  20: suminf.    7.30064 (36) obj. 5 iterations 149
Cbc0038I Pass  21: suminf.    6.75464 (51) obj. 5 iterations 81
Cbc0038I Pass  22: suminf.    7.69908 (33) obj. 5 iterations 139
Cbc0038I Pass  23: suminf.    7.00929 (46) obj. 5 iterations 110
Cbc0038I Pass  24: suminf.    6.15916 (43) obj. 5 iterations 95
Cbc0038I Pass  25: suminf.    5.64661 (40) obj. 5 iterations 24
Cbc0038I Pass  26: suminf.    7.44780 (37) obj. 5 iterations 174
Cbc0038I Pass  27: suminf.    6.16525 (37) obj. 5 iterations 127
Cbc0038I Pass  28: suminf.    5.67283 (38) obj. 5 iterations 85
Cbc0038I Pass  29: suminf.    5.98306 (41) obj. 5 iterations 137
Cbc0038I Pass  30: suminf.    5.51154 (41) obj. 5 iterations 66
Cbc0038I Pass  31: suminf.    7.59188 (34) obj. 5 iterations 165
Cbc0038I Pass  32: suminf.    6.90859 (40) obj. 5 iterations 79
Cbc0038I Pass  33: suminf.    6.17931 (44) obj. 5 iterations 135
Cbc0038I Pass  34: suminf.    5.15980 (38) obj. 5 iterations 85
Cbc0038I Pass  35: suminf.    6.45397 (31) obj. 5 iterations 81
Cbc0038I Pass  36: suminf.    5.40526 (31) obj. 5 iterations 53
Cbc0038I Pass  37: suminf.    4.93930 (34) obj. 5 iterations 88
Cbc0038I Pass  38: suminf.    5.46840 (30) obj. 5 iterations 66
Cbc0038I Pass  39: suminf.   15.01915 (64) obj. 5 iterations 234
Cbc0038I Pass  40: suminf.    9.24924 (53) obj. 5 iterations 177
Cbc0038I Pass  41: suminf.    8.52743 (54) obj. 5 iterations 66
Cbc0038I Pass  42: suminf.    7.81393 (43) obj. 5 iterations 77
Cbc0038I Pass  43: suminf.    9.01564 (51) obj. 5 iterations 182
Cbc0038I Pass  44: suminf.    8.50710 (49) obj. 5 iterations 64
Cbc0038I Pass  45: suminf.    8.17876 (49) obj. 5 iterations 69
Cbc0038I Pass  46: suminf.    7.73100 (55) obj. 5 iterations 73
Cbc0038I Pass  47: suminf.    7.47022 (54) obj. 5 iterations 18
Cbc0038I Pass  48: suminf.    7.47022 (54) obj. 5 iterations 2
Cbc0038I Pass  49: suminf.    9.18152 (44) obj. 5 iterations 170
Cbc0038I Pass  50: suminf.    7.48433 (43) obj. 5 iterations 57
Cbc0038I Pass  51: suminf.    7.20900 (44) obj. 5 iterations 42
Cbc0038I Pass  52: suminf.    6.30428 (45) obj. 5 iterations 44
Cbc0038I Pass  53: suminf.    6.20947 (41) obj. 5 iterations 25
Cbc0038I Pass  54: suminf.    5.29839 (25) obj. 5 iterations 145
Cbc0038I Pass  55: suminf.    4.93758 (38) obj. 5 iterations 82
Cbc0038I Pass  56: suminf.    4.85590 (29) obj. 5 iterations 48
Cbc0038I Pass  57: suminf.    6.56826 (36) obj. 5 iterations 191
Cbc0038I Pass  58: suminf.    5.21078 (38) obj. 5 iterations 95
Cbc0038I Pass  59: suminf.    5.06650 (41) obj. 5 iterations 25
Cbc0038I Pass  60: suminf.    6.53970 (30) obj. 5 iterations 175
Cbc0038I Pass  61: suminf.    6.09376 (31) obj. 5 iterations 68
Cbc0038I Pass  62: suminf.    5.95636 (35) obj. 5 iterations 26
Cbc0038I Pass  63: suminf.    6.33828 (33) obj. 5 iterations 196
Cbc0038I Pass  64: suminf.    4.70571 (28) obj. 5 iterations 109
Cbc0038I Pass  65: suminf.    4.94850 (25) obj. 5 iterations 156
Cbc0038I Pass  66: suminf.    3.96913 (24) obj. 5 iterations 92
Cbc0038I Pass  67: suminf.    5.58123 (29) obj. 5 iterations 172
Cbc0038I Pass  68: suminf.    4.80997 (21) obj. 5 iterations 62
Cbc0038I Pass  69: suminf.    4.46615 (21) obj. 5 iterations 13
Cbc0038I Pass  70: suminf.    7.12850 (36) obj. 5 iterations 143
Cbc0038I Pass  71: suminf.    3.51429 (16) obj. 5 iterations 165
Cbc0038I Pass  72: suminf.    3.20000 (16) obj. 5 iterations 65
Cbc0038I Pass  73: suminf.    3.88538 (16) obj. 5 iterations 121
Cbc0038I Pass  74: suminf.    2.97619 (16) obj. 5 iterations 115
Cbc0038I Pass  75: suminf.    2.95775 (23) obj. 5 iterations 28
Cbc0038I Pass  76: suminf.    4.27180 (25) obj. 5 iterations 182
Cbc0038I Pass  77: suminf.    2.15476 (12) obj. 5 iterations 124
Cbc0038I Pass  78: suminf.    3.98776 (14) obj. 5 iterations 146
Cbc0038I Pass  79: suminf.    3.17143 (18) obj. 5 iterations 108
Cbc0038I Pass  80: suminf.    6.17410 (30) obj. 5 iterations 138
Cbc0038I Pass  81: suminf.    5.33175 (30) obj. 5 iterations 121
Cbc0038I Pass  82: suminf.    7.45349 (36) obj. 5 iterations 181
Cbc0038I Pass  83: suminf.    4.71966 (23) obj. 5 iterations 105
Cbc0038I Pass  84: suminf.    4.71966 (23) obj. 5 iterations 8
Cbc0038I Pass  85: suminf.    7.39717 (29) obj. 5 iterations 164
Cbc0038I Pass  86: suminf.    5.63860 (20) obj. 5 iterations 126
Cbc0038I Pass  87: suminf.    4.95687 (19) obj. 5 iterations 97
Cbc0038I Pass  88: suminf.    4.52676 (19) obj. 5 iterations 42
Cbc0038I Pass  89: suminf.    4.52152 (20) obj. 5 iterations 19
Cbc0038I Pass  90: suminf.    5.63335 (20) obj. 5 iterations 189
Cbc0038I Pass  91: suminf.    5.10226 (23) obj. 5 iterations 131
Cbc0038I Pass  92: suminf.    5.07068 (23) obj. 5 iterations 18
Cbc0038I Pass  93: suminf.    4.64095 (24) obj. 5 iterations 27
Cbc0038I Pass  94: suminf.    4.31994 (30) obj. 5 iterations 52
Cbc0038I Pass  95: suminf.    4.46849 (14) obj. 5 iterations 221
Cbc0038I Pass  96: suminf.    3.99146 (14) obj. 5 iterations 36
Cbc0038I Pass  97: suminf.    3.96268 (15) obj. 5 iterations 16
Cbc0038I Pass  98: suminf.    5.25714 (16) obj. 5 iterations 116
Cbc0038I Pass  99: suminf.    4.65714 (13) obj. 5 iterations 64
Cbc0038I Pass 100: suminf.   11.75415 (52) obj. 5 iterations 239
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 935 integers at bound fixed and 0 continuous
Cbc0038I Full problem 347 rows 1288 columns, reduced to 246 rows 323 columns
Cbc0038I Mini branch and bound did not improve solution (8.12 seconds)
Cbc0038I After 8.12 seconds - Feasibility pump exiting - took 5.44 seconds
Cbc0031I 31 added rows had average density of 55.83871
Cbc0013I At root node, 31 cuts changed objective from 3.78125 to 5 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 109 row cuts average 11.7 elements, 1 column cuts (1 active)  in 1.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 453.9 elements, 0 column cuts (0 active)  in 0.351 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 232 row cuts average 16.9 elements, 0 column cuts (0 active)  in 22.582 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 93 row cuts average 75.4 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 89 row cuts average 113.4 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 100 row cuts average 94.2 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 5 (38.89 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 5 (45.03 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 5 (52.52 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 5 (58.45 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 5 (63.28 seconds)
Cbc0010I After 5 nodes, 5 on tree, 1e+50 best solution, best possible 5 (65.95 seconds)
Cbc0010I After 6 nodes, 4 on tree, 1e+50 best solution, best possible 5 (70.37 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 5 (74.48 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 5 (80.78 seconds)
Cbc0010I After 10 nodes, 5 on tree, 1e+50 best solution, best possible 5 (87.86 seconds)
Cbc0010I After 12 nodes, 4 on tree, 1e+50 best solution, best possible 5 (91.59 seconds)
Cbc0010I After 13 nodes, 4 on tree, 1e+50 best solution, best possible 5 (97.92 seconds)
Cbc0010I After 15 nodes, 3 on tree, 1e+50 best solution, best possible 5 (100.62 seconds)
Cbc0010I After 16 nodes, 3 on tree, 1e+50 best solution, best possible 5 (108.20 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 5 (118.60 seconds)
Cbc0010I After 19 nodes, 3 on tree, 1e+50 best solution, best possible 5 (119.30 seconds)
Cbc0010I After 21 nodes, 2 on tree, 1e+50 best solution, best possible 5 (127.48 seconds)
Cbc0010I After 22 nodes, 3 on tree, 1e+50 best solution, best possible 5 (137.75 seconds)
Cbc0010I After 23 nodes, 4 on tree, 1e+50 best solution, best possible 5 (145.90 seconds)
Cbc0010I After 28 nodes, 1 on tree, 1e+50 best solution, best possible 5 (150.24 seconds)
Cbc0010I After 29 nodes, 2 on tree, 1e+50 best solution, best possible 5 (156.19 seconds)
Cbc0010I After 30 nodes, 3 on tree, 1e+50 best solution, best possible 5 (163.17 seconds)
Cbc0010I After 31 nodes, 3 on tree, 1e+50 best solution, best possible 5 (166.54 seconds)
Cbc0010I After 32 nodes, 3 on tree, 1e+50 best solution, best possible 5 (174.82 seconds)
Cbc0010I After 33 nodes, 4 on tree, 1e+50 best solution, best possible 5 (178.65 seconds)
Cbc0010I After 34 nodes, 5 on tree, 1e+50 best solution, best possible 5 (179.95 seconds)
Cbc0010I After 35 nodes, 6 on tree, 1e+50 best solution, best possible 5 (182.03 seconds)
Cbc0010I After 36 nodes, 6 on tree, 1e+50 best solution, best possible 5 (182.89 seconds)
Cbc0010I After 39 nodes, 7 on tree, 1e+50 best solution, best possible 5 (190.34 seconds)
Cbc0010I After 40 nodes, 7 on tree, 1e+50 best solution, best possible 5 (191.16 seconds)
Cbc0010I After 41 nodes, 7 on tree, 1e+50 best solution, best possible 5 (192.37 seconds)
Cbc0010I After 42 nodes, 7 on tree, 1e+50 best solution, best possible 5 (194.49 seconds)
Cbc0010I After 45 nodes, 7 on tree, 1e+50 best solution, best possible 5 (196.60 seconds)
Cbc0010I After 49 nodes, 6 on tree, 1e+50 best solution, best possible 5 (200.94 seconds)
Cbc0010I After 50 nodes, 7 on tree, 1e+50 best solution, best possible 5 (202.98 seconds)
Cbc0010I After 51 nodes, 8 on tree, 1e+50 best solution, best possible 5 (205.17 seconds)
Cbc0010I After 53 nodes, 7 on tree, 1e+50 best solution, best possible 5 (207.62 seconds)
Cbc0010I After 54 nodes, 7 on tree, 1e+50 best solution, best possible 5 (212.59 seconds)
Cbc0010I After 55 nodes, 8 on tree, 1e+50 best solution, best possible 5 (215.65 seconds)
Cbc0010I After 56 nodes, 9 on tree, 1e+50 best solution, best possible 5 (220.02 seconds)
Cbc0010I After 57 nodes, 9 on tree, 1e+50 best solution, best possible 5 (221.16 seconds)
Cbc0010I After 58 nodes, 10 on tree, 1e+50 best solution, best possible 5 (223.38 seconds)
Cbc0010I After 60 nodes, 10 on tree, 1e+50 best solution, best possible 5 (226.83 seconds)
Cbc0010I After 62 nodes, 8 on tree, 1e+50 best solution, best possible 5 (229.85 seconds)
Cbc0010I After 63 nodes, 9 on tree, 1e+50 best solution, best possible 5 (232.45 seconds)
Cbc0010I After 64 nodes, 10 on tree, 1e+50 best solution, best possible 5 (236.13 seconds)
Cbc0010I After 65 nodes, 11 on tree, 1e+50 best solution, best possible 5 (238.63 seconds)
Cbc0010I After 67 nodes, 10 on tree, 1e+50 best solution, best possible 5 (239.63 seconds)
Cbc0010I After 68 nodes, 10 on tree, 1e+50 best solution, best possible 5 (240.33 seconds)
Cbc0010I After 71 nodes, 9 on tree, 1e+50 best solution, best possible 5 (242.14 seconds)
Cbc0010I After 73 nodes, 8 on tree, 1e+50 best solution, best possible 5 (243.75 seconds)
Cbc0010I After 75 nodes, 8 on tree, 1e+50 best solution, best possible 5 (246.93 seconds)
Cbc0010I After 76 nodes, 9 on tree, 1e+50 best solution, best possible 5 (251.06 seconds)
Cbc0010I After 77 nodes, 10 on tree, 1e+50 best solution, best possible 5 (256.36 seconds)
Cbc0010I After 78 nodes, 11 on tree, 1e+50 best solution, best possible 5 (260.25 seconds)
Cbc0010I After 80 nodes, 10 on tree, 1e+50 best solution, best possible 5 (264.45 seconds)
Cbc0010I After 81 nodes, 11 on tree, 1e+50 best solution, best possible 5 (266.60 seconds)
Cbc0010I After 82 nodes, 12 on tree, 1e+50 best solution, best possible 5 (272.38 seconds)
Cbc0010I After 85 nodes, 11 on tree, 1e+50 best solution, best possible 5 (273.86 seconds)
Cbc0010I After 86 nodes, 12 on tree, 1e+50 best solution, best possible 5 (277.12 seconds)
Cbc0010I After 87 nodes, 13 on tree, 1e+50 best solution, best possible 5 (281.71 seconds)
Cbc0010I After 88 nodes, 14 on tree, 1e+50 best solution, best possible 5 (287.21 seconds)
Cbc0010I After 89 nodes, 15 on tree, 1e+50 best solution, best possible 5 (291.76 seconds)
Cbc0010I After 90 nodes, 15 on tree, 1e+50 best solution, best possible 5 (295.84 seconds)
Cbc0010I After 91 nodes, 15 on tree, 1e+50 best solution, best possible 5 (300.27 seconds)
Cbc0010I After 92 nodes, 16 on tree, 1e+50 best solution, best possible 5 (302.86 seconds)
Cbc0010I After 94 nodes, 15 on tree, 1e+50 best solution, best possible 5 (306.91 seconds)
Cbc0010I After 95 nodes, 16 on tree, 1e+50 best solution, best possible 5 (311.17 seconds)
Cbc0010I After 96 nodes, 16 on tree, 1e+50 best solution, best possible 5 (315.83 seconds)
Cbc0010I After 97 nodes, 17 on tree, 1e+50 best solution, best possible 5 (317.43 seconds)
Cbc0010I After 98 nodes, 18 on tree, 1e+50 best solution, best possible 5 (319.40 seconds)
Cbc0010I After 99 nodes, 18 on tree, 1e+50 best solution, best possible 5 (324.24 seconds)
Cbc0010I After 100 nodes, 18 on tree, 1e+50 best solution, best possible 5 (325.55 seconds)
Cbc0010I After 101 nodes, 19 on tree, 1e+50 best solution, best possible 5 (328.34 seconds)
Cbc0010I After 103 nodes, 19 on tree, 1e+50 best solution, best possible 5 (330.41 seconds)
Cbc0010I After 105 nodes, 19 on tree, 1e+50 best solution, best possible 5 (334.97 seconds)
Cbc0010I After 106 nodes, 20 on tree, 1e+50 best solution, best possible 5 (340.30 seconds)
Cbc0010I After 109 nodes, 19 on tree, 1e+50 best solution, best possible 5 (342.05 seconds)
Cbc0010I After 110 nodes, 19 on tree, 1e+50 best solution, best possible 5 (344.85 seconds)
Cbc0010I After 111 nodes, 20 on tree, 1e+50 best solution, best possible 5 (346.60 seconds)
Cbc0010I After 112 nodes, 20 on tree, 1e+50 best solution, best possible 5 (351.47 seconds)
Cbc0010I After 113 nodes, 21 on tree, 1e+50 best solution, best possible 5 (354.46 seconds)
Cbc0010I After 116 nodes, 23 on tree, 1e+50 best solution, best possible 5 (357.02 seconds)
Cbc0010I After 118 nodes, 23 on tree, 1e+50 best solution, best possible 5 (359.90 seconds)
Cbc0010I After 119 nodes, 24 on tree, 1e+50 best solution, best possible 5 (363.04 seconds)
Cbc0010I After 120 nodes, 24 on tree, 1e+50 best solution, best possible 5 (365.93 seconds)
Cbc0010I After 122 nodes, 24 on tree, 1e+50 best solution, best possible 5 (368.66 seconds)
Cbc0010I After 123 nodes, 24 on tree, 1e+50 best solution, best possible 5 (369.64 seconds)
Cbc0010I After 124 nodes, 25 on tree, 1e+50 best solution, best possible 5 (371.00 seconds)
Cbc0010I After 127 nodes, 24 on tree, 1e+50 best solution, best possible 5 (373.38 seconds)
Cbc0010I After 128 nodes, 25 on tree, 1e+50 best solution, best possible 5 (379.87 seconds)
Cbc0010I After 129 nodes, 25 on tree, 1e+50 best solution, best possible 5 (383.82 seconds)
Cbc0010I After 130 nodes, 26 on tree, 1e+50 best solution, best possible 5 (385.50 seconds)
Cbc0010I After 131 nodes, 26 on tree, 1e+50 best solution, best possible 5 (387.78 seconds)
Cbc0010I After 134 nodes, 25 on tree, 1e+50 best solution, best possible 5 (390.53 seconds)
Cbc0010I After 138 nodes, 24 on tree, 1e+50 best solution, best possible 5 (394.66 seconds)
Cbc0010I After 139 nodes, 25 on tree, 1e+50 best solution, best possible 5 (397.47 seconds)
Cbc0010I After 141 nodes, 25 on tree, 1e+50 best solution, best possible 5 (399.12 seconds)
Cbc0010I After 142 nodes, 26 on tree, 1e+50 best solution, best possible 5 (403.42 seconds)
Cbc0010I After 143 nodes, 26 on tree, 1e+50 best solution, best possible 5 (407.31 seconds)
Cbc0010I After 144 nodes, 27 on tree, 1e+50 best solution, best possible 5 (409.17 seconds)
Cbc0010I After 146 nodes, 27 on tree, 1e+50 best solution, best possible 5 (412.32 seconds)
Cbc0010I After 150 nodes, 24 on tree, 1e+50 best solution, best possible 5 (415.58 seconds)
Cbc0010I After 155 nodes, 22 on tree, 1e+50 best solution, best possible 5 (419.17 seconds)
Cbc0010I After 156 nodes, 23 on tree, 1e+50 best solution, best possible 5 (420.11 seconds)
Cbc0010I After 160 nodes, 25 on tree, 1e+50 best solution, best possible 5 (421.07 seconds)
Cbc0004I Integer solution of 5 found after 45837 iterations and 164 nodes (421.84 seconds)
Cbc0001I Search completed - best objective 5, took 45837 iterations and 164 nodes (421.85 seconds)
Cbc0032I Strong branching done 782 times (8928 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 30, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.78125 to 5
Probing was tried 144 times and created 1107 cuts of which 0 were active after adding rounds of cuts (2.14096 seconds)
Gomory was tried 143 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.932134 seconds)
Knapsack was tried 143 times and created 38 cuts of which 0 were active after adding rounds of cuts (1.11291 seconds)
liftKnapsack was tried 143 times and created 3205 cuts of which 0 were active after adding rounds of cuts (299.059 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.014295 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.071861 seconds)
MixedIntegerRounding2 was tried 143 times and created 921 cuts of which 0 were active after adding rounds of cuts (1.09979 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004467 seconds)
TwoMirCuts was tried 143 times and created 450 cuts of which 0 were active after adding rounds of cuts (0.672469 seconds)
ZeroHalf was tried 143 times and created 1057 cuts of which 0 were active after adding rounds of cuts (1.57435 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               164
Total iterations:               45837
Time (CPU seconds):             333.246
Time (Wallclock seconds):       421.912
Total time (CPU seconds):       333.296   (Wallclock seconds):       421.946
