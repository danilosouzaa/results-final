Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3041/j3041_4.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.07999 seconds
Cgl0002I 10 variables fixed
Cgl0003I 15 fixed, 0 tightened bounds, 10 strengthened rows, 9 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 292 rows, 622 columns (622 integer (621 of which binary)) and 6617 elements
Coin3009W Conflict graph built in 0.035 seconds, density: 1.627%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 622 objects (622 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 76 integers unsatisfied sum - 19.0025
Cbc0038I Pass   1: suminf.   12.75968 (50) obj. 1 iterations 208
Cbc0038I Pass   2: suminf.   12.42546 (49) obj. 1 iterations 14
Cbc0038I Pass   3: suminf.   12.17772 (44) obj. 2 iterations 118
Cbc0038I Pass   4: suminf.    9.66916 (35) obj. 2 iterations 58
Cbc0038I Pass   5: suminf.    9.53730 (36) obj. 2 iterations 23
Cbc0038I Pass   6: suminf.    9.17263 (41) obj. 2 iterations 22
Cbc0038I Pass   7: suminf.   11.15344 (40) obj. 2 iterations 56
Cbc0038I Pass   8: suminf.    9.42730 (42) obj. 2 iterations 55
Cbc0038I Pass   9: suminf.    9.11914 (43) obj. 2 iterations 30
Cbc0038I Pass  10: suminf.    7.81958 (38) obj. 2 iterations 68
Cbc0038I Pass  11: suminf.    7.11566 (46) obj. 2 iterations 45
Cbc0038I Pass  12: suminf.    8.21684 (34) obj. 2 iterations 91
Cbc0038I Pass  13: suminf.    6.80834 (41) obj. 2 iterations 63
Cbc0038I Pass  14: suminf.    6.80834 (41) obj. 2 iterations 2
Cbc0038I Pass  15: suminf.    6.16595 (37) obj. 2 iterations 49
Cbc0038I Pass  16: suminf.    5.93750 (37) obj. 2 iterations 31
Cbc0038I Pass  17: suminf.   10.70972 (38) obj. 2 iterations 92
Cbc0038I Pass  18: suminf.    9.52206 (42) obj. 2 iterations 78
Cbc0038I Pass  19: suminf.    8.85105 (37) obj. 2 iterations 22
Cbc0038I Pass  20: suminf.    8.53499 (37) obj. 2 iterations 13
Cbc0038I Pass  21: suminf.    6.84222 (32) obj. 2 iterations 47
Cbc0038I Pass  22: suminf.    6.84222 (32) obj. 2 iterations 2
Cbc0038I Pass  23: suminf.    7.74179 (37) obj. 2 iterations 61
Cbc0038I Pass  24: suminf.    5.96349 (31) obj. 2 iterations 38
Cbc0038I Pass  25: suminf.    7.81296 (30) obj. 2 iterations 73
Cbc0038I Pass  26: suminf.    5.41508 (24) obj. 2 iterations 49
Cbc0038I Pass  27: suminf.    5.41508 (24) obj. 2 iterations 3
Cbc0038I Pass  28: suminf.    8.15714 (31) obj. 2 iterations 63
Cbc0038I Pass  29: suminf.    6.33175 (27) obj. 2 iterations 60
Cbc0038I Pass  30: suminf.    5.77619 (27) obj. 2 iterations 7
Cbc0038I Pass  31: suminf.    5.61519 (32) obj. 2 iterations 44
Cbc0038I Pass  32: suminf.    5.66717 (34) obj. 2 iterations 51
Cbc0038I Pass  33: suminf.    5.46852 (32) obj. 2 iterations 46
Cbc0038I Pass  34: suminf.    5.39297 (32) obj. 2 iterations 16
Cbc0038I Pass  35: suminf.    9.54444 (34) obj. 2 iterations 72
Cbc0038I Pass  36: suminf.    7.23452 (28) obj. 2 iterations 64
Cbc0038I Pass  37: suminf.    6.63730 (29) obj. 2 iterations 11
Cbc0038I Pass  38: suminf.    6.43519 (34) obj. 2 iterations 24
Cbc0038I Pass  39: suminf.    6.14297 (34) obj. 2 iterations 11
Cbc0038I Pass  40: suminf.    5.86138 (33) obj. 2 iterations 52
Cbc0038I Pass  41: suminf.    5.46481 (34) obj. 2 iterations 55
Cbc0038I Pass  42: suminf.    5.36519 (34) obj. 2 iterations 11
Cbc0038I Pass  43: suminf.    7.63802 (31) obj. 2 iterations 80
Cbc0038I Pass  44: suminf.    5.61111 (27) obj. 2 iterations 62
Cbc0038I Pass  45: suminf.    5.21111 (27) obj. 2 iterations 11
Cbc0038I Pass  46: suminf.    8.40018 (31) obj. 2 iterations 68
Cbc0038I Pass  47: suminf.    6.66508 (28) obj. 2 iterations 36
Cbc0038I Pass  48: suminf.    6.33175 (24) obj. 2 iterations 23
Cbc0038I Pass  49: suminf.    8.15714 (31) obj. 2 iterations 88
Cbc0038I Pass  50: suminf.    5.55397 (26) obj. 2 iterations 68
Cbc0038I Pass  51: suminf.    5.55397 (26) obj. 2 iterations 0
Cbc0038I Pass  52: suminf.    5.61436 (30) obj. 2 iterations 65
Cbc0038I Pass  53: suminf.    5.41508 (24) obj. 2 iterations 40
Cbc0038I Pass  54: suminf.    6.83134 (35) obj. 2 iterations 63
Cbc0038I Pass  55: suminf.    5.88730 (30) obj. 2 iterations 55
Cbc0038I Pass  56: suminf.    9.10000 (31) obj. 2 iterations 78
Cbc0038I Pass  57: suminf.    7.23452 (28) obj. 2 iterations 61
Cbc0038I Pass  58: suminf.    6.63730 (29) obj. 2 iterations 12
Cbc0038I Pass  59: suminf.    6.43519 (34) obj. 2 iterations 35
Cbc0038I Pass  60: suminf.    6.14297 (34) obj. 2 iterations 11
Cbc0038I Pass  61: suminf.    9.44688 (41) obj. 2 iterations 70
Cbc0038I Pass  62: suminf.    7.22901 (35) obj. 2 iterations 64
Cbc0038I Pass  63: suminf.    6.96492 (31) obj. 2 iterations 15
Cbc0038I Pass  64: suminf.    6.96667 (26) obj. 2 iterations 53
Cbc0038I Pass  65: suminf.    5.39755 (28) obj. 2 iterations 41
Cbc0038I Pass  66: suminf.    5.28788 (26) obj. 2 iterations 21
Cbc0038I Pass  67: suminf.    8.48254 (32) obj. 2 iterations 65
Cbc0038I Pass  68: suminf.    5.96667 (25) obj. 2 iterations 60
Cbc0038I Pass  69: suminf.    5.21667 (23) obj. 2 iterations 45
Cbc0038I Pass  70: suminf.    5.21667 (23) obj. 2 iterations 4
Cbc0038I Pass  71: suminf.    6.33422 (24) obj. 2 iterations 34
Cbc0038I Pass  72: suminf.    4.96667 (23) obj. 2 iterations 38
Cbc0038I Pass  73: suminf.    5.70000 (23) obj. 2 iterations 23
Cbc0038I Pass  74: suminf.    5.16667 (23) obj. 2 iterations 13
Cbc0038I Pass  75: suminf.    5.16667 (23) obj. 2 iterations 5
Cbc0038I Pass  76: suminf.   14.21613 (54) obj. 2 iterations 110
Cbc0038I Pass  77: suminf.    7.60766 (36) obj. 2 iterations 85
Cbc0038I Pass  78: suminf.    7.43349 (34) obj. 2 iterations 21
Cbc0038I Pass  79: suminf.    7.61466 (37) obj. 2 iterations 72
Cbc0038I Pass  80: suminf.    6.13333 (29) obj. 2 iterations 50
Cbc0038I Pass  81: suminf.    6.13333 (29) obj. 2 iterations 0
Cbc0038I Pass  82: suminf.   14.74341 (57) obj. 2 iterations 107
Cbc0038I Pass  83: suminf.    6.96999 (31) obj. 2 iterations 99
Cbc0038I Pass  84: suminf.    6.45680 (30) obj. 2 iterations 10
Cbc0038I Pass  85: suminf.    6.45680 (30) obj. 2 iterations 0
Cbc0038I Pass  86: suminf.    5.78141 (27) obj. 2 iterations 49
Cbc0038I Pass  87: suminf.    4.05363 (21) obj. 2 iterations 29
Cbc0038I Pass  88: suminf.    5.09660 (21) obj. 2 iterations 106
Cbc0038I Pass  89: suminf.    3.92143 (22) obj. 2 iterations 55
Cbc0038I Pass  90: suminf.    5.78663 (22) obj. 2 iterations 45
Cbc0038I Pass  91: suminf.    3.46810 (17) obj. 2 iterations 38
Cbc0038I Pass  92: suminf.    3.15698 (17) obj. 2 iterations 12
Cbc0038I Pass  93: suminf.    7.48333 (24) obj. 2 iterations 79
Cbc0038I Pass  94: suminf.    4.25556 (24) obj. 2 iterations 53
Cbc0038I Pass  95: suminf.    3.99444 (19) obj. 2 iterations 26
Cbc0038I Pass  96: suminf.    5.12778 (20) obj. 2 iterations 79
Cbc0038I Pass  97: suminf.    4.36204 (19) obj. 2 iterations 49
Cbc0038I Pass  98: suminf.    8.63097 (30) obj. 2 iterations 80
Cbc0038I Pass  99: suminf.    7.76619 (34) obj. 2 iterations 27
Cbc0038I Pass 100: suminf.   10.18033 (48) obj. 2 iterations 122
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 359 integers at bound fixed and 0 continuous
Cbc0038I Full problem 292 rows 622 columns, reduced to 218 rows 229 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.16 seconds)
Cbc0038I After 2.16 seconds - Feasibility pump exiting - took 0.70 seconds
Cbc0031I 52 added rows had average density of 17.269231
Cbc0013I At root node, 52 cuts changed objective from 0 to 1 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 196 row cuts average 3.5 elements, 1 column cuts (37 active)  in 0.431 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 227 row cuts average 432.8 elements, 0 column cuts (0 active)  in 0.448 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 69 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 337 row cuts average 8.2 elements, 0 column cuts (0 active)  in 6.182 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 43 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 64 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 275 row cuts average 213.3 elements, 0 column cuts (0 active)  in 0.606 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 106 row cuts average 38.9 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (11.74 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (13.06 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (14.68 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (16.67 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (18.93 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (21.05 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (21.96 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1 (23.08 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 1 (24.10 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 1 (24.81 seconds)
Cbc0010I After 17 nodes, 3 on tree, 1e+50 best solution, best possible 1 (25.57 seconds)
Cbc0010I After 20 nodes, 1 on tree, 1e+50 best solution, best possible 2 (26.76 seconds)
Cbc0010I After 21 nodes, 2 on tree, 1e+50 best solution, best possible 2 (27.93 seconds)
Cbc0016I Integer solution of 2 found by strong branching after 8192 iterations and 22 nodes (28.41 seconds)
Cbc0001I Search completed - best objective 2, took 8217 iterations and 22 nodes (28.41 seconds)
Cbc0032I Strong branching done 416 times (14451 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 31 times and created 478 cuts of which 36 were active after adding rounds of cuts (0.602248 seconds)
Gomory was tried 31 times and created 232 cuts of which 0 were active after adding rounds of cuts (0.512024 seconds)
Knapsack was tried 31 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.288093 seconds)
liftKnapsack was tried 31 times and created 844 cuts of which 0 were active after adding rounds of cuts (18.1907 seconds)
Clique was tried 31 times and created 96 cuts of which 0 were active after adding rounds of cuts (0.046209 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.073809 seconds)
MixedIntegerRounding2 was tried 31 times and created 181 cuts of which 0 were active after adding rounds of cuts (0.10987 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002303 seconds)
TwoMirCuts was tried 31 times and created 412 cuts of which 0 were active after adding rounds of cuts (0.712524 seconds)
ZeroHalf was tried 31 times and created 223 cuts of which 0 were active after adding rounds of cuts (0.255962 seconds)

Result - Optimal solution found
Objective value:                2
Enumerated nodes:               22
Total iterations:               8217
Time (CPU seconds):             28.4793
Time (Wallclock seconds):       28.4642
Total time (CPU seconds):       28.4886   (Wallclock seconds):       28.474
