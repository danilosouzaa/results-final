Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3030/j3030_10.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.047754 seconds
Cgl0002I 25 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 177 rows, 273 columns (273 integer (271 of which binary)) and 3479 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 1.217%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 273 objects (273 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 40 integers unsatisfied sum - 9.62435
Cbc0038I Pass   1: suminf.    6.75297 (34) obj. 0.12205 iterations 59
Cbc0038I Pass   2: suminf.    7.06810 (34) obj. 0.263242 iterations 48
Cbc0038I Pass   3: suminf.    5.91456 (30) obj. 0.503889 iterations 32
Cbc0038I Pass   4: suminf.    5.04883 (23) obj. 1 iterations 16
Cbc0038I Pass   5: suminf.    7.20808 (22) obj. 1 iterations 45
Cbc0038I Pass   6: suminf.    3.88783 (18) obj. 1 iterations 32
Cbc0038I Pass   7: suminf.    3.88783 (18) obj. 1 iterations 0
Cbc0038I Pass   8: suminf.    4.95952 (19) obj. 1 iterations 38
Cbc0038I Pass   9: suminf.    3.76508 (15) obj. 1 iterations 36
Cbc0038I Pass  10: suminf.    5.24153 (18) obj. 1 iterations 29
Cbc0038I Pass  11: suminf.    3.55079 (17) obj. 1 iterations 30
Cbc0038I Pass  12: suminf.    5.01071 (19) obj. 1 iterations 52
Cbc0038I Pass  13: suminf.    4.22382 (20) obj. 1 iterations 29
Cbc0038I Pass  14: suminf.    4.73825 (19) obj. 1 iterations 32
Cbc0038I Pass  15: suminf.    3.34233 (16) obj. 1 iterations 25
Cbc0038I Pass  16: suminf.    5.15759 (20) obj. 1 iterations 33
Cbc0038I Pass  17: suminf.    4.24127 (18) obj. 1 iterations 33
Cbc0038I Pass  18: suminf.    3.98953 (20) obj. 1 iterations 11
Cbc0038I Pass  19: suminf.    4.58698 (25) obj. 1 iterations 45
Cbc0038I Pass  20: suminf.    3.76195 (24) obj. 1 iterations 27
Cbc0038I Pass  21: suminf.    3.83753 (18) obj. 1 iterations 52
Cbc0038I Pass  22: suminf.    2.75218 (15) obj. 1 iterations 24
Cbc0038I Pass  23: suminf.    2.71801 (15) obj. 1 iterations 13
Cbc0038I Pass  24: suminf.    3.70183 (21) obj. 1 iterations 28
Cbc0038I Pass  25: suminf.    3.10202 (18) obj. 1 iterations 30
Cbc0038I Pass  26: suminf.    3.26964 (15) obj. 1 iterations 22
Cbc0038I Pass  27: suminf.    3.05714 (11) obj. 1 iterations 31
Cbc0038I Pass  28: suminf.    3.18837 (14) obj. 1 iterations 35
Cbc0038I Pass  29: suminf.    2.83413 (15) obj. 1 iterations 19
Cbc0038I Pass  30: suminf.    3.89583 (17) obj. 1 iterations 39
Cbc0038I Pass  31: suminf.    3.05714 (11) obj. 1 iterations 27
Cbc0038I Pass  32: suminf.    3.05714 (11) obj. 1 iterations 8
Cbc0038I Pass  33: suminf.    3.18837 (14) obj. 1 iterations 40
Cbc0038I Pass  34: suminf.    2.83413 (15) obj. 1 iterations 28
Cbc0038I Pass  35: suminf.    3.89583 (17) obj. 1 iterations 35
Cbc0038I Pass  36: suminf.    3.05714 (11) obj. 1 iterations 28
Cbc0038I Pass  37: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  38: suminf.    3.18837 (14) obj. 1 iterations 38
Cbc0038I Pass  39: suminf.    2.83413 (15) obj. 1 iterations 34
Cbc0038I Pass  40: suminf.    3.89583 (17) obj. 1 iterations 38
Cbc0038I Pass  41: suminf.    3.05714 (11) obj. 1 iterations 26
Cbc0038I Pass  42: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  43: suminf.    3.18837 (14) obj. 1 iterations 35
Cbc0038I Pass  44: suminf.    2.83413 (15) obj. 1 iterations 25
Cbc0038I Pass  45: suminf.    3.30000 (14) obj. 1 iterations 38
Cbc0038I Pass  46: suminf.    3.05714 (11) obj. 1 iterations 21
Cbc0038I Pass  47: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  48: suminf.    3.18837 (14) obj. 1 iterations 31
Cbc0038I Pass  49: suminf.    2.83413 (15) obj. 1 iterations 25
Cbc0038I Pass  50: suminf.    3.89583 (17) obj. 1 iterations 40
Cbc0038I Pass  51: suminf.    3.05714 (11) obj. 1 iterations 25
Cbc0038I Pass  52: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  53: suminf.    3.18837 (14) obj. 1 iterations 32
Cbc0038I Pass  54: suminf.    2.83413 (15) obj. 1 iterations 29
Cbc0038I Pass  55: suminf.    3.89583 (17) obj. 1 iterations 35
Cbc0038I Pass  56: suminf.    3.05714 (11) obj. 1 iterations 25
Cbc0038I Pass  57: suminf.    3.05714 (11) obj. 1 iterations 6
Cbc0038I Pass  58: suminf.    3.18837 (14) obj. 1 iterations 43
Cbc0038I Pass  59: suminf.    2.83413 (15) obj. 1 iterations 34
Cbc0038I Pass  60: suminf.    3.89583 (17) obj. 1 iterations 43
Cbc0038I Pass  61: suminf.    3.05714 (11) obj. 1 iterations 24
Cbc0038I Pass  62: suminf.    3.05714 (11) obj. 1 iterations 6
Cbc0038I Pass  63: suminf.    3.18837 (14) obj. 1 iterations 34
Cbc0038I Pass  64: suminf.    2.83413 (15) obj. 1 iterations 28
Cbc0038I Pass  65: suminf.    3.89583 (17) obj. 1 iterations 37
Cbc0038I Pass  66: suminf.    3.05714 (11) obj. 1 iterations 26
Cbc0038I Pass  67: suminf.    3.05714 (11) obj. 1 iterations 5
Cbc0038I Pass  68: suminf.    3.18837 (14) obj. 1 iterations 34
Cbc0038I Pass  69: suminf.    2.83413 (15) obj. 1 iterations 26
Cbc0038I Pass  70: suminf.    3.21872 (14) obj. 1 iterations 51
Cbc0038I Pass  71: suminf.    2.93864 (15) obj. 1 iterations 25
Cbc0038I Pass  72: suminf.    3.19015 (15) obj. 1 iterations 44
Cbc0038I Pass  73: suminf.    2.94921 (17) obj. 1 iterations 23
Cbc0038I Pass  74: suminf.    3.52365 (15) obj. 1 iterations 43
Cbc0038I Pass  75: suminf.   12.06716 (39) obj. 1 iterations 85
Cbc0038I Pass  76: suminf.    3.48612 (17) obj. 1 iterations 59
Cbc0038I Pass  77: suminf.    3.03536 (18) obj. 1 iterations 22
Cbc0038I Pass  78: suminf.    4.53242 (15) obj. 1 iterations 42
Cbc0038I Pass  79: suminf.    3.05523 (11) obj. 1 iterations 31
Cbc0038I Pass  80: suminf.    2.64186 (11) obj. 1 iterations 3
Cbc0038I Pass  81: suminf.    2.52857 (12) obj. 1 iterations 30
Cbc0038I Pass  82: suminf.    2.46250 (14) obj. 1 iterations 11
Cbc0038I Pass  83: suminf.    4.32857 (14) obj. 1 iterations 49
Cbc0038I Pass  84: suminf.    3.53968 (11) obj. 1 iterations 29
Cbc0038I Pass  85: suminf.    3.18413 (11) obj. 1 iterations 3
Cbc0038I Pass  86: suminf.    2.81429 (12) obj. 1 iterations 28
Cbc0038I Pass  87: suminf.    2.46250 (14) obj. 1 iterations 13
Cbc0038I Pass  88: suminf.    4.32857 (14) obj. 1 iterations 52
Cbc0038I Pass  89: suminf.    6.78044 (27) obj. 1 iterations 71
Cbc0038I Pass  90: suminf.    3.15714 (15) obj. 1 iterations 54
Cbc0038I Pass  91: suminf.    2.11640 (11) obj. 1 iterations 35
Cbc0038I Pass  92: suminf.    2.11640 (13) obj. 1 iterations 18
Cbc0038I Pass  93: suminf.    4.29027 (20) obj. 1 iterations 39
Cbc0038I Pass  94: suminf.    2.14286 (7) obj. 1 iterations 27
Cbc0038I Pass  95: suminf.    1.85714 (7) obj. 1 iterations 34
Cbc0038I Pass  96: suminf.    1.85714 (7) obj. 1 iterations 18
Cbc0038I Pass  97: suminf.    5.24614 (21) obj. 1 iterations 74
Cbc0038I Pass  98: suminf.    3.18372 (18) obj. 1 iterations 55
Cbc0038I Pass  99: suminf.    3.18372 (18) obj. 1 iterations 5
Cbc0038I Pass 100: suminf.    8.77940 (41) obj. 1 iterations 66
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 133 integers at bound fixed and 0 continuous
Cbc0038I Full problem 177 rows 273 columns, reduced to 149 rows 136 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.33 seconds)
Cbc0038I Full problem 178 rows 273 columns, reduced to 174 rows 273 columns - too large
Cbc0038I After 1.37 seconds - Feasibility pump exiting - took 1.00 seconds
Cbc0031I 48 added rows had average density of 60.479167
Cbc0013I At root node, 48 cuts changed objective from 0 to 1 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 380 row cuts average 4.0 elements, 0 column cuts (0 active)  in 1.207 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2509 row cuts average 270.5 elements, 0 column cuts (0 active)  in 2.378 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.452 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 846 row cuts average 9.7 elements, 0 column cuts (0 active)  in 150.824 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 77 row cuts average 23.4 elements, 0 column cuts (0 active)  in 0.195 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 412 row cuts average 100.3 elements, 0 column cuts (0 active)  in 0.368 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 223 row cuts average 46.7 elements, 0 column cuts (0 active)  in 0.409 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (162.90 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (169.62 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (174.11 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (178.27 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (183.74 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (191.05 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (193.01 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1 (194.31 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 1 (195.61 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 1 (196.83 seconds)
Cbc0010I After 10 nodes, 11 on tree, 1e+50 best solution, best possible 1 (198.63 seconds)
Cbc0010I After 12 nodes, 11 on tree, 1e+50 best solution, best possible 1 (200.69 seconds)
Cbc0010I After 13 nodes, 12 on tree, 1e+50 best solution, best possible 1 (202.90 seconds)
Cbc0010I After 14 nodes, 13 on tree, 1e+50 best solution, best possible 1 (204.94 seconds)
Cbc0010I After 15 nodes, 14 on tree, 1e+50 best solution, best possible 1 (207.56 seconds)
Cbc0010I After 17 nodes, 15 on tree, 1e+50 best solution, best possible 1 (208.49 seconds)
Cbc0010I After 22 nodes, 13 on tree, 1e+50 best solution, best possible 1 (210.44 seconds)
Cbc0010I After 23 nodes, 14 on tree, 1e+50 best solution, best possible 1 (211.27 seconds)
Cbc0010I After 25 nodes, 14 on tree, 1e+50 best solution, best possible 1 (212.60 seconds)
Cbc0010I After 26 nodes, 15 on tree, 1e+50 best solution, best possible 1 (214.31 seconds)
Cbc0010I After 28 nodes, 15 on tree, 1e+50 best solution, best possible 1 (215.95 seconds)
Cbc0010I After 29 nodes, 16 on tree, 1e+50 best solution, best possible 1 (217.49 seconds)
Cbc0010I After 30 nodes, 16 on tree, 1e+50 best solution, best possible 1 (219.52 seconds)
Cbc0010I After 32 nodes, 17 on tree, 1e+50 best solution, best possible 1 (220.68 seconds)
Cbc0010I After 36 nodes, 16 on tree, 1e+50 best solution, best possible 1 (222.18 seconds)
Cbc0010I After 38 nodes, 15 on tree, 1e+50 best solution, best possible 1 (223.11 seconds)
Cbc0010I After 42 nodes, 15 on tree, 1e+50 best solution, best possible 1 (223.82 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 10560 iterations and 43 nodes (223.93 seconds)
Cbc0001I Search completed - best objective 1, took 10560 iterations and 43 nodes (223.93 seconds)
Cbc0032I Strong branching done 590 times (18154 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 21, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 151 times and created 482 cuts of which 0 were active after adding rounds of cuts (1.28767 seconds)
Gomory was tried 149 times and created 2509 cuts of which 0 were active after adding rounds of cuts (2.44718 seconds)
Knapsack was tried 149 times and created 63 cuts of which 0 were active after adding rounds of cuts (0.650852 seconds)
liftKnapsack was tried 149 times and created 1326 cuts of which 0 were active after adding rounds of cuts (208.953 seconds)
Clique was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.032539 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.106565 seconds)
MixedIntegerRounding2 was tried 100 times and created 77 cuts of which 0 were active after adding rounds of cuts (0.195454 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.119627 seconds)
TwoMirCuts was tried 149 times and created 498 cuts of which 0 were active after adding rounds of cuts (0.458886 seconds)
ZeroHalf was tried 149 times and created 345 cuts of which 0 were active after adding rounds of cuts (0.54452 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               43
Total iterations:               10560
Time (CPU seconds):             223.227
Time (Wallclock seconds):       224.031
Total time (CPU seconds):       223.233   (Wallclock seconds):       224.038
