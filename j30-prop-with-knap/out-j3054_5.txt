Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3054/j3054_5.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.065242 seconds
Cgl0002I 17 variables fixed
Cgl0003I 18 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 243 rows, 556 columns (556 integer (556 of which binary)) and 8318 elements
Coin3009W Conflict graph built in 0.022 seconds, density: 1.636%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 556 objects (556 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 69 integers unsatisfied sum - 11.357
Cbc0038I Pass   1: suminf.    5.57093 (33) obj. 0 iterations 88
Cbc0038I Pass   2: suminf.    4.82822 (33) obj. 0 iterations 33
Cbc0038I Pass   3: suminf.    5.19655 (27) obj. 0 iterations 67
Cbc0038I Pass   4: suminf.    4.76883 (25) obj. 0 iterations 36
Cbc0038I Pass   5: suminf.    4.29618 (25) obj. 0 iterations 29
Cbc0038I Pass   6: suminf.    4.20317 (28) obj. 0 iterations 22
Cbc0038I Pass   7: suminf.    5.68323 (21) obj. 0 iterations 91
Cbc0038I Pass   8: suminf.    3.91057 (26) obj. 0 iterations 39
Cbc0038I Pass   9: suminf.    3.80687 (25) obj. 0 iterations 6
Cbc0038I Pass  10: suminf.    6.17283 (30) obj. 0 iterations 86
Cbc0038I Pass  11: suminf.    4.39466 (29) obj. 0 iterations 78
Cbc0038I Pass  12: suminf.    4.33109 (28) obj. 0 iterations 5
Cbc0038I Pass  13: suminf.    5.73867 (28) obj. 0 iterations 103
Cbc0038I Pass  14: suminf.    4.86218 (20) obj. 0 iterations 79
Cbc0038I Pass  15: suminf.    4.83171 (19) obj. 0 iterations 12
Cbc0038I Pass  16: suminf.    5.14700 (23) obj. 0 iterations 55
Cbc0038I Pass  17: suminf.    3.05515 (18) obj. 0 iterations 57
Cbc0038I Pass  18: suminf.    2.60315 (20) obj. 0 iterations 33
Cbc0038I Pass  19: suminf.    2.52174 (20) obj. 0 iterations 21
Cbc0038I Pass  20: suminf.    6.60811 (22) obj. 0 iterations 67
Cbc0038I Pass  21: suminf.    4.45887 (15) obj. 0 iterations 33
Cbc0038I Pass  22: suminf.    3.45887 (13) obj. 0 iterations 37
Cbc0038I Pass  23: suminf.    3.40664 (13) obj. 0 iterations 68
Cbc0038I Pass  24: suminf.    2.81443 (11) obj. 0 iterations 20
Cbc0038I Pass  25: suminf.    4.45887 (13) obj. 0 iterations 81
Cbc0038I Pass  26: suminf.    3.45887 (13) obj. 0 iterations 52
Cbc0038I Pass  27: suminf.    2.73233 (13) obj. 0 iterations 59
Cbc0038I Pass  28: suminf.    2.44300 (12) obj. 0 iterations 28
Cbc0038I Pass  29: suminf.    3.23346 (16) obj. 0 iterations 56
Cbc0038I Pass  30: suminf.    2.86060 (14) obj. 0 iterations 33
Cbc0038I Pass  31: suminf.    3.51095 (14) obj. 0 iterations 44
Cbc0038I Pass  32: suminf.    9.15320 (36) obj. 0 iterations 102
Cbc0038I Pass  33: suminf.    5.82933 (29) obj. 0 iterations 79
Cbc0038I Pass  34: suminf.    5.24941 (26) obj. 0 iterations 31
Cbc0038I Pass  35: suminf.    4.78321 (25) obj. 0 iterations 18
Cbc0038I Pass  36: suminf.    4.74830 (27) obj. 0 iterations 14
Cbc0038I Pass  37: suminf.    4.16499 (16) obj. 0 iterations 82
Cbc0038I Pass  38: suminf.    2.53628 (14) obj. 0 iterations 55
Cbc0038I Pass  39: suminf.    4.49329 (16) obj. 0 iterations 50
Cbc0038I Pass  40: suminf.    3.65030 (13) obj. 0 iterations 24
Cbc0038I Pass  41: suminf.    3.64479 (14) obj. 0 iterations 75
Cbc0038I Pass  42: suminf.    2.53695 (14) obj. 0 iterations 50
Cbc0038I Pass  43: suminf.    2.53628 (14) obj. 0 iterations 7
Cbc0038I Pass  44: suminf.    4.49329 (16) obj. 0 iterations 52
Cbc0038I Pass  45: suminf.    3.65030 (13) obj. 0 iterations 22
Cbc0038I Pass  46: suminf.    3.64479 (14) obj. 0 iterations 77
Cbc0038I Pass  47: suminf.    2.53695 (14) obj. 0 iterations 45
Cbc0038I Pass  48: suminf.    2.53628 (14) obj. 0 iterations 5
Cbc0038I Pass  49: suminf.    4.49329 (16) obj. 0 iterations 51
Cbc0038I Pass  50: suminf.    3.65030 (13) obj. 0 iterations 18
Cbc0038I Pass  51: suminf.    3.64479 (14) obj. 0 iterations 76
Cbc0038I Pass  52: suminf.    2.53695 (14) obj. 0 iterations 46
Cbc0038I Pass  53: suminf.    2.53628 (14) obj. 0 iterations 5
Cbc0038I Pass  54: suminf.    4.49329 (16) obj. 0 iterations 48
Cbc0038I Pass  55: suminf.    3.65030 (13) obj. 0 iterations 19
Cbc0038I Pass  56: suminf.    3.77418 (15) obj. 0 iterations 52
Cbc0038I Pass  57: suminf.    6.83003 (31) obj. 0 iterations 81
Cbc0038I Pass  58: suminf.    4.70197 (21) obj. 0 iterations 107
Cbc0038I Pass  59: suminf.    3.19917 (19) obj. 0 iterations 58
Cbc0038I Pass  60: suminf.    5.73621 (19) obj. 0 iterations 57
Cbc0038I Pass  61: suminf.    4.51648 (15) obj. 0 iterations 58
Cbc0038I Pass  62: suminf.    3.99683 (14) obj. 0 iterations 17
Cbc0038I Pass  63: suminf.    4.73527 (15) obj. 0 iterations 75
Cbc0038I Pass  64: suminf.    2.62177 (15) obj. 0 iterations 62
Cbc0038I Pass  65: suminf.    2.53605 (17) obj. 0 iterations 16
Cbc0038I Pass  66: suminf.    5.49734 (23) obj. 0 iterations 101
Cbc0038I Pass  67: suminf.    4.15368 (21) obj. 0 iterations 61
Cbc0038I Pass  68: suminf.    3.66447 (19) obj. 0 iterations 14
Cbc0038I Pass  69: suminf.    3.35228 (19) obj. 0 iterations 4
Cbc0038I Pass  70: suminf.    5.18126 (18) obj. 0 iterations 94
Cbc0038I Pass  71: suminf.    4.31938 (20) obj. 0 iterations 43
Cbc0038I Pass  72: suminf.    3.90655 (20) obj. 0 iterations 53
Cbc0038I Pass  73: suminf.    4.27857 (15) obj. 0 iterations 24
Cbc0038I Pass  74: suminf.    3.10147 (16) obj. 0 iterations 47
Cbc0038I Pass  75: suminf.    2.58698 (14) obj. 0 iterations 38
Cbc0038I Pass  76: suminf.    4.44278 (21) obj. 0 iterations 66
Cbc0038I Pass  77: suminf.    4.38811 (21) obj. 0 iterations 25
Cbc0038I Pass  78: suminf.    5.33472 (20) obj. 0 iterations 81
Cbc0038I Pass  79: suminf.    3.80741 (18) obj. 0 iterations 40
Cbc0038I Pass  80: suminf.    3.51471 (22) obj. 0 iterations 8
Cbc0038I Pass  81: suminf.    3.49994 (20) obj. 0 iterations 6
Cbc0038I Pass  82: suminf.    7.28674 (24) obj. 0 iterations 80
Cbc0038I Pass  83: suminf.    6.41528 (24) obj. 0 iterations 55
Cbc0038I Pass  84: suminf.    3.61802 (20) obj. 0 iterations 85
Cbc0038I Pass  85: suminf.    3.24044 (23) obj. 0 iterations 27
Cbc0038I Pass  86: suminf.    3.17320 (22) obj. 0 iterations 14
Cbc0038I Pass  87: suminf.    5.92697 (26) obj. 0 iterations 65
Cbc0038I Pass  88: suminf.    5.08543 (20) obj. 0 iterations 49
Cbc0038I Pass  89: suminf.    3.96227 (21) obj. 0 iterations 54
Cbc0038I Pass  90: suminf.    3.46825 (16) obj. 0 iterations 39
Cbc0038I Pass  91: suminf.    3.42242 (17) obj. 0 iterations 25
Cbc0038I Pass  92: suminf.    5.36592 (23) obj. 0 iterations 74
Cbc0038I Pass  93: suminf.    4.12231 (17) obj. 0 iterations 49
Cbc0038I Pass  94: suminf.    4.07738 (15) obj. 0 iterations 18
Cbc0038I Pass  95: suminf.    6.80508 (24) obj. 0 iterations 72
Cbc0038I Pass  96: suminf.    4.24504 (21) obj. 0 iterations 27
Cbc0038I Pass  97: suminf.    3.33095 (15) obj. 0 iterations 39
Cbc0038I Pass  98: suminf.    3.62302 (21) obj. 0 iterations 81
Cbc0038I Pass  99: suminf.    2.58586 (17) obj. 0 iterations 51
Cbc0038I Pass 100: suminf.   14.24030 (42) obj. 0 iterations 116
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 359 integers at bound fixed and 0 continuous
Cbc0038I Full problem 243 rows 556 columns, reduced to 152 rows 177 columns
Cbc0038I Mini branch and bound did not improve solution (4.06 seconds)
Cbc0038I Full problem 244 rows 556 columns, reduced to 243 rows 556 columns - too large
Cbc0038I After 4.14 seconds - Feasibility pump exiting - took 2.94 seconds
Cbc0031I 59 added rows had average density of 49
Cbc0013I At root node, 59 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 117 row cuts average 10.3 elements, 0 column cuts (49 active)  in 0.508 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 541.4 elements, 0 column cuts (0 active)  in 0.424 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 452 row cuts average 9.4 elements, 0 column cuts (0 active)  in 8.397 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 23 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 38 row cuts average 42.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 182 row cuts average 352.2 elements, 0 column cuts (0 active)  in 0.352 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 69 row cuts average 100.6 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (15.70 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 0 (16.41 seconds)
Cbc0010I After 18 nodes, 13 on tree, 1e+50 best solution, best possible 0 (17.16 seconds)
Cbc0010I After 49 nodes, 20 on tree, 1e+50 best solution, best possible 0 (17.87 seconds)
Cbc0010I After 123 nodes, 28 on tree, 1e+50 best solution, best possible 0 (18.57 seconds)
Cbc0010I After 204 nodes, 34 on tree, 1e+50 best solution, best possible 0 (19.28 seconds)
Cbc0010I After 330 nodes, 32 on tree, 1e+50 best solution, best possible 0 (19.98 seconds)
Cbc0010I After 463 nodes, 34 on tree, 1e+50 best solution, best possible 0 (20.68 seconds)
Cbc0010I After 590 nodes, 30 on tree, 1e+50 best solution, best possible 0 (21.39 seconds)
Cbc0010I After 663 nodes, 39 on tree, 1e+50 best solution, best possible 0 (22.09 seconds)
Cbc0010I After 750 nodes, 42 on tree, 1e+50 best solution, best possible 0 (22.80 seconds)
Cbc0010I After 849 nodes, 47 on tree, 1e+50 best solution, best possible 0 (23.50 seconds)
Cbc0010I After 985 nodes, 58 on tree, 1e+50 best solution, best possible 0 (24.21 seconds)
Cbc0010I After 1119 nodes, 62 on tree, 1e+50 best solution, best possible 0 (24.92 seconds)
Cbc0010I After 1244 nodes, 52 on tree, 1e+50 best solution, best possible 0 (25.62 seconds)
Cbc0010I After 1359 nodes, 58 on tree, 1e+50 best solution, best possible 0 (26.32 seconds)
Cbc0010I After 1449 nodes, 62 on tree, 1e+50 best solution, best possible 0 (27.02 seconds)
Cbc0010I After 1544 nodes, 46 on tree, 1e+50 best solution, best possible 0 (27.73 seconds)
Cbc0010I After 1648 nodes, 48 on tree, 1e+50 best solution, best possible 0 (28.46 seconds)
Cbc0010I After 1723 nodes, 43 on tree, 1e+50 best solution, best possible 0 (29.17 seconds)
Cbc0010I After 1813 nodes, 39 on tree, 1e+50 best solution, best possible 0 (29.87 seconds)
Cbc0010I After 1913 nodes, 40 on tree, 1e+50 best solution, best possible 0 (30.57 seconds)
Cbc0010I After 2007 nodes, 39 on tree, 1e+50 best solution, best possible 0 (31.28 seconds)
Cbc0010I After 2124 nodes, 36 on tree, 1e+50 best solution, best possible 0 (31.98 seconds)
Cbc0010I After 2210 nodes, 31 on tree, 1e+50 best solution, best possible 0 (32.69 seconds)
Cbc0010I After 2305 nodes, 32 on tree, 1e+50 best solution, best possible 0 (33.39 seconds)
Cbc0010I After 2418 nodes, 33 on tree, 1e+50 best solution, best possible 0 (34.10 seconds)
Cbc0010I After 2505 nodes, 39 on tree, 1e+50 best solution, best possible 0 (34.81 seconds)
Cbc0010I After 2649 nodes, 27 on tree, 1e+50 best solution, best possible 0 (35.52 seconds)
Cbc0010I After 2784 nodes, 21 on tree, 1e+50 best solution, best possible 0 (36.23 seconds)
Cbc0010I After 2872 nodes, 41 on tree, 1e+50 best solution, best possible 0 (36.93 seconds)
Cbc0010I After 2964 nodes, 33 on tree, 1e+50 best solution, best possible 0 (37.63 seconds)
Cbc0010I After 3071 nodes, 28 on tree, 1e+50 best solution, best possible 0 (38.33 seconds)
Cbc0010I After 3159 nodes, 28 on tree, 1e+50 best solution, best possible 0 (39.04 seconds)
Cbc0010I After 3275 nodes, 30 on tree, 1e+50 best solution, best possible 0 (39.75 seconds)
Cbc0010I After 3362 nodes, 25 on tree, 1e+50 best solution, best possible 0 (40.45 seconds)
Cbc0010I After 3437 nodes, 17 on tree, 1e+50 best solution, best possible 0 (41.17 seconds)
Cbc0010I After 3502 nodes, 40 on tree, 1e+50 best solution, best possible 0 (41.88 seconds)
Cbc0010I After 3575 nodes, 36 on tree, 1e+50 best solution, best possible 0 (42.58 seconds)
Cbc0010I After 3648 nodes, 35 on tree, 1e+50 best solution, best possible 0 (43.29 seconds)
Cbc0010I After 3697 nodes, 29 on tree, 1e+50 best solution, best possible 0 (44.01 seconds)
Cbc0010I After 3740 nodes, 22 on tree, 1e+50 best solution, best possible 0 (44.72 seconds)
Cbc0010I After 3813 nodes, 20 on tree, 1e+50 best solution, best possible 0 (45.43 seconds)
Cbc0010I After 3882 nodes, 25 on tree, 1e+50 best solution, best possible 0 (46.14 seconds)
Cbc0010I After 3962 nodes, 44 on tree, 1e+50 best solution, best possible 0 (46.84 seconds)
Cbc0010I After 4051 nodes, 30 on tree, 1e+50 best solution, best possible 0 (47.55 seconds)
Cbc0010I After 4149 nodes, 31 on tree, 1e+50 best solution, best possible 0 (48.26 seconds)
Cbc0010I After 4237 nodes, 28 on tree, 1e+50 best solution, best possible 0 (48.97 seconds)
Cbc0010I After 4326 nodes, 21 on tree, 1e+50 best solution, best possible 0 (49.67 seconds)
Cbc0010I After 4406 nodes, 23 on tree, 1e+50 best solution, best possible 0 (50.39 seconds)
Cbc0010I After 4466 nodes, 27 on tree, 1e+50 best solution, best possible 0 (51.09 seconds)
Cbc0010I After 4534 nodes, 35 on tree, 1e+50 best solution, best possible 0 (51.79 seconds)
Cbc0010I After 4609 nodes, 21 on tree, 1e+50 best solution, best possible 0 (52.49 seconds)
Cbc0010I After 4698 nodes, 22 on tree, 1e+50 best solution, best possible 0 (53.20 seconds)
Cbc0010I After 4772 nodes, 19 on tree, 1e+50 best solution, best possible 0 (53.92 seconds)
Cbc0010I After 4845 nodes, 14 on tree, 1e+50 best solution, best possible 0 (54.63 seconds)
Cbc0010I After 4911 nodes, 24 on tree, 1e+50 best solution, best possible 0 (55.34 seconds)
Cbc0010I After 4966 nodes, 30 on tree, 1e+50 best solution, best possible 0 (56.05 seconds)
Cbc0010I After 5010 nodes, 37 on tree, 1e+50 best solution, best possible 0 (56.76 seconds)
Cbc0010I After 5061 nodes, 26 on tree, 1e+50 best solution, best possible 0 (57.48 seconds)
Cbc0010I After 5119 nodes, 34 on tree, 1e+50 best solution, best possible 0 (58.18 seconds)
Cbc0010I After 5182 nodes, 39 on tree, 1e+50 best solution, best possible 0 (58.88 seconds)
Cbc0010I After 5237 nodes, 34 on tree, 1e+50 best solution, best possible 0 (59.58 seconds)
Cbc0010I After 5290 nodes, 25 on tree, 1e+50 best solution, best possible 0 (60.29 seconds)
Cbc0010I After 5359 nodes, 24 on tree, 1e+50 best solution, best possible 0 (61.02 seconds)
Cbc0010I After 5426 nodes, 47 on tree, 1e+50 best solution, best possible 0 (61.72 seconds)
Cbc0010I After 5505 nodes, 34 on tree, 1e+50 best solution, best possible 0 (62.44 seconds)
Cbc0010I After 5595 nodes, 32 on tree, 1e+50 best solution, best possible 0 (63.14 seconds)
Cbc0010I After 5663 nodes, 26 on tree, 1e+50 best solution, best possible 0 (63.85 seconds)
Cbc0010I After 5733 nodes, 26 on tree, 1e+50 best solution, best possible 0 (64.55 seconds)
Cbc0010I After 5792 nodes, 26 on tree, 1e+50 best solution, best possible 0 (65.27 seconds)
Cbc0010I After 5854 nodes, 45 on tree, 1e+50 best solution, best possible 0 (65.97 seconds)
Cbc0010I After 5929 nodes, 32 on tree, 1e+50 best solution, best possible 0 (66.68 seconds)
Cbc0010I After 6000 nodes, 22 on tree, 1e+50 best solution, best possible 0 (67.38 seconds)
Cbc0010I After 6065 nodes, 37 on tree, 1e+50 best solution, best possible 0 (68.08 seconds)
Cbc0010I After 6138 nodes, 40 on tree, 1e+50 best solution, best possible 0 (68.78 seconds)
Cbc0010I After 6210 nodes, 39 on tree, 1e+50 best solution, best possible 0 (69.49 seconds)
Cbc0010I After 6275 nodes, 34 on tree, 1e+50 best solution, best possible 0 (70.20 seconds)
Cbc0010I After 6348 nodes, 34 on tree, 1e+50 best solution, best possible 0 (70.90 seconds)
Cbc0010I After 6414 nodes, 25 on tree, 1e+50 best solution, best possible 0 (71.60 seconds)
Cbc0010I After 6482 nodes, 39 on tree, 1e+50 best solution, best possible 0 (72.31 seconds)
Cbc0010I After 6547 nodes, 29 on tree, 1e+50 best solution, best possible 0 (73.02 seconds)
Cbc0010I After 6601 nodes, 20 on tree, 1e+50 best solution, best possible 0 (73.72 seconds)
Cbc0010I After 6662 nodes, 25 on tree, 1e+50 best solution, best possible 0 (74.43 seconds)
Cbc0010I After 6705 nodes, 31 on tree, 1e+50 best solution, best possible 0 (75.14 seconds)
Cbc0010I After 6771 nodes, 30 on tree, 1e+50 best solution, best possible 0 (75.85 seconds)
Cbc0010I After 6840 nodes, 39 on tree, 1e+50 best solution, best possible 0 (76.57 seconds)
Cbc0010I After 6911 nodes, 31 on tree, 1e+50 best solution, best possible 0 (77.27 seconds)
Cbc0010I After 6965 nodes, 26 on tree, 1e+50 best solution, best possible 0 (77.98 seconds)
Cbc0010I After 7006 nodes, 25 on tree, 1e+50 best solution, best possible 0 (78.69 seconds)
Cbc0010I After 7051 nodes, 21 on tree, 1e+50 best solution, best possible 0 (79.39 seconds)
Cbc0010I After 7132 nodes, 21 on tree, 1e+50 best solution, best possible 0 (80.10 seconds)
Cbc0010I After 7198 nodes, 18 on tree, 1e+50 best solution, best possible 0 (80.80 seconds)
Cbc0010I After 7252 nodes, 38 on tree, 1e+50 best solution, best possible 0 (81.51 seconds)
Cbc0010I After 7337 nodes, 29 on tree, 1e+50 best solution, best possible 0 (82.21 seconds)
Cbc0010I After 7422 nodes, 27 on tree, 1e+50 best solution, best possible 0 (82.92 seconds)
Cbc0010I After 7496 nodes, 26 on tree, 1e+50 best solution, best possible 0 (83.63 seconds)
Cbc0010I After 7572 nodes, 21 on tree, 1e+50 best solution, best possible 0 (84.36 seconds)
Cbc0010I After 7659 nodes, 22 on tree, 1e+50 best solution, best possible 0 (85.06 seconds)
Cbc0010I After 7739 nodes, 24 on tree, 1e+50 best solution, best possible 0 (85.76 seconds)
Cbc0010I After 7806 nodes, 19 on tree, 1e+50 best solution, best possible 0 (86.47 seconds)
Cbc0010I After 7887 nodes, 22 on tree, 1e+50 best solution, best possible 0 (87.20 seconds)
Cbc0010I After 7941 nodes, 11 on tree, 1e+50 best solution, best possible 0 (87.91 seconds)
Cbc0010I After 7996 nodes, 21 on tree, 1e+50 best solution, best possible 0 (88.62 seconds)
Cbc0010I After 8079 nodes, 17 on tree, 1e+50 best solution, best possible 0 (89.33 seconds)
Cbc0010I After 8130 nodes, 35 on tree, 1e+50 best solution, best possible 0 (90.03 seconds)
Cbc0010I After 8212 nodes, 64 on tree, 1e+50 best solution, best possible 0 (90.74 seconds)
Cbc0010I After 8305 nodes, 52 on tree, 1e+50 best solution, best possible 0 (91.45 seconds)
Cbc0010I After 8378 nodes, 51 on tree, 1e+50 best solution, best possible 0 (92.16 seconds)
Cbc0010I After 8463 nodes, 54 on tree, 1e+50 best solution, best possible 0 (92.87 seconds)
Cbc0004I Integer solution of 0 found after 292786 iterations and 8512 nodes (93.27 seconds)
Cbc0001I Search completed - best objective 0, took 292786 iterations and 8512 nodes (93.27 seconds)
Cbc0032I Strong branching done 19568 times (302485 iterations), fathomed 525 nodes and fixed 1542 variables
Cbc0035I Maximum depth 72, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 117 cuts of which 49 were active after adding rounds of cuts (0.507821 seconds)
Gomory was tried 10 times and created 196 cuts of which 0 were active after adding rounds of cuts (0.423543 seconds)
Knapsack was tried 10 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.081895 seconds)
liftKnapsack was tried 10 times and created 452 cuts of which 0 were active after adding rounds of cuts (8.39688 seconds)
Clique was tried 10 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.011887 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047215 seconds)
MixedIntegerRounding2 was tried 10 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.038912 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002349 seconds)
TwoMirCuts was tried 10 times and created 182 cuts of which 0 were active after adding rounds of cuts (0.351848 seconds)
ZeroHalf was tried 10 times and created 69 cuts of which 0 were active after adding rounds of cuts (0.066717 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               8512
Total iterations:               292786
Time (CPU seconds):             92.6738
Time (Wallclock seconds):       93.3222
Total time (CPU seconds):       92.6852   (Wallclock seconds):       93.3352
