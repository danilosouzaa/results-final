Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3046/j3046_5.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.115881 seconds
Cgl0002I 19 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 260 rows, 668 columns (668 integer (663 of which binary)) and 10463 elements
Coin3009W Conflict graph built in 0.035 seconds, density: 1.513%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 668 objects (668 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 42 integers unsatisfied sum - 12.0401
Cbc0038I Pass   1: suminf.    9.78760 (49) obj. 0 iterations 81
Cbc0038I Pass   2: suminf.    9.77001 (48) obj. 0 iterations 16
Cbc0038I Pass   3: suminf.    9.77001 (48) obj. 0 iterations 1
Cbc0038I Pass   4: suminf.   11.35442 (51) obj. 1 iterations 146
Cbc0038I Pass   5: suminf.    6.87669 (33) obj. 1 iterations 104
Cbc0038I Pass   6: suminf.    6.81768 (32) obj. 1 iterations 15
Cbc0038I Pass   7: suminf.    8.25413 (30) obj. 1 iterations 76
Cbc0038I Pass   8: suminf.    6.61894 (27) obj. 1 iterations 64
Cbc0038I Pass   9: suminf.    6.51338 (27) obj. 1 iterations 22
Cbc0038I Pass  10: suminf.    6.74910 (26) obj. 1 iterations 63
Cbc0038I Pass  11: suminf.    5.92269 (25) obj. 1 iterations 20
Cbc0038I Pass  12: suminf.    5.49259 (30) obj. 1 iterations 9
Cbc0038I Pass  13: suminf.   11.48030 (38) obj. 1 iterations 94
Cbc0038I Pass  14: suminf.    8.92421 (35) obj. 1 iterations 49
Cbc0038I Pass  15: suminf.    7.92884 (30) obj. 1 iterations 17
Cbc0038I Pass  16: suminf.    7.15175 (28) obj. 1 iterations 62
Cbc0038I Pass  17: suminf.    6.46521 (33) obj. 1 iterations 53
Cbc0038I Pass  18: suminf.    6.35761 (36) obj. 1 iterations 13
Cbc0038I Pass  19: suminf.    6.93393 (25) obj. 1 iterations 53
Cbc0038I Pass  20: suminf.    6.62455 (25) obj. 1 iterations 5
Cbc0038I Pass  21: suminf.    7.41800 (25) obj. 1 iterations 54
Cbc0038I Pass  22: suminf.    6.83021 (31) obj. 1 iterations 33
Cbc0038I Pass  23: suminf.    7.59433 (25) obj. 1 iterations 51
Cbc0038I Pass  24: suminf.    6.58823 (30) obj. 1 iterations 56
Cbc0038I Pass  25: suminf.    6.46315 (28) obj. 1 iterations 26
Cbc0038I Pass  26: suminf.    5.92199 (30) obj. 1 iterations 30
Cbc0038I Pass  27: suminf.    7.15794 (25) obj. 1 iterations 43
Cbc0038I Pass  28: suminf.    6.37273 (23) obj. 1 iterations 54
Cbc0038I Pass  29: suminf.    6.22074 (28) obj. 1 iterations 29
Cbc0038I Pass  30: suminf.    9.18778 (30) obj. 1 iterations 55
Cbc0038I Pass  31: suminf.    6.95821 (22) obj. 1 iterations 86
Cbc0038I Pass  32: suminf.    6.55239 (24) obj. 1 iterations 21
Cbc0038I Pass  33: suminf.    8.26450 (26) obj. 1 iterations 89
Cbc0038I Pass  34: suminf.    6.91875 (25) obj. 1 iterations 46
Cbc0038I Pass  35: suminf.    6.39470 (23) obj. 1 iterations 42
Cbc0038I Pass  36: suminf.    6.25779 (23) obj. 1 iterations 10
Cbc0038I Pass  37: suminf.    6.18968 (27) obj. 1 iterations 11
Cbc0038I Pass  38: suminf.    5.93665 (23) obj. 1 iterations 67
Cbc0038I Pass  39: suminf.    5.93665 (23) obj. 1 iterations 6
Cbc0038I Pass  40: suminf.    7.91061 (24) obj. 1 iterations 66
Cbc0038I Pass  41: suminf.    7.06136 (23) obj. 1 iterations 39
Cbc0038I Pass  42: suminf.    7.00303 (23) obj. 1 iterations 11
Cbc0038I Pass  43: suminf.    7.55618 (22) obj. 1 iterations 84
Cbc0038I Pass  44: suminf.    6.24106 (26) obj. 1 iterations 30
Cbc0038I Pass  45: suminf.    5.59861 (25) obj. 1 iterations 46
Cbc0038I Pass  46: suminf.    5.74412 (23) obj. 1 iterations 68
Cbc0038I Pass  47: suminf.    5.09274 (28) obj. 1 iterations 39
Cbc0038I Pass  48: suminf.    7.52790 (25) obj. 1 iterations 58
Cbc0038I Pass  49: suminf.    5.98582 (25) obj. 1 iterations 57
Cbc0038I Pass  50: suminf.    9.57656 (27) obj. 1 iterations 69
Cbc0038I Pass  51: suminf.    7.76818 (23) obj. 1 iterations 38
Cbc0038I Pass  52: suminf.    6.09740 (28) obj. 1 iterations 33
Cbc0038I Pass  53: suminf.   10.29047 (32) obj. 1 iterations 105
Cbc0038I Pass  54: suminf.    8.41759 (33) obj. 1 iterations 30
Cbc0038I Pass  55: suminf.    4.57304 (26) obj. 1 iterations 74
Cbc0038I Pass  56: suminf.    3.93804 (23) obj. 1 iterations 30
Cbc0038I Pass  57: suminf.    6.18095 (23) obj. 1 iterations 37
Cbc0038I Pass  58: suminf.    5.70209 (20) obj. 1 iterations 35
Cbc0038I Pass  59: suminf.    4.94319 (17) obj. 1 iterations 33
Cbc0038I Pass  60: suminf.    4.63716 (22) obj. 1 iterations 10
Cbc0038I Pass  61: suminf.    5.58540 (28) obj. 1 iterations 76
Cbc0038I Pass  62: suminf.    3.46431 (16) obj. 1 iterations 95
Cbc0038I Pass  63: suminf.    3.32151 (18) obj. 1 iterations 36
Cbc0038I Pass  64: suminf.    4.11577 (16) obj. 1 iterations 51
Cbc0038I Pass  65: suminf.    3.79038 (16) obj. 1 iterations 12
Cbc0038I Pass  66: suminf.    3.71923 (14) obj. 1 iterations 26
Cbc0038I Pass  67: suminf.    3.38326 (16) obj. 1 iterations 30
Cbc0038I Pass  68: suminf.    4.93704 (24) obj. 1 iterations 56
Cbc0038I Pass  69: suminf.    4.41574 (21) obj. 1 iterations 21
Cbc0038I Pass  70: suminf.    4.53493 (19) obj. 1 iterations 60
Cbc0038I Pass  71: suminf.    3.99048 (16) obj. 1 iterations 7
Cbc0038I Pass  72: suminf.    3.79038 (16) obj. 1 iterations 16
Cbc0038I Pass  73: suminf.    5.14506 (19) obj. 1 iterations 81
Cbc0038I Pass  74: suminf.    4.35537 (22) obj. 1 iterations 40
Cbc0038I Pass  75: suminf.    3.85591 (21) obj. 1 iterations 68
Cbc0038I Pass  76: suminf.    3.10399 (16) obj. 1 iterations 26
Cbc0038I Pass  77: suminf.    3.08744 (15) obj. 1 iterations 11
Cbc0038I Pass  78: suminf.    4.35646 (17) obj. 1 iterations 53
Cbc0038I Pass  79: suminf.    2.99363 (19) obj. 1 iterations 52
Cbc0038I Pass  80: suminf.    4.02570 (16) obj. 1 iterations 57
Cbc0038I Pass  81: suminf.    3.32151 (18) obj. 1 iterations 43
Cbc0038I Pass  82: suminf.    6.10256 (21) obj. 1 iterations 56
Cbc0038I Pass  83: suminf.    5.88271 (19) obj. 1 iterations 36
Cbc0038I Pass  84: suminf.    5.12381 (16) obj. 1 iterations 36
Cbc0038I Pass  85: suminf.    4.83397 (18) obj. 1 iterations 13
Cbc0038I Pass  86: suminf.    3.98621 (18) obj. 1 iterations 18
Cbc0038I Pass  87: suminf.    3.38326 (16) obj. 1 iterations 47
Cbc0038I Pass  88: suminf.    5.64196 (20) obj. 1 iterations 50
Cbc0038I Pass  89: suminf.    4.63716 (22) obj. 1 iterations 50
Cbc0038I Pass  90: suminf.    4.63716 (22) obj. 1 iterations 1
Cbc0038I Pass  91: suminf.    3.85591 (21) obj. 1 iterations 81
Cbc0038I Pass  92: suminf.    3.10399 (16) obj. 1 iterations 32
Cbc0038I Pass  93: suminf.    3.08744 (15) obj. 1 iterations 11
Cbc0038I Pass  94: suminf.    3.86352 (18) obj. 1 iterations 68
Cbc0038I Pass  95: suminf.    2.69545 (16) obj. 1 iterations 80
Cbc0038I Pass  96: suminf.    4.31995 (17) obj. 1 iterations 82
Cbc0038I Pass  97: suminf.    3.27770 (15) obj. 1 iterations 31
Cbc0038I Pass  98: suminf.    5.55000 (22) obj. 1 iterations 67
Cbc0038I Pass  99: suminf.    3.85504 (16) obj. 1 iterations 75
Cbc0038I Pass 100: suminf.    7.67353 (33) obj. 1 iterations 97
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 498 integers at bound fixed and 0 continuous
Cbc0038I Full problem 260 rows 668 columns, reduced to 158 rows 142 columns
Cbc0038I Mini branch and bound did not improve solution (2.15 seconds)
Cbc0038I Full problem 261 rows 668 columns, reduced to 260 rows 668 columns - too large
Cbc0038I After 2.25 seconds - Feasibility pump exiting - took 0.95 seconds
Cbc0031I 35 added rows had average density of 59.171429
Cbc0013I At root node, 35 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.457 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 169 row cuts average 575.7 elements, 0 column cuts (0 active)  in 0.380 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 140 row cuts average 13.8 elements, 0 column cuts (0 active)  in 24.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 85 row cuts average 51.1 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 84 row cuts average 124.9 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 112 row cuts average 93.6 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (28.57 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 0 (33.56 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 0 (41.88 seconds)
Cbc0010I After 4 nodes, 2 on tree, 1e+50 best solution, best possible 0 (45.39 seconds)
Cbc0010I After 6 nodes, 1 on tree, 1e+50 best solution, best possible 1 (50.01 seconds)
Cbc0010I After 7 nodes, 2 on tree, 1e+50 best solution, best possible 1 (56.64 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 1 (60.82 seconds)
Cbc0010I After 9 nodes, 4 on tree, 1e+50 best solution, best possible 1 (64.84 seconds)
Cbc0010I After 10 nodes, 5 on tree, 1e+50 best solution, best possible 1 (69.28 seconds)
Cbc0010I After 11 nodes, 6 on tree, 1e+50 best solution, best possible 1 (71.86 seconds)
Cbc0010I After 19 nodes, 9 on tree, 1e+50 best solution, best possible 1 (72.58 seconds)
Cbc0010I After 24 nodes, 8 on tree, 1e+50 best solution, best possible 1 (75.69 seconds)
Cbc0010I After 25 nodes, 7 on tree, 1e+50 best solution, best possible 1 (78.02 seconds)
Cbc0010I After 28 nodes, 10 on tree, 1e+50 best solution, best possible 1 (80.08 seconds)
Cbc0010I After 38 nodes, 8 on tree, 1e+50 best solution, best possible 1 (81.72 seconds)
Cbc0010I After 47 nodes, 10 on tree, 1e+50 best solution, best possible 1 (83.09 seconds)
Cbc0010I After 56 nodes, 9 on tree, 1e+50 best solution, best possible 1 (85.77 seconds)
Cbc0010I After 64 nodes, 9 on tree, 1e+50 best solution, best possible 1 (87.41 seconds)
Cbc0010I After 73 nodes, 9 on tree, 1e+50 best solution, best possible 1 (89.54 seconds)
Cbc0010I After 84 nodes, 8 on tree, 1e+50 best solution, best possible 1 (92.79 seconds)
Cbc0010I After 90 nodes, 8 on tree, 1e+50 best solution, best possible 1 (95.64 seconds)
Cbc0010I After 94 nodes, 5 on tree, 1e+50 best solution, best possible 1 (97.24 seconds)
Cbc0010I After 101 nodes, 10 on tree, 1e+50 best solution, best possible 1 (98.98 seconds)
Cbc0010I After 102 nodes, 10 on tree, 1e+50 best solution, best possible 1 (102.79 seconds)
Cbc0010I After 103 nodes, 11 on tree, 1e+50 best solution, best possible 1 (104.33 seconds)
Cbc0010I After 126 nodes, 13 on tree, 1e+50 best solution, best possible 1 (106.25 seconds)
Cbc0010I After 135 nodes, 13 on tree, 1e+50 best solution, best possible 1 (107.11 seconds)
Cbc0010I After 136 nodes, 12 on tree, 1e+50 best solution, best possible 1 (108.05 seconds)
Cbc0010I After 148 nodes, 11 on tree, 1e+50 best solution, best possible 1 (112.07 seconds)
Cbc0010I After 161 nodes, 17 on tree, 1e+50 best solution, best possible 1 (113.06 seconds)
Cbc0010I After 173 nodes, 12 on tree, 1e+50 best solution, best possible 1 (114.02 seconds)
Cbc0010I After 197 nodes, 10 on tree, 1e+50 best solution, best possible 1 (116.20 seconds)
Cbc0010I After 205 nodes, 12 on tree, 1e+50 best solution, best possible 1 (117.26 seconds)
Cbc0010I After 207 nodes, 11 on tree, 1e+50 best solution, best possible 1 (118.93 seconds)
Cbc0010I After 217 nodes, 10 on tree, 1e+50 best solution, best possible 1 (119.95 seconds)
Cbc0010I After 222 nodes, 9 on tree, 1e+50 best solution, best possible 1 (122.06 seconds)
Cbc0010I After 223 nodes, 9 on tree, 1e+50 best solution, best possible 1 (123.28 seconds)
Cbc0010I After 246 nodes, 11 on tree, 1e+50 best solution, best possible 1 (126.18 seconds)
Cbc0010I After 251 nodes, 10 on tree, 1e+50 best solution, best possible 1 (127.82 seconds)
Cbc0010I After 259 nodes, 8 on tree, 1e+50 best solution, best possible 1 (129.12 seconds)
Cbc0010I After 260 nodes, 8 on tree, 1e+50 best solution, best possible 1 (131.26 seconds)
Cbc0010I After 279 nodes, 11 on tree, 1e+50 best solution, best possible 1 (131.96 seconds)
Cbc0010I After 299 nodes, 11 on tree, 1e+50 best solution, best possible 1 (132.71 seconds)
Cbc0010I After 322 nodes, 16 on tree, 1e+50 best solution, best possible 1 (133.49 seconds)
Cbc0010I After 349 nodes, 20 on tree, 1e+50 best solution, best possible 1 (134.19 seconds)
Cbc0010I After 384 nodes, 18 on tree, 1e+50 best solution, best possible 1 (135.01 seconds)
Cbc0010I After 399 nodes, 16 on tree, 1e+50 best solution, best possible 1 (135.72 seconds)
Cbc0010I After 441 nodes, 15 on tree, 1e+50 best solution, best possible 1 (136.49 seconds)
Cbc0010I After 469 nodes, 16 on tree, 1e+50 best solution, best possible 1 (137.20 seconds)
Cbc0010I After 501 nodes, 17 on tree, 1e+50 best solution, best possible 1 (138.00 seconds)
Cbc0010I After 527 nodes, 15 on tree, 1e+50 best solution, best possible 1 (138.76 seconds)
Cbc0010I After 552 nodes, 12 on tree, 1e+50 best solution, best possible 1 (139.56 seconds)
Cbc0010I After 573 nodes, 15 on tree, 1e+50 best solution, best possible 1 (140.27 seconds)
Cbc0010I After 597 nodes, 14 on tree, 1e+50 best solution, best possible 1 (141.00 seconds)
Cbc0010I After 624 nodes, 15 on tree, 1e+50 best solution, best possible 1 (141.71 seconds)
Cbc0010I After 649 nodes, 13 on tree, 1e+50 best solution, best possible 1 (142.45 seconds)
Cbc0010I After 662 nodes, 16 on tree, 1e+50 best solution, best possible 1 (143.18 seconds)
Cbc0010I After 691 nodes, 14 on tree, 1e+50 best solution, best possible 1 (143.88 seconds)
Cbc0010I After 702 nodes, 15 on tree, 1e+50 best solution, best possible 1 (145.91 seconds)
Cbc0010I After 733 nodes, 18 on tree, 1e+50 best solution, best possible 1 (146.70 seconds)
Cbc0010I After 768 nodes, 13 on tree, 1e+50 best solution, best possible 1 (147.43 seconds)
Cbc0010I After 809 nodes, 15 on tree, 1e+50 best solution, best possible 1 (148.13 seconds)
Cbc0010I After 820 nodes, 14 on tree, 1e+50 best solution, best possible 1 (149.22 seconds)
Cbc0010I After 847 nodes, 12 on tree, 1e+50 best solution, best possible 1 (149.93 seconds)
Cbc0010I After 860 nodes, 11 on tree, 1e+50 best solution, best possible 1 (150.94 seconds)
Cbc0010I After 868 nodes, 8 on tree, 1e+50 best solution, best possible 1 (151.66 seconds)
Cbc0010I After 873 nodes, 11 on tree, 1e+50 best solution, best possible 1 (152.38 seconds)
Cbc0010I After 888 nodes, 14 on tree, 1e+50 best solution, best possible 1 (153.09 seconds)
Cbc0010I After 910 nodes, 16 on tree, 1e+50 best solution, best possible 1 (153.79 seconds)
Cbc0010I After 935 nodes, 9 on tree, 1e+50 best solution, best possible 1 (154.52 seconds)
Cbc0010I After 949 nodes, 12 on tree, 1e+50 best solution, best possible 1 (155.30 seconds)
Cbc0010I After 968 nodes, 11 on tree, 1e+50 best solution, best possible 1 (156.27 seconds)
Cbc0010I After 971 nodes, 10 on tree, 1e+50 best solution, best possible 1 (158.37 seconds)
Cbc0010I After 990 nodes, 9 on tree, 1e+50 best solution, best possible 1 (161.72 seconds)
Cbc0010I After 992 nodes, 9 on tree, 1e+50 best solution, best possible 1 (164.26 seconds)
Cbc0010I After 1008 nodes, 9 on tree, 1e+50 best solution, best possible 1 (165.65 seconds)
Cbc0010I After 1012 nodes, 7 on tree, 1e+50 best solution, best possible 1 (168.62 seconds)
Cbc0010I After 1017 nodes, 6 on tree, 1e+50 best solution, best possible 1 (170.34 seconds)
Cbc0010I After 1025 nodes, 4 on tree, 1e+50 best solution, best possible 1 (175.64 seconds)
Cbc0010I After 1026 nodes, 5 on tree, 1e+50 best solution, best possible 1 (177.41 seconds)
Cbc0010I After 1038 nodes, 8 on tree, 1e+50 best solution, best possible 1 (178.44 seconds)
Cbc0010I After 1041 nodes, 8 on tree, 1e+50 best solution, best possible 1 (179.28 seconds)
Cbc0010I After 1067 nodes, 31 on tree, 1e+50 best solution, best possible 1 (180.01 seconds)
Cbc0016I Integer solution of 1 found by strong branching after 72598 iterations and 1070 nodes (180.04 seconds)
Cbc0001I Search completed - best objective 1, took 72629 iterations and 1070 nodes (180.05 seconds)
Cbc0032I Strong branching done 2878 times (72656 iterations), fathomed 22 nodes and fixed 76 variables
Cbc0035I Maximum depth 46, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 189 times and created 668 cuts of which 0 were active after adding rounds of cuts (0.772582 seconds)
Gomory was tried 182 times and created 174 cuts of which 0 were active after adding rounds of cuts (0.657377 seconds)
Knapsack was tried 182 times and created 207 cuts of which 0 were active after adding rounds of cuts (0.948732 seconds)
liftKnapsack was tried 182 times and created 3340 cuts of which 0 were active after adding rounds of cuts (147.183 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.007218 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036814 seconds)
MixedIntegerRounding2 was tried 182 times and created 545 cuts of which 0 were active after adding rounds of cuts (0.568457 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007474 seconds)
TwoMirCuts was tried 10 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.094739 seconds)
ZeroHalf was tried 10 times and created 112 cuts of which 0 were active after adding rounds of cuts (0.06717 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               1070
Total iterations:               72629
Time (CPU seconds):             179.972
Time (Wallclock seconds):       180.095
Total time (CPU seconds):       179.983   (Wallclock seconds):       180.11
