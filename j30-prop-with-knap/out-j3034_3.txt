Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3034/j3034_3.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 11.5877 - 0.288325 seconds
Cgl0003I 12 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 337 rows, 1360 columns (1360 integer (1359 of which binary)) and 16476 elements
Coin3009W Conflict graph built in 0.089 seconds, density: 0.818%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1360 objects (1360 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 78 integers unsatisfied sum - 20.9509
Cbc0038I Pass   1: suminf.   12.87592 (64) obj. 12.1743 iterations 147
Cbc0038I Pass   2: suminf.   11.48947 (48) obj. 12.7623 iterations 32
Cbc0038I Pass   3: suminf.   11.32039 (48) obj. 12.8281 iterations 11
Cbc0038I Pass   4: suminf.   10.39800 (44) obj. 14 iterations 42
Cbc0038I Pass   5: suminf.    9.19253 (43) obj. 14 iterations 23
Cbc0038I Pass   6: suminf.    9.19253 (43) obj. 14 iterations 0
Cbc0038I Pass   7: suminf.   10.63705 (54) obj. 14 iterations 73
Cbc0038I Pass   8: suminf.    9.05606 (45) obj. 14 iterations 58
Cbc0038I Pass   9: suminf.    8.88448 (52) obj. 14 iterations 62
Cbc0038I Pass  10: suminf.   12.61537 (49) obj. 14 iterations 117
Cbc0038I Pass  11: suminf.   10.99220 (44) obj. 14 iterations 70
Cbc0038I Pass  12: suminf.   10.70434 (52) obj. 14 iterations 31
Cbc0038I Pass  13: suminf.   10.81547 (52) obj. 14 iterations 52
Cbc0038I Pass  14: suminf.    9.51475 (56) obj. 14 iterations 67
Cbc0038I Pass  15: suminf.   13.23108 (51) obj. 14 iterations 105
Cbc0038I Pass  16: suminf.   10.89483 (55) obj. 14 iterations 71
Cbc0038I Pass  17: suminf.   10.80876 (54) obj. 14 iterations 14
Cbc0038I Pass  18: suminf.   12.28115 (47) obj. 14 iterations 90
Cbc0038I Pass  19: suminf.   11.48098 (45) obj. 14 iterations 55
Cbc0038I Pass  20: suminf.   12.48025 (45) obj. 14 iterations 67
Cbc0038I Pass  21: suminf.   11.34395 (46) obj. 14 iterations 74
Cbc0038I Pass  22: suminf.    9.88657 (45) obj. 14 iterations 43
Cbc0038I Pass  23: suminf.    9.81019 (50) obj. 14 iterations 71
Cbc0038I Pass  24: suminf.    9.70072 (47) obj. 14 iterations 13
Cbc0038I Pass  25: suminf.    8.70072 (45) obj. 14 iterations 6
Cbc0038I Pass  26: suminf.    8.70072 (45) obj. 14 iterations 3
Cbc0038I Pass  27: suminf.    9.19417 (48) obj. 14 iterations 52
Cbc0038I Pass  28: suminf.    9.02585 (43) obj. 14 iterations 19
Cbc0038I Pass  29: suminf.   11.67877 (42) obj. 14 iterations 63
Cbc0038I Pass  30: suminf.    8.49205 (39) obj. 14 iterations 50
Cbc0038I Pass  31: suminf.    8.41267 (42) obj. 14 iterations 40
Cbc0038I Pass  32: suminf.    8.39558 (42) obj. 14 iterations 64
Cbc0038I Pass  33: suminf.    8.02570 (42) obj. 14 iterations 16
Cbc0038I Pass  34: suminf.    9.80461 (41) obj. 14 iterations 45
Cbc0038I Pass  35: suminf.    8.98160 (43) obj. 14 iterations 32
Cbc0038I Pass  36: suminf.    8.28044 (41) obj. 14 iterations 7
Cbc0038I Pass  37: suminf.   11.76348 (42) obj. 14 iterations 63
Cbc0038I Pass  38: suminf.    9.23289 (39) obj. 14 iterations 38
Cbc0038I Pass  39: suminf.    8.73519 (38) obj. 14 iterations 26
Cbc0038I Pass  40: suminf.    8.73519 (38) obj. 14 iterations 1
Cbc0038I Pass  41: suminf.    9.80806 (39) obj. 14 iterations 79
Cbc0038I Pass  42: suminf.    9.55483 (42) obj. 14 iterations 23
Cbc0038I Pass  43: suminf.   12.48354 (43) obj. 14 iterations 69
Cbc0038I Pass  44: suminf.   11.37952 (44) obj. 14 iterations 44
Cbc0038I Pass  45: suminf.   10.68951 (42) obj. 14 iterations 58
Cbc0038I Pass  46: suminf.    8.92677 (43) obj. 14 iterations 42
Cbc0038I Pass  47: suminf.   10.02092 (46) obj. 14 iterations 90
Cbc0038I Pass  48: suminf.    9.69648 (50) obj. 14 iterations 38
Cbc0038I Pass  49: suminf.    9.87360 (53) obj. 14 iterations 50
Cbc0038I Pass  50: suminf.    9.61543 (53) obj. 14 iterations 16
Cbc0038I Pass  51: suminf.    9.79521 (45) obj. 14 iterations 55
Cbc0038I Pass  52: suminf.    8.85659 (47) obj. 14 iterations 38
Cbc0038I Pass  53: suminf.    9.72423 (47) obj. 14 iterations 53
Cbc0038I Pass  54: suminf.    8.57718 (47) obj. 14 iterations 28
Cbc0038I Pass  55: suminf.    8.15658 (44) obj. 14 iterations 14
Cbc0038I Pass  56: suminf.    9.85507 (41) obj. 14 iterations 77
Cbc0038I Pass  57: suminf.    9.43829 (47) obj. 14 iterations 24
Cbc0038I Pass  58: suminf.    9.86408 (53) obj. 14 iterations 43
Cbc0038I Pass  59: suminf.    9.61543 (53) obj. 14 iterations 21
Cbc0038I Pass  60: suminf.   10.55117 (44) obj. 14 iterations 54
Cbc0038I Pass  61: suminf.    9.56834 (48) obj. 14 iterations 35
Cbc0038I Pass  62: suminf.    9.10475 (48) obj. 14 iterations 24
Cbc0038I Pass  63: suminf.    9.01212 (46) obj. 14 iterations 8
Cbc0038I Pass  64: suminf.    9.50352 (42) obj. 14 iterations 49
Cbc0038I Pass  65: suminf.    9.03082 (47) obj. 14 iterations 26
Cbc0038I Pass  66: suminf.    9.56197 (41) obj. 14 iterations 63
Cbc0038I Pass  67: suminf.    8.28016 (40) obj. 14 iterations 31
Cbc0038I Pass  68: suminf.    8.21185 (40) obj. 14 iterations 11
Cbc0038I Pass  69: suminf.    8.82007 (37) obj. 14 iterations 47
Cbc0038I Pass  70: suminf.    8.20338 (40) obj. 14 iterations 41
Cbc0038I Pass  71: suminf.    8.51238 (37) obj. 14 iterations 56
Cbc0038I Pass  72: suminf.    7.89569 (40) obj. 14 iterations 41
Cbc0038I Pass  73: suminf.    9.10388 (39) obj. 14 iterations 46
Cbc0038I Pass  74: suminf.    8.66198 (40) obj. 14 iterations 34
Cbc0038I Pass  75: suminf.    8.91166 (39) obj. 14 iterations 52
Cbc0038I Pass  76: suminf.    8.61934 (46) obj. 14 iterations 31
Cbc0038I Pass  77: suminf.    9.51632 (43) obj. 14 iterations 69
Cbc0038I Pass  78: suminf.    8.97367 (47) obj. 14 iterations 47
Cbc0038I Pass  79: suminf.    8.91166 (37) obj. 14 iterations 64
Cbc0038I Pass  80: suminf.   16.10827 (63) obj. 14 iterations 166
Cbc0038I Pass  81: suminf.   10.55075 (49) obj. 14 iterations 128
Cbc0038I Pass  82: suminf.   10.32934 (50) obj. 14 iterations 9
Cbc0038I Pass  83: suminf.   11.40058 (40) obj. 14 iterations 120
Cbc0038I Pass  84: suminf.    9.81029 (43) obj. 14 iterations 56
Cbc0038I Pass  85: suminf.    9.15644 (41) obj. 14 iterations 1
Cbc0038I Pass  86: suminf.   10.12998 (45) obj. 14 iterations 50
Cbc0038I Pass  87: suminf.    9.84426 (45) obj. 14 iterations 21
Cbc0038I Pass  88: suminf.    9.17688 (38) obj. 14 iterations 82
Cbc0038I Pass  89: suminf.    8.79289 (43) obj. 14 iterations 62
Cbc0038I Pass  90: suminf.    9.25169 (45) obj. 14 iterations 55
Cbc0038I Pass  91: suminf.    8.83312 (43) obj. 14 iterations 61
Cbc0038I Pass  92: suminf.    9.46384 (41) obj. 14 iterations 61
Cbc0038I Pass  93: suminf.   15.93774 (55) obj. 14 iterations 201
Cbc0038I Pass  94: suminf.    8.87081 (40) obj. 14 iterations 133
Cbc0038I Pass  95: suminf.    7.90948 (38) obj. 14 iterations 47
Cbc0038I Pass  96: suminf.   11.14936 (41) obj. 14 iterations 82
Cbc0038I Pass  97: suminf.    9.26339 (47) obj. 14 iterations 36
Cbc0038I Pass  98: suminf.    9.23702 (45) obj. 14 iterations 5
Cbc0038I Pass  99: suminf.    9.82623 (37) obj. 14 iterations 61
Cbc0038I Pass 100: suminf.   16.35303 (57) obj. 14 iterations 165
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1016 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 1360 columns, reduced to 224 rows 314 columns
Cbc0038I Mini branch and bound did not improve solution (4.22 seconds)
Cbc0038I After 4.22 seconds - Feasibility pump exiting - took 2.02 seconds
Cbc0031I 68 added rows had average density of 67.088235
Cbc0013I At root node, 68 cuts changed objective from 11.587662 to 13 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 206 row cuts average 20.6 elements, 44 column cuts (44 active)  in 1.223 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 190.7 elements, 0 column cuts (0 active)  in 0.369 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 293 row cuts average 21.4 elements, 0 column cuts (0 active)  in 16.760 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 3 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 173 row cuts average 82.9 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 133 row cuts average 151.9 elements, 0 column cuts (0 active)  in 0.251 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 118 row cuts average 103.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 13 (25.31 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 13 (27.42 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 13 (30.06 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 13 (32.55 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 13 (34.68 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 13 (38.67 seconds)
Cbc0010I After 6 nodes, 6 on tree, 1e+50 best solution, best possible 13 (40.98 seconds)
Cbc0010I After 8 nodes, 5 on tree, 1e+50 best solution, best possible 13 (45.57 seconds)
Cbc0010I After 9 nodes, 6 on tree, 1e+50 best solution, best possible 13 (48.77 seconds)
Cbc0010I After 10 nodes, 6 on tree, 1e+50 best solution, best possible 13 (51.97 seconds)
Cbc0010I After 11 nodes, 6 on tree, 1e+50 best solution, best possible 13 (55.27 seconds)
Cbc0010I After 13 nodes, 6 on tree, 1e+50 best solution, best possible 13 (58.34 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 13 (60.94 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible 13 (63.94 seconds)
Cbc0010I After 20 nodes, 4 on tree, 1e+50 best solution, best possible 13 (65.45 seconds)
Cbc0010I After 21 nodes, 4 on tree, 1e+50 best solution, best possible 13 (69.13 seconds)
Cbc0010I After 24 nodes, 3 on tree, 1e+50 best solution, best possible 13 (71.73 seconds)
Cbc0010I After 25 nodes, 4 on tree, 1e+50 best solution, best possible 13 (74.21 seconds)
Cbc0010I After 27 nodes, 3 on tree, 1e+50 best solution, best possible 13 (77.04 seconds)
Cbc0010I After 29 nodes, 2 on tree, 1e+50 best solution, best possible 13 (79.45 seconds)
Cbc0010I After 30 nodes, 3 on tree, 1e+50 best solution, best possible 13 (81.69 seconds)
Cbc0010I After 31 nodes, 4 on tree, 1e+50 best solution, best possible 13 (86.14 seconds)
Cbc0010I After 32 nodes, 4 on tree, 1e+50 best solution, best possible 13 (88.75 seconds)
Cbc0010I After 34 nodes, 3 on tree, 1e+50 best solution, best possible 13 (92.44 seconds)
Cbc0010I After 35 nodes, 3 on tree, 1e+50 best solution, best possible 13 (94.18 seconds)
Cbc0010I After 37 nodes, 2 on tree, 1e+50 best solution, best possible 13 (96.99 seconds)
Cbc0010I After 38 nodes, 3 on tree, 1e+50 best solution, best possible 13 (99.14 seconds)
Cbc0010I After 39 nodes, 3 on tree, 1e+50 best solution, best possible 13 (102.90 seconds)
Cbc0010I After 42 nodes, 1 on tree, 1e+50 best solution, best possible 14 (104.51 seconds)
Cbc0010I After 43 nodes, 2 on tree, 1e+50 best solution, best possible 14 (105.62 seconds)
Cbc0010I After 44 nodes, 3 on tree, 1e+50 best solution, best possible 14 (106.88 seconds)
Cbc0010I After 45 nodes, 4 on tree, 1e+50 best solution, best possible 14 (108.35 seconds)
Cbc0010I After 46 nodes, 5 on tree, 1e+50 best solution, best possible 14 (110.46 seconds)
Cbc0010I After 47 nodes, 6 on tree, 1e+50 best solution, best possible 14 (111.56 seconds)
Cbc0010I After 48 nodes, 7 on tree, 1e+50 best solution, best possible 14 (112.51 seconds)
Cbc0010I After 49 nodes, 8 on tree, 1e+50 best solution, best possible 14 (113.75 seconds)
Cbc0010I After 50 nodes, 9 on tree, 1e+50 best solution, best possible 14 (114.75 seconds)
Cbc0010I After 52 nodes, 11 on tree, 1e+50 best solution, best possible 14 (116.24 seconds)
Cbc0010I After 53 nodes, 11 on tree, 1e+50 best solution, best possible 14 (117.14 seconds)
Cbc0010I After 57 nodes, 8 on tree, 1e+50 best solution, best possible 14 (118.57 seconds)
Cbc0010I After 58 nodes, 8 on tree, 1e+50 best solution, best possible 14 (119.80 seconds)
Cbc0010I After 60 nodes, 10 on tree, 1e+50 best solution, best possible 14 (121.30 seconds)
Cbc0010I After 63 nodes, 9 on tree, 1e+50 best solution, best possible 14 (123.03 seconds)
Cbc0010I After 67 nodes, 7 on tree, 1e+50 best solution, best possible 14 (124.29 seconds)
Cbc0010I After 68 nodes, 8 on tree, 1e+50 best solution, best possible 14 (125.54 seconds)
Cbc0010I After 70 nodes, 8 on tree, 1e+50 best solution, best possible 14 (127.14 seconds)
Cbc0010I After 71 nodes, 8 on tree, 1e+50 best solution, best possible 14 (127.94 seconds)
Cbc0010I After 73 nodes, 7 on tree, 1e+50 best solution, best possible 14 (129.84 seconds)
Cbc0010I After 74 nodes, 7 on tree, 1e+50 best solution, best possible 14 (130.91 seconds)
Cbc0010I After 77 nodes, 6 on tree, 1e+50 best solution, best possible 14 (131.98 seconds)
Cbc0010I After 83 nodes, 2 on tree, 1e+50 best solution, best possible 14 (133.62 seconds)
Cbc0010I After 84 nodes, 3 on tree, 1e+50 best solution, best possible 14 (134.93 seconds)
Cbc0010I After 85 nodes, 4 on tree, 1e+50 best solution, best possible 14 (137.07 seconds)
Cbc0010I After 86 nodes, 5 on tree, 1e+50 best solution, best possible 14 (138.14 seconds)
Cbc0010I After 87 nodes, 6 on tree, 1e+50 best solution, best possible 14 (139.07 seconds)
Cbc0010I After 89 nodes, 7 on tree, 1e+50 best solution, best possible 14 (140.35 seconds)
Cbc0010I After 91 nodes, 8 on tree, 1e+50 best solution, best possible 14 (141.85 seconds)
Cbc0010I After 92 nodes, 9 on tree, 1e+50 best solution, best possible 14 (142.71 seconds)
Cbc0010I After 94 nodes, 10 on tree, 1e+50 best solution, best possible 14 (143.63 seconds)
Cbc0010I After 96 nodes, 11 on tree, 1e+50 best solution, best possible 14 (144.47 seconds)
Cbc0010I After 99 nodes, 12 on tree, 1e+50 best solution, best possible 14 (145.43 seconds)
Cbc0010I After 102 nodes, 13 on tree, 1e+50 best solution, best possible 14 (146.24 seconds)
Cbc0010I After 104 nodes, 14 on tree, 1e+50 best solution, best possible 14 (146.96 seconds)
Cbc0010I After 107 nodes, 14 on tree, 1e+50 best solution, best possible 14 (147.85 seconds)
Cbc0010I After 110 nodes, 15 on tree, 1e+50 best solution, best possible 14 (148.88 seconds)
Cbc0010I After 113 nodes, 17 on tree, 1e+50 best solution, best possible 14 (149.85 seconds)
Cbc0010I After 117 nodes, 20 on tree, 1e+50 best solution, best possible 14 (150.68 seconds)
Cbc0004I Integer solution of 14 found after 42312 iterations and 120 nodes (151.01 seconds)
Cbc0001I Search completed - best objective 14, took 42312 iterations and 120 nodes (151.02 seconds)
Cbc0032I Strong branching done 610 times (5592 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 19, 0 variables fixed on reduced cost
Cuts at root node changed objective from 11.5877 to 13
Probing was tried 125 times and created 1890 cuts of which 0 were active after adding rounds of cuts (2.39348 seconds)
Gomory was tried 10 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.369095 seconds)
Knapsack was tried 125 times and created 38 cuts of which 0 were active after adding rounds of cuts (1.27164 seconds)
liftKnapsack was tried 125 times and created 2729 cuts of which 0 were active after adding rounds of cuts (122.101 seconds)
Clique was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.017907 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.096986 seconds)
MixedIntegerRounding2 was tried 125 times and created 1567 cuts of which 0 were active after adding rounds of cuts (1.17817 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004615 seconds)
TwoMirCuts was tried 125 times and created 510 cuts of which 0 were active after adding rounds of cuts (0.620812 seconds)
ZeroHalf was tried 125 times and created 912 cuts of which 0 were active after adding rounds of cuts (1.35622 seconds)

Result - Optimal solution found
Objective value:                14
Enumerated nodes:               120
Total iterations:               42312
Time (CPU seconds):             150.889
Time (Wallclock seconds):       151.071
Total time (CPU seconds):       150.906   (Wallclock seconds):       151.1
