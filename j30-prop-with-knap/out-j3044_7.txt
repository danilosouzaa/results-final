Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3044/j3044_7.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.04247 - 0.046938 seconds
Cgl0002I 14 variables fixed
Cgl0003I 2 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 278 rows, 543 columns (543 integer (542 of which binary)) and 6268 elements
Coin3009W Conflict graph built in 0.014 seconds, density: 1.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 543 objects (543 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 73 integers unsatisfied sum - 18.8311
Cbc0038I Pass   1: suminf.    5.53139 (29) obj. 2 iterations 64
Cbc0038I Pass   2: suminf.    5.27621 (32) obj. 2 iterations 12
Cbc0038I Pass   3: suminf.    4.71570 (24) obj. 2 iterations 44
Cbc0038I Pass   4: suminf.    4.30939 (25) obj. 2 iterations 14
Cbc0038I Pass   5: suminf.    5.26399 (25) obj. 2 iterations 47
Cbc0038I Pass   6: suminf.    2.36597 (13) obj. 2 iterations 18
Cbc0038I Pass   7: suminf.    2.36597 (13) obj. 2 iterations 0
Cbc0038I Pass   8: suminf.    3.91575 (13) obj. 2 iterations 20
Cbc0038I Pass   9: suminf.    3.06061 (9) obj. 2 iterations 14
Cbc0038I Pass  10: suminf.    3.06061 (9) obj. 2 iterations 7
Cbc0038I Pass  11: suminf.    2.71861 (9) obj. 2 iterations 23
Cbc0038I Pass  12: suminf.    2.36597 (13) obj. 2 iterations 17
Cbc0038I Pass  13: suminf.    3.75018 (14) obj. 2 iterations 32
Cbc0038I Pass  14: suminf.    2.63030 (12) obj. 2 iterations 15
Cbc0038I Pass  15: suminf.    3.74823 (17) obj. 2 iterations 29
Cbc0038I Pass  16: suminf.    3.06061 (9) obj. 2 iterations 14
Cbc0038I Pass  17: suminf.    2.71861 (9) obj. 2 iterations 19
Cbc0038I Pass  18: suminf.    2.36597 (13) obj. 2 iterations 16
Cbc0038I Pass  19: suminf.    3.75018 (14) obj. 2 iterations 31
Cbc0038I Pass  20: suminf.    2.63030 (12) obj. 2 iterations 16
Cbc0038I Pass  21: suminf.    3.74823 (17) obj. 2 iterations 31
Cbc0038I Pass  22: suminf.    3.06061 (9) obj. 2 iterations 16
Cbc0038I Pass  23: suminf.    2.71861 (9) obj. 2 iterations 18
Cbc0038I Pass  24: suminf.    2.36597 (13) obj. 2 iterations 17
Cbc0038I Pass  25: suminf.    3.75018 (14) obj. 2 iterations 37
Cbc0038I Pass  26: suminf.    2.63030 (12) obj. 2 iterations 21
Cbc0038I Pass  27: suminf.    3.74823 (17) obj. 2 iterations 35
Cbc0038I Pass  28: suminf.    3.06061 (9) obj. 2 iterations 17
Cbc0038I Pass  29: suminf.    2.71861 (9) obj. 2 iterations 22
Cbc0038I Pass  30: suminf.    2.36597 (13) obj. 2 iterations 19
Cbc0038I Pass  31: suminf.    3.75018 (14) obj. 2 iterations 34
Cbc0038I Pass  32: suminf.    2.63030 (12) obj. 2 iterations 18
Cbc0038I Pass  33: suminf.    3.74823 (17) obj. 2 iterations 29
Cbc0038I Pass  34: suminf.    3.06061 (9) obj. 2 iterations 15
Cbc0038I Pass  35: suminf.    2.71861 (9) obj. 2 iterations 16
Cbc0038I Pass  36: suminf.    2.36597 (13) obj. 2 iterations 19
Cbc0038I Pass  37: suminf.    3.75018 (14) obj. 2 iterations 31
Cbc0038I Pass  38: suminf.    2.63030 (12) obj. 2 iterations 17
Cbc0038I Pass  39: suminf.    3.74823 (17) obj. 2 iterations 27
Cbc0038I Pass  40: suminf.    3.06061 (9) obj. 2 iterations 18
Cbc0038I Pass  41: suminf.    2.71861 (9) obj. 2 iterations 20
Cbc0038I Pass  42: suminf.    2.36597 (13) obj. 2 iterations 19
Cbc0038I Pass  43: suminf.    3.91575 (13) obj. 2 iterations 19
Cbc0038I Pass  44: suminf.    3.06061 (9) obj. 2 iterations 11
Cbc0038I Pass  45: suminf.    3.06061 (9) obj. 2 iterations 10
Cbc0038I Pass  46: suminf.    2.71861 (9) obj. 2 iterations 27
Cbc0038I Pass  47: suminf.    2.36597 (13) obj. 2 iterations 21
Cbc0038I Pass  48: suminf.    3.75018 (14) obj. 2 iterations 35
Cbc0038I Pass  49: suminf.    2.63030 (12) obj. 2 iterations 17
Cbc0038I Pass  50: suminf.    3.74823 (17) obj. 2 iterations 26
Cbc0038I Pass  51: suminf.    3.06061 (9) obj. 2 iterations 17
Cbc0038I Pass  52: suminf.    2.71861 (9) obj. 2 iterations 23
Cbc0038I Pass  53: suminf.    2.36597 (13) obj. 2 iterations 22
Cbc0038I Pass  54: suminf.    3.75018 (14) obj. 2 iterations 35
Cbc0038I Pass  55: suminf.    2.63030 (12) obj. 2 iterations 19
Cbc0038I Pass  56: suminf.    3.74823 (17) obj. 2 iterations 25
Cbc0038I Pass  57: suminf.    3.06061 (9) obj. 2 iterations 17
Cbc0038I Pass  58: suminf.    2.71861 (9) obj. 2 iterations 24
Cbc0038I Pass  59: suminf.    2.36597 (13) obj. 2 iterations 20
Cbc0038I Pass  60: suminf.    3.75018 (14) obj. 2 iterations 33
Cbc0038I Pass  61: suminf.    2.63030 (12) obj. 2 iterations 18
Cbc0038I Pass  62: suminf.    3.74823 (17) obj. 2 iterations 30
Cbc0038I Pass  63: suminf.    3.06061 (9) obj. 2 iterations 16
Cbc0038I Pass  64: suminf.    2.71861 (9) obj. 2 iterations 25
Cbc0038I Pass  65: suminf.    2.36597 (13) obj. 2 iterations 21
Cbc0038I Pass  66: suminf.    3.91575 (13) obj. 2 iterations 21
Cbc0038I Pass  67: suminf.    3.06061 (9) obj. 2 iterations 14
Cbc0038I Pass  68: suminf.    3.06061 (9) obj. 2 iterations 6
Cbc0038I Pass  69: suminf.    2.71861 (9) obj. 2 iterations 19
Cbc0038I Pass  70: suminf.    2.36597 (13) obj. 2 iterations 18
Cbc0038I Pass  71: suminf.    3.75018 (14) obj. 2 iterations 34
Cbc0038I Pass  72: suminf.    2.63030 (12) obj. 2 iterations 15
Cbc0038I Pass  73: suminf.    3.22344 (11) obj. 2 iterations 26
Cbc0038I Pass  74: suminf.    6.61746 (30) obj. 2 iterations 71
Cbc0038I Pass  75: suminf.    2.32143 (16) obj. 2 iterations 58
Cbc0038I Pass  76: suminf.    5.36795 (20) obj. 2 iterations 33
Cbc0038I Pass  77: suminf.    4.09841 (16) obj. 2 iterations 24
Cbc0038I Pass  78: suminf.    3.76793 (19) obj. 2 iterations 13
Cbc0038I Pass  79: suminf.    5.19780 (15) obj. 2 iterations 28
Cbc0038I Pass  80: suminf.    5.19780 (15) obj. 2 iterations 10
Cbc0038I Pass  81: suminf.    4.94780 (15) obj. 2 iterations 3
Cbc0038I Pass  82: suminf.    5.72161 (16) obj. 2 iterations 23
Cbc0038I Pass  83: suminf.    5.38828 (16) obj. 2 iterations 4
Cbc0038I Pass  84: suminf.    5.61447 (17) obj. 2 iterations 34
Cbc0038I Pass  85: suminf.    5.61447 (17) obj. 2 iterations 2
Cbc0038I Pass  86: suminf.    5.53114 (17) obj. 2 iterations 13
Cbc0038I Pass  87: suminf.    5.53114 (17) obj. 2 iterations 3
Cbc0038I Pass  88: suminf.    5.61447 (17) obj. 2 iterations 25
Cbc0038I Pass  89: suminf.    8.46032 (32) obj. 2 iterations 68
Cbc0038I Pass  90: suminf.    6.53280 (33) obj. 2 iterations 51
Cbc0038I Pass  91: suminf.    6.53280 (33) obj. 2 iterations 3
Cbc0038I Pass  92: suminf.    7.35020 (28) obj. 2 iterations 34
Cbc0038I Pass  93: suminf.    3.68095 (18) obj. 2 iterations 19
Cbc0038I Pass  94: suminf.    3.03333 (16) obj. 2 iterations 22
Cbc0038I Pass  95: suminf.    5.80641 (19) obj. 2 iterations 32
Cbc0038I Pass  96: suminf.    3.40256 (16) obj. 2 iterations 29
Cbc0038I Pass  97: suminf.    3.40256 (16) obj. 2 iterations 0
Cbc0038I Pass  98: suminf.    4.72308 (14) obj. 2 iterations 28
Cbc0038I Pass  99: suminf.    3.80256 (16) obj. 2 iterations 22
Cbc0038I Pass 100: suminf.    9.90466 (35) obj. 2 iterations 85
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 372 integers at bound fixed and 0 continuous
Cbc0038I Full problem 278 rows 543 columns, reduced to 193 rows 141 columns
Cbc0038I Mini branch and bound did not improve solution (2.31 seconds)
Cbc0038I After 2.31 seconds - Feasibility pump exiting - took 1.17 seconds
Cbc0031I 53 added rows had average density of 114.58491
Cbc0013I At root node, 53 cuts changed objective from 1.042471 to 2 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 126 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.387 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 225 row cuts average 486.6 elements, 0 column cuts (0 active)  in 0.446 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 27 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 87 row cuts average 18.4 elements, 0 column cuts (0 active)  in 3.143 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 67 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 188 row cuts average 284.4 elements, 0 column cuts (0 active)  in 0.331 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 62 row cuts average 41.7 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (9.32 seconds)
Cbc0012I Integer solution of 2 found by DiveCoefficient after 939 iterations and 1 nodes (9.72 seconds)
Cbc0001I Search completed - best objective 2, took 975 iterations and 1 nodes (9.74 seconds)
Cbc0032I Strong branching done 180 times (6103 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.04247 to 2
Probing was tried 11 times and created 136 cuts of which 0 were active after adding rounds of cuts (0.393927 seconds)
Gomory was tried 10 times and created 225 cuts of which 0 were active after adding rounds of cuts (0.44611 seconds)
Knapsack was tried 11 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.087563 seconds)
liftKnapsack was tried 11 times and created 90 cuts of which 0 were active after adding rounds of cuts (3.44457 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006534 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032598 seconds)
MixedIntegerRounding2 was tried 11 times and created 69 cuts of which 0 were active after adding rounds of cuts (0.058064 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002687 seconds)
TwoMirCuts was tried 11 times and created 190 cuts of which 0 were active after adding rounds of cuts (0.361622 seconds)
ZeroHalf was tried 11 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.063082 seconds)

Result - Optimal solution found
Objective value:                2
Enumerated nodes:               1
Total iterations:               975
Time (CPU seconds):             9.74556
Time (Wallclock seconds):       9.78261
Total time (CPU seconds):       9.755   (Wallclock seconds):       9.79253
