Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3049/j3049_9.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.080058 seconds
Cgl0002I 22 variables fixed
Cgl0003I 23 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 52 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 222 rows, 566 columns (566 integer (566 of which binary)) and 6103 elements
Coin3009W Conflict graph built in 0.065 seconds, density: 2.754%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 566 objects (566 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 83 integers unsatisfied sum - 21.0866
Cbc0038I Pass   1: suminf.    6.98143 (33) obj. 0 iterations 97
Cbc0038I Pass   2: suminf.    5.66575 (30) obj. 0 iterations 35
Cbc0038I Pass   3: suminf.    8.28550 (24) obj. 0 iterations 62
Cbc0038I Pass   4: suminf.    5.84127 (22) obj. 0 iterations 29
Cbc0038I Pass   5: suminf.    5.09843 (26) obj. 0 iterations 29
Cbc0038I Pass   6: suminf.    3.94167 (14) obj. 0 iterations 59
Cbc0038I Pass   7: suminf.    2.77976 (12) obj. 0 iterations 28
Cbc0038I Pass   8: suminf.    2.23313 (14) obj. 0 iterations 14
Cbc0038I Pass   9: suminf.    6.02696 (18) obj. 0 iterations 50
Cbc0038I Pass  10: suminf.    3.52976 (13) obj. 0 iterations 36
Cbc0038I Pass  11: suminf.    3.04808 (9) obj. 0 iterations 8
Cbc0038I Pass  12: suminf.    3.19805 (11) obj. 0 iterations 38
Cbc0038I Pass  13: suminf.    2.37745 (13) obj. 0 iterations 24
Cbc0038I Pass  14: suminf.    2.37745 (13) obj. 0 iterations 4
Cbc0038I Pass  15: suminf.    3.50000 (13) obj. 0 iterations 31
Cbc0038I Pass  16: suminf.    2.66667 (9) obj. 0 iterations 36
Cbc0038I Pass  17: suminf.    9.09329 (41) obj. 0 iterations 118
Cbc0038I Pass  18: suminf.    4.44167 (18) obj. 0 iterations 75
Cbc0038I Pass  19: suminf.    3.71212 (14) obj. 0 iterations 10
Cbc0038I Pass  20: suminf.    4.04469 (13) obj. 0 iterations 45
Cbc0038I Pass  21: suminf.    3.47873 (14) obj. 0 iterations 32
Cbc0038I Pass  22: suminf.    5.34304 (14) obj. 0 iterations 43
Cbc0038I Pass  23: suminf.    5.02875 (16) obj. 0 iterations 6
Cbc0038I Pass  24: suminf.    5.00778 (16) obj. 0 iterations 63
Cbc0038I Pass  25: suminf.    3.85885 (16) obj. 0 iterations 34
Cbc0038I Pass  26: suminf.    3.81184 (16) obj. 0 iterations 6
Cbc0038I Pass  27: suminf.    5.26796 (18) obj. 0 iterations 64
Cbc0038I Pass  28: suminf.    4.44580 (15) obj. 0 iterations 18
Cbc0038I Pass  29: suminf.    5.61282 (17) obj. 0 iterations 36
Cbc0038I Pass  30: suminf.    5.30185 (18) obj. 0 iterations 18
Cbc0038I Pass  31: suminf.    4.92212 (17) obj. 0 iterations 14
Cbc0038I Pass  32: suminf.    4.99895 (19) obj. 0 iterations 38
Cbc0038I Pass  33: suminf.    4.66859 (18) obj. 0 iterations 5
Cbc0038I Pass  34: suminf.    5.28271 (17) obj. 0 iterations 33
Cbc0038I Pass  35: suminf.    5.28271 (18) obj. 0 iterations 7
Cbc0038I Pass  36: suminf.    5.99470 (17) obj. 0 iterations 25
Cbc0038I Pass  37: suminf.    5.39318 (17) obj. 0 iterations 16
Cbc0038I Pass  38: suminf.    5.23782 (16) obj. 0 iterations 35
Cbc0038I Pass  39: suminf.    5.18577 (18) obj. 0 iterations 14
Cbc0038I Pass  40: suminf.    6.10835 (17) obj. 0 iterations 28
Cbc0038I Pass  41: suminf.    5.65506 (18) obj. 0 iterations 7
Cbc0038I Pass  42: suminf.    5.63886 (19) obj. 0 iterations 8
Cbc0038I Pass  43: suminf.    5.50210 (15) obj. 0 iterations 35
Cbc0038I Pass  44: suminf.    5.21639 (16) obj. 0 iterations 6
Cbc0038I Pass  45: suminf.    6.37040 (17) obj. 0 iterations 30
Cbc0038I Pass  46: suminf.    5.67590 (17) obj. 0 iterations 20
Cbc0038I Pass  47: suminf.    5.44080 (18) obj. 0 iterations 4
Cbc0038I Pass  48: suminf.    5.29228 (17) obj. 0 iterations 34
Cbc0038I Pass  49: suminf.    4.95025 (18) obj. 0 iterations 9
Cbc0038I Pass  50: suminf.    4.62487 (16) obj. 0 iterations 34
Cbc0038I Pass  51: suminf.    4.62487 (16) obj. 0 iterations 10
Cbc0038I Pass  52: suminf.    6.14496 (18) obj. 0 iterations 31
Cbc0038I Pass  53: suminf.    5.85924 (17) obj. 0 iterations 11
Cbc0038I Pass  54: suminf.    5.53555 (21) obj. 0 iterations 7
Cbc0038I Pass  55: suminf.    6.47960 (23) obj. 0 iterations 39
Cbc0038I Pass  56: suminf.    6.08077 (25) obj. 0 iterations 14
Cbc0038I Pass  57: suminf.    5.46712 (22) obj. 0 iterations 6
Cbc0038I Pass  58: suminf.    6.49907 (23) obj. 0 iterations 51
Cbc0038I Pass  59: suminf.    5.86551 (24) obj. 0 iterations 21
Cbc0038I Pass  60: suminf.    5.57380 (24) obj. 0 iterations 7
Cbc0038I Pass  61: suminf.    5.85331 (20) obj. 0 iterations 62
Cbc0038I Pass  62: suminf.    5.45606 (21) obj. 0 iterations 11
Cbc0038I Pass  63: suminf.    5.08724 (22) obj. 0 iterations 10
Cbc0038I Pass  64: suminf.    5.08724 (22) obj. 0 iterations 11
Cbc0038I Pass  65: suminf.    5.72347 (21) obj. 0 iterations 60
Cbc0038I Pass  66: suminf.    4.91282 (21) obj. 0 iterations 13
Cbc0038I Pass  67: suminf.    6.51447 (21) obj. 0 iterations 35
Cbc0038I Pass  68: suminf.    5.66125 (21) obj. 0 iterations 24
Cbc0038I Pass  69: suminf.    4.63960 (23) obj. 0 iterations 13
Cbc0038I Pass  70: suminf.    4.55032 (23) obj. 0 iterations 7
Cbc0038I Pass  71: suminf.    7.53680 (22) obj. 0 iterations 54
Cbc0038I Pass  72: suminf.    5.68431 (26) obj. 0 iterations 28
Cbc0038I Pass  73: suminf.    5.46280 (26) obj. 0 iterations 4
Cbc0038I Pass  74: suminf.    6.96668 (27) obj. 0 iterations 65
Cbc0038I Pass  75: suminf.    6.23734 (27) obj. 0 iterations 22
Cbc0038I Pass  76: suminf.    5.42965 (24) obj. 0 iterations 11
Cbc0038I Pass  77: suminf.    7.49417 (23) obj. 0 iterations 90
Cbc0038I Pass  78: suminf.    6.92153 (27) obj. 0 iterations 27
Cbc0038I Pass  79: suminf.    6.28111 (26) obj. 0 iterations 11
Cbc0038I Pass  80: suminf.    6.08237 (26) obj. 0 iterations 12
Cbc0038I Pass  81: suminf.    5.65435 (25) obj. 0 iterations 42
Cbc0038I Pass  82: suminf.    5.59185 (22) obj. 0 iterations 16
Cbc0038I Pass  83: suminf.    5.39798 (18) obj. 0 iterations 55
Cbc0038I Pass  84: suminf.    4.99772 (17) obj. 0 iterations 9
Cbc0038I Pass  85: suminf.    5.06053 (18) obj. 0 iterations 27
Cbc0038I Pass  86: suminf.    5.06053 (18) obj. 0 iterations 3
Cbc0038I Pass  87: suminf.    6.99516 (21) obj. 0 iterations 40
Cbc0038I Pass  88: suminf.    4.79182 (21) obj. 0 iterations 18
Cbc0038I Pass  89: suminf.    4.78627 (21) obj. 0 iterations 5
Cbc0038I Pass  90: suminf.    6.74585 (25) obj. 0 iterations 60
Cbc0038I Pass  91: suminf.    6.31951 (24) obj. 0 iterations 15
Cbc0038I Pass  92: suminf.    6.58404 (28) obj. 0 iterations 37
Cbc0038I Pass  93: suminf.    5.60655 (25) obj. 0 iterations 26
Cbc0038I Pass  94: suminf.    5.59570 (23) obj. 0 iterations 12
Cbc0038I Pass  95: suminf.    6.72759 (22) obj. 0 iterations 61
Cbc0038I Pass  96: suminf.    4.35599 (19) obj. 0 iterations 38
Cbc0038I Pass  97: suminf.    3.33806 (16) obj. 0 iterations 20
Cbc0038I Pass  98: suminf.    3.33806 (16) obj. 0 iterations 0
Cbc0038I Pass  99: suminf.    3.37701 (17) obj. 0 iterations 29
Cbc0038I Pass 100: suminf.   10.50597 (43) obj. 0 iterations 108
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 385 integers at bound fixed and 0 continuous
Cbc0038I Full problem 222 rows 566 columns, reduced to 156 rows 159 columns
Cbc0038I Mini branch and bound did not improve solution (4.08 seconds)
Cbc0038I Full problem 223 rows 566 columns, reduced to 222 rows 566 columns - too large
Cbc0038I After 4.15 seconds - Feasibility pump exiting - took 2.17 seconds
Cbc0031I 62 added rows had average density of 41.048387
Cbc0013I At root node, 62 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 15.3 elements, 0 column cuts (0 active)  in 0.633 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 189 row cuts average 513.9 elements, 0 column cuts (0 active)  in 0.402 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 123 row cuts average 11.3 elements, 0 column cuts (0 active)  in 1.628 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 40 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 58 row cuts average 57.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 134 row cuts average 321.0 elements, 0 column cuts (0 active)  in 0.274 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 70 row cuts average 64.6 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (8.70 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 0 (9.46 seconds)
Cbc0016I Integer solution of 0 found by strong branching after 2381 iterations and 21 nodes (9.89 seconds)
Cbc0001I Search completed - best objective 0, took 2381 iterations and 21 nodes (9.89 seconds)
Cbc0032I Strong branching done 566 times (10281 iterations), fathomed 1 nodes and fixed 19 variables
Cbc0035I Maximum depth 17, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 10 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.63254 seconds)
Gomory was tried 10 times and created 189 cuts of which 0 were active after adding rounds of cuts (0.401703 seconds)
Knapsack was tried 10 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.075156 seconds)
liftKnapsack was tried 10 times and created 123 cuts of which 0 were active after adding rounds of cuts (1.62791 seconds)
Clique was tried 10 times and created 40 cuts of which 0 were active after adding rounds of cuts (0.014385 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.052869 seconds)
MixedIntegerRounding2 was tried 10 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.040066 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002009 seconds)
TwoMirCuts was tried 10 times and created 134 cuts of which 0 were active after adding rounds of cuts (0.27351 seconds)
ZeroHalf was tried 10 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.055162 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               21
Total iterations:               2381
Time (CPU seconds):             10.012
Time (Wallclock seconds):       9.94028
Total time (CPU seconds):       10.0239   (Wallclock seconds):       9.95323
