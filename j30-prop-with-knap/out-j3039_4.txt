Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3039/j3039_4.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.97917 - 0.165374 seconds
Cgl0002I 2 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 351 rows, 1226 columns (1226 integer (1225 of which binary)) and 20370 elements
Coin3009W Conflict graph built in 0.113 seconds, density: 1.016%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1226 objects (1226 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 93 integers unsatisfied sum - 24.1261
Cbc0038I Pass   1: suminf.   12.76699 (70) obj. 6 iterations 240
Cbc0038I Pass   2: suminf.   10.99890 (56) obj. 6 iterations 84
Cbc0038I Pass   3: suminf.   10.41109 (63) obj. 6 iterations 15
Cbc0038I Pass   4: suminf.    9.67109 (42) obj. 6 iterations 135
Cbc0038I Pass   5: suminf.    9.24006 (45) obj. 6 iterations 33
Cbc0038I Pass   6: suminf.    9.10372 (43) obj. 6 iterations 38
Cbc0038I Pass   7: suminf.    9.20163 (39) obj. 6 iterations 144
Cbc0038I Pass   8: suminf.    8.63293 (47) obj. 6 iterations 51
Cbc0038I Pass   9: suminf.   12.95628 (40) obj. 6 iterations 167
Cbc0038I Pass  10: suminf.    9.46190 (48) obj. 6 iterations 69
Cbc0038I Pass  11: suminf.    9.25025 (43) obj. 6 iterations 56
Cbc0038I Pass  12: suminf.    8.79961 (41) obj. 6 iterations 130
Cbc0038I Pass  13: suminf.    8.42551 (36) obj. 6 iterations 55
Cbc0038I Pass  14: suminf.    9.91301 (37) obj. 6 iterations 145
Cbc0038I Pass  15: suminf.    7.81145 (34) obj. 6 iterations 85
Cbc0038I Pass  16: suminf.    8.34824 (34) obj. 6 iterations 69
Cbc0038I Pass  17: suminf.    7.30183 (31) obj. 6 iterations 50
Cbc0038I Pass  18: suminf.   10.90350 (37) obj. 6 iterations 107
Cbc0038I Pass  19: suminf.    8.80843 (35) obj. 6 iterations 95
Cbc0038I Pass  20: suminf.    7.92162 (34) obj. 6 iterations 55
Cbc0038I Pass  21: suminf.    7.68482 (33) obj. 6 iterations 55
Cbc0038I Pass  22: suminf.    8.77050 (34) obj. 6 iterations 72
Cbc0038I Pass  23: suminf.    7.37781 (34) obj. 6 iterations 77
Cbc0038I Pass  24: suminf.    6.84723 (31) obj. 6 iterations 28
Cbc0038I Pass  25: suminf.    7.86603 (29) obj. 6 iterations 62
Cbc0038I Pass  26: suminf.    6.79506 (29) obj. 6 iterations 67
Cbc0038I Pass  27: suminf.    8.29255 (29) obj. 6 iterations 114
Cbc0038I Pass  28: suminf.    6.36689 (37) obj. 6 iterations 72
Cbc0038I Pass  29: suminf.    6.17353 (39) obj. 6 iterations 20
Cbc0038I Pass  30: suminf.   10.92309 (42) obj. 6 iterations 134
Cbc0038I Pass  31: suminf.    8.15979 (36) obj. 6 iterations 112
Cbc0038I Pass  32: suminf.    7.55739 (35) obj. 6 iterations 48
Cbc0038I Pass  33: suminf.    7.27298 (35) obj. 6 iterations 36
Cbc0038I Pass  34: suminf.    8.30518 (42) obj. 6 iterations 108
Cbc0038I Pass  35: suminf.    8.08308 (40) obj. 6 iterations 32
Cbc0038I Pass  36: suminf.    7.66047 (36) obj. 6 iterations 19
Cbc0038I Pass  37: suminf.    7.37730 (36) obj. 6 iterations 36
Cbc0038I Pass  38: suminf.    7.70969 (42) obj. 6 iterations 97
Cbc0038I Pass  39: suminf.    6.11364 (33) obj. 6 iterations 70
Cbc0038I Pass  40: suminf.    6.03452 (32) obj. 6 iterations 22
Cbc0038I Pass  41: suminf.    8.73219 (37) obj. 6 iterations 158
Cbc0038I Pass  42: suminf.    8.48933 (37) obj. 6 iterations 57
Cbc0038I Pass  43: suminf.    8.81693 (32) obj. 6 iterations 185
Cbc0038I Pass  44: suminf.    6.99925 (30) obj. 6 iterations 76
Cbc0038I Pass  45: suminf.    6.69002 (36) obj. 6 iterations 55
Cbc0038I Pass  46: suminf.   10.38083 (36) obj. 6 iterations 169
Cbc0038I Pass  47: suminf.    7.55379 (34) obj. 6 iterations 115
Cbc0038I Pass  48: suminf.    7.12032 (35) obj. 6 iterations 48
Cbc0038I Pass  49: suminf.    6.64650 (32) obj. 6 iterations 79
Cbc0038I Pass  50: suminf.    6.17498 (39) obj. 6 iterations 32
Cbc0038I Pass  51: suminf.    6.17964 (35) obj. 6 iterations 11
Cbc0038I Pass  52: suminf.    8.05830 (30) obj. 6 iterations 88
Cbc0038I Pass  53: suminf.    6.86135 (32) obj. 6 iterations 69
Cbc0038I Pass  54: suminf.    6.61107 (35) obj. 6 iterations 12
Cbc0038I Pass  55: suminf.    6.28300 (33) obj. 6 iterations 23
Cbc0038I Pass  56: suminf.    9.54141 (29) obj. 6 iterations 104
Cbc0038I Pass  57: suminf.    6.67862 (30) obj. 6 iterations 75
Cbc0038I Pass  58: suminf.    6.26824 (28) obj. 6 iterations 48
Cbc0038I Pass  59: suminf.    5.20241 (23) obj. 6 iterations 110
Cbc0038I Pass  60: suminf.    4.79173 (27) obj. 6 iterations 64
Cbc0038I Pass  61: suminf.    4.70076 (26) obj. 6 iterations 23
Cbc0038I Pass  62: suminf.    9.22248 (31) obj. 6 iterations 137
Cbc0038I Pass  63: suminf.    5.64048 (23) obj. 6 iterations 112
Cbc0038I Pass  64: suminf.    5.41931 (27) obj. 6 iterations 30
Cbc0038I Pass  65: suminf.    5.28506 (27) obj. 6 iterations 25
Cbc0038I Pass  66: suminf.    8.96109 (29) obj. 6 iterations 101
Cbc0038I Pass  67: suminf.    6.55317 (29) obj. 6 iterations 87
Cbc0038I Pass  68: suminf.    5.69891 (29) obj. 6 iterations 43
Cbc0038I Pass  69: suminf.    6.83442 (25) obj. 6 iterations 119
Cbc0038I Pass  70: suminf.    5.65124 (24) obj. 6 iterations 57
Cbc0038I Pass  71: suminf.    5.21732 (26) obj. 6 iterations 41
Cbc0038I Pass  72: suminf.    7.49327 (27) obj. 6 iterations 109
Cbc0038I Pass  73: suminf.    4.99128 (23) obj. 6 iterations 123
Cbc0038I Pass  74: suminf.    4.92960 (22) obj. 6 iterations 43
Cbc0038I Pass  75: suminf.    7.07970 (22) obj. 6 iterations 140
Cbc0038I Pass  76: suminf.    5.30864 (24) obj. 6 iterations 58
Cbc0038I Pass  77: suminf.    5.23178 (23) obj. 6 iterations 25
Cbc0038I Pass  78: suminf.    5.30097 (21) obj. 6 iterations 90
Cbc0038I Pass  79: suminf.    4.64226 (23) obj. 6 iterations 77
Cbc0038I Pass  80: suminf.    4.60106 (22) obj. 6 iterations 44
Cbc0038I Pass  81: suminf.    9.35269 (32) obj. 6 iterations 122
Cbc0038I Pass  82: suminf.    6.80171 (30) obj. 6 iterations 102
Cbc0038I Pass  83: suminf.    5.91282 (26) obj. 6 iterations 63
Cbc0038I Pass  84: suminf.    5.31454 (23) obj. 6 iterations 35
Cbc0038I Pass  85: suminf.    4.20746 (21) obj. 6 iterations 53
Cbc0038I Pass  86: suminf.    5.04313 (23) obj. 6 iterations 96
Cbc0038I Pass  87: suminf.    4.15443 (21) obj. 6 iterations 103
Cbc0038I Pass  88: suminf.    6.20165 (25) obj. 6 iterations 106
Cbc0038I Pass  89: suminf.    4.36269 (30) obj. 6 iterations 73
Cbc0038I Pass  90: suminf.    3.98942 (28) obj. 6 iterations 32
Cbc0038I Pass  91: suminf.    5.19991 (19) obj. 6 iterations 114
Cbc0038I Pass  92: suminf.    3.69658 (22) obj. 6 iterations 77
Cbc0038I Pass  93: suminf.    7.25547 (31) obj. 6 iterations 164
Cbc0038I Pass  94: suminf.    5.44922 (25) obj. 6 iterations 145
Cbc0038I Pass  95: suminf.    4.76854 (21) obj. 6 iterations 23
Cbc0038I Pass  96: suminf.    5.70436 (28) obj. 6 iterations 128
Cbc0038I Pass  97: suminf.    4.71399 (25) obj. 6 iterations 67
Cbc0038I Pass  98: suminf.    4.13782 (29) obj. 6 iterations 17
Cbc0038I Pass  99: suminf.    3.93526 (28) obj. 6 iterations 4
Cbc0038I Pass 100: suminf.   14.49596 (53) obj. 6 iterations 193
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 942 integers at bound fixed and 0 continuous
Cbc0038I Full problem 351 rows 1226 columns, reduced to 224 rows 241 columns
Cbc0038I Mini branch and bound did not improve solution (3.85 seconds)
Cbc0038I After 3.85 seconds - Feasibility pump exiting - took 1.93 seconds
Cbc0031I 63 added rows had average density of 87.126984
Cbc0013I At root node, 63 cuts changed objective from 3.9791667 to 5.1804241 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 237 row cuts average 10.9 elements, 12 column cuts (24 active)  in 1.524 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 86 row cuts average 541.5 elements, 0 column cuts (0 active)  in 0.772 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 257 row cuts average 28.5 elements, 0 column cuts (0 active)  in 33.064 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 3 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 265 row cuts average 75.1 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 240 row cuts average 186.9 elements, 0 column cuts (0 active)  in 0.330 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 172 row cuts average 83.4 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 6 (44.67 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 6 (48.30 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 6 (51.49 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 6 (54.06 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 6 (58.48 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 6 (63.12 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 6 (65.85 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 6 (67.74 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 6 (70.26 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 6 (72.96 seconds)
Cbc0010I After 11 nodes, 9 on tree, 1e+50 best solution, best possible 6 (76.55 seconds)
Cbc0010I After 12 nodes, 10 on tree, 1e+50 best solution, best possible 6 (78.84 seconds)
Cbc0010I After 15 nodes, 9 on tree, 1e+50 best solution, best possible 6 (82.01 seconds)
Cbc0010I After 16 nodes, 10 on tree, 1e+50 best solution, best possible 6 (85.39 seconds)
Cbc0010I After 18 nodes, 9 on tree, 1e+50 best solution, best possible 6 (88.20 seconds)
Cbc0010I After 20 nodes, 8 on tree, 1e+50 best solution, best possible 6 (89.88 seconds)
Cbc0010I After 21 nodes, 9 on tree, 1e+50 best solution, best possible 6 (91.87 seconds)
Cbc0010I After 22 nodes, 9 on tree, 1e+50 best solution, best possible 6 (93.07 seconds)
Cbc0010I After 23 nodes, 10 on tree, 1e+50 best solution, best possible 6 (94.47 seconds)
Cbc0010I After 24 nodes, 11 on tree, 1e+50 best solution, best possible 6 (96.84 seconds)
Cbc0010I After 26 nodes, 10 on tree, 1e+50 best solution, best possible 6 (100.12 seconds)
Cbc0010I After 29 nodes, 11 on tree, 1e+50 best solution, best possible 6 (103.41 seconds)
Cbc0010I After 30 nodes, 11 on tree, 1e+50 best solution, best possible 6 (105.38 seconds)
Cbc0010I After 32 nodes, 13 on tree, 1e+50 best solution, best possible 6 (107.23 seconds)
Cbc0010I After 33 nodes, 14 on tree, 1e+50 best solution, best possible 6 (109.14 seconds)
Cbc0010I After 34 nodes, 15 on tree, 1e+50 best solution, best possible 6 (111.35 seconds)
Cbc0010I After 36 nodes, 15 on tree, 1e+50 best solution, best possible 6 (114.33 seconds)
Cbc0010I After 37 nodes, 15 on tree, 1e+50 best solution, best possible 6 (116.38 seconds)
Cbc0010I After 39 nodes, 15 on tree, 1e+50 best solution, best possible 6 (120.46 seconds)
Cbc0010I After 41 nodes, 15 on tree, 1e+50 best solution, best possible 6 (123.96 seconds)
Cbc0010I After 42 nodes, 16 on tree, 1e+50 best solution, best possible 6 (128.07 seconds)
Cbc0010I After 44 nodes, 16 on tree, 1e+50 best solution, best possible 6 (130.23 seconds)
Cbc0010I After 46 nodes, 16 on tree, 1e+50 best solution, best possible 6 (131.90 seconds)
Cbc0010I After 48 nodes, 16 on tree, 1e+50 best solution, best possible 6 (132.81 seconds)
Cbc0010I After 52 nodes, 15 on tree, 1e+50 best solution, best possible 6 (133.82 seconds)
Cbc0010I After 56 nodes, 13 on tree, 1e+50 best solution, best possible 6 (135.73 seconds)
Cbc0010I After 57 nodes, 14 on tree, 1e+50 best solution, best possible 6 (139.36 seconds)
Cbc0010I After 58 nodes, 15 on tree, 1e+50 best solution, best possible 6 (141.45 seconds)
Cbc0010I After 59 nodes, 16 on tree, 1e+50 best solution, best possible 6 (143.06 seconds)
Cbc0010I After 63 nodes, 14 on tree, 1e+50 best solution, best possible 6 (145.06 seconds)
Cbc0010I After 65 nodes, 14 on tree, 1e+50 best solution, best possible 6 (146.64 seconds)
Cbc0010I After 67 nodes, 13 on tree, 1e+50 best solution, best possible 6 (147.95 seconds)
Cbc0010I After 69 nodes, 12 on tree, 1e+50 best solution, best possible 6 (151.21 seconds)
Cbc0010I After 70 nodes, 12 on tree, 1e+50 best solution, best possible 6 (154.84 seconds)
Cbc0010I After 71 nodes, 13 on tree, 1e+50 best solution, best possible 6 (159.08 seconds)
Cbc0010I After 73 nodes, 13 on tree, 1e+50 best solution, best possible 6 (160.82 seconds)
Cbc0010I After 74 nodes, 14 on tree, 1e+50 best solution, best possible 6 (162.33 seconds)
Cbc0010I After 75 nodes, 14 on tree, 1e+50 best solution, best possible 6 (163.64 seconds)
Cbc0010I After 78 nodes, 13 on tree, 1e+50 best solution, best possible 6 (165.30 seconds)
Cbc0010I After 79 nodes, 14 on tree, 1e+50 best solution, best possible 6 (167.47 seconds)
Cbc0010I After 81 nodes, 14 on tree, 1e+50 best solution, best possible 6 (170.22 seconds)
Cbc0010I After 82 nodes, 15 on tree, 1e+50 best solution, best possible 6 (173.86 seconds)
Cbc0010I After 84 nodes, 14 on tree, 1e+50 best solution, best possible 6 (177.82 seconds)
Cbc0010I After 85 nodes, 15 on tree, 1e+50 best solution, best possible 6 (180.80 seconds)
Cbc0010I After 86 nodes, 15 on tree, 1e+50 best solution, best possible 6 (182.24 seconds)
Cbc0010I After 88 nodes, 15 on tree, 1e+50 best solution, best possible 6 (183.47 seconds)
Cbc0010I After 89 nodes, 16 on tree, 1e+50 best solution, best possible 6 (184.21 seconds)
Cbc0010I After 92 nodes, 18 on tree, 1e+50 best solution, best possible 6 (185.51 seconds)
Cbc0010I After 96 nodes, 16 on tree, 1e+50 best solution, best possible 6 (186.78 seconds)
Cbc0010I After 97 nodes, 17 on tree, 1e+50 best solution, best possible 6 (187.48 seconds)
Cbc0010I After 101 nodes, 17 on tree, 1e+50 best solution, best possible 6 (188.81 seconds)
Cbc0010I After 103 nodes, 16 on tree, 1e+50 best solution, best possible 6 (190.25 seconds)
Cbc0010I After 106 nodes, 15 on tree, 1e+50 best solution, best possible 6 (191.01 seconds)
Cbc0010I After 107 nodes, 15 on tree, 1e+50 best solution, best possible 6 (191.83 seconds)
Cbc0010I After 109 nodes, 15 on tree, 1e+50 best solution, best possible 6 (193.97 seconds)
Cbc0010I After 110 nodes, 15 on tree, 1e+50 best solution, best possible 6 (196.40 seconds)
Cbc0010I After 111 nodes, 16 on tree, 1e+50 best solution, best possible 6 (199.39 seconds)
Cbc0010I After 112 nodes, 16 on tree, 1e+50 best solution, best possible 6 (201.33 seconds)
Cbc0010I After 114 nodes, 17 on tree, 1e+50 best solution, best possible 6 (203.38 seconds)
Cbc0010I After 115 nodes, 18 on tree, 1e+50 best solution, best possible 6 (206.95 seconds)
Cbc0010I After 116 nodes, 18 on tree, 1e+50 best solution, best possible 6 (208.39 seconds)
Cbc0010I After 119 nodes, 17 on tree, 1e+50 best solution, best possible 6 (209.53 seconds)
Cbc0010I After 120 nodes, 17 on tree, 1e+50 best solution, best possible 6 (210.81 seconds)
Cbc0010I After 124 nodes, 17 on tree, 1e+50 best solution, best possible 6 (211.87 seconds)
Cbc0010I After 129 nodes, 17 on tree, 1e+50 best solution, best possible 6 (217.72 seconds)
Cbc0010I After 131 nodes, 17 on tree, 1e+50 best solution, best possible 6 (221.94 seconds)
Cbc0010I After 132 nodes, 17 on tree, 1e+50 best solution, best possible 6 (225.57 seconds)
Cbc0010I After 133 nodes, 18 on tree, 1e+50 best solution, best possible 6 (229.68 seconds)
Cbc0010I After 134 nodes, 19 on tree, 1e+50 best solution, best possible 6 (232.89 seconds)
Cbc0010I After 135 nodes, 19 on tree, 1e+50 best solution, best possible 6 (236.50 seconds)
Cbc0010I After 136 nodes, 20 on tree, 1e+50 best solution, best possible 6 (237.59 seconds)
Cbc0010I After 140 nodes, 18 on tree, 1e+50 best solution, best possible 6 (238.29 seconds)
Cbc0010I After 141 nodes, 19 on tree, 1e+50 best solution, best possible 6 (241.31 seconds)
Cbc0010I After 142 nodes, 19 on tree, 1e+50 best solution, best possible 6 (242.36 seconds)
Cbc0010I After 143 nodes, 20 on tree, 1e+50 best solution, best possible 6 (243.35 seconds)
Cbc0010I After 145 nodes, 20 on tree, 1e+50 best solution, best possible 6 (246.74 seconds)
Cbc0010I After 146 nodes, 21 on tree, 1e+50 best solution, best possible 6 (250.06 seconds)
Cbc0010I After 148 nodes, 20 on tree, 1e+50 best solution, best possible 6 (251.81 seconds)
Cbc0010I After 149 nodes, 21 on tree, 1e+50 best solution, best possible 6 (255.45 seconds)
Cbc0010I After 150 nodes, 21 on tree, 1e+50 best solution, best possible 6 (259.30 seconds)
Cbc0010I After 151 nodes, 22 on tree, 1e+50 best solution, best possible 6 (262.28 seconds)
Cbc0010I After 152 nodes, 22 on tree, 1e+50 best solution, best possible 6 (265.34 seconds)
Cbc0010I After 154 nodes, 22 on tree, 1e+50 best solution, best possible 6 (267.36 seconds)
Cbc0010I After 155 nodes, 23 on tree, 1e+50 best solution, best possible 6 (270.45 seconds)
Cbc0010I After 156 nodes, 24 on tree, 1e+50 best solution, best possible 6 (273.76 seconds)
Cbc0010I After 158 nodes, 23 on tree, 1e+50 best solution, best possible 6 (276.66 seconds)
Cbc0010I After 160 nodes, 22 on tree, 1e+50 best solution, best possible 6 (279.14 seconds)
Cbc0010I After 161 nodes, 23 on tree, 1e+50 best solution, best possible 6 (281.21 seconds)
Cbc0010I After 162 nodes, 24 on tree, 1e+50 best solution, best possible 6 (282.55 seconds)
Cbc0010I After 163 nodes, 24 on tree, 1e+50 best solution, best possible 6 (284.15 seconds)
Cbc0010I After 166 nodes, 23 on tree, 1e+50 best solution, best possible 6 (284.89 seconds)
Cbc0010I After 167 nodes, 24 on tree, 1e+50 best solution, best possible 6 (287.21 seconds)
Cbc0010I After 168 nodes, 25 on tree, 1e+50 best solution, best possible 6 (288.29 seconds)
Cbc0010I After 171 nodes, 26 on tree, 1e+50 best solution, best possible 6 (289.96 seconds)
Cbc0010I After 173 nodes, 26 on tree, 1e+50 best solution, best possible 6 (290.71 seconds)
Cbc0010I After 174 nodes, 26 on tree, 1e+50 best solution, best possible 6 (292.79 seconds)
Cbc0010I After 178 nodes, 25 on tree, 1e+50 best solution, best possible 6 (293.78 seconds)
Cbc0010I After 179 nodes, 26 on tree, 1e+50 best solution, best possible 6 (294.49 seconds)
Cbc0004I Integer solution of 6 found after 30714 iterations and 184 nodes (295.52 seconds)
Cbc0001I Search completed - best objective 6, took 30714 iterations and 184 nodes (295.53 seconds)
Cbc0032I Strong branching done 600 times (7347 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 29, 0 variables fixed on reduced cost
Cuts at root node changed objective from 3.97917 to 6
Probing was tried 155 times and created 844 cuts of which 12 were active after adding rounds of cuts (2.16152 seconds)
Gomory was tried 16 times and created 86 cuts of which 0 were active after adding rounds of cuts (0.772499 seconds)
Knapsack was tried 154 times and created 149 cuts of which 0 were active after adding rounds of cuts (1.4422 seconds)
liftKnapsack was tried 154 times and created 1991 cuts of which 0 were active after adding rounds of cuts (268.797 seconds)
Clique was tried 16 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.021188 seconds)
OddWheel was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.110245 seconds)
MixedIntegerRounding2 was tried 154 times and created 636 cuts of which 0 were active after adding rounds of cuts (0.972544 seconds)
FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008774 seconds)
TwoMirCuts was tried 154 times and created 426 cuts of which 0 were active after adding rounds of cuts (0.68635 seconds)
ZeroHalf was tried 154 times and created 956 cuts of which 0 were active after adding rounds of cuts (1.16241 seconds)

Result - Optimal solution found
Objective value:                6
Enumerated nodes:               184
Total iterations:               30714
Time (CPU seconds):             293.764
Time (Wallclock seconds):       295.598
Total time (CPU seconds):       293.815   (Wallclock seconds):       295.634
