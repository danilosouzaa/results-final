Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3010/j3010_3.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.02298 seconds
Cgl0002I 30 variables fixed
Cgl0003I 4 fixed, 0 tightened bounds, 13 strengthened rows, 1 substitutions
Cgl0003I 3 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 168 rows, 356 columns (356 integer (356 of which binary)) and 3812 elements
Coin3009W Conflict graph built in 0.014 seconds, density: 2.313%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 356 objects (356 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.82171
Cbc0038I Pass   1: suminf.    4.41453 (20) obj. 0 iterations 47
Cbc0038I Pass   2: suminf.    4.38821 (19) obj. 0 iterations 4
Cbc0038I Pass   3: suminf.    2.36319 (18) obj. 0 iterations 54
Cbc0038I Pass   4: suminf.    2.17074 (17) obj. 0 iterations 4
Cbc0038I Pass   5: suminf.    2.92491 (10) obj. 0 iterations 15
Cbc0038I Pass   6: suminf.    2.92491 (10) obj. 0 iterations 3
Cbc0038I Pass   7: suminf.    2.94603 (14) obj. 0 iterations 22
Cbc0038I Pass   8: suminf.    2.94603 (14) obj. 0 iterations 0
Cbc0038I Pass   9: suminf.    3.30952 (12) obj. 0 iterations 25
Cbc0038I Pass  10: suminf.    2.30952 (8) obj. 0 iterations 6
Cbc0038I Pass  11: suminf.    2.30952 (8) obj. 0 iterations 0
Cbc0038I Pass  12: suminf.    2.74603 (10) obj. 0 iterations 11
Cbc0038I Pass  13: suminf.    2.74603 (10) obj. 0 iterations 0
Cbc0038I Pass  14: suminf.    2.80952 (8) obj. 0 iterations 13
Cbc0038I Pass  15: suminf.    4.57143 (13) obj. 0 iterations 46
Cbc0038I Pass  16: suminf.    2.94444 (10) obj. 0 iterations 24
Cbc0038I Pass  17: suminf.    2.94444 (11) obj. 0 iterations 8
Cbc0038I Pass  18: suminf.    1.73810 (6) obj. 0 iterations 24
Cbc0038I Pass  19: suminf.    1.73810 (6) obj. 0 iterations 8
Cbc0038I Pass  20: suminf.    2.63492 (6) obj. 0 iterations 13
Cbc0038I Pass  21: suminf.    2.31746 (7) obj. 0 iterations 11
Cbc0038I Pass  22: suminf.    1.73810 (6) obj. 0 iterations 21
Cbc0038I Pass  23: suminf.    1.73810 (6) obj. 0 iterations 0
Cbc0038I Pass  24: suminf.    5.12847 (12) obj. 0 iterations 47
Cbc0038I Pass  25: suminf.    3.66905 (14) obj. 0 iterations 58
Cbc0038I Pass  26: suminf.    2.26105 (8) obj. 0 iterations 45
Cbc0038I Pass  27: suminf.    2.17143 (9) obj. 0 iterations 13
Cbc0038I Pass  28: suminf.    1.71429 (6) obj. 0 iterations 31
Cbc0038I Pass  29: suminf.    1.52381 (6) obj. 0 iterations 6
Cbc0038I Pass  30: suminf.    2.38776 (6) obj. 0 iterations 23
Cbc0038I Pass  31: suminf.    0.88889 (4) obj. 0 iterations 18
Cbc0038I Pass  32: suminf.    0.22222 (4) obj. 0 iterations 7
Cbc0038I Pass  33: suminf.    0.20000 (2) obj. 0 iterations 9
Cbc0038I Pass  34: suminf.    0.20000 (2) obj. 0 iterations 2
Cbc0038I Pass  35: suminf.    0.20000 (2) obj. 0 iterations 2
Cbc0038I Pass  36: suminf.    6.27445 (21) obj. 0 iterations 61
Cbc0038I Pass  37: suminf.    2.86905 (10) obj. 0 iterations 44
Cbc0038I Pass  38: suminf.    1.55714 (6) obj. 0 iterations 46
Cbc0038I Pass  39: suminf.    1.05714 (6) obj. 0 iterations 27
Cbc0038I Pass  40: suminf.    1.60714 (6) obj. 0 iterations 44
Cbc0038I Pass  41: suminf.    1.28571 (5) obj. 0 iterations 31
Cbc0038I Pass  42: suminf.    1.28571 (5) obj. 0 iterations 12
Cbc0038I Pass  43: suminf.    0.66667 (2) obj. 0 iterations 22
Cbc0038I Pass  44: suminf.    0.28571 (2) obj. 0 iterations 14
Cbc0038I Pass  45: suminf.    6.36134 (28) obj. 0 iterations 55
Cbc0038I Pass  46: suminf.    4.03077 (13) obj. 0 iterations 56
Cbc0038I Pass  47: suminf.    3.17692 (12) obj. 0 iterations 6
Cbc0038I Pass  48: suminf.    3.05385 (12) obj. 0 iterations 12
Cbc0038I Pass  49: suminf.    2.59595 (13) obj. 0 iterations 34
Cbc0038I Pass  50: suminf.    2.29286 (13) obj. 0 iterations 9
Cbc0038I Pass  51: suminf.    2.61333 (7) obj. 0 iterations 26
Cbc0038I Pass  52: suminf.    0.69643 (4) obj. 0 iterations 8
Cbc0038I Pass  53: suminf.    1.50000 (6) obj. 0 iterations 17
Cbc0038I Pass  54: suminf.    1.50000 (6) obj. 0 iterations 6
Cbc0038I Pass  55: suminf.    1.66667 (4) obj. 0 iterations 8
Cbc0038I Pass  56: suminf.    0.46154 (2) obj. 0 iterations 10
Cbc0038I Pass  57: suminf.    1.00000 (3) obj. 0 iterations 11
Cbc0038I Pass  58: suminf.    1.00000 (3) obj. 0 iterations 6
Cbc0038I Pass  59: suminf.    0.66667 (2) obj. 0 iterations 3
Cbc0038I Pass  60: suminf.    7.48486 (25) obj. 0 iterations 82
Cbc0038I Pass  61: suminf.    4.25510 (16) obj. 0 iterations 44
Cbc0038I Pass  62: suminf.    1.84286 (10) obj. 0 iterations 34
Cbc0038I Pass  63: suminf.    1.76607 (10) obj. 0 iterations 6
Cbc0038I Pass  64: suminf.    1.14286 (4) obj. 0 iterations 31
Cbc0038I Pass  65: suminf.    0.28571 (2) obj. 0 iterations 5
Cbc0038I Pass  66: suminf.    0.28571 (2) obj. 0 iterations 5
Cbc0038I Pass  67: suminf.    2.93267 (16) obj. 0 iterations 71
Cbc0038I Pass  68: suminf.    1.02738 (10) obj. 0 iterations 49
Cbc0038I Pass  69: suminf.    2.77433 (13) obj. 0 iterations 47
Cbc0038I Pass  70: suminf.    2.37143 (11) obj. 0 iterations 7
Cbc0038I Pass  71: suminf.    2.48046 (12) obj. 0 iterations 24
Cbc0038I Pass  72: suminf.    1.80134 (10) obj. 0 iterations 13
Cbc0038I Pass  73: suminf.    2.68190 (14) obj. 0 iterations 35
Cbc0038I Pass  74: suminf.    2.56726 (15) obj. 0 iterations 22
Cbc0038I Pass  75: suminf.    2.40696 (10) obj. 0 iterations 34
Cbc0038I Pass  76: suminf.    1.57912 (8) obj. 0 iterations 23
Cbc0038I Pass  77: suminf.    2.37143 (10) obj. 0 iterations 22
Cbc0038I Pass  78: suminf.    1.87143 (9) obj. 0 iterations 2
Cbc0038I Pass  79: suminf.    1.87143 (9) obj. 0 iterations 0
Cbc0038I Pass  80: suminf.    2.25824 (10) obj. 0 iterations 24
Cbc0038I Pass  81: suminf.    1.57912 (8) obj. 0 iterations 12
Cbc0038I Pass  82: suminf.    2.37143 (10) obj. 0 iterations 20
Cbc0038I Pass  83: suminf.    1.87143 (9) obj. 0 iterations 2
Cbc0038I Pass  84: suminf.    1.87143 (9) obj. 0 iterations 0
Cbc0038I Pass  85: suminf.    2.25824 (10) obj. 0 iterations 25
Cbc0038I Pass  86: suminf.    1.57912 (8) obj. 0 iterations 13
Cbc0038I Pass  87: suminf.    2.37143 (10) obj. 0 iterations 20
Cbc0038I Pass  88: suminf.    1.87143 (9) obj. 0 iterations 2
Cbc0038I Pass  89: suminf.    1.87143 (9) obj. 0 iterations 0
Cbc0038I Pass  90: suminf.    2.25824 (10) obj. 0 iterations 22
Cbc0038I Pass  91: suminf.    1.57912 (8) obj. 0 iterations 11
Cbc0038I Pass  92: suminf.    2.37143 (10) obj. 0 iterations 20
Cbc0038I Pass  93: suminf.    1.87143 (9) obj. 0 iterations 2
Cbc0038I Pass  94: suminf.    1.87143 (9) obj. 0 iterations 0
Cbc0038I Pass  95: suminf.    2.25824 (10) obj. 0 iterations 22
Cbc0038I Pass  96: suminf.    1.57912 (8) obj. 0 iterations 11
Cbc0038I Pass  97: suminf.    2.37143 (10) obj. 0 iterations 20
Cbc0038I Pass  98: suminf.    1.87143 (9) obj. 0 iterations 2
Cbc0038I Pass  99: suminf.    1.87143 (9) obj. 0 iterations 0
Cbc0038I Pass 100: suminf.   10.17698 (27) obj. 0 iterations 78
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous
Cbc0038I Full problem 168 rows 356 columns, reduced to 148 rows 169 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.41 seconds)
Cbc0038I Full problem 169 rows 356 columns, reduced to 169 rows 356 columns - too large
Cbc0038I After 1.44 seconds - Feasibility pump exiting - took 0.63 seconds
Cbc0012I Integer solution of 0 found by DiveCoefficient after 4805 iterations and 0 nodes (22.71 seconds)
Cbc0031I 51 added rows had average density of 59.27451
Cbc0013I At root node, 51 cuts changed objective from 0 to 0 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 471 row cuts average 13.0 elements, 0 column cuts (0 active)  in 3.138 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1981 row cuts average 347.7 elements, 0 column cuts (0 active)  in 2.242 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 23.1 elements, 0 column cuts (0 active)  in 0.615 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 645 row cuts average 10.7 elements, 0 column cuts (0 active)  in 10.248 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 41 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 191 row cuts average 47.1 elements, 0 column cuts (0 active)  in 0.415 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 255 row cuts average 156.6 elements, 0 column cuts (0 active)  in 0.284 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 153 row cuts average 50.2 elements, 0 column cuts (0 active)  in 0.309 seconds - new frequency is -100
Cbc0001I Search completed - best objective 0, took 4805 iterations and 0 nodes (22.72 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 100 times and created 471 cuts of which 0 were active after adding rounds of cuts (3.13788 seconds)
Gomory was tried 100 times and created 1981 cuts of which 0 were active after adding rounds of cuts (2.24154 seconds)
Knapsack was tried 100 times and created 42 cuts of which 0 were active after adding rounds of cuts (0.6151 seconds)
liftKnapsack was tried 100 times and created 645 cuts of which 0 were active after adding rounds of cuts (10.248 seconds)
Clique was tried 100 times and created 41 cuts of which 0 were active after adding rounds of cuts (0.038609 seconds)
OddWheel was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.160878 seconds)
MixedIntegerRounding2 was tried 100 times and created 191 cuts of which 0 were active after adding rounds of cuts (0.415412 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016916 seconds)
TwoMirCuts was tried 100 times and created 255 cuts of which 0 were active after adding rounds of cuts (0.283669 seconds)
ZeroHalf was tried 100 times and created 153 cuts of which 0 were active after adding rounds of cuts (0.309281 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               0
Total iterations:               4805
Time (CPU seconds):             22.2226
Time (Wallclock seconds):       22.8242
Total time (CPU seconds):       22.2294   (Wallclock seconds):       22.8329
