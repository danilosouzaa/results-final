Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3040/j3040_8.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 7.05455 - 0.084163 seconds
Cgl0003I 67 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 23 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 282 rows, 720 columns (720 integer (719 of which binary)) and 11908 elements
Coin3009W Conflict graph built in 0.031 seconds, density: 1.259%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 720 objects (720 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 68 integers unsatisfied sum - 19.4553
Cbc0038I Pass   1: suminf.   10.71777 (45) obj. 8 iterations 52
Cbc0038I Pass   2: suminf.    5.95222 (43) obj. 8 iterations 22
Cbc0038I Pass   3: suminf.    5.33461 (25) obj. 8 iterations 14
Cbc0038I Pass   4: suminf.    8.91216 (30) obj. 8 iterations 47
Cbc0038I Pass   5: suminf.    5.81280 (23) obj. 8 iterations 34
Cbc0038I Pass   6: suminf.    5.80420 (24) obj. 8 iterations 6
Cbc0038I Pass   7: suminf.    4.98601 (24) obj. 8 iterations 7
Cbc0038I Pass   8: suminf.    9.78543 (32) obj. 8 iterations 39
Cbc0038I Pass   9: suminf.    5.37687 (24) obj. 8 iterations 29
Cbc0038I Pass  10: suminf.    4.91471 (24) obj. 8 iterations 11
Cbc0038I Pass  11: suminf.    4.79916 (25) obj. 8 iterations 9
Cbc0038I Pass  12: suminf.    7.55921 (27) obj. 8 iterations 41
Cbc0038I Pass  13: suminf.    5.69791 (23) obj. 8 iterations 25
Cbc0038I Pass  14: suminf.    5.69791 (23) obj. 8 iterations 1
Cbc0038I Pass  15: suminf.    5.84957 (23) obj. 8 iterations 27
Cbc0038I Pass  16: suminf.    5.49322 (25) obj. 8 iterations 23
Cbc0038I Pass  17: suminf.    9.40428 (30) obj. 8 iterations 41
Cbc0038I Pass  18: suminf.    5.19791 (21) obj. 8 iterations 19
Cbc0038I Pass  19: suminf.    4.91220 (21) obj. 8 iterations 7
Cbc0038I Pass  20: suminf.    8.88299 (30) obj. 8 iterations 37
Cbc0038I Pass  21: suminf.    4.71577 (21) obj. 8 iterations 27
Cbc0038I Pass  22: suminf.    4.37113 (22) obj. 8 iterations 16
Cbc0038I Pass  23: suminf.    5.27064 (21) obj. 8 iterations 18
Cbc0038I Pass  24: suminf.    4.91220 (21) obj. 8 iterations 13
Cbc0038I Pass  25: suminf.    4.92113 (22) obj. 8 iterations 18
Cbc0038I Pass  26: suminf.    4.63779 (22) obj. 8 iterations 19
Cbc0038I Pass  27: suminf.    5.27064 (21) obj. 8 iterations 17
Cbc0038I Pass  28: suminf.   12.42224 (50) obj. 8 iterations 88
Cbc0038I Pass  29: suminf.    6.75795 (37) obj. 8 iterations 64
Cbc0038I Pass  30: suminf.    6.75795 (37) obj. 8 iterations 0
Cbc0038I Pass  31: suminf.    8.30352 (38) obj. 8 iterations 33
Cbc0038I Pass  32: suminf.    6.80590 (38) obj. 8 iterations 12
Cbc0038I Pass  33: suminf.    6.05590 (38) obj. 8 iterations 6
Cbc0038I Pass  34: suminf.    9.33593 (41) obj. 8 iterations 32
Cbc0038I Pass  35: suminf.    6.67246 (36) obj. 8 iterations 21
Cbc0038I Pass  36: suminf.   10.38765 (41) obj. 8 iterations 28
Cbc0038I Pass  37: suminf.    6.79746 (36) obj. 8 iterations 29
Cbc0038I Pass  38: suminf.    6.79746 (36) obj. 8 iterations 3
Cbc0038I Pass  39: suminf.    9.63471 (41) obj. 8 iterations 26
Cbc0038I Pass  40: suminf.    6.67246 (36) obj. 8 iterations 26
Cbc0038I Pass  41: suminf.    8.25295 (37) obj. 8 iterations 21
Cbc0038I Pass  42: suminf.   14.51854 (53) obj. 8 iterations 79
Cbc0038I Pass  43: suminf.   10.08655 (45) obj. 8 iterations 52
Cbc0038I Pass  44: suminf.    9.23007 (42) obj. 8 iterations 8
Cbc0038I Pass  45: suminf.    7.47344 (43) obj. 8 iterations 16
Cbc0038I Pass  46: suminf.    7.36352 (42) obj. 8 iterations 3
Cbc0038I Pass  47: suminf.    9.95964 (34) obj. 8 iterations 20
Cbc0038I Pass  48: suminf.    8.60964 (36) obj. 8 iterations 14
Cbc0038I Pass  49: suminf.    8.13664 (35) obj. 8 iterations 6
Cbc0038I Pass  50: suminf.    8.13664 (35) obj. 8 iterations 0
Cbc0038I Pass  51: suminf.   10.53345 (33) obj. 8 iterations 23
Cbc0038I Pass  52: suminf.    6.78785 (28) obj. 8 iterations 26
Cbc0038I Pass  53: suminf.    6.78785 (28) obj. 8 iterations 7
Cbc0038I Pass  54: suminf.    8.01168 (28) obj. 8 iterations 35
Cbc0038I Pass  55: suminf.    7.36294 (26) obj. 8 iterations 26
Cbc0038I Pass  56: suminf.    9.39442 (28) obj. 8 iterations 29
Cbc0038I Pass  57: suminf.    8.38217 (26) obj. 8 iterations 27
Cbc0038I Pass  58: suminf.    6.98794 (26) obj. 8 iterations 1
Cbc0038I Pass  59: suminf.    7.88727 (28) obj. 8 iterations 21
Cbc0038I Pass  60: suminf.    7.36294 (26) obj. 8 iterations 27
Cbc0038I Pass  61: suminf.    6.27899 (26) obj. 8 iterations 23
Cbc0038I Pass  62: suminf.    6.18794 (24) obj. 8 iterations 13
Cbc0038I Pass  63: suminf.    6.71227 (26) obj. 8 iterations 22
Cbc0038I Pass  64: suminf.    6.18794 (24) obj. 8 iterations 17
Cbc0038I Pass  65: suminf.    8.59442 (26) obj. 8 iterations 24
Cbc0038I Pass  66: suminf.    7.58217 (24) obj. 8 iterations 25
Cbc0038I Pass  67: suminf.    6.18794 (24) obj. 8 iterations 1
Cbc0038I Pass  68: suminf.    8.96942 (26) obj. 8 iterations 26
Cbc0038I Pass  69: suminf.    7.95717 (24) obj. 8 iterations 26
Cbc0038I Pass  70: suminf.    6.56294 (24) obj. 8 iterations 1
Cbc0038I Pass  71: suminf.    7.21227 (26) obj. 8 iterations 22
Cbc0038I Pass  72: suminf.    6.18794 (24) obj. 8 iterations 28
Cbc0038I Pass  73: suminf.    8.96942 (26) obj. 8 iterations 28
Cbc0038I Pass  74: suminf.    7.95717 (24) obj. 8 iterations 23
Cbc0038I Pass  75: suminf.    6.56294 (24) obj. 8 iterations 1
Cbc0038I Pass  76: suminf.    8.59442 (26) obj. 8 iterations 24
Cbc0038I Pass  77: suminf.    7.58217 (24) obj. 8 iterations 24
Cbc0038I Pass  78: suminf.    6.18794 (24) obj. 8 iterations 1
Cbc0038I Pass  79: suminf.    7.58727 (26) obj. 8 iterations 24
Cbc0038I Pass  80: suminf.    6.56294 (24) obj. 8 iterations 29
Cbc0038I Pass  81: suminf.    7.21227 (26) obj. 8 iterations 25
Cbc0038I Pass  82: suminf.   16.06945 (58) obj. 8 iterations 88
Cbc0038I Pass  83: suminf.    9.33233 (40) obj. 8 iterations 60
Cbc0038I Pass  84: suminf.    9.33233 (40) obj. 8 iterations 1
Cbc0038I Pass  85: suminf.    7.46566 (41) obj. 8 iterations 15
Cbc0038I Pass  86: suminf.    7.46566 (41) obj. 8 iterations 2
Cbc0038I Pass  87: suminf.    7.83885 (39) obj. 8 iterations 11
Cbc0038I Pass  88: suminf.    7.83885 (39) obj. 8 iterations 11
Cbc0038I Pass  89: suminf.    7.83885 (39) obj. 8 iterations 8
Cbc0038I Pass  90: suminf.    7.83885 (39) obj. 8 iterations 8
Cbc0038I Pass  91: suminf.   10.81099 (40) obj. 8 iterations 72
Cbc0038I Pass  92: suminf.    8.30733 (35) obj. 8 iterations 61
Cbc0038I Pass  93: suminf.    8.30733 (35) obj. 8 iterations 1
Cbc0038I Pass  94: suminf.    5.98425 (32) obj. 8 iterations 18
Cbc0038I Pass  95: suminf.    5.98425 (32) obj. 8 iterations 8
Cbc0038I Pass  96: suminf.    7.49334 (32) obj. 8 iterations 14
Cbc0038I Pass  97: suminf.    6.99334 (32) obj. 8 iterations 11
Cbc0038I Pass  98: suminf.    6.99334 (32) obj. 8 iterations 9
Cbc0038I Pass  99: suminf.   11.06071 (59) obj. 8 iterations 74
Cbc0038I Pass 100: suminf.    8.32569 (35) obj. 8 iterations 95
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 477 integers at bound fixed and 0 continuous
Cbc0038I Full problem 282 rows 720 columns, reduced to 228 rows 226 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.96 seconds)
Cbc0038I After 1.96 seconds - Feasibility pump exiting - took 0.54 seconds
Cbc0012I Integer solution of 8 found by DiveCoefficient after 1145 iterations and 0 nodes (21.78 seconds)
Cbc0031I 74 added rows had average density of 23.081081
Cbc0013I At root node, 74 cuts changed objective from 7.0545455 to 8 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 286 row cuts average 6.4 elements, 44 column cuts (44 active)  in 0.459 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 251.3 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 79 row cuts average 16.5 elements, 0 column cuts (0 active)  in 18.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 67 row cuts average 41.3 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 201 row cuts average 215.0 elements, 0 column cuts (0 active)  in 0.256 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 71 row cuts average 44.1 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0001I Search completed - best objective 8, took 1145 iterations and 0 nodes (21.79 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.05455 to 8
Probing was tried 10 times and created 330 cuts of which 0 were active after adding rounds of cuts (0.45875 seconds)
Gomory was tried 10 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.186162 seconds)
Knapsack was tried 10 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.107391 seconds)
liftKnapsack was tried 10 times and created 79 cuts of which 0 were active after adding rounds of cuts (18.0312 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007744 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035284 seconds)
MixedIntegerRounding2 was tried 10 times and created 67 cuts of which 0 were active after adding rounds of cuts (0.050981 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003236 seconds)
TwoMirCuts was tried 10 times and created 201 cuts of which 0 were active after adding rounds of cuts (0.255995 seconds)
ZeroHalf was tried 10 times and created 71 cuts of which 0 were active after adding rounds of cuts (0.065634 seconds)

Result - Optimal solution found
Objective value:                8
Enumerated nodes:               0
Total iterations:               1145
Time (CPU seconds):             21.8194
Time (Wallclock seconds):       21.8343
Total time (CPU seconds):       21.863   (Wallclock seconds):       21.86
