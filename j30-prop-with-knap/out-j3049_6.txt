Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3049/j3049_6.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.517691 - 0.200654 seconds
Cgl0002I 5 variables fixed
Cgl0003I 1 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 314 rows, 682 columns (682 integer (681 of which binary)) and 7771 elements
Coin3009W Conflict graph built in 0.037 seconds, density: 1.485%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 682 objects (682 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 124 integers unsatisfied sum - 26.2859
Cbc0038I Pass   1: suminf.   13.07210 (76) obj. 1.38766 iterations 238
Cbc0038I Pass   2: suminf.   12.69133 (77) obj. 1.53069 iterations 37
Cbc0038I Pass   3: suminf.   11.85003 (67) obj. 1.90459 iterations 42
Cbc0038I Pass   4: suminf.    7.89959 (42) obj. 5 iterations 127
Cbc0038I Pass   5: suminf.    6.04157 (39) obj. 5 iterations 51
Cbc0038I Pass   6: suminf.    7.88130 (35) obj. 5 iterations 131
Cbc0038I Pass   7: suminf.    6.19090 (38) obj. 5 iterations 78
Cbc0038I Pass   8: suminf.    5.40781 (40) obj. 5 iterations 20
Cbc0038I Pass   9: suminf.    7.22990 (37) obj. 5 iterations 101
Cbc0038I Pass  10: suminf.    6.08559 (35) obj. 5 iterations 124
Cbc0038I Pass  11: suminf.    5.69935 (36) obj. 5 iterations 42
Cbc0038I Pass  12: suminf.    5.55519 (37) obj. 5 iterations 38
Cbc0038I Pass  13: suminf.    5.73239 (39) obj. 5 iterations 81
Cbc0038I Pass  14: suminf.    5.26238 (36) obj. 5 iterations 74
Cbc0038I Pass  15: suminf.    9.53932 (42) obj. 5 iterations 124
Cbc0038I Pass  16: suminf.    6.50608 (37) obj. 5 iterations 78
Cbc0038I Pass  17: suminf.    5.12629 (28) obj. 5 iterations 108
Cbc0038I Pass  18: suminf.    4.33163 (25) obj. 5 iterations 44
Cbc0038I Pass  19: suminf.    6.33987 (26) obj. 5 iterations 103
Cbc0038I Pass  20: suminf.    4.55306 (26) obj. 5 iterations 97
Cbc0038I Pass  21: suminf.    4.51814 (26) obj. 5 iterations 51
Cbc0038I Pass  22: suminf.    6.32671 (32) obj. 5 iterations 113
Cbc0038I Pass  23: suminf.    4.85465 (29) obj. 5 iterations 89
Cbc0038I Pass  24: suminf.    4.62052 (27) obj. 5 iterations 42
Cbc0038I Pass  25: suminf.    6.08429 (27) obj. 5 iterations 117
Cbc0038I Pass  26: suminf.    4.68798 (28) obj. 5 iterations 130
Cbc0038I Pass  27: suminf.   20.44118 (79) obj. 5 iterations 217
Cbc0038I Pass  28: suminf.    7.95702 (33) obj. 5 iterations 184
Cbc0038I Pass  29: suminf.    6.23333 (25) obj. 5 iterations 75
Cbc0038I Pass  30: suminf.    6.22154 (29) obj. 5 iterations 24
Cbc0038I Pass  31: suminf.    6.62271 (29) obj. 5 iterations 44
Cbc0038I Pass  32: suminf.    6.22381 (24) obj. 5 iterations 40
Cbc0038I Pass  33: suminf.    7.57619 (24) obj. 5 iterations 72
Cbc0038I Pass  34: suminf.   13.91109 (59) obj. 5 iterations 176
Cbc0038I Pass  35: suminf.    7.19762 (30) obj. 5 iterations 138
Cbc0038I Pass  36: suminf.    6.55952 (31) obj. 5 iterations 6
Cbc0038I Pass  37: suminf.    6.24345 (38) obj. 5 iterations 34
Cbc0038I Pass  38: suminf.   10.66794 (47) obj. 5 iterations 164
Cbc0038I Pass  39: suminf.    8.64614 (42) obj. 5 iterations 82
Cbc0038I Pass  40: suminf.    7.30478 (42) obj. 5 iterations 69
Cbc0038I Pass  41: suminf.    6.95503 (35) obj. 5 iterations 62
Cbc0038I Pass  42: suminf.    6.27396 (43) obj. 5 iterations 28
Cbc0038I Pass  43: suminf.    4.96278 (28) obj. 5 iterations 18
Cbc0038I Pass  44: suminf.    4.36000 (31) obj. 5 iterations 66
Cbc0038I Pass  45: suminf.    7.25030 (29) obj. 5 iterations 134
Cbc0038I Pass  46: suminf.    5.51347 (27) obj. 5 iterations 71
Cbc0038I Pass  47: suminf.    5.33965 (26) obj. 5 iterations 31
Cbc0038I Pass  48: suminf.    6.21389 (19) obj. 5 iterations 122
Cbc0038I Pass  49: suminf.    4.20833 (18) obj. 5 iterations 75
Cbc0038I Pass  50: suminf.    4.08333 (19) obj. 5 iterations 39
Cbc0038I Pass  51: suminf.    6.11333 (22) obj. 5 iterations 122
Cbc0038I Pass  52: suminf.    4.20238 (19) obj. 5 iterations 75
Cbc0038I Pass  53: suminf.    5.94762 (20) obj. 5 iterations 90
Cbc0038I Pass  54: suminf.    5.14444 (19) obj. 5 iterations 68
Cbc0038I Pass  55: suminf.    4.39444 (15) obj. 5 iterations 12
Cbc0038I Pass  56: suminf.    4.19444 (16) obj. 5 iterations 84
Cbc0038I Pass  57: suminf.    3.01984 (13) obj. 5 iterations 90
Cbc0038I Pass  58: suminf.    3.69167 (14) obj. 5 iterations 88
Cbc0038I Pass  59: suminf.    3.29861 (15) obj. 5 iterations 49
Cbc0038I Pass  60: suminf.    3.52778 (12) obj. 5 iterations 174
Cbc0038I Pass  61: suminf.    3.22222 (13) obj. 5 iterations 54
Cbc0038I Pass  62: suminf.    3.18889 (12) obj. 5 iterations 29
Cbc0038I Pass  63: suminf.    4.00057 (18) obj. 5 iterations 98
Cbc0038I Pass  64: suminf.    3.59983 (20) obj. 5 iterations 47
Cbc0038I Pass  65: suminf.    4.03519 (22) obj. 5 iterations 70
Cbc0038I Pass  66: suminf.    3.02778 (15) obj. 5 iterations 49
Cbc0038I Pass  67: suminf.    3.02778 (15) obj. 5 iterations 51
Cbc0038I Pass  68: suminf.    3.48730 (14) obj. 5 iterations 117
Cbc0038I Pass  69: suminf.    2.99048 (15) obj. 5 iterations 42
Cbc0038I Pass  70: suminf.    3.54234 (26) obj. 5 iterations 86
Cbc0038I Pass  71: suminf.    3.26587 (15) obj. 5 iterations 29
Cbc0038I Pass  72: suminf.    3.26587 (15) obj. 5 iterations 39
Cbc0038I Pass  73: suminf.    3.48730 (14) obj. 5 iterations 98
Cbc0038I Pass  74: suminf.    2.99048 (15) obj. 5 iterations 42
Cbc0038I Pass  75: suminf.    3.54234 (26) obj. 5 iterations 114
Cbc0038I Pass  76: suminf.    3.26587 (15) obj. 5 iterations 32
Cbc0038I Pass  77: suminf.    3.26587 (15) obj. 5 iterations 34
Cbc0038I Pass  78: suminf.    3.48730 (14) obj. 5 iterations 87
Cbc0038I Pass  79: suminf.    2.99048 (15) obj. 5 iterations 40
Cbc0038I Pass  80: suminf.    3.54234 (26) obj. 5 iterations 83
Cbc0038I Pass  81: suminf.    3.26587 (15) obj. 5 iterations 39
Cbc0038I Pass  82: suminf.    3.26587 (15) obj. 5 iterations 26
Cbc0038I Pass  83: suminf.    3.48730 (14) obj. 5 iterations 83
Cbc0038I Pass  84: suminf.    2.99048 (15) obj. 5 iterations 34
Cbc0038I Pass  85: suminf.    2.93254 (14) obj. 5 iterations 70
Cbc0038I Pass  86: suminf.    2.01032 (15) obj. 5 iterations 45
Cbc0038I Pass  87: suminf.    4.35175 (23) obj. 5 iterations 113
Cbc0038I Pass  88: suminf.    4.35175 (23) obj. 5 iterations 44
Cbc0038I Pass  89: suminf.    6.17446 (26) obj. 5 iterations 167
Cbc0038I Pass  90: suminf.    2.44365 (12) obj. 5 iterations 102
Cbc0038I Pass  91: suminf.    2.44365 (12) obj. 5 iterations 4
Cbc0038I Pass  92: suminf.    3.65000 (16) obj. 5 iterations 96
Cbc0038I Pass  93: suminf.    3.65000 (15) obj. 5 iterations 64
Cbc0038I Pass  94: suminf.    3.13889 (19) obj. 5 iterations 129
Cbc0038I Pass  95: suminf.    3.13889 (19) obj. 5 iterations 20
Cbc0038I Pass  96: suminf.    4.85952 (16) obj. 5 iterations 139
Cbc0038I Pass  97: suminf.    4.00000 (15) obj. 5 iterations 42
Cbc0038I Pass  98: suminf.    3.93333 (14) obj. 5 iterations 8
Cbc0038I Pass  99: suminf.    5.59761 (21) obj. 5 iterations 120
Cbc0038I Pass 100: suminf.   13.30645 (69) obj. 4.70679 iterations 230
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 368 integers at bound fixed and 0 continuous
Cbc0038I Full problem 314 rows 682 columns, reduced to 238 rows 285 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.57 seconds)
Cbc0038I After 3.57 seconds - Feasibility pump exiting - took 1.64 seconds
Cbc0031I 64 added rows had average density of 62.890625
Cbc0013I At root node, 64 cuts changed objective from 0.561355 to 2.999932 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 253 row cuts average 7.5 elements, 2 column cuts (2 active)  in 1.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 306 row cuts average 666.1 elements, 0 column cuts (0 active)  in 1.940 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 64 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.278 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 896 row cuts average 11.2 elements, 0 column cuts (0 active)  in 75.657 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 81 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.405 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 217 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 170 row cuts average 43.5 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 225 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.450 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2.999932 (88.59 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2.999932 (94.55 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2.999932 (102.07 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2.999932 (108.19 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 2.999932 (115.16 seconds)
Cbc0010I After 5 nodes, 5 on tree, 1e+50 best solution, best possible 2.999932 (121.65 seconds)
Cbc0010I After 9 nodes, 1 on tree, 1e+50 best solution, best possible 2.999932 (124.64 seconds)
Cbc0010I After 10 nodes, 1 on tree, 1e+50 best solution, best possible 4 (129.25 seconds)
Cbc0010I After 11 nodes, 2 on tree, 1e+50 best solution, best possible 4 (132.41 seconds)
Cbc0010I After 12 nodes, 3 on tree, 1e+50 best solution, best possible 4 (137.61 seconds)
Cbc0010I After 13 nodes, 4 on tree, 1e+50 best solution, best possible 4 (145.22 seconds)
Cbc0010I After 14 nodes, 5 on tree, 1e+50 best solution, best possible 4 (153.17 seconds)
Cbc0010I After 15 nodes, 6 on tree, 1e+50 best solution, best possible 4 (159.40 seconds)
Cbc0010I After 16 nodes, 7 on tree, 1e+50 best solution, best possible 4 (163.91 seconds)
Cbc0010I After 17 nodes, 6 on tree, 1e+50 best solution, best possible 4 (165.09 seconds)
Cbc0010I After 18 nodes, 7 on tree, 1e+50 best solution, best possible 4 (170.15 seconds)
Cbc0010I After 19 nodes, 7 on tree, 1e+50 best solution, best possible 4 (172.89 seconds)
Cbc0010I After 20 nodes, 8 on tree, 1e+50 best solution, best possible 4 (174.42 seconds)
Cbc0010I After 21 nodes, 8 on tree, 1e+50 best solution, best possible 4 (176.51 seconds)
Cbc0010I After 22 nodes, 9 on tree, 1e+50 best solution, best possible 4 (178.61 seconds)
Cbc0010I After 24 nodes, 8 on tree, 1e+50 best solution, best possible 4 (180.08 seconds)
Cbc0010I After 26 nodes, 8 on tree, 1e+50 best solution, best possible 4 (183.82 seconds)
Cbc0010I After 28 nodes, 8 on tree, 1e+50 best solution, best possible 4 (185.60 seconds)
Cbc0010I After 29 nodes, 8 on tree, 1e+50 best solution, best possible 4 (187.07 seconds)
Cbc0010I After 31 nodes, 7 on tree, 1e+50 best solution, best possible 4 (190.77 seconds)
Cbc0010I After 32 nodes, 8 on tree, 1e+50 best solution, best possible 4 (192.84 seconds)
Cbc0010I After 36 nodes, 7 on tree, 1e+50 best solution, best possible 4 (197.38 seconds)
Cbc0010I After 37 nodes, 8 on tree, 1e+50 best solution, best possible 4 (203.38 seconds)
Cbc0010I After 38 nodes, 7 on tree, 1e+50 best solution, best possible 4 (205.76 seconds)
Cbc0010I After 39 nodes, 7 on tree, 1e+50 best solution, best possible 4 (208.81 seconds)
Cbc0010I After 40 nodes, 8 on tree, 1e+50 best solution, best possible 4 (211.97 seconds)
Cbc0010I After 42 nodes, 8 on tree, 1e+50 best solution, best possible 4 (214.37 seconds)
Cbc0010I After 43 nodes, 9 on tree, 1e+50 best solution, best possible 4 (217.86 seconds)
Cbc0010I After 47 nodes, 7 on tree, 1e+50 best solution, best possible 4 (221.43 seconds)
Cbc0010I After 48 nodes, 7 on tree, 1e+50 best solution, best possible 4 (225.28 seconds)
Cbc0010I After 50 nodes, 7 on tree, 1e+50 best solution, best possible 4 (233.36 seconds)
Cbc0010I After 51 nodes, 8 on tree, 1e+50 best solution, best possible 4 (237.28 seconds)
Cbc0010I After 52 nodes, 9 on tree, 1e+50 best solution, best possible 4 (239.70 seconds)
Cbc0010I After 53 nodes, 10 on tree, 1e+50 best solution, best possible 4 (243.56 seconds)
Cbc0010I After 54 nodes, 11 on tree, 1e+50 best solution, best possible 4 (245.89 seconds)
Cbc0010I After 55 nodes, 11 on tree, 1e+50 best solution, best possible 4 (247.75 seconds)
Cbc0010I After 57 nodes, 10 on tree, 1e+50 best solution, best possible 4 (250.66 seconds)
Cbc0010I After 58 nodes, 10 on tree, 1e+50 best solution, best possible 4 (252.91 seconds)
Cbc0010I After 61 nodes, 8 on tree, 1e+50 best solution, best possible 4 (256.14 seconds)
Cbc0010I After 63 nodes, 8 on tree, 1e+50 best solution, best possible 4 (259.79 seconds)
Cbc0010I After 64 nodes, 9 on tree, 1e+50 best solution, best possible 4 (264.89 seconds)
Cbc0010I After 66 nodes, 9 on tree, 1e+50 best solution, best possible 4 (269.90 seconds)
Cbc0010I After 68 nodes, 8 on tree, 1e+50 best solution, best possible 4 (275.37 seconds)
Cbc0010I After 70 nodes, 7 on tree, 1e+50 best solution, best possible 4 (279.22 seconds)
Cbc0010I After 71 nodes, 8 on tree, 1e+50 best solution, best possible 4 (280.91 seconds)
Cbc0010I After 73 nodes, 8 on tree, 1e+50 best solution, best possible 4 (283.78 seconds)
Cbc0010I After 74 nodes, 9 on tree, 1e+50 best solution, best possible 4 (286.52 seconds)
Cbc0010I After 76 nodes, 8 on tree, 1e+50 best solution, best possible 4 (290.38 seconds)
Cbc0010I After 77 nodes, 7 on tree, 1e+50 best solution, best possible 4 (292.93 seconds)
Cbc0010I After 78 nodes, 7 on tree, 1e+50 best solution, best possible 4 (297.20 seconds)
Cbc0010I After 80 nodes, 7 on tree, 1e+50 best solution, best possible 4 (301.51 seconds)
Cbc0010I After 82 nodes, 7 on tree, 1e+50 best solution, best possible 4 (305.80 seconds)
Cbc0010I After 83 nodes, 8 on tree, 1e+50 best solution, best possible 4 (309.35 seconds)
Cbc0010I After 84 nodes, 8 on tree, 1e+50 best solution, best possible 4 (311.99 seconds)
Cbc0010I After 86 nodes, 8 on tree, 1e+50 best solution, best possible 4 (313.82 seconds)
Cbc0010I After 87 nodes, 9 on tree, 1e+50 best solution, best possible 4 (316.70 seconds)
Cbc0010I After 89 nodes, 9 on tree, 1e+50 best solution, best possible 4 (318.89 seconds)
Cbc0010I After 91 nodes, 9 on tree, 1e+50 best solution, best possible 4 (321.95 seconds)
Cbc0010I After 92 nodes, 9 on tree, 1e+50 best solution, best possible 4 (324.72 seconds)
Cbc0010I After 95 nodes, 8 on tree, 1e+50 best solution, best possible 4 (325.94 seconds)
Cbc0010I After 96 nodes, 9 on tree, 1e+50 best solution, best possible 4 (327.93 seconds)
Cbc0010I After 98 nodes, 8 on tree, 1e+50 best solution, best possible 4 (331.41 seconds)
Cbc0010I After 99 nodes, 8 on tree, 1e+50 best solution, best possible 4 (332.28 seconds)
Cbc0010I After 101 nodes, 7 on tree, 1e+50 best solution, best possible 4 (333.33 seconds)
Cbc0010I After 102 nodes, 7 on tree, 1e+50 best solution, best possible 4 (336.59 seconds)
Cbc0010I After 103 nodes, 8 on tree, 1e+50 best solution, best possible 4 (339.37 seconds)
Cbc0010I After 104 nodes, 9 on tree, 1e+50 best solution, best possible 4 (341.72 seconds)
Cbc0010I After 106 nodes, 7 on tree, 1e+50 best solution, best possible 4 (343.27 seconds)
Cbc0010I After 107 nodes, 7 on tree, 1e+50 best solution, best possible 4 (345.46 seconds)
Cbc0010I After 109 nodes, 6 on tree, 1e+50 best solution, best possible 4 (348.70 seconds)
Cbc0010I After 110 nodes, 7 on tree, 1e+50 best solution, best possible 4 (353.43 seconds)
Cbc0010I After 112 nodes, 7 on tree, 1e+50 best solution, best possible 4 (357.29 seconds)
Cbc0010I After 113 nodes, 8 on tree, 1e+50 best solution, best possible 4 (360.44 seconds)
Cbc0010I After 115 nodes, 8 on tree, 1e+50 best solution, best possible 4 (365.82 seconds)
Cbc0010I After 118 nodes, 7 on tree, 1e+50 best solution, best possible 4 (372.58 seconds)
Cbc0010I After 121 nodes, 6 on tree, 1e+50 best solution, best possible 4 (379.39 seconds)
Cbc0010I After 122 nodes, 7 on tree, 1e+50 best solution, best possible 4 (384.73 seconds)
Cbc0010I After 123 nodes, 8 on tree, 1e+50 best solution, best possible 4 (389.73 seconds)
Cbc0010I After 128 nodes, 5 on tree, 1e+50 best solution, best possible 4 (391.70 seconds)
Cbc0010I After 129 nodes, 5 on tree, 1e+50 best solution, best possible 4 (392.87 seconds)
Cbc0010I After 131 nodes, 3 on tree, 1e+50 best solution, best possible 4 (396.14 seconds)
Cbc0010I After 134 nodes, 1 on tree, 1e+50 best solution, best possible 5 (398.28 seconds)
Cbc0010I After 135 nodes, 2 on tree, 1e+50 best solution, best possible 5 (400.56 seconds)
Cbc0010I After 136 nodes, 3 on tree, 1e+50 best solution, best possible 5 (402.62 seconds)
Cbc0010I After 137 nodes, 4 on tree, 1e+50 best solution, best possible 5 (405.74 seconds)
Cbc0010I After 138 nodes, 5 on tree, 1e+50 best solution, best possible 5 (407.98 seconds)
Cbc0010I After 139 nodes, 6 on tree, 1e+50 best solution, best possible 5 (409.11 seconds)
Cbc0010I After 140 nodes, 7 on tree, 1e+50 best solution, best possible 5 (410.11 seconds)
Cbc0010I After 142 nodes, 7 on tree, 1e+50 best solution, best possible 5 (413.01 seconds)
Cbc0010I After 144 nodes, 7 on tree, 1e+50 best solution, best possible 5 (414.29 seconds)
Cbc0010I After 145 nodes, 7 on tree, 1e+50 best solution, best possible 5 (415.04 seconds)
Cbc0010I After 146 nodes, 8 on tree, 1e+50 best solution, best possible 5 (416.95 seconds)
Cbc0010I After 148 nodes, 8 on tree, 1e+50 best solution, best possible 5 (419.41 seconds)
Cbc0010I After 149 nodes, 7 on tree, 1e+50 best solution, best possible 5 (420.25 seconds)
Cbc0010I After 150 nodes, 8 on tree, 1e+50 best solution, best possible 5 (422.94 seconds)
Cbc0010I After 153 nodes, 8 on tree, 1e+50 best solution, best possible 5 (424.31 seconds)
Cbc0010I After 155 nodes, 8 on tree, 1e+50 best solution, best possible 5 (425.88 seconds)
Cbc0010I After 157 nodes, 9 on tree, 1e+50 best solution, best possible 5 (427.21 seconds)
Cbc0010I After 159 nodes, 9 on tree, 1e+50 best solution, best possible 5 (427.92 seconds)
Cbc0010I After 161 nodes, 10 on tree, 1e+50 best solution, best possible 5 (430.12 seconds)
Cbc0010I After 163 nodes, 10 on tree, 1e+50 best solution, best possible 5 (431.71 seconds)
Cbc0010I After 164 nodes, 11 on tree, 1e+50 best solution, best possible 5 (433.56 seconds)
Cbc0010I After 166 nodes, 11 on tree, 1e+50 best solution, best possible 5 (434.70 seconds)
Cbc0010I After 170 nodes, 10 on tree, 1e+50 best solution, best possible 5 (435.77 seconds)
Cbc0010I After 172 nodes, 11 on tree, 1e+50 best solution, best possible 5 (436.67 seconds)
Cbc0010I After 175 nodes, 11 on tree, 1e+50 best solution, best possible 5 (438.31 seconds)
Cbc0010I After 178 nodes, 12 on tree, 1e+50 best solution, best possible 5 (439.27 seconds)
Cbc0010I After 180 nodes, 13 on tree, 1e+50 best solution, best possible 5 (439.97 seconds)
Cbc0010I After 184 nodes, 13 on tree, 1e+50 best solution, best possible 5 (441.14 seconds)
Cbc0010I After 191 nodes, 13 on tree, 1e+50 best solution, best possible 5 (442.34 seconds)
Cbc0010I After 193 nodes, 14 on tree, 1e+50 best solution, best possible 5 (443.69 seconds)
Cbc0010I After 195 nodes, 16 on tree, 1e+50 best solution, best possible 5 (444.42 seconds)
Cbc0010I After 200 nodes, 15 on tree, 1e+50 best solution, best possible 5 (445.37 seconds)
Cbc0010I After 202 nodes, 16 on tree, 1e+50 best solution, best possible 5 (446.39 seconds)
Cbc0010I After 203 nodes, 17 on tree, 1e+50 best solution, best possible 5 (447.38 seconds)
Cbc0010I After 206 nodes, 17 on tree, 1e+50 best solution, best possible 5 (448.86 seconds)
Cbc0010I After 212 nodes, 14 on tree, 1e+50 best solution, best possible 5 (449.83 seconds)
Cbc0010I After 217 nodes, 15 on tree, 1e+50 best solution, best possible 5 (450.77 seconds)
Cbc0010I After 222 nodes, 11 on tree, 1e+50 best solution, best possible 5 (451.52 seconds)
Cbc0010I After 229 nodes, 10 on tree, 1e+50 best solution, best possible 5 (452.69 seconds)
Cbc0010I After 231 nodes, 10 on tree, 1e+50 best solution, best possible 5 (453.48 seconds)
Cbc0010I After 235 nodes, 10 on tree, 1e+50 best solution, best possible 5 (454.36 seconds)
Cbc0010I After 240 nodes, 8 on tree, 1e+50 best solution, best possible 5 (455.22 seconds)
Cbc0010I After 246 nodes, 10 on tree, 1e+50 best solution, best possible 5 (456.43 seconds)
Cbc0010I After 251 nodes, 8 on tree, 1e+50 best solution, best possible 5 (457.94 seconds)
Cbc0010I After 252 nodes, 9 on tree, 1e+50 best solution, best possible 5 (459.00 seconds)
Cbc0010I After 256 nodes, 6 on tree, 1e+50 best solution, best possible 5 (460.33 seconds)
Cbc0010I After 257 nodes, 7 on tree, 1e+50 best solution, best possible 5 (461.97 seconds)
Cbc0010I After 258 nodes, 8 on tree, 1e+50 best solution, best possible 5 (463.48 seconds)
Cbc0010I After 259 nodes, 9 on tree, 1e+50 best solution, best possible 5 (464.42 seconds)
Cbc0010I After 261 nodes, 9 on tree, 1e+50 best solution, best possible 5 (465.27 seconds)
Cbc0010I After 263 nodes, 9 on tree, 1e+50 best solution, best possible 5 (467.00 seconds)
Cbc0010I After 265 nodes, 11 on tree, 1e+50 best solution, best possible 5 (467.92 seconds)
Cbc0010I After 268 nodes, 12 on tree, 1e+50 best solution, best possible 5 (468.81 seconds)
Cbc0010I After 277 nodes, 16 on tree, 1e+50 best solution, best possible 5 (469.52 seconds)
Cbc0010I After 286 nodes, 13 on tree, 1e+50 best solution, best possible 5 (470.34 seconds)
Cbc0010I After 291 nodes, 16 on tree, 1e+50 best solution, best possible 5 (471.34 seconds)
Cbc0010I After 300 nodes, 13 on tree, 1e+50 best solution, best possible 5 (472.04 seconds)
Cbc0010I After 305 nodes, 11 on tree, 1e+50 best solution, best possible 5 (472.92 seconds)
Cbc0010I After 309 nodes, 14 on tree, 1e+50 best solution, best possible 5 (473.92 seconds)
Cbc0010I After 314 nodes, 13 on tree, 1e+50 best solution, best possible 5 (474.90 seconds)
Cbc0010I After 315 nodes, 14 on tree, 1e+50 best solution, best possible 5 (475.67 seconds)
Cbc0010I After 319 nodes, 14 on tree, 1e+50 best solution, best possible 5 (476.91 seconds)
Cbc0010I After 326 nodes, 9 on tree, 1e+50 best solution, best possible 5 (477.87 seconds)
Cbc0010I After 327 nodes, 9 on tree, 1e+50 best solution, best possible 5 (478.58 seconds)
Cbc0010I After 328 nodes, 10 on tree, 1e+50 best solution, best possible 5 (479.65 seconds)
Cbc0010I After 332 nodes, 10 on tree, 1e+50 best solution, best possible 5 (480.35 seconds)
Cbc0010I After 336 nodes, 10 on tree, 1e+50 best solution, best possible 5 (481.11 seconds)
Cbc0004I Integer solution of 5 found after 92431 iterations and 339 nodes (481.56 seconds)
Cbc0001I Search completed - best objective 5, took 92431 iterations and 339 nodes (481.56 seconds)
Cbc0032I Strong branching done 2242 times (92705 iterations), fathomed 7 nodes and fixed 43 variables
Cbc0035I Maximum depth 26, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.561355 to 2.99993
Probing was tried 266 times and created 1937 cuts of which 0 were active after adding rounds of cuts (2.44338 seconds)
Gomory was tried 19 times and created 306 cuts of which 0 were active after adding rounds of cuts (1.9399 seconds)
Knapsack was tried 258 times and created 468 cuts of which 0 were active after adding rounds of cuts (2.60057 seconds)
liftKnapsack was tried 258 times and created 8491 cuts of which 0 were active after adding rounds of cuts (417.064 seconds)
Clique was tried 258 times and created 641 cuts of which 0 were active after adding rounds of cuts (0.478176 seconds)
OddWheel was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.405193 seconds)
MixedIntegerRounding2 was tried 258 times and created 915 cuts of which 0 were active after adding rounds of cuts (0.873827 seconds)
FlowCover was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005606 seconds)
TwoMirCuts was tried 258 times and created 1284 cuts of which 0 were active after adding rounds of cuts (0.646598 seconds)
ZeroHalf was tried 258 times and created 1740 cuts of which 0 were active after adding rounds of cuts (2.63252 seconds)

Result - Optimal solution found
Objective value:                5
Enumerated nodes:               339
Total iterations:               92431
Time (CPU seconds):             480.019
Time (Wallclock seconds):       481.621
Total time (CPU seconds):       480.031   (Wallclock seconds):       481.633
