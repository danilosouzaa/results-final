Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3013/j3013_1.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.105914 seconds
Cgl0002I 18 variables fixed
Cgl0003I 1 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 231 rows, 639 columns (639 integer (634 of which binary)) and 10581 elements
Coin3009W Conflict graph built in 0.065 seconds, density: 2.235%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 639 objects (639 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 41 integers unsatisfied sum - 11.5587
Cbc0038I Pass   1: suminf.    6.65517 (37) obj. 2.52021e-14 iterations 117
Cbc0038I Pass   2: suminf.    5.52918 (38) obj. -8.43769e-14 iterations 56
Cbc0038I Pass   3: suminf.    5.55009 (25) obj. 1.54099e-13 iterations 75
Cbc0038I Pass   4: suminf.    4.05185 (28) obj. -9.70335e-14 iterations 80
Cbc0038I Pass   5: suminf.    3.96313 (29) obj. 0 iterations 18
Cbc0038I Pass   6: suminf.    4.92867 (29) obj. 1.55542e-13 iterations 52
Cbc0038I Pass   7: suminf.    4.61485 (30) obj. -1.6942e-13 iterations 64
Cbc0038I Pass   8: suminf.    5.93839 (36) obj. 4.31877e-14 iterations 68
Cbc0038I Pass   9: suminf.    4.98326 (29) obj. -1.30784e-13 iterations 39
Cbc0038I Pass  10: suminf.    5.46673 (29) obj. 2.26152e-13 iterations 64
Cbc0038I Pass  11: suminf.    4.40370 (25) obj. -1.6942e-13 iterations 58
Cbc0038I Pass  12: suminf.    4.21111 (28) obj. 0 iterations 27
Cbc0038I Pass  13: suminf.    4.42986 (35) obj. 1.55542e-13 iterations 67
Cbc0038I Pass  14: suminf.    4.05561 (33) obj. -1.6942e-13 iterations 24
Cbc0038I Pass  15: suminf.    5.12787 (24) obj. 1.55653e-13 iterations 49
Cbc0038I Pass  16: suminf.    4.54511 (28) obj. -1.6942e-13 iterations 63
Cbc0038I Pass  17: suminf.    5.50944 (35) obj. 6.85008e-14 iterations 62
Cbc0038I Pass  18: suminf.    4.15598 (32) obj. 7.20535e-14 iterations 51
Cbc0038I Pass  19: suminf.    3.97552 (32) obj. 0 iterations 28
Cbc0038I Pass  20: suminf.    5.31181 (28) obj. 0.108165 iterations 104
Cbc0038I Pass  21: suminf.    3.41471 (32) obj. 0.0153509 iterations 53
Cbc0038I Pass  22: suminf.    3.41471 (32) obj. 0.0153509 iterations 0
Cbc0038I Pass  23: suminf.    7.40525 (32) obj. 0 iterations 102
Cbc0038I Pass  24: suminf.    5.75836 (32) obj. 0 iterations 74
Cbc0038I Pass  25: suminf.    4.57145 (27) obj. 0 iterations 22
Cbc0038I Pass  26: suminf.    7.08332 (43) obj. 0.0153509 iterations 80
Cbc0038I Pass  27: suminf.    4.73803 (34) obj. 0.0153509 iterations 67
Cbc0038I Pass  28: suminf.    4.22151 (36) obj. 0.0151123 iterations 37
Cbc0038I Pass  29: suminf.    6.83638 (32) obj. 0.157895 iterations 113
Cbc0038I Pass  30: suminf.    4.84758 (29) obj. 0.157895 iterations 90
Cbc0038I Pass  31: suminf.    3.98091 (29) obj. 0.157895 iterations 37
Cbc0038I Pass  32: suminf.    4.70899 (32) obj. 1 iterations 73
Cbc0038I Pass  33: suminf.    3.03617 (31) obj. 1 iterations 53
Cbc0038I Pass  34: suminf.    3.01710 (26) obj. 1 iterations 13
Cbc0038I Pass  35: suminf.    4.58531 (26) obj. 1 iterations 105
Cbc0038I Pass  36: suminf.    2.84259 (27) obj. 1 iterations 50
Cbc0038I Pass  37: suminf.    2.75935 (26) obj. 1 iterations 2
Cbc0038I Pass  38: suminf.    3.89938 (19) obj. 1 iterations 78
Cbc0038I Pass  39: suminf.    3.24383 (20) obj. 1 iterations 63
Cbc0038I Pass  40: suminf.    3.13571 (18) obj. 1 iterations 13
Cbc0038I Pass  41: suminf.    2.85000 (15) obj. 1 iterations 25
Cbc0038I Pass  42: suminf.    3.27544 (20) obj. 1 iterations 71
Cbc0038I Pass  43: suminf.    2.94872 (20) obj. 1 iterations 57
Cbc0038I Pass  44: suminf.    4.30656 (22) obj. 1 iterations 56
Cbc0038I Pass  45: suminf.    3.32619 (15) obj. 1 iterations 74
Cbc0038I Pass  46: suminf.    3.32619 (15) obj. 1 iterations 1
Cbc0038I Pass  47: suminf.    3.08889 (16) obj. 1 iterations 48
Cbc0038I Pass  48: suminf.    2.85741 (17) obj. 1 iterations 54
Cbc0038I Pass  49: suminf.    4.01128 (20) obj. 1 iterations 56
Cbc0038I Pass  50: suminf.    3.52716 (16) obj. 1 iterations 45
Cbc0038I Pass  51: suminf.    4.05030 (21) obj. 1 iterations 53
Cbc0038I Pass  52: suminf.    9.61290 (46) obj. 1 iterations 124
Cbc0038I Pass  53: suminf.    3.06905 (14) obj. 1 iterations 122
Cbc0038I Pass  54: suminf.    2.40238 (12) obj. 1 iterations 2
Cbc0038I Pass  55: suminf.    4.22630 (24) obj. 1 iterations 61
Cbc0038I Pass  56: suminf.    3.18814 (26) obj. 1 iterations 60
Cbc0038I Pass  57: suminf.    3.18814 (26) obj. 1 iterations 4
Cbc0038I Pass  58: suminf.    3.71410 (20) obj. 1 iterations 58
Cbc0038I Pass  59: suminf.    3.10672 (22) obj. 1 iterations 62
Cbc0038I Pass  60: suminf.    3.09424 (23) obj. 1 iterations 19
Cbc0038I Pass  61: suminf.    5.64424 (25) obj. 1 iterations 109
Cbc0038I Pass  62: suminf.    4.05003 (21) obj. 1 iterations 43
Cbc0038I Pass  63: suminf.    3.90185 (19) obj. 1 iterations 24
Cbc0038I Pass  64: suminf.    3.56852 (18) obj. 1 iterations 12
Cbc0038I Pass  65: suminf.    4.96534 (23) obj. 1 iterations 44
Cbc0038I Pass  66: suminf.    3.50485 (18) obj. 1 iterations 56
Cbc0038I Pass  67: suminf.    3.26667 (17) obj. 1 iterations 28
Cbc0038I Pass  68: suminf.    4.73349 (22) obj. 1 iterations 52
Cbc0038I Pass  69: suminf.    3.98291 (17) obj. 1 iterations 45
Cbc0038I Pass  70: suminf.    4.61834 (20) obj. 1 iterations 42
Cbc0038I Pass  71: suminf.    3.79957 (22) obj. 1 iterations 43
Cbc0038I Pass  72: suminf.    6.18578 (24) obj. 1 iterations 70
Cbc0038I Pass  73: suminf.    4.12913 (22) obj. 1 iterations 36
Cbc0038I Pass  74: suminf.    3.50877 (20) obj. 1 iterations 21
Cbc0038I Pass  75: suminf.    4.41484 (17) obj. 1 iterations 48
Cbc0038I Pass  76: suminf.    3.40000 (14) obj. 1 iterations 47
Cbc0038I Pass  77: suminf.    2.96667 (13) obj. 1 iterations 27
Cbc0038I Pass  78: suminf.    3.21875 (16) obj. 1 iterations 45
Cbc0038I Pass  79: suminf.    2.98333 (14) obj. 1 iterations 16
Cbc0038I Pass  80: suminf.    5.12560 (19) obj. 1 iterations 62
Cbc0038I Pass  81: suminf.    4.03190 (18) obj. 1 iterations 55
Cbc0038I Pass  82: suminf.    3.72857 (19) obj. 1 iterations 21
Cbc0038I Pass  83: suminf.    3.75396 (22) obj. 1 iterations 59
Cbc0038I Pass  84: suminf.    3.11543 (19) obj. 1 iterations 60
Cbc0038I Pass  85: suminf.    4.53803 (19) obj. 1 iterations 53
Cbc0038I Pass  86: suminf.    3.34326 (17) obj. 1 iterations 45
Cbc0038I Pass  87: suminf.    4.34127 (19) obj. 1 iterations 58
Cbc0038I Pass  88: suminf.    3.51543 (21) obj. 1 iterations 48
Cbc0038I Pass  89: suminf.    3.51543 (21) obj. 1 iterations 5
Cbc0038I Pass  90: suminf.    4.02610 (18) obj. 1 iterations 49
Cbc0038I Pass  91: suminf.    3.24035 (15) obj. 1 iterations 57
Cbc0038I Pass  92: suminf.    2.56667 (11) obj. 1 iterations 12
Cbc0038I Pass  93: suminf.    3.94762 (13) obj. 1 iterations 45
Cbc0038I Pass  94: suminf.    3.38333 (16) obj. 1 iterations 25
Cbc0038I Pass  95: suminf.    3.38333 (16) obj. 1 iterations 5
Cbc0038I Pass  96: suminf.    3.60409 (16) obj. 1 iterations 50
Cbc0038I Pass  97: suminf.    3.37820 (18) obj. 1 iterations 36
Cbc0038I Pass  98: suminf.    5.10199 (20) obj. 1 iterations 75
Cbc0038I Pass  99: suminf.    3.33175 (15) obj. 1 iterations 50
Cbc0038I Pass 100: suminf.   10.22141 (37) obj. 1 iterations 133
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 377 integers at bound fixed and 0 continuous
Cbc0038I Full problem 231 rows 639 columns, reduced to 185 rows 234 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.76 seconds)
Cbc0038I Full problem 232 rows 639 columns, reduced to 232 rows 639 columns - too large
Cbc0038I After 2.86 seconds - Feasibility pump exiting - took 1.06 seconds
Cbc0031I 35 added rows had average density of 29.285714
Cbc0013I At root node, 35 cuts changed objective from 0 to 0 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 96 row cuts average 5.7 elements, 34 column cuts (34 active)  in 0.726 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 48.3 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 237 row cuts average 8.0 elements, 0 column cuts (0 active)  in 5.574 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 19 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 26 row cuts average 57.6 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 43 row cuts average 59.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 103 row cuts average 117.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 0 (10.06 seconds)
Cbc0010I After 2 nodes, 2 on tree, 1e+50 best solution, best possible 0 (10.78 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 0 (12.47 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 0 (17.71 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 0 (21.80 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 0 (26.11 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 0 (27.84 seconds)
Cbc0010I After 13 nodes, 10 on tree, 1e+50 best solution, best possible 0 (28.58 seconds)
Cbc0010I After 29 nodes, 10 on tree, 1e+50 best solution, best possible 0 (29.33 seconds)
Cbc0010I After 51 nodes, 9 on tree, 1e+50 best solution, best possible 0 (30.81 seconds)
Cbc0010I After 54 nodes, 7 on tree, 1e+50 best solution, best possible 0 (31.60 seconds)
Cbc0010I After 60 nodes, 6 on tree, 1e+50 best solution, best possible 0 (32.84 seconds)
Cbc0010I After 66 nodes, 1 on tree, 1e+50 best solution, best possible 1 (34.60 seconds)
Cbc0010I After 67 nodes, 2 on tree, 1e+50 best solution, best possible 1 (39.01 seconds)
Cbc0010I After 68 nodes, 3 on tree, 1e+50 best solution, best possible 1 (43.60 seconds)
Cbc0010I After 69 nodes, 4 on tree, 1e+50 best solution, best possible 1 (48.40 seconds)
Cbc0010I After 70 nodes, 5 on tree, 1e+50 best solution, best possible 1 (53.66 seconds)
Cbc0010I After 71 nodes, 6 on tree, 1e+50 best solution, best possible 1 (55.29 seconds)
Cbc0010I After 76 nodes, 11 on tree, 1e+50 best solution, best possible 1 (56.40 seconds)
Cbc0010I After 82 nodes, 10 on tree, 1e+50 best solution, best possible 1 (57.34 seconds)
Cbc0010I After 90 nodes, 13 on tree, 1e+50 best solution, best possible 1 (58.08 seconds)
Cbc0010I After 111 nodes, 12 on tree, 1e+50 best solution, best possible 1 (58.86 seconds)
Cbc0010I After 119 nodes, 9 on tree, 1e+50 best solution, best possible 1 (59.77 seconds)
Cbc0010I After 125 nodes, 10 on tree, 1e+50 best solution, best possible 1 (62.35 seconds)
Cbc0010I After 134 nodes, 14 on tree, 1e+50 best solution, best possible 1 (63.32 seconds)
Cbc0010I After 155 nodes, 19 on tree, 1e+50 best solution, best possible 1 (64.30 seconds)
Cbc0010I After 198 nodes, 16 on tree, 1e+50 best solution, best possible 1 (65.01 seconds)
Cbc0010I After 205 nodes, 17 on tree, 1e+50 best solution, best possible 1 (66.04 seconds)
Cbc0010I After 253 nodes, 18 on tree, 1e+50 best solution, best possible 1 (67.25 seconds)
Cbc0010I After 267 nodes, 19 on tree, 1e+50 best solution, best possible 1 (68.05 seconds)
Cbc0010I After 304 nodes, 23 on tree, 1e+50 best solution, best possible 1 (69.08 seconds)
Cbc0010I After 311 nodes, 26 on tree, 1e+50 best solution, best possible 1 (69.89 seconds)
Cbc0010I After 338 nodes, 31 on tree, 1e+50 best solution, best possible 1 (70.97 seconds)
Cbc0010I After 356 nodes, 30 on tree, 1e+50 best solution, best possible 1 (71.68 seconds)
Cbc0010I After 380 nodes, 29 on tree, 1e+50 best solution, best possible 1 (72.39 seconds)
Cbc0010I After 397 nodes, 31 on tree, 1e+50 best solution, best possible 1 (73.31 seconds)
Cbc0010I After 430 nodes, 32 on tree, 1e+50 best solution, best possible 1 (74.03 seconds)
Cbc0010I After 443 nodes, 34 on tree, 1e+50 best solution, best possible 1 (74.80 seconds)
Cbc0010I After 453 nodes, 31 on tree, 1e+50 best solution, best possible 1 (75.60 seconds)
Cbc0010I After 459 nodes, 32 on tree, 1e+50 best solution, best possible 1 (76.37 seconds)
Cbc0010I After 485 nodes, 31 on tree, 1e+50 best solution, best possible 1 (77.15 seconds)
Cbc0010I After 505 nodes, 36 on tree, 1e+50 best solution, best possible 1 (77.88 seconds)
Cbc0010I After 521 nodes, 37 on tree, 1e+50 best solution, best possible 1 (78.64 seconds)
Cbc0010I After 555 nodes, 34 on tree, 1e+50 best solution, best possible 1 (79.37 seconds)
Cbc0010I After 592 nodes, 32 on tree, 1e+50 best solution, best possible 1 (80.10 seconds)
Cbc0010I After 614 nodes, 32 on tree, 1e+50 best solution, best possible 1 (80.83 seconds)
Cbc0010I After 631 nodes, 35 on tree, 1e+50 best solution, best possible 1 (81.54 seconds)
Cbc0010I After 654 nodes, 28 on tree, 1e+50 best solution, best possible 1 (82.77 seconds)
Cbc0010I After 669 nodes, 28 on tree, 1e+50 best solution, best possible 1 (83.47 seconds)
Cbc0010I After 687 nodes, 25 on tree, 1e+50 best solution, best possible 1 (84.19 seconds)
Cbc0010I After 697 nodes, 28 on tree, 1e+50 best solution, best possible 1 (84.90 seconds)
Cbc0010I After 732 nodes, 25 on tree, 1e+50 best solution, best possible 1 (85.79 seconds)
Cbc0010I After 759 nodes, 30 on tree, 1e+50 best solution, best possible 1 (86.53 seconds)
Cbc0004I Integer solution of 1 found after 48200 iterations and 774 nodes (86.70 seconds)
Cbc0001I Search completed - best objective 1, took 48200 iterations and 774 nodes (86.70 seconds)
Cbc0032I Strong branching done 3272 times (60879 iterations), fathomed 24 nodes and fixed 136 variables
Cbc0035I Maximum depth 45, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 165 times and created 1544 cuts of which 0 were active after adding rounds of cuts (1.37564 seconds)
Gomory was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.111841 seconds)
Knapsack was tried 139 times and created 377 cuts of which 0 were active after adding rounds of cuts (0.685351 seconds)
liftKnapsack was tried 139 times and created 4317 cuts of which 0 were active after adding rounds of cuts (63.3256 seconds)
Clique was tried 139 times and created 288 cuts of which 0 were active after adding rounds of cuts (0.094454 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017591 seconds)
MixedIntegerRounding2 was tried 139 times and created 552 cuts of which 0 were active after adding rounds of cuts (0.473322 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006223 seconds)
TwoMirCuts was tried 10 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.053161 seconds)
ZeroHalf was tried 10 times and created 103 cuts of which 0 were active after adding rounds of cuts (0.053861 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               774
Total iterations:               48200
Time (CPU seconds):             86.0892
Time (Wallclock seconds):       86.733
Total time (CPU seconds):       86.1189   (Wallclock seconds):       86.7707
