Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3044/j3044_6.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.93823 - 0.113363 seconds
Cgl0002I 9 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 285 rows, 673 columns (673 integer (672 of which binary)) and 7295 elements
Coin3009W Conflict graph built in 0.016 seconds, density: 0.983%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 673 objects (673 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 71 integers unsatisfied sum - 19.3058
Cbc0038I Pass   1: suminf.   10.97337 (49) obj. 2.91414 iterations 44
Cbc0038I Pass   2: suminf.    4.65404 (22) obj. 4 iterations 25
Cbc0038I Pass   3: suminf.    4.16538 (18) obj. 4 iterations 6
Cbc0038I Pass   4: suminf.    4.16538 (18) obj. 4 iterations 2
Cbc0038I Pass   5: suminf.    3.83205 (18) obj. 4 iterations 2
Cbc0038I Pass   6: suminf.    4.69872 (12) obj. 4 iterations 35
Cbc0038I Pass   7: suminf.    4.69872 (12) obj. 4 iterations 1
Cbc0038I Pass   8: suminf.    2.89103 (10) obj. 4 iterations 23
Cbc0038I Pass   9: suminf.    2.89103 (10) obj. 4 iterations 9
Cbc0038I Pass  10: suminf.    3.08333 (8) obj. 4 iterations 18
Cbc0038I Pass  11: suminf.    3.08333 (8) obj. 4 iterations 10
Cbc0038I Pass  12: suminf.    2.58333 (8) obj. 4 iterations 16
Cbc0038I Pass  13: suminf.    2.58333 (8) obj. 4 iterations 4
Cbc0038I Pass  14: suminf.    7.33333 (25) obj. 4 iterations 71
Cbc0038I Pass  15: suminf.    5.04798 (27) obj. 4 iterations 61
Cbc0038I Pass  16: suminf.    2.33333 (6) obj. 4 iterations 25
Cbc0038I Pass  17: suminf.    2.02381 (6) obj. 4 iterations 11
Cbc0038I Pass  18: suminf.    0.25000 (2) obj. 4 iterations 13
Cbc0038I Pass  19: suminf.    1.00000 (2) obj. 4 iterations 4
Cbc0038I Pass  20: suminf.    9.85060 (38) obj. 4 iterations 75
Cbc0038I Pass  21: suminf.    4.10794 (20) obj. 4 iterations 50
Cbc0038I Pass  22: suminf.    2.29697 (14) obj. 4 iterations 7
Cbc0038I Pass  23: suminf.    3.11667 (13) obj. 4 iterations 29
Cbc0038I Pass  24: suminf.    2.78333 (10) obj. 4 iterations 11
Cbc0038I Pass  25: suminf.    1.78333 (8) obj. 4 iterations 2
Cbc0038I Pass  26: suminf.    2.28333 (8) obj. 4 iterations 20
Cbc0038I Pass  27: suminf.    2.28333 (8) obj. 4 iterations 7
Cbc0038I Pass  28: suminf.    1.78333 (8) obj. 4 iterations 20
Cbc0038I Pass  29: suminf.    8.69810 (26) obj. 4 iterations 82
Cbc0038I Pass  30: suminf.    3.43896 (12) obj. 4 iterations 61
Cbc0038I Pass  31: suminf.    2.51364 (10) obj. 4 iterations 16
Cbc0038I Pass  32: suminf.    2.45769 (8) obj. 4 iterations 24
Cbc0038I Pass  33: suminf.    2.45769 (8) obj. 4 iterations 19
Cbc0038I Pass  34: suminf.    2.61154 (8) obj. 4 iterations 24
Cbc0038I Pass  35: suminf.    2.61154 (8) obj. 4 iterations 18
Cbc0038I Pass  36: suminf.    5.22019 (20) obj. 4 iterations 93
Cbc0038I Pass  37: suminf.    1.97143 (11) obj. 4 iterations 73
Cbc0038I Pass  38: suminf.    1.46154 (4) obj. 4 iterations 28
Cbc0038I Pass  39: suminf.    1.46154 (4) obj. 4 iterations 0
Cbc0038I Pass  40: suminf.    1.61538 (4) obj. 4 iterations 12
Cbc0038I Pass  41: suminf.   10.81467 (42) obj. 4 iterations 77
Cbc0038I Pass  42: suminf.    2.62837 (12) obj. 4 iterations 66
Cbc0038I Pass  43: suminf.    2.29504 (12) obj. 4 iterations 1
Cbc0038I Pass  44: suminf.    2.26007 (10) obj. 4 iterations 9
Cbc0038I Pass  45: suminf.    2.20879 (10) obj. 4 iterations 3
Cbc0038I Pass  46: suminf.    2.85348 (10) obj. 4 iterations 14
Cbc0038I Pass  47: suminf.    2.51648 (10) obj. 4 iterations 8
Cbc0038I Pass  48: suminf.    2.69963 (10) obj. 4 iterations 15
Cbc0038I Pass  49: suminf.    3.40623 (12) obj. 4 iterations 84
Cbc0038I Pass  50: suminf.    1.73571 (8) obj. 4 iterations 72
Cbc0038I Pass  51: suminf.    2.58571 (8) obj. 4 iterations 31
Cbc0038I Pass  52: suminf.    2.58571 (8) obj. 4 iterations 21
Cbc0038I Pass  53: suminf.    2.25238 (8) obj. 4 iterations 10
Cbc0038I Pass  54: suminf.    2.91905 (8) obj. 4 iterations 25
Cbc0038I Pass  55: suminf.    2.91905 (8) obj. 4 iterations 21
Cbc0038I Pass  56: suminf.    2.58571 (8) obj. 4 iterations 24
Cbc0038I Pass  57: suminf.    2.58571 (8) obj. 4 iterations 16
Cbc0038I Pass  58: suminf.    2.58571 (8) obj. 4 iterations 4
Cbc0038I Pass  59: suminf.    2.91905 (8) obj. 4 iterations 19
Cbc0038I Pass  60: suminf.    2.91905 (8) obj. 4 iterations 20
Cbc0038I Pass  61: suminf.    2.91905 (8) obj. 4 iterations 5
Cbc0038I Pass  62: suminf.    2.58571 (8) obj. 4 iterations 24
Cbc0038I Pass  63: suminf.    2.58571 (8) obj. 4 iterations 19
Cbc0038I Pass  64: suminf.    2.91905 (8) obj. 4 iterations 19
Cbc0038I Pass  65: suminf.   11.17347 (43) obj. 4 iterations 105
Cbc0038I Pass  66: suminf.    5.37143 (18) obj. 4 iterations 70
Cbc0038I Pass  67: suminf.    4.10440 (15) obj. 4 iterations 18
Cbc0038I Pass  68: suminf.    2.98462 (14) obj. 4 iterations 14
Cbc0038I Pass  69: suminf.    1.29913 (13) obj. 4 iterations 17
Cbc0038I Pass  70: suminf.    2.92267 (13) obj. 4 iterations 29
Cbc0038I Pass  71: suminf.    0.30769 (2) obj. 4 iterations 16
Cbc0038I Pass  72: suminf.    0.30769 (2) obj. 4 iterations 2
Cbc0038I Pass  73: suminf.    0.61538 (2) obj. 4 iterations 6
Cbc0038I Pass  74: suminf.   11.16370 (42) obj. 4 iterations 84
Cbc0038I Pass  75: suminf.    3.45556 (15) obj. 4 iterations 67
Cbc0038I Pass  76: suminf.    3.45556 (15) obj. 4 iterations 3
Cbc0038I Pass  77: suminf.    2.90000 (12) obj. 4 iterations 18
Cbc0038I Pass  78: suminf.    2.31270 (12) obj. 4 iterations 22
Cbc0038I Pass  79: suminf.    3.90000 (17) obj. 4 iterations 47
Cbc0038I Pass  80: suminf.    3.08000 (14) obj. 4 iterations 27
Cbc0038I Pass  81: suminf.    5.37619 (17) obj. 4 iterations 37
Cbc0038I Pass  82: suminf.    4.77500 (14) obj. 4 iterations 15
Cbc0038I Pass  83: suminf.    3.58000 (14) obj. 4 iterations 23
Cbc0038I Pass  84: suminf.    4.87619 (17) obj. 4 iterations 40
Cbc0038I Pass  85: suminf.    4.27500 (14) obj. 4 iterations 13
Cbc0038I Pass  86: suminf.    3.08000 (14) obj. 4 iterations 26
Cbc0038I Pass  87: suminf.    5.37619 (17) obj. 4 iterations 39
Cbc0038I Pass  88: suminf.    4.77500 (14) obj. 4 iterations 11
Cbc0038I Pass  89: suminf.    3.58000 (14) obj. 4 iterations 25
Cbc0038I Pass  90: suminf.    4.87619 (17) obj. 4 iterations 37
Cbc0038I Pass  91: suminf.    4.27500 (14) obj. 4 iterations 10
Cbc0038I Pass  92: suminf.    3.08000 (14) obj. 4 iterations 26
Cbc0038I Pass  93: suminf.    5.37619 (17) obj. 4 iterations 37
Cbc0038I Pass  94: suminf.    4.77500 (14) obj. 4 iterations 10
Cbc0038I Pass  95: suminf.    3.58000 (14) obj. 4 iterations 29
Cbc0038I Pass  96: suminf.    4.87619 (17) obj. 4 iterations 41
Cbc0038I Pass  97: suminf.    4.27500 (14) obj. 4 iterations 12
Cbc0038I Pass  98: suminf.    3.08000 (14) obj. 4 iterations 26
Cbc0038I Pass  99: suminf.    4.77500 (14) obj. 4 iterations 36
Cbc0038I Pass 100: suminf.   13.65385 (46) obj. 4 iterations 102
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 415 integers at bound fixed and 0 continuous
Cbc0038I Full problem 285 rows 673 columns, reduced to 208 rows 222 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.46 seconds)
Cbc0038I After 2.46 seconds - Feasibility pump exiting - took 1.07 seconds
Cbc0031I 65 added rows had average density of 68.369231
Cbc0013I At root node, 65 cuts changed objective from 1.9382306 to 3 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 268 row cuts average 6.1 elements, 8 column cuts (56 active)  in 0.390 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 186 row cuts average 575.8 elements, 0 column cuts (0 active)  in 0.656 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 110 row cuts average 21.2 elements, 0 column cuts (0 active)  in 2.842 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 127 row cuts average 45.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 257 row cuts average 184.4 elements, 0 column cuts (0 active)  in 0.372 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 154 row cuts average 45.6 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 3 (8.34 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 3 (9.32 seconds)
Cbc0010I After 2 nodes, 2 on tree, 1e+50 best solution, best possible 3 (11.07 seconds)
Cbc0012I Integer solution of 4 found by DiveCoefficient after 3568 iterations and 4 nodes (11.58 seconds)
Cbc0001I Search completed - best objective 4, took 3568 iterations and 4 nodes (11.58 seconds)
Cbc0032I Strong branching done 102 times (3368 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.93823 to 3
Probing was tried 16 times and created 391 cuts of which 48 were active after adding rounds of cuts (0.427175 seconds)
Gomory was tried 16 times and created 191 cuts of which 0 were active after adding rounds of cuts (0.680483 seconds)
Knapsack was tried 16 times and created 55 cuts of which 0 were active after adding rounds of cuts (0.15359 seconds)
liftKnapsack was tried 16 times and created 177 cuts of which 0 were active after adding rounds of cuts (4.9236 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012751 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058696 seconds)
MixedIntegerRounding2 was tried 16 times and created 201 cuts of which 0 were active after adding rounds of cuts (0.0811 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004948 seconds)
TwoMirCuts was tried 16 times and created 337 cuts of which 0 were active after adding rounds of cuts (0.43882 seconds)
ZeroHalf was tried 16 times and created 195 cuts of which 0 were active after adding rounds of cuts (0.136164 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               4
Total iterations:               3568
Time (CPU seconds):             11.6657
Time (Wallclock seconds):       11.6285
Total time (CPU seconds):       11.6754   (Wallclock seconds):       11.639
