Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3030/j3030_2.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.55271e-15 - 0.071887 seconds
Cgl0002I 19 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 250 rows, 490 columns (490 integer (489 of which binary)) and 7555 elements
Coin3009W Conflict graph built in 0.010 seconds, density: 1.539%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 490 objects (490 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 68 integers unsatisfied sum - 16.5272
Cbc0038I Pass   1: suminf.    9.40791 (44) obj. 7.10543e-15 iterations 132
Cbc0038I Pass   2: suminf.    8.63645 (47) obj. 0.0544432 iterations 48
Cbc0038I Pass   3: suminf.    8.54263 (42) obj. 1.06581e-14 iterations 15
Cbc0038I Pass   4: suminf.    9.25417 (33) obj. -7.10543e-15 iterations 106
Cbc0038I Pass   5: suminf.    8.16394 (29) obj. -7.10543e-15 iterations 34
Cbc0038I Pass   6: suminf.    8.06448 (30) obj. -7.10543e-15 iterations 32
Cbc0038I Pass   7: suminf.    8.18828 (33) obj. -7.10543e-15 iterations 90
Cbc0038I Pass   8: suminf.    7.37382 (34) obj. 1.06581e-14 iterations 44
Cbc0038I Pass   9: suminf.    6.76214 (28) obj. 1.06581e-14 iterations 37
Cbc0038I Pass  10: suminf.    5.94245 (27) obj. 1.06581e-14 iterations 20
Cbc0038I Pass  11: suminf.    7.02446 (37) obj. 0.0208108 iterations 64
Cbc0038I Pass  12: suminf.    6.51980 (28) obj. -7.10543e-15 iterations 69
Cbc0038I Pass  13: suminf.    5.77737 (29) obj. 7.10543e-15 iterations 48
Cbc0038I Pass  14: suminf.    6.46769 (24) obj. -7.10543e-15 iterations 100
Cbc0038I Pass  15: suminf.    5.58782 (25) obj. 7.10543e-15 iterations 65
Cbc0038I Pass  16: suminf.    5.37849 (26) obj. 7.10543e-15 iterations 33
Cbc0038I Pass  17: suminf.    6.47078 (27) obj. 0 iterations 73
Cbc0038I Pass  18: suminf.    5.34807 (29) obj. 7.10543e-15 iterations 53
Cbc0038I Pass  19: suminf.    5.24622 (32) obj. 7.10543e-15 iterations 23
Cbc0038I Pass  20: suminf.    5.77834 (25) obj. 0 iterations 83
Cbc0038I Pass  21: suminf.    5.13730 (28) obj. 7.10543e-15 iterations 50
Cbc0038I Pass  22: suminf.    5.08472 (27) obj. 7.10543e-15 iterations 3
Cbc0038I Pass  23: suminf.    7.47427 (32) obj. -7.10543e-15 iterations 110
Cbc0038I Pass  24: suminf.    6.23048 (31) obj. -7.10543e-15 iterations 66
Cbc0038I Pass  25: suminf.    6.23048 (31) obj. -7.10543e-15 iterations 2
Cbc0038I Pass  26: suminf.    9.20738 (33) obj. -7.10543e-15 iterations 86
Cbc0038I Pass  27: suminf.    7.16385 (35) obj. -7.10543e-15 iterations 66
Cbc0038I Pass  28: suminf.    7.59406 (37) obj. -7.10543e-15 iterations 98
Cbc0038I Pass  29: suminf.    6.83746 (31) obj. -7.10543e-15 iterations 92
Cbc0038I Pass  30: suminf.    6.69946 (36) obj. -7.10543e-15 iterations 15
Cbc0038I Pass  31: suminf.    6.65728 (36) obj. -7.10543e-15 iterations 12
Cbc0038I Pass  32: suminf.    7.47899 (33) obj. -7.10543e-15 iterations 43
Cbc0038I Pass  33: suminf.    6.81106 (34) obj. -7.10543e-15 iterations 49
Cbc0038I Pass  34: suminf.    6.62677 (36) obj. -7.10543e-15 iterations 11
Cbc0038I Pass  35: suminf.    6.62029 (38) obj. -7.10543e-15 iterations 72
Cbc0038I Pass  36: suminf.    6.33404 (37) obj. -7.10543e-15 iterations 37
Cbc0038I Pass  37: suminf.   10.48864 (39) obj. -7.10543e-15 iterations 108
Cbc0038I Pass  38: suminf.    7.67690 (33) obj. -7.10543e-15 iterations 67
Cbc0038I Pass  39: suminf.    6.90553 (42) obj. -7.10543e-15 iterations 65
Cbc0038I Pass  40: suminf.    7.18179 (38) obj. -7.10543e-15 iterations 64
Cbc0038I Pass  41: suminf.    6.65915 (49) obj. 0.0239283 iterations 59
Cbc0038I Pass  42: suminf.    9.25588 (39) obj. -7.10543e-15 iterations 75
Cbc0038I Pass  43: suminf.    7.90692 (41) obj. -7.10543e-15 iterations 64
Cbc0038I Pass  44: suminf.    7.48561 (40) obj. -7.10543e-15 iterations 16
Cbc0038I Pass  45: suminf.    7.31467 (41) obj. -7.10543e-15 iterations 16
Cbc0038I Pass  46: suminf.    6.91838 (35) obj. -7.10543e-15 iterations 43
Cbc0038I Pass  47: suminf.    6.81996 (35) obj. -7.10543e-15 iterations 3
Cbc0038I Pass  48: suminf.    6.81440 (38) obj. -7.10543e-15 iterations 10
Cbc0038I Pass  49: suminf.    7.25886 (36) obj. -7.10543e-15 iterations 57
Cbc0038I Pass  50: suminf.    6.78046 (38) obj. -7.10543e-15 iterations 34
Cbc0038I Pass  51: suminf.    7.16034 (37) obj. -7.10543e-15 iterations 64
Cbc0038I Pass  52: suminf.    6.91838 (36) obj. -7.10543e-15 iterations 29
Cbc0038I Pass  53: suminf.    6.89118 (37) obj. -7.10543e-15 iterations 7
Cbc0038I Pass  54: suminf.   14.07236 (53) obj. 1.83223 iterations 117
Cbc0038I Pass  55: suminf.    6.58458 (34) obj. 2 iterations 119
Cbc0038I Pass  56: suminf.    6.10075 (35) obj. 2 iterations 38
Cbc0038I Pass  57: suminf.    5.69866 (33) obj. 2 iterations 22
Cbc0038I Pass  58: suminf.    6.45452 (29) obj. 2 iterations 132
Cbc0038I Pass  59: suminf.    4.34155 (29) obj. 2 iterations 37
Cbc0038I Pass  60: suminf.    3.75339 (22) obj. 2 iterations 29
Cbc0038I Pass  61: suminf.    4.11625 (18) obj. 2 iterations 102
Cbc0038I Pass  62: suminf.    4.02828 (15) obj. 2 iterations 13
Cbc0038I Pass  63: suminf.    3.25429 (16) obj. 2 iterations 39
Cbc0038I Pass  64: suminf.    2.73175 (19) obj. 2 iterations 67
Cbc0038I Pass  65: suminf.    3.71252 (18) obj. 2 iterations 106
Cbc0038I Pass  66: suminf.    2.95663 (19) obj. 2 iterations 45
Cbc0038I Pass  67: suminf.    2.91847 (19) obj. 2 iterations 11
Cbc0038I Pass  68: suminf.    5.21696 (18) obj. 2 iterations 50
Cbc0038I Pass  69: suminf.    3.49697 (16) obj. 2 iterations 61
Cbc0038I Pass  70: suminf.    2.69135 (16) obj. 2 iterations 31
Cbc0038I Pass  71: suminf.    2.61099 (17) obj. 2 iterations 4
Cbc0038I Pass  72: suminf.    6.12576 (21) obj. 2 iterations 60
Cbc0038I Pass  73: suminf.    2.81679 (16) obj. 2 iterations 56
Cbc0038I Pass  74: suminf.    2.61099 (17) obj. 2 iterations 16
Cbc0038I Pass  75: suminf.    8.63292 (37) obj. 2 iterations 103
Cbc0038I Pass  76: suminf.    3.14762 (20) obj. 2 iterations 85
Cbc0038I Pass  77: suminf.    2.74603 (17) obj. 2 iterations 17
Cbc0038I Pass  78: suminf.    3.64288 (15) obj. 2 iterations 62
Cbc0038I Pass  79: suminf.    2.52778 (13) obj. 2 iterations 20
Cbc0038I Pass  80: suminf.    1.55556 (9) obj. 2 iterations 14
Cbc0038I Pass  81: suminf.    2.68547 (11) obj. 2 iterations 45
Cbc0038I Pass  82: suminf.    1.63932 (12) obj. 2 iterations 25
Cbc0038I Pass  83: suminf.    1.63077 (11) obj. 2 iterations 1
Cbc0038I Pass  84: suminf.    3.49231 (13) obj. 2 iterations 78
Cbc0038I Pass  85: suminf.    3.34630 (14) obj. 2 iterations 22
Cbc0038I Pass  86: suminf.    3.24444 (14) obj. 2 iterations 8
Cbc0038I Pass  87: suminf.    3.40687 (17) obj. 2 iterations 72
Cbc0038I Pass  88: suminf.    2.37411 (15) obj. 2 iterations 22
Cbc0038I Pass  89: suminf.    4.51277 (20) obj. 2 iterations 49
Cbc0038I Pass  90: suminf.    4.25741 (20) obj. 2 iterations 21
Cbc0038I Pass  91: suminf.    3.66111 (20) obj. 2 iterations 17
Cbc0038I Pass  92: suminf.    3.21497 (21) obj. 2 iterations 35
Cbc0038I Pass  93: suminf.    7.04285 (24) obj. 2 iterations 109
Cbc0038I Pass  94: suminf.    5.81271 (30) obj. 2 iterations 49
Cbc0038I Pass  95: suminf.    6.55302 (26) obj. 2 iterations 98
Cbc0038I Pass  96: suminf.    4.81190 (21) obj. 2 iterations 42
Cbc0038I Pass  97: suminf.    4.26429 (21) obj. 2 iterations 34
Cbc0038I Pass  98: suminf.    3.84074 (23) obj. 2 iterations 49
Cbc0038I Pass  99: suminf.    5.02845 (21) obj. 2 iterations 82
Cbc0038I Pass 100: suminf.    8.15303 (33) obj. 2 iterations 90
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 250 rows 490 columns, reduced to 179 rows 211 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.94 seconds)
Cbc0038I After 1.94 seconds - Feasibility pump exiting - took 0.95 seconds
Cbc0031I 47 added rows had average density of 45.893617
Cbc0013I At root node, 47 cuts changed objective from 0 to 0.99994449 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 361 row cuts average 6.7 elements, 0 column cuts (0 active)  in 3.451 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2008 row cuts average 464.6 elements, 0 column cuts (0 active)  in 4.204 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 102 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.631 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 1783 row cuts average 8.9 elements, 0 column cuts (0 active)  in 63.199 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.289 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 278 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.337 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 488 row cuts average 161.9 elements, 0 column cuts (0 active)  in 0.945 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 434 row cuts average 53.9 elements, 0 column cuts (0 active)  in 0.704 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (86.15 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (93.78 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (104.10 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (115.01 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 1 (126.56 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (135.77 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 1 (138.65 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 1 (141.85 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 1 (144.72 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 1 (146.84 seconds)
Cbc0010I After 10 nodes, 9 on tree, 1e+50 best solution, best possible 1 (148.06 seconds)
Cbc0010I After 14 nodes, 7 on tree, 1e+50 best solution, best possible 1 (150.89 seconds)
Cbc0010I After 16 nodes, 7 on tree, 1e+50 best solution, best possible 1 (152.95 seconds)
Cbc0010I After 18 nodes, 7 on tree, 1e+50 best solution, best possible 1 (155.46 seconds)
Cbc0010I After 19 nodes, 8 on tree, 1e+50 best solution, best possible 1 (157.21 seconds)
Cbc0010I After 21 nodes, 8 on tree, 1e+50 best solution, best possible 1 (159.15 seconds)
Cbc0010I After 22 nodes, 9 on tree, 1e+50 best solution, best possible 1 (160.38 seconds)
Cbc0010I After 23 nodes, 10 on tree, 1e+50 best solution, best possible 1 (162.33 seconds)
Cbc0010I After 26 nodes, 9 on tree, 1e+50 best solution, best possible 1 (165.07 seconds)
Cbc0010I After 27 nodes, 9 on tree, 1e+50 best solution, best possible 1 (166.17 seconds)
Cbc0010I After 28 nodes, 9 on tree, 1e+50 best solution, best possible 1 (168.78 seconds)
Cbc0010I After 29 nodes, 10 on tree, 1e+50 best solution, best possible 1 (171.07 seconds)
Cbc0010I After 30 nodes, 11 on tree, 1e+50 best solution, best possible 1 (173.34 seconds)
Cbc0010I After 32 nodes, 10 on tree, 1e+50 best solution, best possible 1 (176.27 seconds)
Cbc0010I After 37 nodes, 6 on tree, 1e+50 best solution, best possible 1 (177.57 seconds)
Cbc0010I After 39 nodes, 7 on tree, 1e+50 best solution, best possible 1 (180.23 seconds)
Cbc0010I After 40 nodes, 8 on tree, 1e+50 best solution, best possible 1 (182.88 seconds)
Cbc0010I After 42 nodes, 8 on tree, 1e+50 best solution, best possible 1 (186.03 seconds)
Cbc0010I After 44 nodes, 8 on tree, 1e+50 best solution, best possible 1 (186.84 seconds)
Cbc0010I After 45 nodes, 8 on tree, 1e+50 best solution, best possible 1 (189.32 seconds)
Cbc0010I After 46 nodes, 9 on tree, 1e+50 best solution, best possible 1 (190.16 seconds)
Cbc0010I After 47 nodes, 10 on tree, 1e+50 best solution, best possible 1 (191.51 seconds)
Cbc0010I After 49 nodes, 9 on tree, 1e+50 best solution, best possible 1 (192.77 seconds)
Cbc0010I After 50 nodes, 10 on tree, 1e+50 best solution, best possible 1 (193.61 seconds)
Cbc0010I After 51 nodes, 11 on tree, 1e+50 best solution, best possible 1 (194.40 seconds)
Cbc0010I After 53 nodes, 11 on tree, 1e+50 best solution, best possible 1 (195.36 seconds)
Cbc0010I After 54 nodes, 12 on tree, 1e+50 best solution, best possible 1 (196.51 seconds)
Cbc0010I After 60 nodes, 9 on tree, 1e+50 best solution, best possible 1 (199.57 seconds)
Cbc0010I After 61 nodes, 10 on tree, 1e+50 best solution, best possible 1 (201.28 seconds)
Cbc0010I After 63 nodes, 9 on tree, 1e+50 best solution, best possible 1 (202.64 seconds)
Cbc0010I After 64 nodes, 10 on tree, 1e+50 best solution, best possible 1 (203.79 seconds)
Cbc0010I After 65 nodes, 11 on tree, 1e+50 best solution, best possible 1 (204.60 seconds)
Cbc0010I After 67 nodes, 11 on tree, 1e+50 best solution, best possible 1 (205.58 seconds)
Cbc0010I After 69 nodes, 11 on tree, 1e+50 best solution, best possible 1 (206.30 seconds)
Cbc0010I After 71 nodes, 10 on tree, 1e+50 best solution, best possible 1 (207.49 seconds)
Cbc0010I After 72 nodes, 10 on tree, 1e+50 best solution, best possible 1 (209.23 seconds)
Cbc0010I After 74 nodes, 10 on tree, 1e+50 best solution, best possible 1 (210.22 seconds)
Cbc0010I After 77 nodes, 9 on tree, 1e+50 best solution, best possible 1 (211.23 seconds)
Cbc0010I After 79 nodes, 9 on tree, 1e+50 best solution, best possible 1 (213.40 seconds)
Cbc0010I After 82 nodes, 9 on tree, 1e+50 best solution, best possible 1 (214.50 seconds)
Cbc0010I After 83 nodes, 9 on tree, 1e+50 best solution, best possible 1 (215.27 seconds)
Cbc0010I After 85 nodes, 7 on tree, 1e+50 best solution, best possible 1 (216.25 seconds)
Cbc0010I After 86 nodes, 8 on tree, 1e+50 best solution, best possible 1 (217.50 seconds)
Cbc0010I After 91 nodes, 6 on tree, 1e+50 best solution, best possible 1 (220.00 seconds)
Cbc0010I After 92 nodes, 7 on tree, 1e+50 best solution, best possible 1 (221.74 seconds)
Cbc0010I After 93 nodes, 8 on tree, 1e+50 best solution, best possible 1 (224.40 seconds)
Cbc0010I After 96 nodes, 7 on tree, 1e+50 best solution, best possible 1 (227.50 seconds)
Cbc0010I After 97 nodes, 8 on tree, 1e+50 best solution, best possible 1 (229.25 seconds)
Cbc0010I After 98 nodes, 9 on tree, 1e+50 best solution, best possible 1 (230.97 seconds)
Cbc0010I After 100 nodes, 8 on tree, 1e+50 best solution, best possible 1 (231.70 seconds)
Cbc0010I After 105 nodes, 3 on tree, 1e+50 best solution, best possible 1 (235.84 seconds)
Cbc0010I After 106 nodes, 3 on tree, 1e+50 best solution, best possible 1 (247.15 seconds)
Cbc0010I After 107 nodes, 4 on tree, 1e+50 best solution, best possible 1 (255.48 seconds)
Cbc0010I After 108 nodes, 5 on tree, 1e+50 best solution, best possible 1 (265.62 seconds)
Cbc0010I After 109 nodes, 6 on tree, 1e+50 best solution, best possible 1 (268.05 seconds)
Cbc0010I After 110 nodes, 6 on tree, 1e+50 best solution, best possible 1 (269.05 seconds)
Cbc0010I After 111 nodes, 6 on tree, 1e+50 best solution, best possible 1 (270.25 seconds)
Cbc0010I After 112 nodes, 7 on tree, 1e+50 best solution, best possible 1 (273.64 seconds)
Cbc0010I After 114 nodes, 7 on tree, 1e+50 best solution, best possible 1 (275.30 seconds)
Cbc0010I After 116 nodes, 9 on tree, 1e+50 best solution, best possible 1 (276.39 seconds)
Cbc0010I After 120 nodes, 7 on tree, 1e+50 best solution, best possible 1 (278.82 seconds)
Cbc0010I After 123 nodes, 6 on tree, 1e+50 best solution, best possible 1 (280.96 seconds)
Cbc0010I After 124 nodes, 7 on tree, 1e+50 best solution, best possible 1 (281.86 seconds)
Cbc0010I After 126 nodes, 8 on tree, 1e+50 best solution, best possible 1 (282.75 seconds)
Cbc0010I After 128 nodes, 8 on tree, 1e+50 best solution, best possible 1 (283.59 seconds)
Cbc0010I After 130 nodes, 7 on tree, 1e+50 best solution, best possible 1 (285.32 seconds)
Cbc0010I After 132 nodes, 7 on tree, 1e+50 best solution, best possible 1 (287.69 seconds)
Cbc0010I After 134 nodes, 7 on tree, 1e+50 best solution, best possible 1 (289.62 seconds)
Cbc0010I After 135 nodes, 7 on tree, 1e+50 best solution, best possible 1 (291.05 seconds)
Cbc0010I After 138 nodes, 5 on tree, 1e+50 best solution, best possible 1 (292.29 seconds)
Cbc0010I After 140 nodes, 6 on tree, 1e+50 best solution, best possible 1 (293.07 seconds)
Cbc0010I After 143 nodes, 4 on tree, 1e+50 best solution, best possible 1 (295.88 seconds)
Cbc0010I After 146 nodes, 2 on tree, 1e+50 best solution, best possible 1 (296.82 seconds)
Cbc0010I After 147 nodes, 2 on tree, 1e+50 best solution, best possible 1 (301.75 seconds)
Cbc0010I After 148 nodes, 3 on tree, 1e+50 best solution, best possible 1 (307.97 seconds)
Cbc0010I After 149 nodes, 3 on tree, 1e+50 best solution, best possible 1 (315.83 seconds)
Cbc0010I After 150 nodes, 2 on tree, 1e+50 best solution, best possible 1 (319.63 seconds)
Cbc0010I After 152 nodes, 1 on tree, 1e+50 best solution, best possible 2 (324.33 seconds)
Cbc0010I After 153 nodes, 2 on tree, 1e+50 best solution, best possible 2 (333.42 seconds)
Cbc0010I After 154 nodes, 3 on tree, 1e+50 best solution, best possible 2 (343.95 seconds)
Cbc0010I After 155 nodes, 4 on tree, 1e+50 best solution, best possible 2 (350.29 seconds)
Cbc0010I After 156 nodes, 5 on tree, 1e+50 best solution, best possible 2 (354.70 seconds)
Cbc0010I After 157 nodes, 6 on tree, 1e+50 best solution, best possible 2 (355.58 seconds)
Cbc0010I After 158 nodes, 7 on tree, 1e+50 best solution, best possible 2 (356.78 seconds)
Cbc0010I After 159 nodes, 8 on tree, 1e+50 best solution, best possible 2 (357.64 seconds)
Cbc0010I After 161 nodes, 10 on tree, 1e+50 best solution, best possible 2 (358.64 seconds)
Cbc0010I After 163 nodes, 11 on tree, 1e+50 best solution, best possible 2 (359.59 seconds)
Cbc0010I After 164 nodes, 12 on tree, 1e+50 best solution, best possible 2 (360.32 seconds)
Cbc0010I After 168 nodes, 12 on tree, 1e+50 best solution, best possible 2 (361.07 seconds)
Cbc0010I After 172 nodes, 13 on tree, 1e+50 best solution, best possible 2 (361.81 seconds)
Cbc0010I After 179 nodes, 12 on tree, 1e+50 best solution, best possible 2 (363.02 seconds)
Cbc0010I After 181 nodes, 13 on tree, 1e+50 best solution, best possible 2 (363.91 seconds)
Cbc0010I After 183 nodes, 13 on tree, 1e+50 best solution, best possible 2 (364.82 seconds)
Cbc0010I After 184 nodes, 14 on tree, 1e+50 best solution, best possible 2 (365.87 seconds)
Cbc0010I After 185 nodes, 14 on tree, 1e+50 best solution, best possible 2 (366.67 seconds)
Cbc0010I After 186 nodes, 15 on tree, 1e+50 best solution, best possible 2 (367.43 seconds)
Cbc0010I After 188 nodes, 16 on tree, 1e+50 best solution, best possible 2 (368.30 seconds)
Cbc0010I After 190 nodes, 16 on tree, 1e+50 best solution, best possible 2 (369.34 seconds)
Cbc0010I After 192 nodes, 17 on tree, 1e+50 best solution, best possible 2 (370.47 seconds)
Cbc0010I After 195 nodes, 18 on tree, 1e+50 best solution, best possible 2 (371.44 seconds)
Cbc0010I After 199 nodes, 16 on tree, 1e+50 best solution, best possible 2 (372.26 seconds)
Cbc0010I After 203 nodes, 16 on tree, 1e+50 best solution, best possible 2 (373.30 seconds)
Cbc0010I After 206 nodes, 16 on tree, 1e+50 best solution, best possible 2 (374.18 seconds)
Cbc0010I After 208 nodes, 17 on tree, 1e+50 best solution, best possible 2 (375.26 seconds)
Cbc0010I After 213 nodes, 17 on tree, 1e+50 best solution, best possible 2 (376.66 seconds)
Cbc0010I After 214 nodes, 18 on tree, 1e+50 best solution, best possible 2 (377.66 seconds)
Cbc0010I After 217 nodes, 17 on tree, 1e+50 best solution, best possible 2 (378.47 seconds)
Cbc0010I After 218 nodes, 18 on tree, 1e+50 best solution, best possible 2 (379.34 seconds)
Cbc0010I After 221 nodes, 19 on tree, 1e+50 best solution, best possible 2 (380.20 seconds)
Cbc0010I After 224 nodes, 21 on tree, 1e+50 best solution, best possible 2 (380.93 seconds)
Cbc0010I After 231 nodes, 18 on tree, 1e+50 best solution, best possible 2 (381.78 seconds)
Cbc0010I After 235 nodes, 15 on tree, 1e+50 best solution, best possible 2 (383.30 seconds)
Cbc0010I After 237 nodes, 17 on tree, 1e+50 best solution, best possible 2 (384.55 seconds)
Cbc0010I After 239 nodes, 16 on tree, 1e+50 best solution, best possible 2 (386.55 seconds)
Cbc0010I After 240 nodes, 16 on tree, 1e+50 best solution, best possible 2 (387.98 seconds)
Cbc0010I After 243 nodes, 18 on tree, 1e+50 best solution, best possible 2 (388.73 seconds)
Cbc0010I After 247 nodes, 18 on tree, 1e+50 best solution, best possible 2 (389.50 seconds)
Cbc0010I After 251 nodes, 18 on tree, 1e+50 best solution, best possible 2 (390.59 seconds)
Cbc0010I After 254 nodes, 19 on tree, 1e+50 best solution, best possible 2 (391.50 seconds)
Cbc0010I After 257 nodes, 18 on tree, 1e+50 best solution, best possible 2 (392.37 seconds)
Cbc0010I After 265 nodes, 17 on tree, 1e+50 best solution, best possible 2 (393.25 seconds)
Cbc0010I After 266 nodes, 18 on tree, 1e+50 best solution, best possible 2 (393.95 seconds)
Cbc0010I After 269 nodes, 19 on tree, 1e+50 best solution, best possible 2 (394.73 seconds)
Cbc0010I After 276 nodes, 18 on tree, 1e+50 best solution, best possible 2 (396.04 seconds)
Cbc0010I After 284 nodes, 15 on tree, 1e+50 best solution, best possible 2 (397.13 seconds)
Cbc0010I After 285 nodes, 16 on tree, 1e+50 best solution, best possible 2 (398.28 seconds)
Cbc0010I After 288 nodes, 16 on tree, 1e+50 best solution, best possible 2 (399.30 seconds)
Cbc0010I After 290 nodes, 16 on tree, 1e+50 best solution, best possible 2 (400.14 seconds)
Cbc0010I After 293 nodes, 15 on tree, 1e+50 best solution, best possible 2 (401.24 seconds)
Cbc0010I After 295 nodes, 17 on tree, 1e+50 best solution, best possible 2 (403.46 seconds)
Cbc0010I After 299 nodes, 19 on tree, 1e+50 best solution, best possible 2 (404.31 seconds)
Cbc0010I After 302 nodes, 19 on tree, 1e+50 best solution, best possible 2 (405.03 seconds)
Cbc0010I After 305 nodes, 20 on tree, 1e+50 best solution, best possible 2 (405.94 seconds)
Cbc0010I After 307 nodes, 21 on tree, 1e+50 best solution, best possible 2 (406.73 seconds)
Cbc0010I After 314 nodes, 21 on tree, 1e+50 best solution, best possible 2 (408.67 seconds)
Cbc0004I Integer solution of 2 found after 79633 iterations and 321 nodes (409.42 seconds)
Cbc0001I Search completed - best objective 2, took 79633 iterations and 321 nodes (409.42 seconds)
Cbc0032I Strong branching done 3100 times (86443 iterations), fathomed 5 nodes and fixed 45 variables
Cbc0035I Maximum depth 26, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 394 times and created 1990 cuts of which 0 were active after adding rounds of cuts (4.74236 seconds)
Gomory was tried 387 times and created 2024 cuts of which 0 were active after adding rounds of cuts (5.02606 seconds)
Knapsack was tried 387 times and created 404 cuts of which 0 were active after adding rounds of cuts (2.36531 seconds)
liftKnapsack was tried 387 times and created 8364 cuts of which 0 were active after adding rounds of cuts (339.535 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.079842 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.289397 seconds)
MixedIntegerRounding2 was tried 387 times and created 983 cuts of which 0 were active after adding rounds of cuts (1.21321 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.080614 seconds)
TwoMirCuts was tried 387 times and created 1478 cuts of which 0 were active after adding rounds of cuts (1.55997 seconds)
ZeroHalf was tried 387 times and created 2015 cuts of which 0 were active after adding rounds of cuts (2.4528 seconds)

Result - Optimal solution found
Objective value:                2
Enumerated nodes:               321
Total iterations:               79633
Time (CPU seconds):             399.032
Time (Wallclock seconds):       409.568
Total time (CPU seconds):       399.081   (Wallclock seconds):       409.664
