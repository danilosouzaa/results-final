Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3043/j3043_2.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 2.3137 - 0.121018 seconds
Cgl0002I 7 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 297 rows, 683 columns (683 integer (682 of which binary)) and 7441 elements
Coin3009W Conflict graph built in 0.021 seconds, density: 1.060%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 683 objects (683 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 84 integers unsatisfied sum - 27.4176
Cbc0038I Pass   1: suminf.    8.41140 (34) obj. 4 iterations 86
Cbc0038I Pass   2: suminf.    6.85062 (37) obj. 4 iterations 18
Cbc0038I Pass   3: suminf.    5.98768 (23) obj. 4 iterations 6
Cbc0038I Pass   4: suminf.    5.76545 (23) obj. 4 iterations 4
Cbc0038I Pass   5: suminf.    8.96488 (28) obj. 4 iterations 42
Cbc0038I Pass   6: suminf.    5.59902 (23) obj. 4 iterations 27
Cbc0038I Pass   7: suminf.    5.59902 (23) obj. 4 iterations 1
Cbc0038I Pass   8: suminf.    5.59902 (23) obj. 4 iterations 3
Cbc0038I Pass   9: suminf.    6.23084 (23) obj. 4 iterations 11
Cbc0038I Pass  10: suminf.   12.69206 (48) obj. 4 iterations 85
Cbc0038I Pass  11: suminf.    9.45680 (33) obj. 4 iterations 53
Cbc0038I Pass  12: suminf.    6.45680 (27) obj. 4 iterations 21
Cbc0038I Pass  13: suminf.    6.45680 (27) obj. 4 iterations 0
Cbc0038I Pass  14: suminf.    6.98126 (21) obj. 4 iterations 33
Cbc0038I Pass  15: suminf.    4.45761 (19) obj. 4 iterations 21
Cbc0038I Pass  16: suminf.    4.45761 (19) obj. 4 iterations 1
Cbc0038I Pass  17: suminf.    4.90761 (19) obj. 4 iterations 11
Cbc0038I Pass  18: suminf.   13.40369 (47) obj. 4 iterations 78
Cbc0038I Pass  19: suminf.    5.66791 (21) obj. 4 iterations 59
Cbc0038I Pass  20: suminf.    5.16791 (22) obj. 4 iterations 10
Cbc0038I Pass  21: suminf.    5.16791 (22) obj. 4 iterations 0
Cbc0038I Pass  22: suminf.    7.42173 (22) obj. 4 iterations 45
Cbc0038I Pass  23: suminf.    5.14038 (18) obj. 4 iterations 18
Cbc0038I Pass  24: suminf.    7.28205 (23) obj. 4 iterations 21
Cbc0038I Pass  25: suminf.    4.93205 (16) obj. 4 iterations 31
Cbc0038I Pass  26: suminf.    4.08205 (15) obj. 4 iterations 27
Cbc0038I Pass  27: suminf.    4.08205 (15) obj. 4 iterations 0
Cbc0038I Pass  28: suminf.    6.75507 (20) obj. 4 iterations 36
Cbc0038I Pass  29: suminf.    5.14038 (18) obj. 4 iterations 20
Cbc0038I Pass  30: suminf.   11.00404 (36) obj. 4 iterations 108
Cbc0038I Pass  31: suminf.    7.34790 (29) obj. 4 iterations 76
Cbc0038I Pass  32: suminf.    6.98018 (29) obj. 4 iterations 2
Cbc0038I Pass  33: suminf.    9.30038 (35) obj. 4 iterations 54
Cbc0038I Pass  34: suminf.    8.28869 (30) obj. 4 iterations 29
Cbc0038I Pass  35: suminf.    8.28869 (30) obj. 4 iterations 5
Cbc0038I Pass  36: suminf.    9.29821 (33) obj. 4 iterations 38
Cbc0038I Pass  37: suminf.    7.15377 (30) obj. 4 iterations 10
Cbc0038I Pass  38: suminf.    6.65377 (28) obj. 4 iterations 6
Cbc0038I Pass  39: suminf.    8.64636 (29) obj. 4 iterations 46
Cbc0038I Pass  40: suminf.    7.86255 (25) obj. 4 iterations 28
Cbc0038I Pass  41: suminf.    7.86255 (25) obj. 4 iterations 1
Cbc0038I Pass  42: suminf.   12.80298 (49) obj. 4 iterations 97
Cbc0038I Pass  43: suminf.    6.75057 (25) obj. 4 iterations 77
Cbc0038I Pass  44: suminf.    5.96270 (27) obj. 4 iterations 32
Cbc0038I Pass  45: suminf.    7.80049 (27) obj. 4 iterations 45
Cbc0038I Pass  46: suminf.    5.54000 (21) obj. 4 iterations 27
Cbc0038I Pass  47: suminf.    5.54000 (21) obj. 4 iterations 8
Cbc0038I Pass  48: suminf.    6.38182 (22) obj. 4 iterations 36
Cbc0038I Pass  49: suminf.    5.54000 (21) obj. 4 iterations 30
Cbc0038I Pass  50: suminf.   11.81385 (38) obj. 4 iterations 90
Cbc0038I Pass  51: suminf.    5.49697 (22) obj. 4 iterations 70
Cbc0038I Pass  52: suminf.    5.49697 (22) obj. 4 iterations 0
Cbc0038I Pass  53: suminf.    3.75644 (22) obj. 4 iterations 24
Cbc0038I Pass  54: suminf.    3.31061 (18) obj. 4 iterations 9
Cbc0038I Pass  55: suminf.    5.67727 (24) obj. 4 iterations 21
Cbc0038I Pass  56: suminf.    5.67727 (24) obj. 4 iterations 8
Cbc0038I Pass  57: suminf.    8.89720 (28) obj. 4 iterations 40
Cbc0038I Pass  58: suminf.    8.57156 (33) obj. 4 iterations 22
Cbc0038I Pass  59: suminf.    8.37156 (33) obj. 4 iterations 4
Cbc0038I Pass  60: suminf.    6.00629 (24) obj. 4 iterations 28
Cbc0038I Pass  61: suminf.    4.70629 (18) obj. 4 iterations 7
Cbc0038I Pass  62: suminf.    4.30629 (18) obj. 4 iterations 17
Cbc0038I Pass  63: suminf.    4.30629 (18) obj. 4 iterations 17
Cbc0038I Pass  64: suminf.    9.95610 (39) obj. 4 iterations 98
Cbc0038I Pass  65: suminf.    5.72738 (24) obj. 4 iterations 70
Cbc0038I Pass  66: suminf.    5.76701 (24) obj. 4 iterations 26
Cbc0038I Pass  67: suminf.    5.76701 (24) obj. 4 iterations 3
Cbc0038I Pass  68: suminf.    5.76701 (24) obj. 4 iterations 3
Cbc0038I Pass  69: suminf.    9.29764 (29) obj. 4 iterations 41
Cbc0038I Pass  70: suminf.    8.84350 (33) obj. 4 iterations 36
Cbc0038I Pass  71: suminf.    8.84350 (33) obj. 4 iterations 5
Cbc0038I Pass  72: suminf.    6.10629 (24) obj. 4 iterations 36
Cbc0038I Pass  73: suminf.    5.98129 (24) obj. 4 iterations 15
Cbc0038I Pass  74: suminf.    5.98129 (24) obj. 4 iterations 5
Cbc0038I Pass  75: suminf.    6.43156 (34) obj. 4 iterations 15
Cbc0038I Pass  76: suminf.   10.12581 (36) obj. 4 iterations 104
Cbc0038I Pass  77: suminf.    6.58571 (24) obj. 4 iterations 72
Cbc0038I Pass  78: suminf.    8.32900 (27) obj. 4 iterations 48
Cbc0038I Pass  79: suminf.    8.27758 (30) obj. 4 iterations 7
Cbc0038I Pass  80: suminf.    6.11439 (25) obj. 4 iterations 43
Cbc0038I Pass  81: suminf.    4.52424 (23) obj. 4 iterations 32
Cbc0038I Pass  82: suminf.    4.52424 (23) obj. 4 iterations 1
Cbc0038I Pass  83: suminf.    4.78384 (21) obj. 4 iterations 34
Cbc0038I Pass  84: suminf.    4.27008 (22) obj. 4 iterations 25
Cbc0038I Pass  85: suminf.    4.27008 (22) obj. 4 iterations 1
Cbc0038I Pass  86: suminf.    4.52424 (23) obj. 4 iterations 10
Cbc0038I Pass  87: suminf.    4.52424 (23) obj. 4 iterations 3
Cbc0038I Pass  88: suminf.    5.93939 (22) obj. 4 iterations 39
Cbc0038I Pass  89: suminf.    4.27008 (22) obj. 4 iterations 27
Cbc0038I Pass  90: suminf.    4.27008 (22) obj. 4 iterations 1
Cbc0038I Pass  91: suminf.    7.39148 (22) obj. 4 iterations 23
Cbc0038I Pass  92: suminf.    4.52424 (23) obj. 4 iterations 22
Cbc0038I Pass  93: suminf.    6.37273 (23) obj. 4 iterations 42
Cbc0038I Pass  94: suminf.    4.15758 (18) obj. 4 iterations 26
Cbc0038I Pass  95: suminf.    3.85758 (16) obj. 4 iterations 18
Cbc0038I Pass  96: suminf.    4.28939 (16) obj. 4 iterations 34
Cbc0038I Pass  97: suminf.    4.10758 (16) obj. 4 iterations 33
Cbc0038I Pass  98: suminf.    4.03939 (16) obj. 4 iterations 26
Cbc0038I Pass  99: suminf.    9.15591 (52) obj. 4 iterations 105
Cbc0038I Pass 100: suminf.   16.77190 (53) obj. 4 iterations 91
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 408 integers at bound fixed and 0 continuous
Cbc0038I Full problem 297 rows 683 columns, reduced to 236 rows 248 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.86 seconds)
Cbc0038I After 1.86 seconds - Feasibility pump exiting - took 0.54 seconds
Cbc0031I 62 added rows had average density of 82.032258
Cbc0013I At root node, 62 cuts changed objective from 2.3137026 to 4 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 242 row cuts average 6.1 elements, 5 column cuts (41 active)  in 0.384 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 210 row cuts average 529.5 elements, 0 column cuts (0 active)  in 0.599 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 131 row cuts average 16.3 elements, 0 column cuts (0 active)  in 6.684 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 134 row cuts average 45.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 247 row cuts average 247.9 elements, 0 column cuts (0 active)  in 0.600 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 112 row cuts average 45.4 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 4 (13.47 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 4 (15.12 seconds)
Cbc0012I Integer solution of 4 found by DiveCoefficient after 3192 iterations and 2 nodes (16.22 seconds)
Cbc0001I Search completed - best objective 4, took 3282 iterations and 2 nodes (16.24 seconds)
Cbc0032I Strong branching done 186 times (7909 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost
Cuts at root node changed objective from 2.3137 to 4
Probing was tried 13 times and created 329 cuts of which 36 were active after adding rounds of cuts (0.405646 seconds)
Gomory was tried 13 times and created 210 cuts of which 0 were active after adding rounds of cuts (0.607584 seconds)
Knapsack was tried 13 times and created 49 cuts of which 0 were active after adding rounds of cuts (0.139946 seconds)
liftKnapsack was tried 13 times and created 170 cuts of which 0 were active after adding rounds of cuts (8.91571 seconds)
Clique was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.011044 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.053406 seconds)
MixedIntegerRounding2 was tried 13 times and created 161 cuts of which 0 were active after adding rounds of cuts (0.067265 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003187 seconds)
TwoMirCuts was tried 13 times and created 279 cuts of which 0 were active after adding rounds of cuts (0.652675 seconds)
ZeroHalf was tried 13 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.115706 seconds)

Result - Optimal solution found
Objective value:                4
Enumerated nodes:               2
Total iterations:               3282
Time (CPU seconds):             16.2999
Time (Wallclock seconds):       16.2894
Total time (CPU seconds):       16.31   (Wallclock seconds):       16.3
