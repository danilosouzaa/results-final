Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3048/j3048_3.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0.482377 - 0.093129 seconds
Cgl0002I 12 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 300 rows, 775 columns (775 integer (774 of which binary)) and 12244 elements
Coin3009W Conflict graph built in 0.042 seconds, density: 1.227%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 775 objects (775 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 72 integers unsatisfied sum - 20.8062
Cbc0038I Pass   1: suminf.   13.61153 (53) obj. 1.26965 iterations 111
Cbc0038I Pass   2: suminf.    7.28902 (32) obj. 3 iterations 46
Cbc0038I Pass   3: suminf.    4.64068 (22) obj. 3 iterations 49
Cbc0038I Pass   4: suminf.    4.67443 (15) obj. 3 iterations 72
Cbc0038I Pass   5: suminf.    3.45903 (14) obj. 3 iterations 39
Cbc0038I Pass   6: suminf.    3.35511 (13) obj. 3 iterations 13
Cbc0038I Pass   7: suminf.    4.18084 (16) obj. 3 iterations 38
Cbc0038I Pass   8: suminf.    3.17331 (14) obj. 3 iterations 42
Cbc0038I Pass   9: suminf.    3.06940 (13) obj. 3 iterations 16
Cbc0038I Pass  10: suminf.    3.83730 (15) obj. 3 iterations 24
Cbc0038I Pass  11: suminf.    3.80083 (14) obj. 3 iterations 29
Cbc0038I Pass  12: suminf.    4.01872 (16) obj. 3 iterations 36
Cbc0038I Pass  13: suminf.    3.94717 (15) obj. 3 iterations 33
Cbc0038I Pass  14: suminf.    4.11504 (14) obj. 3 iterations 49
Cbc0038I Pass  15: suminf.    3.35511 (13) obj. 3 iterations 28
Cbc0038I Pass  16: suminf.    4.18084 (16) obj. 3 iterations 34
Cbc0038I Pass  17: suminf.    3.17331 (14) obj. 3 iterations 42
Cbc0038I Pass  18: suminf.    3.06940 (13) obj. 3 iterations 11
Cbc0038I Pass  19: suminf.    3.83730 (15) obj. 3 iterations 23
Cbc0038I Pass  20: suminf.    3.80083 (14) obj. 3 iterations 23
Cbc0038I Pass  21: suminf.    3.94717 (15) obj. 3 iterations 40
Cbc0038I Pass  22: suminf.    3.94717 (15) obj. 3 iterations 12
Cbc0038I Pass  23: suminf.    3.67348 (13) obj. 3 iterations 36
Cbc0038I Pass  24: suminf.    3.14082 (13) obj. 3 iterations 36
Cbc0038I Pass  25: suminf.    4.18084 (16) obj. 3 iterations 39
Cbc0038I Pass  26: suminf.    3.17331 (14) obj. 3 iterations 45
Cbc0038I Pass  27: suminf.    3.06940 (13) obj. 3 iterations 16
Cbc0038I Pass  28: suminf.    3.83730 (15) obj. 3 iterations 27
Cbc0038I Pass  29: suminf.    3.80083 (14) obj. 3 iterations 30
Cbc0038I Pass  30: suminf.    4.01872 (16) obj. 3 iterations 36
Cbc0038I Pass  31: suminf.    3.94717 (15) obj. 3 iterations 33
Cbc0038I Pass  32: suminf.    3.67348 (13) obj. 3 iterations 37
Cbc0038I Pass  33: suminf.    3.14082 (13) obj. 3 iterations 32
Cbc0038I Pass  34: suminf.    4.18084 (16) obj. 3 iterations 35
Cbc0038I Pass  35: suminf.    3.17331 (14) obj. 3 iterations 46
Cbc0038I Pass  36: suminf.    3.06940 (13) obj. 3 iterations 12
Cbc0038I Pass  37: suminf.    3.83730 (15) obj. 3 iterations 29
Cbc0038I Pass  38: suminf.    3.80083 (14) obj. 3 iterations 27
Cbc0038I Pass  39: suminf.    4.01872 (16) obj. 3 iterations 40
Cbc0038I Pass  40: suminf.    3.94717 (15) obj. 3 iterations 33
Cbc0038I Pass  41: suminf.    4.11504 (14) obj. 3 iterations 53
Cbc0038I Pass  42: suminf.    3.35511 (13) obj. 3 iterations 33
Cbc0038I Pass  43: suminf.    4.18084 (16) obj. 3 iterations 37
Cbc0038I Pass  44: suminf.    3.17331 (14) obj. 3 iterations 50
Cbc0038I Pass  45: suminf.    3.06940 (13) obj. 3 iterations 16
Cbc0038I Pass  46: suminf.    3.83730 (15) obj. 3 iterations 29
Cbc0038I Pass  47: suminf.    3.80083 (14) obj. 3 iterations 29
Cbc0038I Pass  48: suminf.    4.01872 (16) obj. 3 iterations 40
Cbc0038I Pass  49: suminf.    3.94717 (15) obj. 3 iterations 37
Cbc0038I Pass  50: suminf.    4.11504 (14) obj. 3 iterations 51
Cbc0038I Pass  51: suminf.    3.35511 (13) obj. 3 iterations 31
Cbc0038I Pass  52: suminf.    4.18084 (16) obj. 3 iterations 39
Cbc0038I Pass  53: suminf.    3.17331 (14) obj. 3 iterations 41
Cbc0038I Pass  54: suminf.    3.06940 (13) obj. 3 iterations 15
Cbc0038I Pass  55: suminf.    3.83730 (15) obj. 3 iterations 31
Cbc0038I Pass  56: suminf.    3.80083 (14) obj. 3 iterations 25
Cbc0038I Pass  57: suminf.    4.01872 (16) obj. 3 iterations 38
Cbc0038I Pass  58: suminf.    3.94717 (15) obj. 3 iterations 33
Cbc0038I Pass  59: suminf.    3.44838 (12) obj. 3 iterations 56
Cbc0038I Pass  60: suminf.    3.35511 (13) obj. 3 iterations 28
Cbc0038I Pass  61: suminf.    4.18084 (16) obj. 3 iterations 34
Cbc0038I Pass  62: suminf.    3.17331 (14) obj. 3 iterations 45
Cbc0038I Pass  63: suminf.    3.06940 (13) obj. 3 iterations 12
Cbc0038I Pass  64: suminf.    3.83730 (15) obj. 3 iterations 28
Cbc0038I Pass  65: suminf.    3.80083 (14) obj. 3 iterations 28
Cbc0038I Pass  66: suminf.    4.01872 (16) obj. 3 iterations 37
Cbc0038I Pass  67: suminf.    3.94717 (15) obj. 3 iterations 36
Cbc0038I Pass  68: suminf.    4.11504 (14) obj. 3 iterations 51
Cbc0038I Pass  69: suminf.    3.35511 (13) obj. 3 iterations 29
Cbc0038I Pass  70: suminf.    4.18084 (16) obj. 3 iterations 36
Cbc0038I Pass  71: suminf.    3.17331 (14) obj. 3 iterations 49
Cbc0038I Pass  72: suminf.    3.06940 (13) obj. 3 iterations 15
Cbc0038I Pass  73: suminf.    3.83730 (15) obj. 3 iterations 29
Cbc0038I Pass  74: suminf.    3.80083 (14) obj. 3 iterations 29
Cbc0038I Pass  75: suminf.    4.01872 (16) obj. 3 iterations 36
Cbc0038I Pass  76: suminf.    3.94717 (15) obj. 3 iterations 30
Cbc0038I Pass  77: suminf.    4.11504 (14) obj. 3 iterations 48
Cbc0038I Pass  78: suminf.    3.35511 (13) obj. 3 iterations 26
Cbc0038I Pass  79: suminf.    4.18084 (16) obj. 3 iterations 30
Cbc0038I Pass  80: suminf.    3.17331 (14) obj. 3 iterations 39
Cbc0038I Pass  81: suminf.    3.06940 (13) obj. 3 iterations 14
Cbc0038I Pass  82: suminf.    3.35511 (13) obj. 3 iterations 19
Cbc0038I Pass  83: suminf.    3.35511 (13) obj. 3 iterations 24
Cbc0038I Pass  84: suminf.    4.18084 (16) obj. 3 iterations 30
Cbc0038I Pass  85: suminf.    3.17331 (14) obj. 3 iterations 40
Cbc0038I Pass  86: suminf.    3.06940 (13) obj. 3 iterations 14
Cbc0038I Pass  87: suminf.    3.35511 (13) obj. 3 iterations 22
Cbc0038I Pass  88: suminf.    3.35511 (13) obj. 3 iterations 20
Cbc0038I Pass  89: suminf.    4.18084 (16) obj. 3 iterations 28
Cbc0038I Pass  90: suminf.    3.17331 (14) obj. 3 iterations 42
Cbc0038I Pass  91: suminf.    3.06940 (13) obj. 3 iterations 14
Cbc0038I Pass  92: suminf.    3.83730 (15) obj. 3 iterations 28
Cbc0038I Pass  93: suminf.    3.80083 (14) obj. 3 iterations 24
Cbc0038I Pass  94: suminf.    4.01872 (16) obj. 3 iterations 34
Cbc0038I Pass  95: suminf.    3.94717 (15) obj. 3 iterations 32
Cbc0038I Pass  96: suminf.    4.11504 (14) obj. 3 iterations 55
Cbc0038I Pass  97: suminf.    3.35511 (13) obj. 3 iterations 29
Cbc0038I Pass  98: suminf.    4.18084 (16) obj. 3 iterations 30
Cbc0038I Pass  99: suminf.    3.17331 (14) obj. 3 iterations 43
Cbc0038I Pass 100: suminf.    9.38015 (33) obj. 3 iterations 135
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 640 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (4.19 seconds)
Cbc0038I After 4.19 seconds - Feasibility pump exiting - took 2.73 seconds
Cbc0031I 47 added rows had average density of 58.978723
Cbc0013I At root node, 47 cuts changed objective from 0.48237664 to 2 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 237 row cuts average 12.2 elements, 2 column cuts (38 active)  in 0.531 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 229 row cuts average 527.1 elements, 0 column cuts (0 active)  in 0.539 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 130 row cuts average 26.6 elements, 0 column cuts (0 active)  in 29.963 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 4 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 152 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 315 row cuts average 168.8 elements, 0 column cuts (0 active)  in 0.355 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 97 row cuts average 58.1 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2 (37.29 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2 (41.83 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2 (49.08 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2 (56.31 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 2 (61.12 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 2 (72.00 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 2 (73.74 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 2 (76.71 seconds)
Cbc0010I After 9 nodes, 7 on tree, 1e+50 best solution, best possible 2 (78.09 seconds)
Cbc0010I After 13 nodes, 4 on tree, 1e+50 best solution, best possible 2 (84.97 seconds)
Cbc0010I After 14 nodes, 5 on tree, 1e+50 best solution, best possible 2 (92.55 seconds)
Cbc0010I After 15 nodes, 6 on tree, 1e+50 best solution, best possible 2 (98.48 seconds)
Cbc0010I After 16 nodes, 6 on tree, 1e+50 best solution, best possible 2 (100.94 seconds)
Cbc0010I After 19 nodes, 3 on tree, 1e+50 best solution, best possible 2 (105.05 seconds)
Cbc0010I After 20 nodes, 3 on tree, 1e+50 best solution, best possible 2 (110.29 seconds)
Cbc0010I After 21 nodes, 4 on tree, 1e+50 best solution, best possible 2 (119.45 seconds)
Cbc0010I After 22 nodes, 5 on tree, 1e+50 best solution, best possible 2 (124.67 seconds)
Cbc0010I After 23 nodes, 6 on tree, 1e+50 best solution, best possible 2 (125.84 seconds)
Cbc0010I After 24 nodes, 7 on tree, 1e+50 best solution, best possible 2 (127.97 seconds)
Cbc0010I After 25 nodes, 8 on tree, 1e+50 best solution, best possible 2 (131.64 seconds)
Cbc0010I After 26 nodes, 8 on tree, 1e+50 best solution, best possible 2 (135.98 seconds)
Cbc0010I After 27 nodes, 8 on tree, 1e+50 best solution, best possible 2 (139.86 seconds)
Cbc0010I After 29 nodes, 7 on tree, 1e+50 best solution, best possible 2 (143.92 seconds)
Cbc0010I After 35 nodes, 2 on tree, 1e+50 best solution, best possible 2 (150.66 seconds)
Cbc0010I After 36 nodes, 3 on tree, 1e+50 best solution, best possible 2 (156.59 seconds)
Cbc0010I After 37 nodes, 4 on tree, 1e+50 best solution, best possible 2 (162.76 seconds)
Cbc0010I After 38 nodes, 5 on tree, 1e+50 best solution, best possible 2 (169.61 seconds)
Cbc0010I After 39 nodes, 6 on tree, 1e+50 best solution, best possible 2 (172.02 seconds)
Cbc0010I After 40 nodes, 7 on tree, 1e+50 best solution, best possible 2 (174.73 seconds)
Cbc0010I After 41 nodes, 8 on tree, 1e+50 best solution, best possible 2 (176.02 seconds)
Cbc0010I After 42 nodes, 8 on tree, 1e+50 best solution, best possible 2 (179.31 seconds)
Cbc0010I After 43 nodes, 8 on tree, 1e+50 best solution, best possible 2 (180.79 seconds)
Cbc0010I After 47 nodes, 7 on tree, 1e+50 best solution, best possible 2 (185.18 seconds)
Cbc0010I After 49 nodes, 6 on tree, 1e+50 best solution, best possible 2 (188.06 seconds)
Cbc0010I After 56 nodes, 3 on tree, 1e+50 best solution, best possible 2 (195.04 seconds)
Cbc0010I After 57 nodes, 4 on tree, 1e+50 best solution, best possible 2 (201.67 seconds)
Cbc0010I After 58 nodes, 5 on tree, 1e+50 best solution, best possible 2 (202.51 seconds)
Cbc0010I After 59 nodes, 5 on tree, 1e+50 best solution, best possible 2 (204.55 seconds)
Cbc0010I After 61 nodes, 4 on tree, 1e+50 best solution, best possible 2 (206.71 seconds)
Cbc0010I After 62 nodes, 4 on tree, 1e+50 best solution, best possible 2 (209.87 seconds)
Cbc0010I After 64 nodes, 3 on tree, 1e+50 best solution, best possible 2 (217.36 seconds)
Cbc0010I After 65 nodes, 4 on tree, 1e+50 best solution, best possible 2 (220.15 seconds)
Cbc0010I After 68 nodes, 5 on tree, 1e+50 best solution, best possible 2 (221.07 seconds)
Cbc0010I After 69 nodes, 6 on tree, 1e+50 best solution, best possible 2 (222.80 seconds)
Cbc0010I After 72 nodes, 5 on tree, 1e+50 best solution, best possible 2 (224.86 seconds)
Cbc0010I After 76 nodes, 3 on tree, 1e+50 best solution, best possible 2 (227.28 seconds)
Cbc0010I After 77 nodes, 4 on tree, 1e+50 best solution, best possible 2 (228.51 seconds)
Cbc0010I After 78 nodes, 3 on tree, 1e+50 best solution, best possible 2 (231.93 seconds)
Cbc0010I After 79 nodes, 4 on tree, 1e+50 best solution, best possible 2 (237.82 seconds)
Cbc0010I After 81 nodes, 4 on tree, 1e+50 best solution, best possible 2 (240.48 seconds)
Cbc0010I After 82 nodes, 4 on tree, 1e+50 best solution, best possible 2 (243.28 seconds)
Cbc0010I After 84 nodes, 3 on tree, 1e+50 best solution, best possible 2 (245.17 seconds)
Cbc0010I After 85 nodes, 3 on tree, 1e+50 best solution, best possible 2 (249.15 seconds)
Cbc0010I After 88 nodes, 1 on tree, 1e+50 best solution, best possible 3 (254.03 seconds)
Cbc0010I After 89 nodes, 2 on tree, 1e+50 best solution, best possible 3 (255.21 seconds)
Cbc0010I After 90 nodes, 3 on tree, 1e+50 best solution, best possible 3 (256.65 seconds)
Cbc0010I After 91 nodes, 4 on tree, 1e+50 best solution, best possible 3 (258.69 seconds)
Cbc0010I After 92 nodes, 5 on tree, 1e+50 best solution, best possible 3 (260.33 seconds)
Cbc0010I After 93 nodes, 6 on tree, 1e+50 best solution, best possible 3 (261.48 seconds)
Cbc0010I After 94 nodes, 7 on tree, 1e+50 best solution, best possible 3 (262.72 seconds)
Cbc0010I After 95 nodes, 7 on tree, 1e+50 best solution, best possible 3 (266.90 seconds)
Cbc0010I After 96 nodes, 8 on tree, 1e+50 best solution, best possible 3 (268.85 seconds)
Cbc0010I After 99 nodes, 10 on tree, 1e+50 best solution, best possible 3 (269.82 seconds)
Cbc0010I After 104 nodes, 13 on tree, 1e+50 best solution, best possible 3 (270.54 seconds)
Cbc0010I After 113 nodes, 16 on tree, 1e+50 best solution, best possible 3 (271.30 seconds)
Cbc0004I Integer solution of 3 found after 17708 iterations and 114 nodes (271.38 seconds)
Cbc0001I Search completed - best objective 3, took 17708 iterations and 114 nodes (271.38 seconds)
Cbc0032I Strong branching done 1532 times (39215 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 16, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0.482377 to 2
Probing was tried 115 times and created 1494 cuts of which 36 were active after adding rounds of cuts (1.15397 seconds)
Gomory was tried 10 times and created 229 cuts of which 0 were active after adding rounds of cuts (0.539308 seconds)
Knapsack was tried 114 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.748959 seconds)
liftKnapsack was tried 114 times and created 986 cuts of which 0 were active after adding rounds of cuts (248.571 seconds)
Clique was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.009451 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.046017 seconds)
MixedIntegerRounding2 was tried 114 times and created 951 cuts of which 0 were active after adding rounds of cuts (0.6547 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00431 seconds)
TwoMirCuts was tried 114 times and created 596 cuts of which 0 were active after adding rounds of cuts (0.59147 seconds)
ZeroHalf was tried 114 times and created 663 cuts of which 0 were active after adding rounds of cuts (0.697866 seconds)

Result - Optimal solution found
Objective value:                3
Enumerated nodes:               114
Total iterations:               17708
Time (CPU seconds):             271.181
Time (Wallclock seconds):       271.44
Total time (CPU seconds):       271.216   (Wallclock seconds):       271.469
