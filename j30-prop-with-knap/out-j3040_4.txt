Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3040/j3040_4.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 10.1686 - 0.149072 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 348 rows, 1436 columns (1436 integer (1435 of which binary)) and 23400 elements
Coin3009W Conflict graph built in 0.127 seconds, density: 0.853%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1436 objects (1436 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 93 integers unsatisfied sum - 23.5732
Cbc0038I Pass   1: suminf.   11.38926 (54) obj. 12 iterations 168
Cbc0038I Pass   2: suminf.    9.86046 (43) obj. 12 iterations 52
Cbc0038I Pass   3: suminf.   10.20027 (43) obj. 12 iterations 50
Cbc0038I Pass   4: suminf.    9.56560 (48) obj. 12 iterations 18
Cbc0038I Pass   5: suminf.    9.56560 (48) obj. 12 iterations 3
Cbc0038I Pass   6: suminf.   11.34106 (45) obj. 12 iterations 47
Cbc0038I Pass   7: suminf.   10.64594 (48) obj. 12 iterations 30
Cbc0038I Pass   8: suminf.   11.83042 (43) obj. 12 iterations 47
Cbc0038I Pass   9: suminf.   10.07131 (43) obj. 12 iterations 42
Cbc0038I Pass  10: suminf.    9.77980 (45) obj. 12 iterations 12
Cbc0038I Pass  11: suminf.   11.59079 (42) obj. 12 iterations 52
Cbc0038I Pass  12: suminf.   10.15708 (45) obj. 12 iterations 48
Cbc0038I Pass  13: suminf.   10.33011 (47) obj. 12 iterations 22
Cbc0038I Pass  14: suminf.   10.04596 (45) obj. 12 iterations 22
Cbc0038I Pass  15: suminf.   11.92585 (45) obj. 12 iterations 55
Cbc0038I Pass  16: suminf.   10.61705 (43) obj. 12 iterations 38
Cbc0038I Pass  17: suminf.   11.47968 (42) obj. 12 iterations 54
Cbc0038I Pass  18: suminf.   18.29935 (67) obj. 12 iterations 126
Cbc0038I Pass  19: suminf.   14.12496 (61) obj. 12 iterations 95
Cbc0038I Pass  20: suminf.   14.12496 (61) obj. 12 iterations 1
Cbc0038I Pass  21: suminf.   15.92920 (61) obj. 12 iterations 66
Cbc0038I Pass  22: suminf.   12.27982 (63) obj. 12 iterations 39
Cbc0038I Pass  23: suminf.   11.28832 (58) obj. 12 iterations 28
Cbc0038I Pass  24: suminf.   11.06610 (58) obj. 12 iterations 2
Cbc0038I Pass  25: suminf.   11.34843 (60) obj. 12 iterations 15
Cbc0038I Pass  26: suminf.   17.69645 (65) obj. 12 iterations 132
Cbc0038I Pass  27: suminf.   11.25549 (57) obj. 12 iterations 107
Cbc0038I Pass  28: suminf.    9.51440 (56) obj. 12 iterations 46
Cbc0038I Pass  29: suminf.   11.60538 (54) obj. 12 iterations 59
Cbc0038I Pass  30: suminf.   10.26951 (46) obj. 12 iterations 36
Cbc0038I Pass  31: suminf.   10.38337 (50) obj. 12 iterations 28
Cbc0038I Pass  32: suminf.   10.03080 (56) obj. 12 iterations 36
Cbc0038I Pass  33: suminf.    9.47521 (45) obj. 12 iterations 35
Cbc0038I Pass  34: suminf.    9.20178 (50) obj. 12 iterations 21
Cbc0038I Pass  35: suminf.   10.81973 (45) obj. 12 iterations 40
Cbc0038I Pass  36: suminf.   10.51239 (50) obj. 12 iterations 29
Cbc0038I Pass  37: suminf.   10.53098 (45) obj. 12 iterations 39
Cbc0038I Pass  38: suminf.    9.96268 (50) obj. 12 iterations 30
Cbc0038I Pass  39: suminf.   10.77211 (45) obj. 12 iterations 31
Cbc0038I Pass  40: suminf.   18.04356 (60) obj. 12 iterations 132
Cbc0038I Pass  41: suminf.   10.58685 (49) obj. 12 iterations 97
Cbc0038I Pass  42: suminf.    9.83685 (47) obj. 12 iterations 6
Cbc0038I Pass  43: suminf.   10.49155 (51) obj. 12 iterations 92
Cbc0038I Pass  44: suminf.    8.81170 (49) obj. 12 iterations 44
Cbc0038I Pass  45: suminf.    8.55373 (50) obj. 12 iterations 9
Cbc0038I Pass  46: suminf.    9.13371 (52) obj. 12 iterations 45
Cbc0038I Pass  47: suminf.    8.79590 (51) obj. 12 iterations 28
Cbc0038I Pass  48: suminf.    9.47457 (42) obj. 12 iterations 78
Cbc0038I Pass  49: suminf.    8.48075 (44) obj. 12 iterations 33
Cbc0038I Pass  50: suminf.    9.41208 (45) obj. 12 iterations 77
Cbc0038I Pass  51: suminf.    8.75916 (50) obj. 12 iterations 36
Cbc0038I Pass  52: suminf.    9.98695 (51) obj. 12 iterations 46
Cbc0038I Pass  53: suminf.    9.63494 (49) obj. 12 iterations 35
Cbc0038I Pass  54: suminf.    9.35004 (50) obj. 12 iterations 7
Cbc0038I Pass  55: suminf.    8.42544 (50) obj. 12 iterations 25
Cbc0038I Pass  56: suminf.    8.38336 (43) obj. 12 iterations 24
Cbc0038I Pass  57: suminf.   10.57305 (59) obj. 12 iterations 64
Cbc0038I Pass  58: suminf.    9.09862 (41) obj. 12 iterations 44
Cbc0038I Pass  59: suminf.    9.09862 (41) obj. 12 iterations 2
Cbc0038I Pass  60: suminf.    9.92398 (44) obj. 12 iterations 54
Cbc0038I Pass  61: suminf.    8.50500 (46) obj. 12 iterations 34
Cbc0038I Pass  62: suminf.   10.88097 (45) obj. 12 iterations 52
Cbc0038I Pass  63: suminf.    9.11355 (43) obj. 12 iterations 41
Cbc0038I Pass  64: suminf.    9.09862 (41) obj. 12 iterations 9
Cbc0038I Pass  65: suminf.    9.59080 (46) obj. 12 iterations 50
Cbc0038I Pass  66: suminf.    7.95954 (45) obj. 12 iterations 65
Cbc0038I Pass  67: suminf.    7.95954 (45) obj. 12 iterations 0
Cbc0038I Pass  68: suminf.    8.60939 (40) obj. 12 iterations 42
Cbc0038I Pass  69: suminf.    8.60939 (39) obj. 12 iterations 26
Cbc0038I Pass  70: suminf.    8.46696 (40) obj. 12 iterations 10
Cbc0038I Pass  71: suminf.    9.47278 (46) obj. 12 iterations 56
Cbc0038I Pass  72: suminf.    9.06055 (46) obj. 12 iterations 22
Cbc0038I Pass  73: suminf.    8.86913 (40) obj. 12 iterations 38
Cbc0038I Pass  74: suminf.    8.86913 (39) obj. 12 iterations 22
Cbc0038I Pass  75: suminf.    8.72670 (40) obj. 12 iterations 8
Cbc0038I Pass  76: suminf.    9.61474 (44) obj. 12 iterations 50
Cbc0038I Pass  77: suminf.    8.49535 (44) obj. 12 iterations 26
Cbc0038I Pass  78: suminf.    8.40051 (44) obj. 12 iterations 13
Cbc0038I Pass  79: suminf.    9.66744 (56) obj. 12 iterations 82
Cbc0038I Pass  80: suminf.    7.87850 (43) obj. 12 iterations 47
Cbc0038I Pass  81: suminf.    9.39730 (44) obj. 12 iterations 71
Cbc0038I Pass  82: suminf.    7.64528 (41) obj. 12 iterations 65
Cbc0038I Pass  83: suminf.    7.64528 (41) obj. 12 iterations 0
Cbc0038I Pass  84: suminf.    8.99001 (45) obj. 12 iterations 61
Cbc0038I Pass  85: suminf.    7.61876 (43) obj. 12 iterations 43
Cbc0038I Pass  86: suminf.    8.86165 (43) obj. 12 iterations 69
Cbc0038I Pass  87: suminf.    8.40051 (44) obj. 12 iterations 38
Cbc0038I Pass  88: suminf.    9.66744 (56) obj. 12 iterations 72
Cbc0038I Pass  89: suminf.    7.87850 (43) obj. 12 iterations 45
Cbc0038I Pass  90: suminf.    9.39730 (44) obj. 12 iterations 72
Cbc0038I Pass  91: suminf.    7.64528 (41) obj. 12 iterations 64
Cbc0038I Pass  92: suminf.    7.64528 (41) obj. 12 iterations 0
Cbc0038I Pass  93: suminf.    8.99001 (45) obj. 12 iterations 61
Cbc0038I Pass  94: suminf.    7.61876 (43) obj. 12 iterations 48
Cbc0038I Pass  95: suminf.    8.86854 (43) obj. 12 iterations 66
Cbc0038I Pass  96: suminf.    8.40051 (44) obj. 12 iterations 35
Cbc0038I Pass  97: suminf.    9.66744 (56) obj. 12 iterations 77
Cbc0038I Pass  98: suminf.    7.87850 (43) obj. 12 iterations 44
Cbc0038I Pass  99: suminf.    7.62526 (41) obj. 12 iterations 59
Cbc0038I Pass 100: suminf.   16.19163 (59) obj. 12 iterations 105
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1104 integers at bound fixed and 0 continuous
Cbc0038I Full problem 348 rows 1436 columns, reduced to 238 rows 296 columns
Cbc0038I Mini branch and bound did not improve solution (3.52 seconds)
Cbc0038I After 3.52 seconds - Feasibility pump exiting - took 1.29 seconds
Cbc0031I 68 added rows had average density of 75.308824
Cbc0013I At root node, 68 cuts changed objective from 10.168627 to 11 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 270 row cuts average 19.2 elements, 37 column cuts (37 active)  in 1.290 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 21 row cuts average 136.3 elements, 0 column cuts (0 active)  in 0.467 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 166 row cuts average 43.4 elements, 0 column cuts (0 active)  in 17.244 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 273 row cuts average 87.8 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 179 row cuts average 199.1 elements, 0 column cuts (0 active)  in 0.317 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 154 row cuts average 92.3 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 11 (25.84 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 11 (30.15 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 11 (35.42 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 11 (38.93 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 11 (44.41 seconds)
Cbc0010I After 8 nodes, 3 on tree, 1e+50 best solution, best possible 11 (47.07 seconds)
Cbc0010I After 11 nodes, 2 on tree, 1e+50 best solution, best possible 11 (54.34 seconds)
Cbc0010I After 14 nodes, 1 on tree, 1e+50 best solution, best possible 12 (56.90 seconds)
Cbc0010I After 15 nodes, 2 on tree, 1e+50 best solution, best possible 12 (60.55 seconds)
Cbc0010I After 16 nodes, 3 on tree, 1e+50 best solution, best possible 12 (67.03 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 12 (71.78 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible 12 (79.36 seconds)
Cbc0010I After 19 nodes, 6 on tree, 1e+50 best solution, best possible 12 (80.99 seconds)
Cbc0010I After 27 nodes, 9 on tree, 1e+50 best solution, best possible 12 (83.47 seconds)
Cbc0010I After 46 nodes, 10 on tree, 1e+50 best solution, best possible 12 (85.52 seconds)
Cbc0010I After 53 nodes, 8 on tree, 1e+50 best solution, best possible 12 (88.42 seconds)
Cbc0010I After 67 nodes, 10 on tree, 1e+50 best solution, best possible 12 (92.48 seconds)
Cbc0010I After 76 nodes, 11 on tree, 1e+50 best solution, best possible 12 (95.86 seconds)
Cbc0010I After 89 nodes, 11 on tree, 1e+50 best solution, best possible 12 (99.30 seconds)
Cbc0010I After 101 nodes, 11 on tree, 1e+50 best solution, best possible 12 (101.24 seconds)
Cbc0010I After 120 nodes, 9 on tree, 1e+50 best solution, best possible 12 (104.92 seconds)
Cbc0010I After 129 nodes, 11 on tree, 1e+50 best solution, best possible 12 (106.49 seconds)
Cbc0010I After 138 nodes, 5 on tree, 1e+50 best solution, best possible 12 (112.30 seconds)
Cbc0010I After 144 nodes, 9 on tree, 1e+50 best solution, best possible 12 (118.95 seconds)
Cbc0010I After 156 nodes, 9 on tree, 1e+50 best solution, best possible 12 (121.00 seconds)
Cbc0010I After 169 nodes, 4 on tree, 1e+50 best solution, best possible 12 (128.09 seconds)
Cbc0010I After 170 nodes, 5 on tree, 1e+50 best solution, best possible 12 (131.95 seconds)
Cbc0010I After 182 nodes, 7 on tree, 1e+50 best solution, best possible 12 (135.50 seconds)
Cbc0010I After 183 nodes, 7 on tree, 1e+50 best solution, best possible 12 (138.50 seconds)
Cbc0010I After 192 nodes, 8 on tree, 1e+50 best solution, best possible 12 (140.30 seconds)
Cbc0010I After 208 nodes, 8 on tree, 1e+50 best solution, best possible 12 (141.01 seconds)
Cbc0010I After 209 nodes, 8 on tree, 1e+50 best solution, best possible 12 (144.47 seconds)
Cbc0010I After 215 nodes, 9 on tree, 1e+50 best solution, best possible 12 (145.40 seconds)
Cbc0010I After 230 nodes, 13 on tree, 1e+50 best solution, best possible 12 (146.10 seconds)
Cbc0010I After 242 nodes, 8 on tree, 1e+50 best solution, best possible 12 (150.20 seconds)
Cbc0010I After 248 nodes, 8 on tree, 1e+50 best solution, best possible 12 (152.63 seconds)
Cbc0010I After 251 nodes, 8 on tree, 1e+50 best solution, best possible 12 (154.87 seconds)
Cbc0010I After 263 nodes, 9 on tree, 1e+50 best solution, best possible 12 (157.16 seconds)
Cbc0010I After 270 nodes, 7 on tree, 1e+50 best solution, best possible 12 (158.08 seconds)
Cbc0010I After 273 nodes, 7 on tree, 1e+50 best solution, best possible 12 (158.81 seconds)
Cbc0010I After 275 nodes, 8 on tree, 1e+50 best solution, best possible 12 (159.85 seconds)
Cbc0010I After 278 nodes, 7 on tree, 1e+50 best solution, best possible 12 (163.13 seconds)
Cbc0010I After 279 nodes, 6 on tree, 1e+50 best solution, best possible 12 (165.30 seconds)
Cbc0010I After 286 nodes, 6 on tree, 1e+50 best solution, best possible 12 (167.62 seconds)
Cbc0010I After 297 nodes, 9 on tree, 1e+50 best solution, best possible 12 (171.93 seconds)
Cbc0010I After 305 nodes, 12 on tree, 1e+50 best solution, best possible 12 (173.93 seconds)
Cbc0010I After 312 nodes, 12 on tree, 1e+50 best solution, best possible 12 (174.86 seconds)
Cbc0010I After 321 nodes, 14 on tree, 1e+50 best solution, best possible 12 (177.63 seconds)
Cbc0010I After 328 nodes, 17 on tree, 1e+50 best solution, best possible 12 (179.10 seconds)
Cbc0010I After 334 nodes, 13 on tree, 1e+50 best solution, best possible 12 (181.40 seconds)
Cbc0010I After 342 nodes, 13 on tree, 1e+50 best solution, best possible 12 (184.63 seconds)
Cbc0010I After 353 nodes, 12 on tree, 1e+50 best solution, best possible 12 (186.87 seconds)
Cbc0010I After 365 nodes, 10 on tree, 1e+50 best solution, best possible 12 (187.90 seconds)
Cbc0010I After 383 nodes, 9 on tree, 1e+50 best solution, best possible 12 (190.05 seconds)
Cbc0010I After 394 nodes, 7 on tree, 1e+50 best solution, best possible 12 (192.10 seconds)
Cbc0010I After 403 nodes, 11 on tree, 1e+50 best solution, best possible 12 (194.84 seconds)
Cbc0010I After 411 nodes, 9 on tree, 1e+50 best solution, best possible 12 (196.95 seconds)
Cbc0010I After 419 nodes, 10 on tree, 1e+50 best solution, best possible 12 (199.67 seconds)
Cbc0010I After 425 nodes, 7 on tree, 1e+50 best solution, best possible 12 (202.31 seconds)
Cbc0010I After 430 nodes, 11 on tree, 1e+50 best solution, best possible 12 (204.79 seconds)
Cbc0010I After 438 nodes, 7 on tree, 1e+50 best solution, best possible 12 (206.86 seconds)
Cbc0010I After 446 nodes, 8 on tree, 1e+50 best solution, best possible 12 (211.20 seconds)
Cbc0010I After 452 nodes, 7 on tree, 1e+50 best solution, best possible 12 (214.01 seconds)
Cbc0010I After 465 nodes, 7 on tree, 1e+50 best solution, best possible 12 (217.34 seconds)
Cbc0010I After 473 nodes, 9 on tree, 1e+50 best solution, best possible 12 (220.86 seconds)
Cbc0010I After 482 nodes, 9 on tree, 1e+50 best solution, best possible 12 (221.57 seconds)
Cbc0010I After 497 nodes, 8 on tree, 1e+50 best solution, best possible 12 (225.30 seconds)
Cbc0010I After 503 nodes, 12 on tree, 1e+50 best solution, best possible 12 (226.62 seconds)
Cbc0010I After 506 nodes, 12 on tree, 1e+50 best solution, best possible 12 (228.42 seconds)
Cbc0010I After 513 nodes, 14 on tree, 1e+50 best solution, best possible 12 (230.25 seconds)
Cbc0010I After 529 nodes, 14 on tree, 1e+50 best solution, best possible 12 (232.69 seconds)
Cbc0010I After 533 nodes, 13 on tree, 1e+50 best solution, best possible 12 (234.86 seconds)
Cbc0010I After 546 nodes, 14 on tree, 1e+50 best solution, best possible 12 (238.04 seconds)
Cbc0010I After 561 nodes, 19 on tree, 1e+50 best solution, best possible 12 (239.14 seconds)
Cbc0010I After 573 nodes, 17 on tree, 1e+50 best solution, best possible 12 (240.32 seconds)
Cbc0010I After 576 nodes, 16 on tree, 1e+50 best solution, best possible 12 (241.84 seconds)
Cbc0010I After 582 nodes, 16 on tree, 1e+50 best solution, best possible 12 (244.93 seconds)
Cbc0010I After 595 nodes, 14 on tree, 1e+50 best solution, best possible 12 (247.72 seconds)
Cbc0010I After 602 nodes, 16 on tree, 1e+50 best solution, best possible 12 (249.97 seconds)
Cbc0010I After 608 nodes, 16 on tree, 1e+50 best solution, best possible 12 (250.67 seconds)
Cbc0010I After 611 nodes, 17 on tree, 1e+50 best solution, best possible 12 (252.82 seconds)
Cbc0010I After 619 nodes, 15 on tree, 1e+50 best solution, best possible 12 (256.57 seconds)
Cbc0010I After 640 nodes, 14 on tree, 1e+50 best solution, best possible 12 (257.57 seconds)
Cbc0010I After 650 nodes, 13 on tree, 1e+50 best solution, best possible 12 (258.49 seconds)
Cbc0010I After 659 nodes, 13 on tree, 1e+50 best solution, best possible 12 (261.29 seconds)
Cbc0010I After 676 nodes, 10 on tree, 1e+50 best solution, best possible 12 (262.37 seconds)
Cbc0010I After 686 nodes, 7 on tree, 1e+50 best solution, best possible 12 (266.72 seconds)
Cbc0010I After 691 nodes, 12 on tree, 1e+50 best solution, best possible 12 (268.61 seconds)
Cbc0010I After 712 nodes, 8 on tree, 1e+50 best solution, best possible 12 (272.42 seconds)
Cbc0010I After 719 nodes, 4 on tree, 1e+50 best solution, best possible 12 (274.33 seconds)
Cbc0010I After 727 nodes, 8 on tree, 1e+50 best solution, best possible 12 (275.13 seconds)
Cbc0010I After 734 nodes, 6 on tree, 1e+50 best solution, best possible 12 (278.12 seconds)
Cbc0010I After 735 nodes, 6 on tree, 1e+50 best solution, best possible 12 (280.37 seconds)
Cbc0010I After 741 nodes, 10 on tree, 1e+50 best solution, best possible 12 (283.68 seconds)
Cbc0010I After 760 nodes, 9 on tree, 1e+50 best solution, best possible 12 (284.38 seconds)
Cbc0010I After 763 nodes, 8 on tree, 1e+50 best solution, best possible 12 (288.13 seconds)
Cbc0010I After 764 nodes, 7 on tree, 1e+50 best solution, best possible 12 (290.37 seconds)
Cbc0010I After 766 nodes, 8 on tree, 1e+50 best solution, best possible 12 (293.79 seconds)
Cbc0010I After 773 nodes, 8 on tree, 1e+50 best solution, best possible 12 (295.14 seconds)
Cbc0010I After 776 nodes, 8 on tree, 1e+50 best solution, best possible 12 (295.95 seconds)
Cbc0010I After 797 nodes, 10 on tree, 1e+50 best solution, best possible 12 (298.23 seconds)
Cbc0010I After 816 nodes, 10 on tree, 1e+50 best solution, best possible 12 (299.12 seconds)
Cbc0010I After 823 nodes, 13 on tree, 1e+50 best solution, best possible 12 (300.36 seconds)
Cbc0010I After 832 nodes, 13 on tree, 1e+50 best solution, best possible 12 (302.02 seconds)
Cbc0010I After 851 nodes, 21 on tree, 1e+50 best solution, best possible 12 (302.78 seconds)
Cbc0004I Integer solution of 12 found after 85649 iterations and 852 nodes (302.91 seconds)
Cbc0001I Search completed - best objective 12, took 85649 iterations and 852 nodes (302.91 seconds)
Cbc0032I Strong branching done 1722 times (14612 iterations), fathomed 2 nodes and fixed 4 variables
Cbc0035I Maximum depth 50, 0 variables fixed on reduced cost
Cuts at root node changed objective from 10.1686 to 11
Probing was tried 134 times and created 1391 cuts of which 0 were active after adding rounds of cuts (2.1878 seconds)
Gomory was tried 10 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.467487 seconds)
Knapsack was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.088767 seconds)
liftKnapsack was tried 133 times and created 1713 cuts of which 0 were active after adding rounds of cuts (256.946 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016832 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.085541 seconds)
MixedIntegerRounding2 was tried 133 times and created 2124 cuts of which 0 were active after adding rounds of cuts (1.49148 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005299 seconds)
TwoMirCuts was tried 133 times and created 476 cuts of which 0 were active after adding rounds of cuts (0.759072 seconds)
ZeroHalf was tried 133 times and created 901 cuts of which 0 were active after adding rounds of cuts (1.3394 seconds)

Result - Optimal solution found
Objective value:                12
Enumerated nodes:               852
Total iterations:               85649
Time (CPU seconds):             302.77
Time (Wallclock seconds):       302.977
Total time (CPU seconds):       302.81   (Wallclock seconds):       303.006
