Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3011/j3011_1.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 0 - 0.065137 seconds
Cgl0002I 20 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 204 rows, 611 columns (611 integer (609 of which binary)) and 7159 elements
Coin3009W Conflict graph built in 0.073 seconds, density: 1.945%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I No integer variables out of 611 objects (611 integer) have costs
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.02022
Cbc0038I Pass   1: suminf.    2.16364 (11) obj. 0 iterations 23
Cbc0038I Pass   2: suminf.    2.72948 (7) obj. 0 iterations 27
Cbc0038I Pass   3: suminf.    2.42139 (8) obj. 0 iterations 8
Cbc0038I Pass   4: suminf.    2.79031 (8) obj. 0 iterations 17
Cbc0038I Pass   5: suminf.    2.44586 (8) obj. 0 iterations 11
Cbc0038I Pass   6: suminf.    2.82038 (8) obj. 0 iterations 15
Cbc0038I Pass   7: suminf.    2.47594 (8) obj. 0 iterations 8
Cbc0038I Pass   8: suminf.    2.79031 (8) obj. 0 iterations 14
Cbc0038I Pass   9: suminf.    7.99749 (22) obj. 0 iterations 66
Cbc0038I Pass  10: suminf.    4.98410 (17) obj. 0 iterations 41
Cbc0038I Pass  11: suminf.    4.60077 (16) obj. 0 iterations 9
Cbc0038I Pass  12: suminf.    3.15431 (13) obj. 0 iterations 30
Cbc0038I Pass  13: suminf.    1.18319 (8) obj. 0 iterations 7
Cbc0038I Pass  14: suminf.    3.32262 (8) obj. 0 iterations 13
Cbc0038I Pass  15: suminf.    3.32262 (8) obj. 0 iterations 0
Cbc0038I Pass  16: suminf.    1.92003 (8) obj. 0 iterations 12
Cbc0038I Pass  17: suminf.    3.46429 (16) obj. 0 iterations 70
Cbc0038I Pass  18: suminf.    2.13514 (13) obj. 0 iterations 32
Cbc0038I Pass  19: suminf.    1.24962 (8) obj. 0 iterations 29
Cbc0038I Pass  20: suminf.    1.18105 (8) obj. 0 iterations 6
Cbc0038I Pass  21: suminf.    2.23684 (6) obj. 0 iterations 16
Cbc0038I Pass  22: suminf.    1.43684 (6) obj. 0 iterations 8
Cbc0038I Pass  23: suminf.    1.92105 (6) obj. 0 iterations 14
Cbc0038I Pass  24: suminf.    1.12105 (6) obj. 0 iterations 8
Cbc0038I Pass  25: suminf.    6.20325 (24) obj. 0 iterations 59
Cbc0038I Pass  26: suminf.    2.19023 (15) obj. 0 iterations 41
Cbc0038I Pass  27: suminf.    2.19023 (15) obj. 0 iterations 0
Cbc0038I Pass  28: suminf.    1.56667 (10) obj. 0 iterations 23
Cbc0038I Pass  29: suminf.    1.20000 (6) obj. 0 iterations 15
Cbc0038I Pass  30: suminf.    1.40000 (6) obj. 0 iterations 16
Cbc0038I Pass  31: suminf.    1.40000 (6) obj. 0 iterations 6
Cbc0038I Pass  32: suminf.    1.00000 (4) obj. 0 iterations 12
Cbc0038I Pass  33: suminf.    1.00000 (4) obj. 0 iterations 6
Cbc0038I Pass  34: suminf.    3.71238 (15) obj. 0 iterations 50
Cbc0038I Pass  35: suminf.    2.52885 (13) obj. 0 iterations 31
Cbc0038I Pass  36: suminf.    2.52885 (13) obj. 0 iterations 0
Cbc0038I Pass  37: suminf.    4.32062 (14) obj. 0 iterations 26
Cbc0038I Pass  38: suminf.    3.14958 (9) obj. 0 iterations 8
Cbc0038I Pass  39: suminf.    1.39612 (4) obj. 0 iterations 21
Cbc0038I Pass  40: suminf.    1.39612 (4) obj. 0 iterations 2
Cbc0038I Pass  41: suminf.    1.21303 (4) obj. 0 iterations 10
Cbc0038I Pass  42: suminf.    1.47368 (5) obj. 0 iterations 8
Cbc0038I Pass  43: suminf.    1.32508 (4) obj. 0 iterations 7
Cbc0038I Pass  44: suminf.    2.46400 (14) obj. 0 iterations 52
Cbc0038I Pass  45: suminf.    1.13445 (4) obj. 0 iterations 31
Cbc0038I Pass  46: suminf.    0.38809 (6) obj. 0 iterations 12
Cbc0038I Pass  47: suminf.    2.79552 (11) obj. 0 iterations 14
Cbc0038I Pass  48: suminf.    2.79552 (11) obj. 0 iterations 0
Cbc0038I Pass  49: suminf.    2.17105 (7) obj. 0 iterations 29
Cbc0038I Pass  50: suminf.    1.18354 (6) obj. 0 iterations 19
Cbc0038I Pass  51: suminf.    0.84211 (6) obj. 0 iterations 14
Cbc0038I Pass  52: suminf.    0.72874 (4) obj. 0 iterations 2
Cbc0038I Pass  53: suminf.    1.61404 (4) obj. 0 iterations 5
Cbc0038I Pass  54: suminf.    0.95439 (4) obj. 0 iterations 5
Cbc0038I Pass  55: suminf.    5.69755 (18) obj. 0 iterations 54
Cbc0038I Pass  56: suminf.    3.62333 (16) obj. 0 iterations 32
Cbc0038I Pass  57: suminf.    1.20574 (4) obj. 0 iterations 27
Cbc0038I Pass  58: suminf.    1.20574 (4) obj. 0 iterations 0
Cbc0038I Pass  59: suminf.    0.93780 (4) obj. 0 iterations 9
Cbc0038I Pass  60: suminf.    5.42875 (20) obj. 0 iterations 52
Cbc0038I Pass  61: suminf.    3.48310 (16) obj. 0 iterations 38
Cbc0038I Pass  62: suminf.    0.80000 (4) obj. 0 iterations 41
Cbc0038I Pass  63: suminf.    0.93333 (2) obj. 0 iterations 10
Cbc0038I Pass  64: suminf.    0.60000 (2) obj. 0 iterations 4
Cbc0038I Pass  65: suminf.    3.61111 (13) obj. 0 iterations 61
Cbc0038I Pass  66: suminf.    1.92143 (9) obj. 0 iterations 31
Cbc0038I Pass  67: suminf.    2.43241 (9) obj. 0 iterations 18
Cbc0038I Pass  68: suminf.    2.10842 (8) obj. 0 iterations 13
Cbc0038I Pass  69: suminf.    2.50351 (9) obj. 0 iterations 12
Cbc0038I Pass  70: suminf.    2.05113 (7) obj. 0 iterations 8
Cbc0038I Pass  71: suminf.    1.19381 (5) obj. 0 iterations 23
Cbc0038I Pass  72: suminf.    1.00000 (6) obj. 0 iterations 15
Cbc0038I Pass  73: suminf.    2.05113 (6) obj. 0 iterations 16
Cbc0038I Pass  74: suminf.    2.05113 (6) obj. 0 iterations 0
Cbc0038I Pass  75: suminf.    2.00652 (7) obj. 0 iterations 16
Cbc0038I Pass  76: suminf.    1.81060 (6) obj. 0 iterations 5
Cbc0038I Pass  77: suminf.    2.10048 (6) obj. 0 iterations 12
Cbc0038I Pass  78: suminf.    2.10048 (6) obj. 0 iterations 0
Cbc0038I Pass  79: suminf.    2.15915 (6) obj. 0 iterations 11
Cbc0038I Pass  80: suminf.    1.83433 (6) obj. 0 iterations 14
Cbc0038I Pass  81: suminf.    0.92632 (3) obj. 0 iterations 4
Cbc0038I Pass  82: suminf.    0.66917 (3) obj. 0 iterations 12
Cbc0038I Pass  83: suminf.    0.95906 (3) obj. 0 iterations 9
Cbc0038I Pass  84: suminf.    0.87970 (3) obj. 0 iterations 6
Cbc0038I Pass  85: suminf.    0.74854 (3) obj. 0 iterations 10
Cbc0038I Pass  86: suminf.    2.69444 (9) obj. 0 iterations 57
Cbc0038I Pass  87: suminf.    2.62626 (9) obj. 0 iterations 29
Cbc0038I Pass  88: suminf.    0.61111 (4) obj. 0 iterations 19
Cbc0038I Pass  89: suminf.    0.82540 (5) obj. 0 iterations 24
Cbc0038I Pass  90: suminf.    1.00000 (3) obj. 0 iterations 13
Cbc0038I Pass  91: suminf.    0.77778 (2) obj. 0 iterations 3
Cbc0038I Pass  92: suminf.    0.77778 (2) obj. 0 iterations 2
Cbc0038I Pass  93: suminf.    0.38095 (2) obj. 0 iterations 6
Cbc0038I Pass  94: suminf.    1.00000 (3) obj. 0 iterations 6
Cbc0038I Pass  95: suminf.    3.78889 (12) obj. 0 iterations 64
Cbc0038I Pass  96: suminf.    2.26250 (8) obj. 0 iterations 40
Cbc0038I Pass  97: suminf.    2.20286 (11) obj. 0 iterations 14
Cbc0038I Pass  98: suminf.    2.12076 (8) obj. 0 iterations 9
Cbc0038I Pass  99: suminf.    0.63910 (6) obj. 0 iterations 17
Cbc0038I Pass 100: suminf.    7.16667 (18) obj. 0 iterations 76
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 412 integers at bound fixed and 0 continuous
Cbc0038I Full problem 204 rows 611 columns, reduced to 183 rows 195 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.06 seconds)
Cbc0038I Full problem 205 rows 611 columns, reduced to 205 rows 611 columns - too large
Cbc0038I After 2.10 seconds - Feasibility pump exiting - took 0.58 seconds
Cbc0012I Integer solution of 0 found by DiveCoefficient after 329 iterations and 0 nodes (3.69 seconds)
Cbc0031I 27 added rows had average density of 77.185185
Cbc0013I At root node, 27 cuts changed objective from 0 to 0 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.412 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 375.2 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 3 (liftKnapsack) - 38 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.757 seconds - new frequency is -100
Cbc0014I Cut generator 4 (Clique) - 2 row cuts average 42.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 22 row cuts average 83.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 75 row cuts average 253.1 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 9 (ZeroHalf) - 21 row cuts average 82.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0001I Search completed - best objective 0, took 329 iterations and 0 nodes (3.70 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 0
Probing was tried 9 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.411958 seconds)
Gomory was tried 9 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.051369 seconds)
Knapsack was tried 9 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.038705 seconds)
liftKnapsack was tried 9 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.757372 seconds)
Clique was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.001817 seconds)
OddWheel was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004961 seconds)
MixedIntegerRounding2 was tried 9 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.025241 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003698 seconds)
TwoMirCuts was tried 9 times and created 75 cuts of which 0 were active after adding rounds of cuts (0.06734 seconds)
ZeroHalf was tried 9 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.013331 seconds)

Result - Optimal solution found
Objective value:                0
Enumerated nodes:               0
Total iterations:               329
Time (CPU seconds):             3.75661
Time (Wallclock seconds):       3.72947
Total time (CPU seconds):       3.82059   (Wallclock seconds):       3.78432
