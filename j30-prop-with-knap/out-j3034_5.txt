Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j3034/j3034_5.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 10.6415 - 0.170886 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 349 rows, 1630 columns (1630 integer (1629 of which binary)) and 19754 elements
Coin3009W Conflict graph built in 0.216 seconds, density: 0.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 1630 objects (1630 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 82 integers unsatisfied sum - 22.3902
Cbc0038I Pass   1: suminf.   10.90753 (49) obj. 13 iterations 164
Cbc0038I Pass   2: suminf.   10.28321 (49) obj. 13 iterations 36
Cbc0038I Pass   3: suminf.   11.55326 (47) obj. 13 iterations 70
Cbc0038I Pass   4: suminf.    9.65465 (50) obj. 13 iterations 55
Cbc0038I Pass   5: suminf.    9.61365 (49) obj. 13 iterations 8
Cbc0038I Pass   6: suminf.    9.42159 (51) obj. 13 iterations 24
Cbc0038I Pass   7: suminf.   10.79711 (47) obj. 13 iterations 90
Cbc0038I Pass   8: suminf.    8.76273 (42) obj. 13 iterations 45
Cbc0038I Pass   9: suminf.    8.76273 (42) obj. 13 iterations 0
Cbc0038I Pass  10: suminf.   10.26214 (41) obj. 13 iterations 43
Cbc0038I Pass  11: suminf.    9.29913 (45) obj. 13 iterations 35
Cbc0038I Pass  12: suminf.   11.01779 (44) obj. 13 iterations 78
Cbc0038I Pass  13: suminf.   10.51834 (43) obj. 13 iterations 39
Cbc0038I Pass  14: suminf.    9.39880 (45) obj. 13 iterations 56
Cbc0038I Pass  15: suminf.    9.39880 (45) obj. 13 iterations 6
Cbc0038I Pass  16: suminf.    9.56152 (38) obj. 13 iterations 49
Cbc0038I Pass  17: suminf.    8.51281 (43) obj. 13 iterations 48
Cbc0038I Pass  18: suminf.    9.71551 (42) obj. 13 iterations 70
Cbc0038I Pass  19: suminf.    8.54181 (41) obj. 13 iterations 53
Cbc0038I Pass  20: suminf.    9.66184 (36) obj. 13 iterations 77
Cbc0038I Pass  21: suminf.    8.24806 (41) obj. 13 iterations 45
Cbc0038I Pass  22: suminf.    8.32586 (43) obj. 13 iterations 51
Cbc0038I Pass  23: suminf.    8.06226 (40) obj. 13 iterations 32
Cbc0038I Pass  24: suminf.   12.78561 (43) obj. 13 iterations 68
Cbc0038I Pass  25: suminf.    9.76478 (40) obj. 13 iterations 41
Cbc0038I Pass  26: suminf.    9.42445 (43) obj. 13 iterations 16
Cbc0038I Pass  27: suminf.    8.79014 (43) obj. 13 iterations 22
Cbc0038I Pass  28: suminf.    9.00102 (42) obj. 13 iterations 46
Cbc0038I Pass  29: suminf.    8.97565 (42) obj. 13 iterations 19
Cbc0038I Pass  30: suminf.   10.23644 (39) obj. 13 iterations 61
Cbc0038I Pass  31: suminf.    9.69724 (39) obj. 13 iterations 47
Cbc0038I Pass  32: suminf.    9.91523 (43) obj. 13 iterations 52
Cbc0038I Pass  33: suminf.    9.18554 (42) obj. 13 iterations 54
Cbc0038I Pass  34: suminf.    9.59802 (40) obj. 13 iterations 61
Cbc0038I Pass  35: suminf.    9.03782 (42) obj. 13 iterations 44
Cbc0038I Pass  36: suminf.    8.75934 (37) obj. 13 iterations 55
Cbc0038I Pass  37: suminf.    8.36226 (46) obj. 13 iterations 33
Cbc0038I Pass  38: suminf.    8.71707 (38) obj. 13 iterations 55
Cbc0038I Pass  39: suminf.    8.23247 (39) obj. 13 iterations 38
Cbc0038I Pass  40: suminf.   10.68729 (41) obj. 13 iterations 96
Cbc0038I Pass  41: suminf.    9.93431 (40) obj. 13 iterations 23
Cbc0038I Pass  42: suminf.   11.79897 (43) obj. 13 iterations 63
Cbc0038I Pass  43: suminf.   10.74082 (44) obj. 13 iterations 35
Cbc0038I Pass  44: suminf.   10.33699 (40) obj. 13 iterations 15
Cbc0038I Pass  45: suminf.    9.90492 (33) obj. 13 iterations 65
Cbc0038I Pass  46: suminf.    9.38873 (36) obj. 13 iterations 39
Cbc0038I Pass  47: suminf.   10.78939 (41) obj. 13 iterations 49
Cbc0038I Pass  48: suminf.    9.68229 (39) obj. 13 iterations 31
Cbc0038I Pass  49: suminf.    8.71551 (37) obj. 13 iterations 15
Cbc0038I Pass  50: suminf.    8.01705 (38) obj. 13 iterations 7
Cbc0038I Pass  51: suminf.    9.71319 (32) obj. 13 iterations 96
Cbc0038I Pass  52: suminf.    7.92275 (32) obj. 13 iterations 40
Cbc0038I Pass  53: suminf.    7.90544 (34) obj. 13 iterations 7
Cbc0038I Pass  54: suminf.    7.90321 (30) obj. 13 iterations 80
Cbc0038I Pass  55: suminf.    7.83210 (31) obj. 13 iterations 14
Cbc0038I Pass  56: suminf.    7.53038 (33) obj. 13 iterations 7
Cbc0038I Pass  57: suminf.    8.79729 (30) obj. 13 iterations 51
Cbc0038I Pass  58: suminf.    8.32971 (30) obj. 13 iterations 21
Cbc0038I Pass  59: suminf.    8.32971 (30) obj. 13 iterations 3
Cbc0038I Pass  60: suminf.   10.47372 (32) obj. 13 iterations 64
Cbc0038I Pass  61: suminf.    8.60712 (31) obj. 13 iterations 42
Cbc0038I Pass  62: suminf.    8.22326 (30) obj. 13 iterations 14
Cbc0038I Pass  63: suminf.    8.22753 (31) obj. 13 iterations 37
Cbc0038I Pass  64: suminf.    7.63793 (30) obj. 13 iterations 24
Cbc0038I Pass  65: suminf.    7.52604 (30) obj. 13 iterations 5
Cbc0038I Pass  66: suminf.    8.19954 (30) obj. 13 iterations 26
Cbc0038I Pass  67: suminf.    8.13288 (30) obj. 13 iterations 9
Cbc0038I Pass  68: suminf.    8.66816 (29) obj. 13 iterations 40
Cbc0038I Pass  69: suminf.    7.06047 (29) obj. 13 iterations 38
Cbc0038I Pass  70: suminf.    6.97135 (28) obj. 13 iterations 15
Cbc0038I Pass  71: suminf.    6.95190 (28) obj. 13 iterations 41
Cbc0038I Pass  72: suminf.    6.88524 (28) obj. 13 iterations 18
Cbc0038I Pass  73: suminf.    9.47024 (29) obj. 13 iterations 60
Cbc0038I Pass  74: suminf.    8.55937 (30) obj. 13 iterations 41
Cbc0038I Pass  75: suminf.    8.55937 (30) obj. 13 iterations 3
Cbc0038I Pass  76: suminf.    8.52371 (29) obj. 13 iterations 37
Cbc0038I Pass  77: suminf.    6.91301 (29) obj. 13 iterations 37
Cbc0038I Pass  78: suminf.    6.88524 (29) obj. 13 iterations 5
Cbc0038I Pass  79: suminf.    7.58524 (28) obj. 13 iterations 40
Cbc0038I Pass  80: suminf.    6.97135 (28) obj. 13 iterations 29
Cbc0038I Pass  81: suminf.    7.87902 (27) obj. 13 iterations 62
Cbc0038I Pass  82: suminf.    6.88524 (28) obj. 13 iterations 36
Cbc0038I Pass  83: suminf.    6.72968 (28) obj. 13 iterations 29
Cbc0038I Pass  84: suminf.    6.66301 (28) obj. 13 iterations 14
Cbc0038I Pass  85: suminf.    7.67041 (29) obj. 13 iterations 31
Cbc0038I Pass  86: suminf.    7.25816 (31) obj. 13 iterations 23
Cbc0038I Pass  87: suminf.    7.19357 (31) obj. 13 iterations 10
Cbc0038I Pass  88: suminf.    6.51430 (28) obj. 13 iterations 57
Cbc0038I Pass  89: suminf.    6.44763 (28) obj. 13 iterations 6
Cbc0038I Pass  90: suminf.    6.17490 (28) obj. 13 iterations 6
Cbc0038I Pass  91: suminf.    6.06301 (28) obj. 13 iterations 5
Cbc0038I Pass  92: suminf.    8.27347 (28) obj. 13 iterations 62
Cbc0038I Pass  93: suminf.    7.31857 (31) obj. 13 iterations 39
Cbc0038I Pass  94: suminf.    6.72968 (28) obj. 13 iterations 53
Cbc0038I Pass  95: suminf.    6.66301 (28) obj. 13 iterations 9
Cbc0038I Pass  96: suminf.    6.39029 (28) obj. 13 iterations 6
Cbc0038I Pass  97: suminf.    6.27990 (31) obj. 13 iterations 8
Cbc0038I Pass  98: suminf.    7.71522 (29) obj. 13 iterations 43
Cbc0038I Pass  99: suminf.    7.31857 (31) obj. 13 iterations 22
Cbc0038I Pass 100: suminf.   16.05236 (59) obj. 13 iterations 116
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1380 integers at bound fixed and 0 continuous
Cbc0038I Full problem 349 rows 1630 columns, reduced to 198 rows 208 columns
Cbc0038I Mini branch and bound did not improve solution (3.68 seconds)
Cbc0038I After 3.68 seconds - Feasibility pump exiting - took 1.09 seconds
Cbc0031I 72 added rows had average density of 85.402778
Cbc0013I At root node, 72 cuts changed objective from 10.64155 to 11 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 174 row cuts average 28.2 elements, 16 column cuts (16 active)  in 1.416 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 31 row cuts average 309.9 elements, 0 column cuts (0 active)  in 0.391 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 327 row cuts average 26.7 elements, 0 column cuts (0 active)  in 9.231 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 202 row cuts average 105.0 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 98 row cuts average 216.7 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 155 row cuts average 120.8 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 11 (18.56 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 11 (21.67 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 11 (24.88 seconds)
Cbc0010I After 3 nodes, 3 on tree, 1e+50 best solution, best possible 11 (27.77 seconds)
Cbc0010I After 5 nodes, 2 on tree, 1e+50 best solution, best possible 11 (30.78 seconds)
Cbc0010I After 6 nodes, 2 on tree, 1e+50 best solution, best possible 11 (31.77 seconds)
Cbc0010I After 8 nodes, 1 on tree, 1e+50 best solution, best possible 12 (33.61 seconds)
Cbc0010I After 9 nodes, 2 on tree, 1e+50 best solution, best possible 12 (35.31 seconds)
Cbc0010I After 10 nodes, 3 on tree, 1e+50 best solution, best possible 12 (37.66 seconds)
Cbc0010I After 11 nodes, 4 on tree, 1e+50 best solution, best possible 12 (39.46 seconds)
Cbc0010I After 12 nodes, 5 on tree, 1e+50 best solution, best possible 12 (43.06 seconds)
Cbc0010I After 13 nodes, 6 on tree, 1e+50 best solution, best possible 12 (45.09 seconds)
Cbc0010I After 22 nodes, 9 on tree, 1e+50 best solution, best possible 12 (46.69 seconds)
Cbc0010I After 24 nodes, 8 on tree, 1e+50 best solution, best possible 12 (47.46 seconds)
Cbc0010I After 27 nodes, 6 on tree, 1e+50 best solution, best possible 12 (48.18 seconds)
Cbc0010I After 36 nodes, 5 on tree, 1e+50 best solution, best possible 12 (52.57 seconds)
Cbc0010I After 42 nodes, 9 on tree, 1e+50 best solution, best possible 12 (53.98 seconds)
Cbc0010I After 47 nodes, 9 on tree, 1e+50 best solution, best possible 12 (55.40 seconds)
Cbc0010I After 52 nodes, 8 on tree, 1e+50 best solution, best possible 12 (58.02 seconds)
Cbc0010I After 53 nodes, 8 on tree, 1e+50 best solution, best possible 12 (59.89 seconds)
Cbc0010I After 59 nodes, 9 on tree, 1e+50 best solution, best possible 12 (60.62 seconds)
Cbc0010I After 66 nodes, 10 on tree, 1e+50 best solution, best possible 12 (62.33 seconds)
Cbc0010I After 79 nodes, 9 on tree, 1e+50 best solution, best possible 12 (63.03 seconds)
Cbc0010I After 80 nodes, 10 on tree, 1e+50 best solution, best possible 12 (64.70 seconds)
Cbc0010I After 87 nodes, 13 on tree, 1e+50 best solution, best possible 12 (65.79 seconds)
Cbc0010I After 96 nodes, 11 on tree, 1e+50 best solution, best possible 12 (67.05 seconds)
Cbc0010I After 105 nodes, 9 on tree, 1e+50 best solution, best possible 12 (67.76 seconds)
Cbc0010I After 106 nodes, 10 on tree, 1e+50 best solution, best possible 12 (70.46 seconds)
Cbc0010I After 112 nodes, 9 on tree, 1e+50 best solution, best possible 12 (71.45 seconds)
Cbc0010I After 117 nodes, 9 on tree, 1e+50 best solution, best possible 12 (74.33 seconds)
Cbc0010I After 125 nodes, 9 on tree, 1e+50 best solution, best possible 12 (75.05 seconds)
Cbc0010I After 127 nodes, 8 on tree, 1e+50 best solution, best possible 12 (77.81 seconds)
Cbc0010I After 137 nodes, 8 on tree, 1e+50 best solution, best possible 12 (79.30 seconds)
Cbc0010I After 150 nodes, 7 on tree, 1e+50 best solution, best possible 12 (80.01 seconds)
Cbc0010I After 152 nodes, 7 on tree, 1e+50 best solution, best possible 12 (82.21 seconds)
Cbc0010I After 165 nodes, 4 on tree, 1e+50 best solution, best possible 12 (85.76 seconds)
Cbc0010I After 166 nodes, 5 on tree, 1e+50 best solution, best possible 12 (86.94 seconds)
Cbc0010I After 176 nodes, 7 on tree, 1e+50 best solution, best possible 12 (87.65 seconds)
Cbc0010I After 179 nodes, 8 on tree, 1e+50 best solution, best possible 12 (88.70 seconds)
Cbc0010I After 191 nodes, 11 on tree, 1e+50 best solution, best possible 12 (89.83 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 12 (90.60 seconds)
Cbc0010I After 204 nodes, 12 on tree, 1e+50 best solution, best possible 12 (91.55 seconds)
Cbc0010I After 208 nodes, 8 on tree, 1e+50 best solution, best possible 12 (93.10 seconds)
Cbc0010I After 213 nodes, 8 on tree, 1e+50 best solution, best possible 12 (93.82 seconds)
Cbc0010I After 226 nodes, 8 on tree, 1e+50 best solution, best possible 12 (94.77 seconds)
Cbc0010I After 243 nodes, 8 on tree, 1e+50 best solution, best possible 12 (96.66 seconds)
Cbc0010I After 257 nodes, 7 on tree, 1e+50 best solution, best possible 12 (98.54 seconds)
Cbc0010I After 266 nodes, 8 on tree, 1e+50 best solution, best possible 12 (100.52 seconds)
Cbc0010I After 281 nodes, 3 on tree, 1e+50 best solution, best possible 12 (101.41 seconds)
Cbc0010I After 282 nodes, 3 on tree, 1e+50 best solution, best possible 12 (104.03 seconds)
Cbc0010I After 283 nodes, 4 on tree, 1e+50 best solution, best possible 12 (106.27 seconds)
Cbc0010I After 284 nodes, 5 on tree, 1e+50 best solution, best possible 12 (107.01 seconds)
Cbc0010I After 301 nodes, 6 on tree, 1e+50 best solution, best possible 12 (108.79 seconds)
Cbc0010I After 313 nodes, 9 on tree, 1e+50 best solution, best possible 12 (109.77 seconds)
Cbc0010I After 323 nodes, 6 on tree, 1e+50 best solution, best possible 12 (111.08 seconds)
Cbc0010I After 331 nodes, 7 on tree, 1e+50 best solution, best possible 12 (112.44 seconds)
Cbc0010I After 335 nodes, 4 on tree, 1e+50 best solution, best possible 12 (114.24 seconds)
Cbc0010I After 341 nodes, 7 on tree, 1e+50 best solution, best possible 12 (117.27 seconds)
Cbc0010I After 346 nodes, 3 on tree, 1e+50 best solution, best possible 12 (121.42 seconds)
Cbc0010I After 347 nodes, 4 on tree, 1e+50 best solution, best possible 12 (123.58 seconds)
Cbc0010I After 355 nodes, 7 on tree, 1e+50 best solution, best possible 12 (125.45 seconds)
Cbc0010I After 365 nodes, 6 on tree, 1e+50 best solution, best possible 12 (127.68 seconds)
Cbc0010I After 366 nodes, 6 on tree, 1e+50 best solution, best possible 12 (129.41 seconds)
Cbc0010I After 373 nodes, 4 on tree, 1e+50 best solution, best possible 12 (130.26 seconds)
Cbc0010I After 378 nodes, 7 on tree, 1e+50 best solution, best possible 12 (132.65 seconds)
Cbc0010I After 387 nodes, 7 on tree, 1e+50 best solution, best possible 12 (133.37 seconds)
Cbc0010I After 388 nodes, 7 on tree, 1e+50 best solution, best possible 12 (134.88 seconds)
Cbc0010I After 393 nodes, 6 on tree, 1e+50 best solution, best possible 12 (137.38 seconds)
Cbc0010I After 394 nodes, 6 on tree, 1e+50 best solution, best possible 12 (140.07 seconds)
Cbc0010I After 405 nodes, 7 on tree, 1e+50 best solution, best possible 12 (143.17 seconds)
Cbc0010I After 410 nodes, 2 on tree, 1e+50 best solution, best possible 12 (144.71 seconds)
Cbc0010I After 411 nodes, 2 on tree, 1e+50 best solution, best possible 12 (146.56 seconds)
Cbc0010I After 412 nodes, 3 on tree, 1e+50 best solution, best possible 12 (150.39 seconds)
Cbc0010I After 413 nodes, 4 on tree, 1e+50 best solution, best possible 12 (154.90 seconds)
Cbc0010I After 414 nodes, 5 on tree, 1e+50 best solution, best possible 12 (156.36 seconds)
Cbc0010I After 421 nodes, 8 on tree, 1e+50 best solution, best possible 12 (157.07 seconds)
Cbc0010I After 430 nodes, 9 on tree, 1e+50 best solution, best possible 12 (157.78 seconds)
Cbc0010I After 439 nodes, 8 on tree, 1e+50 best solution, best possible 12 (158.48 seconds)
Cbc0010I After 448 nodes, 8 on tree, 1e+50 best solution, best possible 12 (159.24 seconds)
Cbc0010I After 453 nodes, 4 on tree, 1e+50 best solution, best possible 12 (160.62 seconds)
Cbc0010I After 459 nodes, 1 on tree, 1e+50 best solution, best possible 12 (161.71 seconds)
Cbc0010I After 460 nodes, 1 on tree, 1e+50 best solution, best possible 13 (163.11 seconds)
Cbc0010I After 461 nodes, 2 on tree, 1e+50 best solution, best possible 13 (164.76 seconds)
Cbc0010I After 462 nodes, 3 on tree, 1e+50 best solution, best possible 13 (167.09 seconds)
Cbc0010I After 463 nodes, 4 on tree, 1e+50 best solution, best possible 13 (169.34 seconds)
Cbc0010I After 464 nodes, 5 on tree, 1e+50 best solution, best possible 13 (170.69 seconds)
Cbc0010I After 471 nodes, 10 on tree, 1e+50 best solution, best possible 13 (171.56 seconds)
Cbc0010I After 489 nodes, 15 on tree, 1e+50 best solution, best possible 13 (172.30 seconds)
Cbc0010I After 499 nodes, 16 on tree, 1e+50 best solution, best possible 13 (173.01 seconds)
Cbc0010I After 510 nodes, 21 on tree, 1e+50 best solution, best possible 13 (173.72 seconds)
Cbc0010I After 519 nodes, 20 on tree, 1e+50 best solution, best possible 13 (174.67 seconds)
Cbc0016I Integer solution of 13 found by strong branching after 99480 iterations and 537 nodes (175.13 seconds)
Cbc0001I Search completed - best objective 13, took 99480 iterations and 537 nodes (175.13 seconds)
Cbc0032I Strong branching done 1634 times (14173 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 26, 0 variables fixed on reduced cost
Cuts at root node changed objective from 10.6415 to 11
Probing was tried 116 times and created 1289 cuts of which 0 were active after adding rounds of cuts (2.32972 seconds)
Gomory was tried 10 times and created 31 cuts of which 0 were active after adding rounds of cuts (0.39076 seconds)
Knapsack was tried 116 times and created 38 cuts of which 0 were active after adding rounds of cuts (1.05044 seconds)
liftKnapsack was tried 116 times and created 3201 cuts of which 0 were active after adding rounds of cuts (121.147 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018388 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.092748 seconds)
MixedIntegerRounding2 was tried 116 times and created 2071 cuts of which 0 were active after adding rounds of cuts (1.55007 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005106 seconds)
TwoMirCuts was tried 116 times and created 414 cuts of which 0 were active after adding rounds of cuts (0.682544 seconds)
ZeroHalf was tried 116 times and created 1189 cuts of which 0 were active after adding rounds of cuts (1.60455 seconds)

Result - Optimal solution found
Objective value:                13
Enumerated nodes:               537
Total iterations:               99480
Time (CPU seconds):             175.087
Time (Wallclock seconds):       175.198
Total time (CPU seconds):       175.13   (Wallclock seconds):       175.224
