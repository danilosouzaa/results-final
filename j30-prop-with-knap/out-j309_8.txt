Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Apr 26 2022
command line - -import /home/danilo/psp-janniele/J30/j309/j309_8.lp -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.55271e-15 - 0.032858 seconds
Cgl0002I 19 variables fixed
Cgl0003I 29 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 217 rows, 395 columns (395 integer (393 of which binary)) and 4101 elements
Coin3009W Conflict graph built in 0.012 seconds, density: 1.802%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 1 integer variables out of 395 objects (395 integer) have cost of -1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 33 integers unsatisfied sum - 9.76309
Cbc0038I Pass   1: suminf.    7.24412 (34) obj. 0 iterations 61
Cbc0038I Pass   2: suminf.    6.10879 (32) obj. 0.0502257 iterations 49
Cbc0038I Pass   3: suminf.    6.10056 (31) obj. 0.122085 iterations 9
Cbc0038I Pass   4: suminf.    6.71078 (27) obj. 0 iterations 114
Cbc0038I Pass   5: suminf.    5.58655 (28) obj. 0 iterations 63
Cbc0038I Pass   6: suminf.    5.15272 (25) obj. 0 iterations 17
Cbc0038I Pass   7: suminf.    5.15272 (25) obj. -3.55271e-15 iterations 8
Cbc0038I Pass   8: suminf.    7.00431 (27) obj. 6.66134e-16 iterations 66
Cbc0038I Pass   9: suminf.    5.65904 (23) obj. -4.44089e-16 iterations 60
Cbc0038I Pass  10: suminf.    5.20946 (23) obj. -4.44089e-16 iterations 29
Cbc0038I Pass  11: suminf.    6.29501 (25) obj. -2.22045e-16 iterations 71
Cbc0038I Pass  12: suminf.    5.21404 (26) obj. 1.11022e-16 iterations 42
Cbc0038I Pass  13: suminf.    5.21404 (26) obj. 0 iterations 3
Cbc0038I Pass  14: suminf.    6.23484 (25) obj. 1.55431e-15 iterations 91
Cbc0038I Pass  15: suminf.    5.08443 (28) obj. 0.0496712 iterations 61
Cbc0038I Pass  16: suminf.    4.91487 (26) obj. -1.77636e-15 iterations 27
Cbc0038I Pass  17: suminf.    6.32662 (25) obj. 5.55112e-16 iterations 64
Cbc0038I Pass  18: suminf.    4.88895 (30) obj. 0.045107 iterations 83
Cbc0038I Pass  19: suminf.    4.87648 (29) obj. 0.0432624 iterations 19
Cbc0038I Pass  20: suminf.    6.55894 (23) obj. -5.10703e-15 iterations 80
Cbc0038I Pass  21: suminf.    5.44877 (28) obj. 0.0236303 iterations 66
Cbc0038I Pass  22: suminf.    7.33717 (30) obj. 0 iterations 83
Cbc0038I Pass  23: suminf.    5.73692 (27) obj. -2.22045e-16 iterations 52
Cbc0038I Pass  24: suminf.    5.35268 (26) obj. 1.11022e-16 iterations 35
Cbc0038I Pass  25: suminf.    7.35831 (24) obj. 0 iterations 70
Cbc0038I Pass  26: suminf.    5.59297 (26) obj. -2.22045e-16 iterations 74
Cbc0038I Pass  27: suminf.    6.33442 (28) obj. 0.038552 iterations 72
Cbc0038I Pass  28: suminf.    4.88780 (25) obj. 3.55271e-15 iterations 72
Cbc0038I Pass  29: suminf.    5.79159 (24) obj. 5.55112e-16 iterations 62
Cbc0038I Pass  30: suminf.    5.15272 (25) obj. 3.55271e-15 iterations 60
Cbc0038I Pass  31: suminf.    5.64558 (23) obj. -2.22045e-15 iterations 55
Cbc0038I Pass  32: suminf.   14.01166 (51) obj. 0.415425 iterations 111
Cbc0038I Pass  33: suminf.    7.72926 (31) obj. 0.346907 iterations 92
Cbc0038I Pass  34: suminf.    7.36237 (32) obj. 0.301434 iterations 26
Cbc0038I Pass  35: suminf.    4.31481 (15) obj. 1 iterations 77
Cbc0038I Pass  36: suminf.    2.91667 (12) obj. 1 iterations 38
Cbc0038I Pass  37: suminf.    2.75000 (12) obj. 1 iterations 4
Cbc0038I Pass  38: suminf.    3.68333 (14) obj. 1 iterations 60
Cbc0038I Pass  39: suminf.    2.40000 (9) obj. 1 iterations 35
Cbc0038I Pass  40: suminf.    3.81592 (16) obj. 1 iterations 31
Cbc0038I Pass  41: suminf.    3.65280 (18) obj. 1 iterations 5
Cbc0038I Pass  42: suminf.    3.87809 (18) obj. 1 iterations 74
Cbc0038I Pass  43: suminf.    2.40972 (9) obj. 1 iterations 7
Cbc0038I Pass  44: suminf.    1.91176 (8) obj. 1 iterations 34
Cbc0038I Pass  45: suminf.    1.54412 (6) obj. 1 iterations 14
Cbc0038I Pass  46: suminf.    8.88883 (29) obj. 1 iterations 82
Cbc0038I Pass  47: suminf.    6.68817 (29) obj. 1 iterations 59
Cbc0038I Pass  48: suminf.    6.68817 (29) obj. 1 iterations 0
Cbc0038I Pass  49: suminf.    4.27919 (21) obj. 1 iterations 68
Cbc0038I Pass  50: suminf.    2.90455 (14) obj. 1 iterations 49
Cbc0038I Pass  51: suminf.    2.90123 (15) obj. 1 iterations 5
Cbc0038I Pass  52: suminf.    4.19048 (14) obj. 1 iterations 60
Cbc0038I Pass  53: suminf.    3.47619 (11) obj. 1 iterations 39
Cbc0038I Pass  54: suminf.    3.03465 (14) obj. 1 iterations 45
Cbc0038I Pass  55: suminf.    2.40707 (12) obj. 1 iterations 9
Cbc0038I Pass  56: suminf.    1.71818 (9) obj. 1 iterations 19
Cbc0038I Pass  57: suminf.    2.86508 (9) obj. 1 iterations 34
Cbc0038I Pass  58: suminf.    1.60173 (9) obj. 1 iterations 28
Cbc0038I Pass  59: suminf.    3.21212 (11) obj. 1 iterations 42
Cbc0038I Pass  60: suminf.    2.10833 (12) obj. 1 iterations 32
Cbc0038I Pass  61: suminf.    2.39804 (12) obj. 1 iterations 34
Cbc0038I Pass  62: suminf.    7.52585 (33) obj. 1 iterations 110
Cbc0038I Pass  63: suminf.    4.77253 (25) obj. 1 iterations 44
Cbc0038I Pass  64: suminf.    4.46223 (25) obj. 1 iterations 12
Cbc0038I Pass  65: suminf.    6.11086 (25) obj. 1 iterations 50
Cbc0038I Pass  66: suminf.    3.79882 (24) obj. 1 iterations 28
Cbc0038I Pass  67: suminf.    3.79882 (24) obj. 1 iterations 1
Cbc0038I Pass  68: suminf.    7.60956 (27) obj. 1 iterations 56
Cbc0038I Pass  69: suminf.    6.83968 (29) obj. 1 iterations 30
Cbc0038I Pass  70: suminf.    5.53990 (24) obj. 1 iterations 63
Cbc0038I Pass  71: suminf.    4.61689 (22) obj. 1 iterations 40
Cbc0038I Pass  72: suminf.    4.12036 (19) obj. 1 iterations 18
Cbc0038I Pass  73: suminf.    3.73218 (23) obj. 1 iterations 24
Cbc0038I Pass  74: suminf.    3.45491 (23) obj. 1 iterations 14
Cbc0038I Pass  75: suminf.    7.77910 (25) obj. 1 iterations 65
Cbc0038I Pass  76: suminf.    6.37401 (23) obj. 1 iterations 25
Cbc0038I Pass  77: suminf.    4.97817 (24) obj. 1 iterations 32
Cbc0038I Pass  78: suminf.    4.88259 (27) obj. 1 iterations 32
Cbc0038I Pass  79: suminf.    4.55827 (24) obj. 1 iterations 20
Cbc0038I Pass  80: suminf.    6.82252 (23) obj. 1 iterations 67
Cbc0038I Pass  81: suminf.    4.10833 (20) obj. 1 iterations 41
Cbc0038I Pass  82: suminf.    3.53727 (20) obj. 1 iterations 8
Cbc0038I Pass  83: suminf.    3.46898 (19) obj. 1 iterations 9
Cbc0038I Pass  84: suminf.    5.47456 (25) obj. 1 iterations 41
Cbc0038I Pass  85: suminf.    4.58259 (23) obj. 1 iterations 31
Cbc0038I Pass  86: suminf.    4.58333 (17) obj. 1 iterations 39
Cbc0038I Pass  87: suminf.    2.68529 (14) obj. 1 iterations 27
Cbc0038I Pass  88: suminf.    4.80204 (22) obj. 1 iterations 52
Cbc0038I Pass  89: suminf.    3.01599 (19) obj. 1 iterations 36
Cbc0038I Pass  90: suminf.    2.92929 (18) obj. 1 iterations 24
Cbc0038I Pass  91: suminf.    3.87169 (15) obj. 1 iterations 58
Cbc0038I Pass  92: suminf.    2.26768 (15) obj. 1 iterations 33
Cbc0038I Pass  93: suminf.    2.24383 (15) obj. 1 iterations 5
Cbc0038I Pass  94: suminf.    4.29499 (19) obj. 1 iterations 61
Cbc0038I Pass  95: suminf.    4.25833 (17) obj. 1 iterations 13
Cbc0038I Pass  96: suminf.    4.37143 (18) obj. 1 iterations 28
Cbc0038I Pass  97: suminf.    2.63983 (17) obj. 1 iterations 8
Cbc0038I Pass  98: suminf.    2.63983 (17) obj. 1 iterations 9
Cbc0038I Pass  99: suminf.    4.89971 (17) obj. 1 iterations 29
Cbc0038I Pass 100: suminf.    9.98034 (33) obj. 1 iterations 98
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 229 integers at bound fixed and 0 continuous
Cbc0038I Full problem 217 rows 395 columns, reduced to 151 rows 154 columns - too large
Cbc0038I Mini branch and bound did not improve solution (1.51 seconds)
Cbc0038I Full problem 218 rows 395 columns, reduced to 216 rows 395 columns - too large
Cbc0038I After 1.56 seconds - Feasibility pump exiting - took 0.79 seconds
Cbc0031I 65 added rows had average density of 57.815385
Cbc0013I At root node, 65 cuts changed objective from 0 to 1 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 320 row cuts average 4.5 elements, 1 column cuts (1 active)  in 3.172 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1831 row cuts average 382.6 elements, 0 column cuts (0 active)  in 4.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 53 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.680 seconds - new frequency is 1
Cbc0014I Cut generator 3 (liftKnapsack) - 934 row cuts average 8.0 elements, 0 column cuts (0 active)  in 40.818 seconds - new frequency is 1
Cbc0014I Cut generator 4 (Clique) - 81 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (OddWheel) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.325 seconds - new frequency is -100
Cbc0014I Cut generator 6 (MixedIntegerRounding2) - 130 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.257 seconds - new frequency is 1
Cbc0014I Cut generator 7 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.197 seconds - new frequency is -100
Cbc0014I Cut generator 8 (TwoMirCuts) - 394 row cuts average 103.7 elements, 0 column cuts (0 active)  in 0.472 seconds - new frequency is 1
Cbc0014I Cut generator 9 (ZeroHalf) - 218 row cuts average 42.1 elements, 0 column cuts (0 active)  in 0.565 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1 (58.77 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1 (60.76 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 1 (63.19 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 1 (64.92 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 1 (66.21 seconds)
Cbc0010I After 8 nodes, 5 on tree, 1e+50 best solution, best possible 1 (67.28 seconds)
Cbc0010I After 11 nodes, 4 on tree, 1e+50 best solution, best possible 1 (70.84 seconds)
Cbc0010I After 12 nodes, 5 on tree, 1e+50 best solution, best possible 1 (71.99 seconds)
Cbc0010I After 16 nodes, 4 on tree, 1e+50 best solution, best possible 1 (72.70 seconds)
Cbc0010I After 17 nodes, 4 on tree, 1e+50 best solution, best possible 1 (74.37 seconds)
Cbc0010I After 20 nodes, 6 on tree, 1e+50 best solution, best possible 1 (75.31 seconds)
Cbc0010I After 22 nodes, 8 on tree, 1e+50 best solution, best possible 1 (76.37 seconds)
Cbc0010I After 28 nodes, 6 on tree, 1e+50 best solution, best possible 1 (77.20 seconds)
Cbc0010I After 33 nodes, 6 on tree, 1e+50 best solution, best possible 1 (78.17 seconds)
Cbc0010I After 35 nodes, 8 on tree, 1e+50 best solution, best possible 1 (79.10 seconds)
Cbc0010I After 37 nodes, 10 on tree, 1e+50 best solution, best possible 1 (79.84 seconds)
Cbc0010I After 41 nodes, 11 on tree, 1e+50 best solution, best possible 1 (80.64 seconds)
Cbc0010I After 46 nodes, 15 on tree, 1e+50 best solution, best possible 1 (81.43 seconds)
Cbc0010I After 55 nodes, 17 on tree, 1e+50 best solution, best possible 1 (82.21 seconds)
Cbc0010I After 64 nodes, 16 on tree, 1e+50 best solution, best possible 1 (82.95 seconds)
Cbc0010I After 74 nodes, 15 on tree, 1e+50 best solution, best possible 1 (83.67 seconds)
Cbc0010I After 82 nodes, 11 on tree, 1e+50 best solution, best possible 1 (84.40 seconds)
Cbc0010I After 93 nodes, 8 on tree, 1e+50 best solution, best possible 1 (85.34 seconds)
Cbc0010I After 96 nodes, 11 on tree, 1e+50 best solution, best possible 1 (86.18 seconds)
Cbc0010I After 101 nodes, 14 on tree, 1e+50 best solution, best possible 1 (86.95 seconds)
Cbc0010I After 109 nodes, 13 on tree, 1e+50 best solution, best possible 1 (87.72 seconds)
Cbc0010I After 118 nodes, 10 on tree, 1e+50 best solution, best possible 1 (88.48 seconds)
Cbc0010I After 121 nodes, 11 on tree, 1e+50 best solution, best possible 1 (89.26 seconds)
Cbc0010I After 128 nodes, 8 on tree, 1e+50 best solution, best possible 1 (90.56 seconds)
Cbc0010I After 133 nodes, 9 on tree, 1e+50 best solution, best possible 1 (91.28 seconds)
Cbc0010I After 138 nodes, 11 on tree, 1e+50 best solution, best possible 1 (92.05 seconds)
Cbc0010I After 144 nodes, 9 on tree, 1e+50 best solution, best possible 1 (92.85 seconds)
Cbc0010I After 153 nodes, 6 on tree, 1e+50 best solution, best possible 1 (93.78 seconds)
Cbc0010I After 158 nodes, 10 on tree, 1e+50 best solution, best possible 1 (94.53 seconds)
Cbc0010I After 164 nodes, 9 on tree, 1e+50 best solution, best possible 1 (95.23 seconds)
Cbc0004I Integer solution of 1 found after 22203 iterations and 165 nodes (95.28 seconds)
Cbc0001I Search completed - best objective 1, took 22203 iterations and 165 nodes (95.28 seconds)
Cbc0032I Strong branching done 1146 times (26208 iterations), fathomed 2 nodes and fixed 6 variables
Cbc0035I Maximum depth 28, 0 variables fixed on reduced cost
Cuts at root node changed objective from 0 to 1
Probing was tried 240 times and created 1249 cuts of which 0 were active after adding rounds of cuts (3.5871 seconds)
Gomory was tried 234 times and created 1833 cuts of which 0 were active after adding rounds of cuts (4.26792 seconds)
Knapsack was tried 234 times and created 326 cuts of which 0 were active after adding rounds of cuts (1.45123 seconds)
liftKnapsack was tried 234 times and created 2620 cuts of which 0 were active after adding rounds of cuts (69.4855 seconds)
Clique was tried 100 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.068431 seconds)
OddWheel was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.32454 seconds)
MixedIntegerRounding2 was tried 234 times and created 480 cuts of which 0 were active after adding rounds of cuts (0.508054 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.196586 seconds)
TwoMirCuts was tried 234 times and created 752 cuts of which 0 were active after adding rounds of cuts (0.674947 seconds)
ZeroHalf was tried 234 times and created 827 cuts of which 0 were active after adding rounds of cuts (1.12631 seconds)

Result - Optimal solution found
Objective value:                1
Enumerated nodes:               165
Total iterations:               22203
Time (CPU seconds):             94.652
Time (Wallclock seconds):       95.3834
Total time (CPU seconds):       94.659   (Wallclock seconds):       95.3928
