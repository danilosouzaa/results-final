Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/a10100.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 121 COLUMNS
At line 2124 RHS
At line 2180 BOUNDS
At line 3181 ENDATA
Problem no_name has 110 rows, 1000 columns and 2000 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 1358.56 - 0.007736 seconds
Cgl0005I 100 SOS with 1000 members
Cgl0004I processed model has 110 rows, 1000 columns (1000 integer (1000 of which binary)) and 2000 elements
Coin3009W Conflict graph built in 0.003 seconds, density: 0.275%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.34769
Cbc0038I Pass   1: suminf.    0.27273 (2) obj. 1361.18 iterations 12
Cbc0038I Solution found of 1375
Cbc0038I Before mini branch and bound, 994 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of 1372.46
Cbc0038I Reduced cost fixing fixed 557 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.27273 (2) obj. 1359.41 iterations 1
Cbc0038I Solution found of 1362
Cbc0038I Before mini branch and bound, 994 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 1000 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of 1360.51
Cbc0038I Reduced cost fixing fixed 840 variables on major pass 3
Cbc0038I Pass   3: suminf.    0.27273 (2) obj. 1359.41 iterations 0
Cbc0038I Pass   4: suminf.    0.99236 (2) obj. 1360.51 iterations 7
Cbc0038I Pass   5: suminf.    0.64127 (4) obj. 1360.51 iterations 6
Cbc0038I Pass   6: suminf.    0.27273 (2) obj. 1360.41 iterations 3
Cbc0038I Pass   7: suminf.    0.34098 (2) obj. 1360.51 iterations 5
Cbc0038I Pass   8: suminf.    1.32186 (7) obj. 1360.51 iterations 14
Cbc0038I Pass   9: suminf.    0.27273 (2) obj. 1360.41 iterations 8
Cbc0038I Pass  10: suminf.    0.34098 (2) obj. 1360.51 iterations 5
Cbc0038I Pass  11: suminf.    1.48447 (6) obj. 1360.51 iterations 10
Cbc0038I Pass  12: suminf.    0.27273 (2) obj. 1360.41 iterations 6
Cbc0038I Pass  13: suminf.    0.34098 (2) obj. 1360.51 iterations 5
Cbc0038I Pass  14: suminf.    0.47747 (4) obj. 1360.51 iterations 12
Cbc0038I Pass  15: suminf.    0.27273 (2) obj. 1360.41 iterations 4
Cbc0038I Pass  16: suminf.    0.34098 (2) obj. 1360.51 iterations 4
Cbc0038I Pass  17: suminf.    1.67340 (10) obj. 1360.51 iterations 15
Cbc0038I Pass  18: suminf.    0.35606 (4) obj. 1360.45 iterations 10
Cbc0038I Pass  19: suminf.    1.24753 (6) obj. 1360.51 iterations 6
Cbc0038I Pass  20: suminf.    0.99383 (6) obj. 1360.51 iterations 5
Cbc0038I Pass  21: suminf.    1.48447 (6) obj. 1360.51 iterations 4
Cbc0038I Pass  22: suminf.    2.42564 (8) obj. 1360.51 iterations 5
Cbc0038I Pass  23: suminf.    1.91291 (8) obj. 1360.51 iterations 9
Cbc0038I Pass  24: suminf.    1.64601 (6) obj. 1360.51 iterations 7
Cbc0038I Pass  25: suminf.    0.27273 (2) obj. 1360.41 iterations 9
Cbc0038I Pass  26: suminf.    0.34098 (2) obj. 1360.51 iterations 8
Cbc0038I Pass  27: suminf.    1.09888 (6) obj. 1360.51 iterations 10
Cbc0038I Pass  28: suminf.    0.47441 (6) obj. 1360.51 iterations 9
Cbc0038I Pass  29: suminf.    0.51146 (4) obj. 1360.51 iterations 5
Cbc0038I Pass  30: suminf.    2.55592 (8) obj. 1360.51 iterations 9
Cbc0038I Pass  31: suminf.    0.92293 (6) obj. 1360.51 iterations 5
Cbc0038I Pass  32: suminf.    0.33091 (4) obj. 1360.26 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 951 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 1000 columns, reduced to 8 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 1362 to 1360 (0.20 seconds)
Cbc0038I Round again with cutoff of 1358.87
Cbc0038I Reduced cost fixing fixed 885 variables on major pass 4
Cbc0038I Pass  32: suminf.    0.72724 (4) obj. 1358.87 iterations 9
Cbc0038I Pass  33: suminf.    0.89174 (4) obj. 1358.87 iterations 3
Cbc0038I Pass  34: suminf.    0.89174 (4) obj. 1358.87 iterations 1
Cbc0038I Pass  35: suminf.    1.34769 (4) obj. 1358.56 iterations 3
Cbc0038I Pass  36: suminf.    1.34769 (4) obj. 1358.56 iterations 2
Cbc0038I Pass  37: suminf.    0.72724 (4) obj. 1358.87 iterations 2
Cbc0038I Pass  38: suminf.    0.89174 (4) obj. 1358.87 iterations 2
Cbc0038I Pass  39: suminf.    0.89174 (4) obj. 1358.87 iterations 0
Cbc0038I Pass  40: suminf.    1.34769 (4) obj. 1358.56 iterations 2
Cbc0038I Pass  41: suminf.    0.89174 (4) obj. 1358.87 iterations 8
Cbc0038I Pass  42: suminf.    0.89174 (4) obj. 1358.87 iterations 1
Cbc0038I Pass  43: suminf.    1.34769 (4) obj. 1358.56 iterations 3
Cbc0038I Pass  44: suminf.    0.72724 (4) obj. 1358.87 iterations 2
Cbc0038I Pass  45: suminf.    0.89174 (4) obj. 1358.87 iterations 2
Cbc0038I Pass  46: suminf.    0.89174 (4) obj. 1358.87 iterations 3
Cbc0038I Pass  47: suminf.    0.89174 (4) obj. 1358.87 iterations 0
Cbc0038I Pass  48: suminf.    1.13231 (4) obj. 1358.82 iterations 2
Cbc0038I Pass  49: suminf.    0.89174 (4) obj. 1358.87 iterations 4
Cbc0038I Pass  50: suminf.    0.89174 (4) obj. 1358.87 iterations 3
Cbc0038I Pass  51: suminf.    1.34769 (4) obj. 1358.56 iterations 3
Cbc0038I Pass  52: suminf.    0.72724 (4) obj. 1358.87 iterations 3
Cbc0038I Pass  53: suminf.    0.89174 (4) obj. 1358.87 iterations 3
Cbc0038I Pass  54: suminf.    1.83292 (6) obj. 1358.87 iterations 6
Cbc0038I Pass  55: suminf.    1.78063 (6) obj. 1358.87 iterations 1
Cbc0038I Pass  56: suminf.    1.13231 (4) obj. 1358.82 iterations 4
Cbc0038I Pass  57: suminf.    0.89174 (4) obj. 1358.87 iterations 4
Cbc0038I Pass  58: suminf.    0.89174 (4) obj. 1358.87 iterations 2
Cbc0038I Pass  59: suminf.    0.89174 (4) obj. 1358.87 iterations 0
Cbc0038I Pass  60: suminf.    1.13231 (4) obj. 1358.82 iterations 3
Cbc0038I Pass  61: suminf.    1.03494 (4) obj. 1358.87 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 980 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of 1360 - took 0.24 seconds
Cbc0012I Integer solution of 1360 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 1358.5569 to 1359.1176 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.0 elements, 82 column cuts (82 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 1360, took 0 iterations and 0 nodes (0.31 seconds)
Cbc0035I Maximum depth 0, 883 variables fixed on reduced cost
Cuts at root node changed objective from 1358.56 to 1359.12
Probing was tried 1 times and created 98 cuts of which 0 were active after adding rounds of cuts (0.0011 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
OddWheel was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)

Result - Optimal solution found
Objective value:                1360
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.31564
Time (Wallclock seconds):       0.316266
Total time (CPU seconds):       0.321282   (Wallclock seconds):       0.347914
