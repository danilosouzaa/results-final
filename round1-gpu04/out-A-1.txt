Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/A-1.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 1026 COLUMNS
At line 110475 RHS
At line 110941 BOUNDS
At line 129580 ENDATA
Problem no_name has 1015 rows, 18598 columns and 214740 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 3.10002e+06 - 0.335181 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1005 rows, 18379 columns (18379 integer (18338 of which binary)) and 217515 elements
Coin3009W Conflict graph built in 2.235 seconds, density: 1.138%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.53064
Cbc0038I Pass   1: suminf.    2.26113 (25) obj. 3.20002e+06 iterations 148
Cbc0038I Pass   2: suminf.    3.94705 (28) obj. 3.33958e+06 iterations 21
Cbc0038I Pass   3: suminf.    3.00456 (17) obj. 5.94003e+07 iterations 79
Cbc0038I Pass   4: suminf.    0.66992 (13) obj. 5.94003e+07 iterations 10
Cbc0038I Pass   5: suminf.    0.66992 (13) obj. 5.94003e+07 iterations 0
Cbc0038I Pass   6: suminf.    0.15319 (11) obj. 5.94003e+07 iterations 27
Cbc0038I Pass   7: suminf.    0.15319 (11) obj. 5.94003e+07 iterations 3
Cbc0038I Pass   8: suminf.    0.74106 (13) obj. 5.94003e+07 iterations 16
Cbc0038I Pass   9: suminf.    0.14635 (11) obj. 5.94003e+07 iterations 9
Cbc0038I Pass  10: suminf.    0.14635 (11) obj. 5.94003e+07 iterations 0
Cbc0038I Pass  11: suminf.   12.16325 (47) obj. 4.54002e+07 iterations 202
Cbc0038I Pass  12: suminf.    8.20053 (39) obj. 4.57601e+07 iterations 74
Cbc0038I Pass  13: suminf.    9.13862 (38) obj. 4.54002e+07 iterations 47
Cbc0038I Pass  14: suminf.    4.93982 (34) obj. 5.22802e+07 iterations 26
Cbc0038I Pass  15: suminf.    4.75828 (32) obj. 5.27802e+07 iterations 14
Cbc0038I Pass  16: suminf.    8.59057 (24) obj. 5.96003e+07 iterations 62
Cbc0038I Pass  17: suminf.    5.91895 (17) obj. 5.96003e+07 iterations 35
Cbc0038I Pass  18: suminf.    5.22090 (15) obj. 5.96003e+07 iterations 39
Cbc0038I Pass  19: suminf.    3.80702 (14) obj. 5.96003e+07 iterations 27
Cbc0038I Pass  20: suminf.    5.29097 (16) obj. 5.96003e+07 iterations 37
Cbc0038I Pass  21: suminf.    3.74040 (15) obj. 5.96003e+07 iterations 24
Cbc0038I Pass  22: suminf.    4.86496 (14) obj. 5.96003e+07 iterations 38
Cbc0038I Pass  23: suminf.    3.45108 (13) obj. 5.96003e+07 iterations 25
Cbc0038I Pass  24: suminf.    9.21191 (36) obj. 5.88003e+07 iterations 108
Cbc0038I Pass  25: suminf.    5.30197 (28) obj. 5.88003e+07 iterations 69
Cbc0038I Pass  26: suminf.    3.78463 (17) obj. 5.93003e+07 iterations 37
Cbc0038I Pass  27: suminf.    3.92296 (18) obj. 5.93003e+07 iterations 1
Cbc0038I Pass  28: suminf.    5.70177 (17) obj. 5.93003e+07 iterations 36
Cbc0038I Pass  29: suminf.    3.94717 (13) obj. 5.93003e+07 iterations 18
Cbc0038I Pass  30: suminf.    5.49815 (12) obj. 5.93003e+07 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1005 rows 18379 columns, reduced to 149 rows 182 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 3.16003e+07 (11.35 seconds)
Cbc0038I Round again with cutoff of 2.87503e+07
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 2
Cbc0038I Pass  30: suminf.    2.26203 (25) obj. 3.20002e+06 iterations 3
Cbc0038I Pass  31: suminf.    3.67853 (22) obj. 2.86003e+07 iterations 166
Cbc0038I Pass  32: suminf.    4.08501 (27) obj. 2.86378e+07 iterations 85
Cbc0038I Pass  33: suminf.    3.61511 (27) obj. 2.86378e+07 iterations 3
Cbc0038I Pass  34: suminf.    1.80746 (27) obj. 2.86881e+07 iterations 27
Cbc0038I Pass  35: suminf.    1.80746 (27) obj. 2.86881e+07 iterations 4
Cbc0038I Pass  36: suminf.    8.12793 (37) obj. 2.87503e+07 iterations 69
Cbc0038I Pass  37: suminf.    7.39938 (39) obj. 2.87503e+07 iterations 10
Cbc0038I Pass  38: suminf.    2.96540 (26) obj. 2.87503e+07 iterations 47
Cbc0038I Pass  39: suminf.    2.96540 (26) obj. 2.87503e+07 iterations 0
Cbc0038I Pass  40: suminf.    5.29425 (22) obj. 2.87503e+07 iterations 34
Cbc0038I Pass  41: suminf.    5.27184 (22) obj. 2.87503e+07 iterations 9
Cbc0038I Pass  42: suminf.    2.21480 (15) obj. 2.87503e+07 iterations 17
Cbc0038I Pass  43: suminf.    2.71132 (24) obj. 2.87503e+07 iterations 20
Cbc0038I Pass  44: suminf.    3.62019 (32) obj. 2.87503e+07 iterations 37
Cbc0038I Pass  45: suminf.    3.62019 (32) obj. 2.87503e+07 iterations 2
Cbc0038I Pass  46: suminf.    8.27395 (38) obj. 2.87503e+07 iterations 34
Cbc0038I Pass  47: suminf.    7.39614 (38) obj. 2.87503e+07 iterations 12
Cbc0038I Pass  48: suminf.    6.69359 (38) obj. 2.87503e+07 iterations 4
Cbc0038I Pass  49: suminf.    6.38924 (35) obj. 2.87503e+07 iterations 2
Cbc0038I Pass  50: suminf.    5.78629 (45) obj. 2.87503e+07 iterations 44
Cbc0038I Pass  51: suminf.    5.84520 (46) obj. 2.87503e+07 iterations 13
Cbc0038I Pass  52: suminf.    4.80126 (45) obj. 2.87503e+07 iterations 45
Cbc0038I Pass  53: suminf.    4.75499 (44) obj. 2.87503e+07 iterations 8
Cbc0038I Pass  54: suminf.    7.47760 (46) obj. 2.87503e+07 iterations 45
Cbc0038I Pass  55: suminf.    6.72487 (39) obj. 2.87503e+07 iterations 7
Cbc0038I Pass  56: suminf.    6.42052 (36) obj. 2.87503e+07 iterations 2
Cbc0038I Pass  57: suminf.    7.29628 (45) obj. 2.87503e+07 iterations 49
Cbc0038I Pass  58: suminf.    6.80279 (46) obj. 2.87503e+07 iterations 12
Cbc0038I Pass  59: suminf.    3.75078 (38) obj. 2.87503e+07 iterations 31
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18262 integers at bound fixed and 1 continuous
Cbc0038I Full problem 1005 rows 18379 columns, reduced to 129 rows 110 columns
Cbc0038I Mini branch and bound did not improve solution (13.60 seconds)
Cbc0038I After 13.60 seconds - Feasibility pump exiting with objective of 3.16003e+07 - took 5.30 seconds
Cbc0012I Integer solution of 31600294 found by feasibility pump after 0 iterations and 0 nodes (13.62 seconds)
Cbc0038I Full problem 1005 rows 18379 columns, reduced to 43 rows 30 columns
Cbc0031I 24 added rows had average density of 328.16667
Cbc0013I At root node, 24 cuts changed objective from 3100022 to 3120386.7 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 9.2 elements, 2 column cuts (2 active)  in 4.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 912.8 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.226 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 9 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.524 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 404.4 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 31600294 best solution, best possible 3120386.7 (22.28 seconds)
Cbc0010I After 1 nodes, 2 on tree, 31600294 best solution, best possible 3120386.7 (23.04 seconds)
Cbc0010I After 3 nodes, 4 on tree, 31600294 best solution, best possible 3120386.7 (24.23 seconds)
Cbc0010I After 6 nodes, 7 on tree, 31600294 best solution, best possible 3120386.7 (25.19 seconds)
Cbc0010I After 15 nodes, 16 on tree, 31600294 best solution, best possible 3120386.7 (26.06 seconds)
Cbc0004I Integer solution of 3600022 found after 492 iterations and 18 nodes (26.28 seconds)
Cbc0004I Integer solution of 3400022 found after 514 iterations and 22 nodes (26.65 seconds)
Cbc0010I After 24 nodes, 7 on tree, 3400022 best solution, best possible 3120386.7 (26.82 seconds)
Cbc0010I After 30 nodes, 4 on tree, 3400022 best solution, best possible 3120386.7 (27.63 seconds)
Cbc0010I After 31 nodes, 5 on tree, 3400022 best solution, best possible 3120386.7 (28.47 seconds)
Cbc0012I Integer solution of 3300024 found by rounding after 775 iterations and 33 nodes (28.61 seconds)
Cbc0004I Integer solution of 3200023 found after 800 iterations and 35 nodes (28.99 seconds)
Cbc0010I After 36 nodes, 2 on tree, 3200023 best solution, best possible 3120386.7 (29.45 seconds)
Cbc0016I Integer solution of 3200022 found by strong branching after 955 iterations and 39 nodes (30.32 seconds)
Cbc0010I After 39 nodes, 1 on tree, 3200022 best solution, best possible 3120386.7 (30.32 seconds)
Cbc0001I Search completed - best objective 3200022, took 1026 iterations and 40 nodes (30.43 seconds)
Cbc0032I Strong branching done 208 times (1771 iterations), fathomed 2 nodes and fixed 19 variables
Cbc0035I Maximum depth 16, 1856 variables fixed on reduced cost
Cuts at root node changed objective from 3.10002e+06 to 3.12039e+06
Probing was tried 38 times and created 98 cuts of which 0 were active after adding rounds of cuts (4.34813 seconds)
Gomory was tried 5 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.16143 seconds)
Knapsack was tried 38 times and created 36 cuts of which 0 were active after adding rounds of cuts (2.16408 seconds)
Clique was tried 38 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.07112 seconds)
OddWheel was tried 5 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.010143 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.226114 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.072796 seconds)
TwoMirCuts was tried 5 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.52448 seconds)
ZeroHalf was tried 5 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.115293 seconds)

Result - Optimal solution found
Objective value:                3200022
Enumerated nodes:               40
Total iterations:               1026
Time (CPU seconds):             30.7823
Time (Wallclock seconds):       30.8761
Total time (CPU seconds):       31.0008   (Wallclock seconds):       31.1229
