Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/neos-1441553.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 320 COLUMNS
At line 11481 RHS
At line 11529 BOUNDS
At line 12490 ENDATA
Problem file has 316 rows, 960 columns and 11138 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 7.6348 - 0.039644 seconds
Cgl0003I 25 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0003I 10 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 316 rows, 924 columns (924 integer (924 of which binary)) and 10737 elements
Coin3009W Conflict graph built in 0.006 seconds, density: 0.591%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0045I 20 integer variables out of 924 objects (924 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 82 integers unsatisfied sum - 17.8041
Cbc0038I Pass   1: suminf.    6.69187 (67) obj. 8.01128 iterations 165
Cbc0038I Pass   2: suminf.    6.40260 (67) obj. 8.01076 iterations 22
Cbc0038I Pass   3: suminf.    8.25282 (52) obj. 9.9843 iterations 70
Cbc0038I Pass   4: suminf.    6.05629 (51) obj. 9.96617 iterations 55
Cbc0038I Pass   5: suminf.    6.02716 (54) obj. 9.96146 iterations 2
Cbc0038I Pass   6: suminf.    5.55759 (52) obj. 10.8306 iterations 30
Cbc0038I Pass   7: suminf.    4.90704 (48) obj. 10.8145 iterations 27
Cbc0038I Pass   8: suminf.    6.99270 (50) obj. 11.7321 iterations 42
Cbc0038I Pass   9: suminf.    4.51821 (46) obj. 11.6677 iterations 48
Cbc0038I Pass  10: suminf.    4.73438 (47) obj. 11.6705 iterations 17
Cbc0038I Pass  11: suminf.    4.52466 (47) obj. 11.655 iterations 17
Cbc0038I Pass  12: suminf.    5.90088 (42) obj. 18.1248 iterations 38
Cbc0038I Pass  13: suminf.    3.93544 (40) obj. 18.0813 iterations 33
Cbc0038I Pass  14: suminf.    5.21713 (37) obj. 18.6897 iterations 59
Cbc0038I Pass  15: suminf.    2.96949 (23) obj. 18.7674 iterations 36
Cbc0038I Pass  16: suminf.    2.77901 (22) obj. 18.7674 iterations 2
Cbc0038I Pass  17: suminf.    2.27456 (13) obj. 20 iterations 50
Cbc0038I Pass  18: suminf.    1.71153 (13) obj. 20 iterations 12
Cbc0038I Pass  19: suminf.    2.12222 (12) obj. 20 iterations 19
Cbc0038I Pass  20: suminf.    1.09841 (11) obj. 20 iterations 15
Cbc0038I Pass  21: suminf.    2.19883 (12) obj. 20 iterations 20
Cbc0038I Pass  22: suminf.    1.86550 (12) obj. 20 iterations 8
Cbc0038I Pass  23: suminf.    1.84932 (13) obj. 20 iterations 20
Cbc0038I Pass  24: suminf.    1.40488 (11) obj. 20 iterations 7
Cbc0038I Pass  25: suminf.   10.67671 (45) obj. 20 iterations 147
Cbc0038I Pass  26: suminf.    5.47474 (29) obj. 20 iterations 66
Cbc0038I Pass  27: suminf.    4.41645 (25) obj. 20 iterations 31
Cbc0038I Pass  28: suminf.    3.55077 (22) obj. 20 iterations 12
Cbc0038I Pass  29: suminf.    4.32590 (17) obj. 20 iterations 45
Cbc0038I Pass  30: suminf.    3.25799 (14) obj. 20 iterations 11
Cbc0038I Pass  31: suminf.    3.21220 (14) obj. 20 iterations 5
Cbc0038I Pass  32: suminf.    2.84361 (10) obj. 20 iterations 30
Cbc0038I Pass  33: suminf.    2.84361 (10) obj. 20 iterations 0
Cbc0038I Pass  34: suminf.    3.85600 (12) obj. 20 iterations 16
Cbc0038I Pass  35: suminf.    3.42139 (12) obj. 20 iterations 11
Cbc0038I Pass  36: suminf.    3.00000 (11) obj. 20 iterations 20
Cbc0038I Pass  37: suminf.    2.21637 (10) obj. 20 iterations 9
Cbc0038I Pass  38: suminf.    2.21637 (10) obj. 20 iterations 2
Cbc0038I Pass  39: suminf.    3.98229 (12) obj. 20 iterations 25
Cbc0038I Pass  40: suminf.    3.84949 (12) obj. 20 iterations 12
Cbc0038I Pass  41: suminf.    2.58824 (10) obj. 20 iterations 18
Cbc0038I Pass  42: suminf.    2.58239 (10) obj. 20 iterations 2
Cbc0038I Pass  43: suminf.    3.94567 (12) obj. 20 iterations 17
Cbc0038I Pass  44: suminf.    3.10141 (12) obj. 20 iterations 11
Cbc0038I Pass  45: suminf.    3.09841 (12) obj. 20 iterations 4
Cbc0038I Pass  46: suminf.    2.84361 (10) obj. 20 iterations 22
Cbc0038I Pass  47: suminf.    2.84361 (10) obj. 20 iterations 1
Cbc0038I Pass  48: suminf.    3.85600 (12) obj. 20 iterations 17
Cbc0038I Pass  49: suminf.    3.42139 (12) obj. 20 iterations 11
Cbc0038I Pass  50: suminf.    3.00000 (11) obj. 20 iterations 20
Cbc0038I Pass  51: suminf.    2.21637 (10) obj. 20 iterations 9
Cbc0038I Pass  52: suminf.    2.21637 (10) obj. 20 iterations 2
Cbc0038I Pass  53: suminf.    3.98229 (12) obj. 20 iterations 25
Cbc0038I Pass  54: suminf.    3.84949 (12) obj. 20 iterations 11
Cbc0038I Pass  55: suminf.    2.58824 (10) obj. 20 iterations 18
Cbc0038I Pass  56: suminf.    2.58239 (10) obj. 20 iterations 2
Cbc0038I Pass  57: suminf.    3.94567 (12) obj. 20 iterations 17
Cbc0038I Pass  58: suminf.    3.10141 (12) obj. 20 iterations 11
Cbc0038I Pass  59: suminf.    3.09841 (12) obj. 20 iterations 4
Cbc0038I Pass  60: suminf.    2.84361 (10) obj. 20 iterations 22
Cbc0038I Pass  61: suminf.    2.84361 (10) obj. 20 iterations 1
Cbc0038I Pass  62: suminf.    3.85600 (12) obj. 20 iterations 17
Cbc0038I Pass  63: suminf.    3.42139 (12) obj. 20 iterations 11
Cbc0038I Pass  64: suminf.    3.00000 (11) obj. 20 iterations 20
Cbc0038I Pass  65: suminf.    2.21637 (10) obj. 20 iterations 9
Cbc0038I Pass  66: suminf.    2.21637 (10) obj. 20 iterations 2
Cbc0038I Pass  67: suminf.    3.98229 (12) obj. 20 iterations 25
Cbc0038I Pass  68: suminf.    3.84949 (12) obj. 20 iterations 11
Cbc0038I Pass  69: suminf.    2.58824 (10) obj. 20 iterations 18
Cbc0038I Pass  70: suminf.    2.58239 (10) obj. 20 iterations 2
Cbc0038I Pass  71: suminf.    3.94567 (12) obj. 20 iterations 17
Cbc0038I Pass  72: suminf.    3.10141 (12) obj. 20 iterations 11
Cbc0038I Pass  73: suminf.    3.09841 (12) obj. 20 iterations 4
Cbc0038I Pass  74: suminf.    2.84361 (10) obj. 20 iterations 22
Cbc0038I Pass  75: suminf.    2.84361 (10) obj. 20 iterations 1
Cbc0038I Pass  76: suminf.    3.85600 (12) obj. 20 iterations 17
Cbc0038I Pass  77: suminf.    3.42139 (12) obj. 20 iterations 11
Cbc0038I Pass  78: suminf.    3.00000 (11) obj. 20 iterations 20
Cbc0038I Pass  79: suminf.    2.21637 (10) obj. 20 iterations 9
Cbc0038I Pass  80: suminf.    2.21637 (10) obj. 20 iterations 2
Cbc0038I Pass  81: suminf.    3.98229 (12) obj. 20 iterations 25
Cbc0038I Pass  82: suminf.    3.84949 (12) obj. 20 iterations 11
Cbc0038I Pass  83: suminf.    2.58824 (10) obj. 20 iterations 18
Cbc0038I Pass  84: suminf.    2.58239 (10) obj. 20 iterations 2
Cbc0038I Pass  85: suminf.    3.94567 (12) obj. 20 iterations 17
Cbc0038I Pass  86: suminf.    3.10141 (12) obj. 20 iterations 11
Cbc0038I Pass  87: suminf.    3.09841 (12) obj. 20 iterations 4
Cbc0038I Pass  88: suminf.    2.84361 (10) obj. 20 iterations 22
Cbc0038I Pass  89: suminf.    2.84361 (10) obj. 20 iterations 1
Cbc0038I Pass  90: suminf.    3.85600 (12) obj. 20 iterations 17
Cbc0038I Pass  91: suminf.    3.42139 (12) obj. 20 iterations 11
Cbc0038I Pass  92: suminf.    3.00000 (11) obj. 20 iterations 20
Cbc0038I Pass  93: suminf.    2.21637 (10) obj. 20 iterations 9
Cbc0038I Pass  94: suminf.    2.21637 (10) obj. 20 iterations 2
Cbc0038I Pass  95: suminf.    3.98229 (12) obj. 20 iterations 25
Cbc0038I Pass  96: suminf.    3.84949 (12) obj. 20 iterations 11
Cbc0038I Pass  97: suminf.    2.67712 (10) obj. 20 iterations 21
Cbc0038I Pass  98: suminf.    2.58239 (10) obj. 20 iterations 2
Cbc0038I Pass  99: suminf.    3.94567 (12) obj. 20 iterations 17
Cbc0038I Pass 100: suminf.   13.30055 (46) obj. 20 iterations 160
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 640 integers at bound fixed and 0 continuous
Cbc0038I Full problem 316 rows 924 columns, reduced to 297 rows 270 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.07 seconds)
Cbc0038I Full problem 317 rows 924 columns, reduced to 317 rows 924 columns - too large
Cbc0038I After 3.19 seconds - Feasibility pump exiting - took 1.57 seconds
Cbc0031I 97 added rows had average density of 30.381443
Cbc0013I At root node, 97 cuts changed objective from 7.6348039 to 7.6348039 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 809 row cuts average 3.5 elements, 0 column cuts (68 active)  in 0.508 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 155 row cuts average 741.7 elements, 0 column cuts (0 active)  in 0.586 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 218 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 97.4 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 112 row cuts average 43.8 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 7.6348039 (6.52 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 8 (7.39 seconds)
Cbc0010I After 11 nodes, 10 on tree, 1e+50 best solution, best possible 8 (8.12 seconds)
Cbc0010I After 27 nodes, 19 on tree, 1e+50 best solution, best possible 8 (8.86 seconds)
Cbc0010I After 58 nodes, 33 on tree, 1e+50 best solution, best possible 8 (9.57 seconds)
Cbc0016I Integer solution of 8 found by strong branching after 4100 iterations and 99 nodes (10.26 seconds)
Cbc0001I Search completed - best objective 8, took 4100 iterations and 99 nodes (10.27 seconds)
Cbc0032I Strong branching done 1524 times (19286 iterations), fathomed 1 nodes and fixed 37 variables
Cbc0035I Maximum depth 43, 0 variables fixed on reduced cost
Cuts at root node changed objective from 7.6348 to 7.6348
Probing was tried 10 times and created 809 cuts of which 68 were active after adding rounds of cuts (0.508479 seconds)
Gomory was tried 10 times and created 155 cuts of which 0 were active after adding rounds of cuts (0.586352 seconds)
Knapsack was tried 10 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.123051 seconds)
Clique was tried 10 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.019227 seconds)
OddWheel was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.138619 seconds)
MixedIntegerRounding2 was tried 10 times and created 218 cuts of which 0 were active after adding rounds of cuts (0.09085 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003379 seconds)
TwoMirCuts was tried 10 times and created 208 cuts of which 0 were active after adding rounds of cuts (0.174196 seconds)
ZeroHalf was tried 10 times and created 112 cuts of which 0 were active after adding rounds of cuts (0.128059 seconds)

Result - Optimal solution found
Objective value:                8
Enumerated nodes:               99
Total iterations:               4100
Time (CPU seconds):             10.2749
Time (Wallclock seconds):       10.3067
Total time (CPU seconds):       10.2874   (Wallclock seconds):       10.3218
