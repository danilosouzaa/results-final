Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/eilA76.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 1 NAME
At line 2 ROWS
At line 79 COLUMNS
At line 6619 RHS
At line 6658 ENDATA
Problem no_name has 75 rows, 1422 columns and 10967 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 828.708 - 0.057924 seconds
Cgl0004I processed model has 75 rows, 1418 columns (1418 integer (1418 of which binary)) and 10938 elements
Coin3009W Conflict graph built in 0.275 seconds, density: 11.597%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 64 integers unsatisfied sum - 9.58898
Cbc0038I Pass   1: suminf.    6.06988 (45) obj. 886.959 iterations 204
Cbc0038I Pass   2: suminf.    6.06988 (45) obj. 886.959 iterations 5
Cbc0038I Pass   3: suminf.    6.20511 (51) obj. 894.344 iterations 179
Cbc0038I Pass   4: suminf.    5.74740 (45) obj. 899.591 iterations 151
Cbc0038I Pass   5: suminf.    6.41429 (46) obj. 905.527 iterations 138
Cbc0038I Pass   6: suminf.    5.47190 (47) obj. 902.683 iterations 180
Cbc0038I Pass   7: suminf.    5.61198 (45) obj. 901.794 iterations 144
Cbc0038I Pass   8: suminf.   15.01020 (74) obj. 1233.39 iterations 261
Cbc0038I Pass   9: suminf.    9.61723 (71) obj. 1125.55 iterations 186
Cbc0038I Pass  10: suminf.    8.86163 (68) obj. 1145.82 iterations 79
Cbc0038I Pass  11: suminf.    8.54528 (68) obj. 1141.81 iterations 50
Cbc0038I Pass  12: suminf.    9.02608 (71) obj. 1162.67 iterations 83
Cbc0038I Pass  13: suminf.    7.60477 (72) obj. 1131.9 iterations 114
Cbc0038I Pass  14: suminf.    7.14787 (73) obj. 1131.02 iterations 58
Cbc0038I Pass  15: suminf.    5.40406 (73) obj. 1178.82 iterations 60
Cbc0038I Pass  16: suminf.    4.94782 (45) obj. 1188.24 iterations 68
Cbc0038I Pass  17: suminf.    7.06259 (57) obj. 1210.74 iterations 190
Cbc0038I Pass  18: suminf.    5.71899 (44) obj. 1173.69 iterations 133
Cbc0038I Pass  19: suminf.    5.28651 (36) obj. 1159.79 iterations 83
Cbc0038I Pass  20: suminf.    5.24856 (34) obj. 1162.38 iterations 103
Cbc0038I Pass  21: suminf.    4.88506 (46) obj. 1175.29 iterations 118
Cbc0038I Pass  22: suminf.    4.86350 (42) obj. 1187.42 iterations 137
Cbc0038I Pass  23: suminf.    4.45871 (40) obj. 1174.36 iterations 90
Cbc0038I Pass  24: suminf.    4.61342 (42) obj. 1180.76 iterations 101
Cbc0038I Pass  25: suminf.   11.01229 (59) obj. 1443.24 iterations 331
Cbc0038I Pass  26: suminf.    7.64456 (49) obj. 1406.03 iterations 185
Cbc0038I Pass  27: suminf.    7.31604 (58) obj. 1381.76 iterations 111
Cbc0038I Pass  28: suminf.    6.35196 (68) obj. 1335.79 iterations 100
Cbc0038I Pass  29: suminf.    6.15344 (69) obj. 1354.26 iterations 27
Cbc0038I Pass  30: suminf.    6.05366 (65) obj. 1351.07 iterations 25
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 868 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 1418 columns, reduced to 75 rows 550 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 1194.23 (3.24 seconds)
Cbc0038I Round again with cutoff of 1157.68
Cbc0038I Pass  30: suminf.    6.06988 (45) obj. 886.959 iterations 0
Cbc0038I Pass  31: suminf.    6.06988 (45) obj. 886.959 iterations 4
Cbc0038I Pass  32: suminf.    6.18594 (45) obj. 894.74 iterations 156
Cbc0038I Pass  33: suminf.   14.12851 (74) obj. 1157.68 iterations 206
Cbc0038I Pass  34: suminf.    8.35443 (62) obj. 1132.49 iterations 179
Cbc0038I Pass  35: suminf.    7.79546 (71) obj. 1153.9 iterations 50
Cbc0038I Pass  36: suminf.    7.97490 (72) obj. 1157.68 iterations 115
Cbc0038I Pass  37: suminf.    7.07112 (72) obj. 1157.68 iterations 91
Cbc0038I Pass  38: suminf.    7.49383 (72) obj. 1157.68 iterations 68
Cbc0038I Pass  39: suminf.   11.96162 (66) obj. 1157.68 iterations 172
Cbc0038I Pass  40: suminf.    7.54768 (60) obj. 1144.8 iterations 134
Cbc0038I Pass  41: suminf.    6.25635 (61) obj. 1132.1 iterations 94
Cbc0038I Pass  42: suminf.    5.56235 (68) obj. 1157.68 iterations 61
Cbc0038I Pass  43: suminf.    6.15855 (69) obj. 1157.68 iterations 66
Cbc0038I Pass  44: suminf.    5.51574 (72) obj. 1157.68 iterations 74
Cbc0038I Pass  45: suminf.    7.40023 (57) obj. 1127.95 iterations 108
Cbc0038I Pass  46: suminf.    6.20720 (69) obj. 1111.12 iterations 111
Cbc0038I Pass  47: suminf.    9.09752 (68) obj. 1101.38 iterations 140
Cbc0038I Pass  48: suminf.    6.28670 (48) obj. 1098.01 iterations 149
Cbc0038I Pass  49: suminf.    4.62889 (42) obj. 1112.58 iterations 107
Cbc0038I Pass  50: suminf.    3.96876 (34) obj. 1124.47 iterations 45
Cbc0038I Pass  51: suminf.    3.64800 (24) obj. 1130.61 iterations 71
Cbc0038I Pass  52: suminf.    3.50000 (15) obj. 1131.74 iterations 154
Cbc0038I Pass  53: suminf.    2.62937 (24) obj. 1141.12 iterations 73
Cbc0038I Pass  54: suminf.    5.46665 (37) obj. 1148.52 iterations 157
Cbc0038I Pass  55: suminf.    4.35340 (24) obj. 1157.68 iterations 113
Cbc0038I Pass  56: suminf.    6.21528 (37) obj. 1135.58 iterations 204
Cbc0038I Pass  57: suminf.    4.10000 (17) obj. 1107.2 iterations 254
Cbc0038I Pass  58: suminf.    2.93023 (26) obj. 1100.24 iterations 186
Cbc0038I Pass  59: suminf.    5.73985 (38) obj. 1157.68 iterations 193
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 875 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 1418 columns, reduced to 75 rows 543 columns
Cbc0038I Mini branch and bound improved solution from 1194.23 to 1061.13 (6.29 seconds)
Cbc0038I Round again with cutoff of 1014.65
Cbc0038I Pass  59: suminf.    6.06988 (45) obj. 886.959 iterations 0
Cbc0038I Pass  60: suminf.    6.06988 (45) obj. 886.959 iterations 4
Cbc0038I Pass  61: suminf.    6.16497 (44) obj. 889.767 iterations 196
Cbc0038I Pass  62: suminf.   11.49110 (76) obj. 1014.65 iterations 180
Cbc0038I Pass  63: suminf.    7.79679 (62) obj. 931.976 iterations 214
Cbc0038I Pass  64: suminf.    6.86375 (52) obj. 908.819 iterations 106
Cbc0038I Pass  65: suminf.    7.10540 (48) obj. 907.295 iterations 127
Cbc0038I Pass  66: suminf.   11.46947 (69) obj. 1014.65 iterations 230
Cbc0038I Pass  67: suminf.    5.34284 (37) obj. 927.851 iterations 261
Cbc0038I Pass  68: suminf.    5.23837 (28) obj. 929.837 iterations 134
Cbc0038I Pass  69: suminf.    5.23837 (28) obj. 929.837 iterations 7
Cbc0038I Pass  70: suminf.    5.22826 (29) obj. 922.468 iterations 103
Cbc0038I Pass  71: suminf.    5.00000 (16) obj. 940.118 iterations 174
Cbc0038I Pass  72: suminf.    4.06593 (27) obj. 959.457 iterations 167
Cbc0038I Pass  73: suminf.    3.39721 (30) obj. 957.896 iterations 177
Cbc0038I Pass  74: suminf.    3.86512 (32) obj. 960.227 iterations 155
Cbc0038I Pass  75: suminf.    3.44000 (31) obj. 961.192 iterations 100
Cbc0038I Pass  76: suminf.    3.54369 (19) obj. 960.593 iterations 207
Cbc0038I Pass  77: suminf.    3.33494 (32) obj. 965.438 iterations 91
Cbc0038I Pass  78: suminf.    3.98533 (32) obj. 968.501 iterations 147
Cbc0038I Pass  79: suminf.    3.15333 (22) obj. 952.105 iterations 84
Cbc0038I Pass  80: suminf.    3.16773 (31) obj. 951.771 iterations 81
Cbc0038I Pass  81: suminf.    7.97007 (71) obj. 1014.65 iterations 232
Cbc0038I Pass  82: suminf.    3.43175 (30) obj. 983.572 iterations 229
Cbc0038I Pass  83: suminf.    3.74598 (27) obj. 993.371 iterations 95
Cbc0038I Pass  84: suminf.   11.21501 (65) obj. 1014.65 iterations 246
Cbc0038I Pass  85: suminf.    7.01599 (57) obj. 1014.65 iterations 226
Cbc0038I Pass  86: suminf.    7.18635 (74) obj. 1014.65 iterations 125
Cbc0038I Pass  87: suminf.    5.98510 (55) obj. 982.885 iterations 114
Cbc0038I Pass  88: suminf.    5.46407 (35) obj. 956.185 iterations 38
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 949 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 1418 columns, reduced to 75 rows 469 columns
Cbc0038I Mini branch and bound improved solution from 1061.13 to 968.102 (9.00 seconds)
Cbc0038I Round again with cutoff of 926.284
Cbc0038I Reduced cost fixing fixed 54 variables on major pass 4
Cbc0038I Pass  88: suminf.    6.06988 (45) obj. 886.959 iterations 0
Cbc0038I Pass  89: suminf.    6.06988 (45) obj. 886.959 iterations 13
Cbc0038I Pass  90: suminf.    6.19613 (49) obj. 885.08 iterations 138
Cbc0038I Pass  91: suminf.    6.06971 (44) obj. 884.031 iterations 65
Cbc0038I Pass  92: suminf.    6.25635 (46) obj. 901.188 iterations 124
Cbc0038I Pass  93: suminf.   10.95827 (75) obj. 926.284 iterations 222
Cbc0038I Pass  94: suminf.    7.46918 (68) obj. 916.554 iterations 159
Cbc0038I Pass  95: suminf.    6.60002 (71) obj. 908.531 iterations 64
Cbc0038I Pass  96: suminf.    6.18622 (66) obj. 914.537 iterations 67
Cbc0038I Pass  97: suminf.    6.94694 (54) obj. 925.212 iterations 139
Cbc0038I Pass  98: suminf.    5.81267 (68) obj. 919.683 iterations 138
Cbc0038I Pass  99: suminf.    6.95781 (76) obj. 926.284 iterations 100
Cbc0038I Pass 100: suminf.    9.68207 (74) obj. 926.284 iterations 177
Cbc0038I Pass 101: suminf.    6.49290 (53) obj. 916.989 iterations 164
Cbc0038I Pass 102: suminf.    7.49498 (52) obj. 926.284 iterations 89
Cbc0038I Pass 103: suminf.    6.15265 (51) obj. 926.284 iterations 114
Cbc0038I Pass 104: suminf.    5.84757 (50) obj. 926.284 iterations 38
Cbc0038I Pass 105: suminf.    6.16824 (52) obj. 926.284 iterations 119
Cbc0038I Pass 106: suminf.    5.42080 (63) obj. 926.284 iterations 147
Cbc0038I Pass 107: suminf.    5.92374 (48) obj. 926.284 iterations 129
Cbc0038I Pass 108: suminf.    4.75532 (46) obj. 926.284 iterations 122
Cbc0038I Pass 109: suminf.    4.56821 (40) obj. 926.284 iterations 96
Cbc0038I Pass 110: suminf.    4.68173 (42) obj. 926.284 iterations 158
Cbc0038I Pass 111: suminf.   10.91732 (76) obj. 926.284 iterations 179
Cbc0038I Pass 112: suminf.    8.87763 (68) obj. 922.392 iterations 208
Cbc0038I Pass 113: suminf.    9.07055 (76) obj. 926.284 iterations 108
Cbc0038I Pass 114: suminf.    7.65708 (68) obj. 921.185 iterations 153
Cbc0038I Pass 115: suminf.    7.92460 (63) obj. 926.284 iterations 109
Cbc0038I Pass 116: suminf.    6.45379 (74) obj. 926.284 iterations 118
Cbc0038I Pass 117: suminf.    4.95997 (71) obj. 926.284 iterations 112
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 869 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 1418 columns, reduced to 75 rows 549 columns
Cbc0038I Mini branch and bound did not improve solution (11.80 seconds)
Cbc0038I After 11.80 seconds - Feasibility pump exiting with objective of 968.102 - took 11.25 seconds
Cbc0012I Integer solution of 968.10166 found by feasibility pump after 0 iterations and 0 nodes (11.80 seconds)
Cbc0038I Full problem 75 rows 1418 columns, reduced to 65 rows 72 columns
Cbc0031I 165 added rows had average density of 130.50909
Cbc0013I At root node, 165 cuts changed objective from 828.70841 to 893.19457 in 34 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 6.770 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.686 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 832 row cuts average 111.2 elements, 0 column cuts (0 active)  in 9.516 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.825 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 968.10166 best solution, best possible 893.19457 (42.32 seconds)
Cbc0010I After 1 nodes, 2 on tree, 968.10166 best solution, best possible 893.19457 (44.99 seconds)
Cbc0010I After 3 nodes, 4 on tree, 968.10166 best solution, best possible 893.19457 (53.01 seconds)
Cbc0010I After 4 nodes, 5 on tree, 968.10166 best solution, best possible 893.19457 (54.03 seconds)
Cbc0010I After 5 nodes, 6 on tree, 968.10166 best solution, best possible 893.19457 (58.08 seconds)
Cbc0010I After 6 nodes, 7 on tree, 968.10166 best solution, best possible 893.19457 (74.39 seconds)
Cbc0010I After 11 nodes, 11 on tree, 968.10166 best solution, best possible 893.19457 (75.10 seconds)
Cbc0010I After 13 nodes, 11 on tree, 968.10166 best solution, best possible 893.19457 (77.86 seconds)
Cbc0004I Integer solution of 928.94439 found after 17188 iterations and 18 nodes (78.93 seconds)
Cbc0010I After 18 nodes, 11 on tree, 928.94439 best solution, best possible 893.19457 (78.93 seconds)
Cbc0010I After 27 nodes, 8 on tree, 928.94439 best solution, best possible 893.19457 (79.69 seconds)
Cbc0010I After 38 nodes, 9 on tree, 928.94439 best solution, best possible 893.19457 (80.43 seconds)
Cbc0010I After 42 nodes, 11 on tree, 928.94439 best solution, best possible 893.19457 (81.65 seconds)
Cbc0038I Full problem 240 rows 1418 columns, reduced to 75 rows 964 columns
Cbc0044I Reduced cost fixing - 75 rows, 964 columns - restarting search
Cbc0012I Integer solution of 928.94439 found by Previous solution after 0 iterations and 0 nodes (82.23 seconds)
Cbc0038I Full problem 75 rows 964 columns, reduced to 64 rows 75 columns
Cbc0031I 163 added rows had average density of 83.944785
Cbc0013I At root node, 163 cuts changed objective from 828.81915 to 893.23938 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 62.0 elements, 0 column cuts (0 active)  in 1.566 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 877.0 elements, 0 column cuts (0 active)  in 0.745 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 65 row cuts average 80.8 elements, 0 column cuts (0 active)  in 0.267 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.637 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 184.0 elements, 0 column cuts (0 active)  in 0.595 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 226 row cuts average 83.1 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 928.94439 best solution, best possible 893.23938 (91.74 seconds)
Cbc0010I After 1 nodes, 2 on tree, 928.94439 best solution, best possible 893.23938 (92.70 seconds)
Cbc0010I After 2 nodes, 3 on tree, 928.94439 best solution, best possible 893.23938 (93.96 seconds)
Cbc0010I After 3 nodes, 4 on tree, 928.94439 best solution, best possible 893.23938 (95.28 seconds)
Cbc0010I After 4 nodes, 5 on tree, 928.94439 best solution, best possible 893.23938 (96.51 seconds)
Cbc0010I After 5 nodes, 6 on tree, 928.94439 best solution, best possible 893.23938 (97.81 seconds)
Cbc0010I After 6 nodes, 7 on tree, 928.94439 best solution, best possible 893.23938 (98.86 seconds)
Cbc0010I After 9 nodes, 8 on tree, 928.94439 best solution, best possible 893.23938 (99.90 seconds)
Cbc0010I After 10 nodes, 9 on tree, 928.94439 best solution, best possible 893.23938 (100.71 seconds)
Cbc0010I After 13 nodes, 8 on tree, 928.94439 best solution, best possible 893.23938 (101.58 seconds)
Cbc0010I After 15 nodes, 8 on tree, 928.94439 best solution, best possible 893.23938 (102.37 seconds)
Cbc0010I After 18 nodes, 7 on tree, 928.94439 best solution, best possible 893.23938 (103.12 seconds)
Cbc0010I After 20 nodes, 7 on tree, 928.94439 best solution, best possible 893.23938 (103.86 seconds)
Cbc0010I After 22 nodes, 7 on tree, 928.94439 best solution, best possible 893.23938 (104.68 seconds)
Cbc0010I After 23 nodes, 8 on tree, 928.94439 best solution, best possible 893.23938 (106.31 seconds)
Cbc0010I After 26 nodes, 6 on tree, 928.94439 best solution, best possible 893.23938 (107.03 seconds)
Cbc0010I After 30 nodes, 2 on tree, 928.94439 best solution, best possible 893.23938 (108.05 seconds)
Cbc0010I After 32 nodes, 1 on tree, 928.94439 best solution, best possible 905.55537 (109.58 seconds)
Cbc0004I Integer solution of 922.01827 found after 12928 iterations and 34 nodes (110.42 seconds)
Cbc0010I After 34 nodes, 2 on tree, 922.01827 best solution, best possible 905.55537 (110.42 seconds)
Cbc0001I Search completed - best objective 922.018268, took 13298 iterations and 36 nodes (110.66 seconds)
Cbc0032I Strong branching done 356 times (31231 iterations), fathomed 1 nodes and fixed 13 variables
Cbc0035I Maximum depth 15, 1596 variables fixed on reduced cost
Cbc0038I Probing was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (1.566 seconds)
Cbc0038I Gomory was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.745 seconds)
Cbc0038I Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Cbc0038I Clique was tried 31 times and created 676 cuts of which 0 were active after adding rounds of cuts (4.736 seconds)
Cbc0038I OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.637 seconds)
Cbc0038I MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Cbc0038I FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I TwoMirCuts was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.181 seconds)
Cbc0038I ZeroHalf was tried 10 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.595 seconds)
Cbc0038I Stored from first was tried 31 times and created 502 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of 922.01827 found by Reduced search after 33949 iterations and 86 nodes (110.69 seconds)
Cbc0001I Search completed - best objective 922.018268, took 33949 iterations and 86 nodes (110.69 seconds)
Cbc0032I Strong branching done 444 times (15568 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 24, 2156 variables fixed on reduced cost
Cuts at root node changed objective from 828.708 to 893.195
Probing was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (6.77003 seconds)
Gomory was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.68585 seconds)
Knapsack was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036848 seconds)
Clique was tried 86 times and created 1940 cuts of which 0 were active after adding rounds of cuts (41.434 seconds)
OddWheel was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.82492 seconds)
MixedIntegerRounding2 was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.139564 seconds)
FlowCover was tried 34 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017174 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009921 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007741 seconds)

Result - Optimal solution found
Objective value:                922.018268
Enumerated nodes:               86
Total iterations:               33949
Time (CPU seconds):             110.611
Time (Wallclock seconds):       110.722
Total time (CPU seconds):       110.624   (Wallclock seconds):       110.774
