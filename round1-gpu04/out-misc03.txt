Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/misc03.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 15 NAME          MISC03
At line 16 ROWS
At line 114 COLUMNS
At line 1182 RHS
At line 1219 BOUNDS
At line 1380 ENDATA
Problem MISC03 has 96 rows, 160 columns and 2053 elements
Coin0008I MISC03 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 1910 - 0.006958 seconds
Cgl0003I 15 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 95 rows, 138 columns (138 integer (138 of which binary)) and 1824 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 2.702%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 4.9999
Cbc0038I Initial state - 12 integers unsatisfied sum - 6
Cbc0038I Pass   1: suminf.    5.82857 (24) obj. 3351.29 iterations 36
Cbc0038I Pass   2: suminf.    4.66667 (14) obj. 3418.33 iterations 21
Cbc0038I Pass   3: suminf.    4.33333 (19) obj. 3418.33 iterations 26
Cbc0038I Pass   4: suminf.    5.42857 (18) obj. 3345 iterations 36
Cbc0038I Pass   5: suminf.    4.33333 (19) obj. 3210.83 iterations 31
Cbc0038I Pass   6: suminf.    5.44444 (17) obj. 3561.67 iterations 22
Cbc0038I Pass   7: suminf.    4.66667 (14) obj. 3418.33 iterations 22
Cbc0038I Pass   8: suminf.    4.33333 (19) obj. 3418.33 iterations 15
Cbc0038I Pass   9: suminf.    5.50000 (20) obj. 3325 iterations 27
Cbc0038I Pass  10: suminf.    4.66667 (24) obj. 3196.67 iterations 23
Cbc0038I Pass  11: suminf.    6.00000 (18) obj. 3545 iterations 25
Cbc0038I Pass  12: suminf.    7.00000 (24) obj. 4996.25 iterations 45
Cbc0038I Pass  13: suminf.    3.85000 (23) obj. 5071.25 iterations 27
Cbc0038I Pass  14: suminf.    3.20000 (15) obj. 5293 iterations 18
Cbc0038I Pass  15: suminf.    3.33333 (10) obj. 4408.33 iterations 17
Cbc0038I Pass  16: suminf.    3.00000 (14) obj. 4345 iterations 16
Cbc0038I Pass  17: suminf.    5.50000 (11) obj. 4895 iterations 34
Cbc0038I Pass  18: suminf.    5.00000 (10) obj. 4727.5 iterations 40
Cbc0038I Pass  19: suminf.    5.00000 (10) obj. 4727.5 iterations 23
Cbc0038I Pass  20: suminf.    7.50000 (15) obj. 4805 iterations 37
Cbc0038I Pass  21: suminf.    5.82857 (24) obj. 4401.29 iterations 33
Cbc0038I Pass  22: suminf.    4.66667 (14) obj. 4468.33 iterations 10
Cbc0038I Pass  23: suminf.    4.33333 (19) obj. 4468.33 iterations 17
Cbc0038I Pass  24: suminf.    5.50000 (20) obj. 4631.88 iterations 21
Cbc0038I Pass  25: suminf.    4.25000 (16) obj. 4550.62 iterations 26
Cbc0038I Pass  26: suminf.    0.00000 (0) obj. 4705 iterations 17
Cbc0038I Solution found of 4705
Cbc0038I Rounding solution of 4630 is better than previous of 4705
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 138 columns, reduced to 95 rows 89 columns
Cbc0038I Mini branch and bound improved solution from 4630 to 3905 (0.48 seconds)
Cbc0038I Round again with cutoff of 3701
Cbc0038I Pass  27: suminf.    5.82857 (24) obj. 3351.29 iterations 0
Cbc0038I Pass  28: suminf.    4.66667 (14) obj. 3418.33 iterations 21
Cbc0038I Pass  29: suminf.    4.33333 (19) obj. 3418.33 iterations 30
Cbc0038I Pass  30: suminf.    5.33333 (19) obj. 3285.83 iterations 26
Cbc0038I Pass  31: suminf.    6.69703 (23) obj. 3701 iterations 31
Cbc0038I Pass  32: suminf.    5.00000 (15) obj. 3600 iterations 58
Cbc0038I Pass  33: suminf.    4.66667 (20) obj. 3385.83 iterations 15
Cbc0038I Pass  34: suminf.    5.88063 (20) obj. 3701 iterations 35
Cbc0038I Pass  35: suminf.    4.70743 (21) obj. 3701 iterations 21
Cbc0038I Pass  36: suminf.    4.33333 (21) obj. 3701 iterations 25
Cbc0038I Pass  37: suminf.    5.67427 (24) obj. 3701 iterations 41
Cbc0038I Pass  38: suminf.    4.66667 (17) obj. 3701 iterations 29
Cbc0038I Pass  39: suminf.    4.33333 (19) obj. 3585.83 iterations 16
Cbc0038I Pass  40: suminf.    5.41902 (19) obj. 3701 iterations 26
Cbc0038I Pass  41: suminf.    4.70743 (21) obj. 3701 iterations 24
Cbc0038I Pass  42: suminf.    4.33333 (21) obj. 3701 iterations 22
Cbc0038I Pass  43: suminf.    5.83333 (21) obj. 3701 iterations 28
Cbc0038I Pass  44: suminf.    4.75000 (27) obj. 3701 iterations 34
Cbc0038I Pass  45: suminf.    4.66667 (27) obj. 3701 iterations 11
Cbc0038I Pass  46: suminf.    5.24851 (22) obj. 3701 iterations 25
Cbc0038I Pass  47: suminf.    6.33333 (13) obj. 3032.5 iterations 37
Cbc0038I Pass  48: suminf.    4.94000 (26) obj. 3462 iterations 42
Cbc0038I Pass  49: suminf.    4.65000 (26) obj. 3439 iterations 6
Cbc0038I Pass  50: suminf.    5.00000 (15) obj. 3653.33 iterations 24
Cbc0038I Pass  51: suminf.    4.43071 (32) obj. 3701 iterations 36
Cbc0038I Pass  52: suminf.    5.24664 (18) obj. 3701 iterations 22
Cbc0038I Pass  53: suminf.    4.00000 (17) obj. 3661 iterations 29
Cbc0038I Pass  54: suminf.    4.48056 (16) obj. 3701 iterations 30
Cbc0038I Pass  55: suminf.    3.73333 (19) obj. 3701 iterations 22
Cbc0038I Pass  56: suminf.    3.34400 (17) obj. 3701 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 95 rows 138 columns, reduced to 95 rows 104 columns
Cbc0038I Mini branch and bound did not improve solution (0.97 seconds)
Cbc0038I After 0.97 seconds - Feasibility pump exiting with objective of 3905 - took 0.89 seconds
Cbc0012I Integer solution of 3905 found by feasibility pump after 0 iterations and 0 nodes (0.97 seconds)
Cbc0038I Full problem 95 rows 138 columns, reduced to 41 rows 14 columns
Cbc0031I 23 added rows had average density of 53.826087
Cbc0013I At root node, 23 cuts changed objective from 1910 to 2445.1525 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 178 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.560 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1212 row cuts average 134.8 elements, 0 column cuts (0 active)  in 0.697 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 119 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 255 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.321 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3905 best solution, best possible 2445.1525 (4.85 seconds)
Cbc0010I After 5 nodes, 6 on tree, 3905 best solution, best possible 2445.1525 (5.63 seconds)
Cbc0010I After 32 nodes, 12 on tree, 3905 best solution, best possible 2445.1525 (6.35 seconds)
Cbc0010I After 66 nodes, 7 on tree, 3905 best solution, best possible 2445.1525 (7.05 seconds)
Cbc0010I After 101 nodes, 6 on tree, 3905 best solution, best possible 2445.1525 (7.76 seconds)
Cbc0010I After 139 nodes, 12 on tree, 3905 best solution, best possible 2445.1525 (8.48 seconds)
Cbc0010I After 176 nodes, 16 on tree, 3905 best solution, best possible 2445.1525 (9.19 seconds)
Cbc0010I After 259 nodes, 4 on tree, 3905 best solution, best possible 2445.1525 (9.94 seconds)
Cbc0010I After 312 nodes, 1 on tree, 3905 best solution, best possible 2611.7146 (10.72 seconds)
Cbc0016I Integer solution of 3360 found by strong branching after 16907 iterations and 319 nodes (11.09 seconds)
Cbc0010I After 340 nodes, 9 on tree, 3360 best solution, best possible 2611.7146 (11.44 seconds)
Cbc0010I After 417 nodes, 8 on tree, 3360 best solution, best possible 2611.7146 (12.18 seconds)
Cbc0001I Search completed - best objective 3360, took 20729 iterations and 454 nodes (12.49 seconds)
Cbc0032I Strong branching done 3166 times (38423 iterations), fathomed 18 nodes and fixed 99 variables
Cbc0035I Maximum depth 34, 2428 variables fixed on reduced cost
Cuts at root node changed objective from 1910 to 2445.15
Probing was tried 861 times and created 1294 cuts of which 0 were active after adding rounds of cuts (1.03188 seconds)
Gomory was tried 834 times and created 1224 cuts of which 0 were active after adding rounds of cuts (1.21245 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.141773 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023062 seconds)
OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.061634 seconds)
MixedIntegerRounding2 was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.235461 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009449 seconds)
TwoMirCuts was tried 834 times and created 394 cuts of which 0 were active after adding rounds of cuts (0.471967 seconds)
ZeroHalf was tried 834 times and created 2481 cuts of which 0 were active after adding rounds of cuts (1.70925 seconds)

Result - Optimal solution found
Objective value:                3360
Enumerated nodes:               454
Total iterations:               20729
Time (CPU seconds):             12.4388
Time (Wallclock seconds):       12.5202
Total time (CPU seconds):       12.4426   (Wallclock seconds):       12.5464
