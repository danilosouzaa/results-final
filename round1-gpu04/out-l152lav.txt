Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/l152lav.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 15 NAME          L152LAV
At line 16 ROWS
At line 115 COLUMNS
At line 6605 RHS
At line 6655 BOUNDS
At line 8645 ENDATA
Problem L152LAV has 97 rows, 1989 columns and 9922 elements
Coin0008I L152LAV read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 4656.36 - 0.068454 seconds
Cgl0003I 1 fixed, 0 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 1988 columns (1988 integer (1988 of which binary)) and 9918 elements
Coin3009W Conflict graph built in 0.165 seconds, density: 3.241%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 55 integers unsatisfied sum - 18.2828
Cbc0038I Pass   1: suminf.    8.10494 (36) obj. 4770.12 iterations 145
Cbc0038I Pass   2: suminf.    7.07653 (37) obj. 4760.94 iterations 51
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. 5080 iterations 235
Cbc0038I Solution found of 5080
Cbc0038I Before mini branch and bound, 1898 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 1988 columns, reduced to 44 rows 65 columns
Cbc0038I Mini branch and bound improved solution from 5080 to 4762 (0.89 seconds)
Cbc0038I Round again with cutoff of 4750.54
Cbc0038I Reduced cost fixing fixed 725 variables on major pass 2
Cbc0038I Pass   4: suminf.    7.68966 (29) obj. 4746.98 iterations 32
Cbc0038I Pass   5: suminf.    6.82227 (31) obj. 4750.54 iterations 61
Cbc0038I Pass   6: suminf.    8.33857 (24) obj. 4750.54 iterations 91
Cbc0038I Pass   7: suminf.    2.87723 (27) obj. 4750.54 iterations 121
Cbc0038I Pass   8: suminf.    2.34453 (44) obj. 4750.54 iterations 56
Cbc0038I Pass   9: suminf.    7.45317 (36) obj. 4750.54 iterations 107
Cbc0038I Pass  10: suminf.    5.84586 (31) obj. 4750.54 iterations 66
Cbc0038I Pass  11: suminf.    5.59089 (31) obj. 4750.54 iterations 24
Cbc0038I Pass  12: suminf.    9.78346 (32) obj. 4750.54 iterations 114
Cbc0038I Pass  13: suminf.    8.27600 (30) obj. 4750.54 iterations 77
Cbc0038I Pass  14: suminf.    8.17478 (32) obj. 4750.54 iterations 41
Cbc0038I Pass  15: suminf.    7.14942 (28) obj. 4750.54 iterations 120
Cbc0038I Pass  16: suminf.    5.19459 (30) obj. 4750.54 iterations 102
Cbc0038I Pass  17: suminf.    5.16975 (29) obj. 4750.54 iterations 54
Cbc0038I Pass  18: suminf.    5.61172 (27) obj. 4750.54 iterations 87
Cbc0038I Pass  19: suminf.    8.85714 (45) obj. 4750.54 iterations 76
Cbc0038I Pass  20: suminf.    4.95929 (24) obj. 4750.54 iterations 110
Cbc0038I Pass  21: suminf.    4.95917 (27) obj. 4750.54 iterations 24
Cbc0038I Pass  22: suminf.    4.83023 (20) obj. 4750.54 iterations 110
Cbc0038I Pass  23: suminf.    4.47305 (26) obj. 4750.54 iterations 83
Cbc0038I Pass  24: suminf.    8.20236 (35) obj. 4750.54 iterations 168
Cbc0038I Pass  25: suminf.    5.59575 (30) obj. 4750.54 iterations 46
Cbc0038I Pass  26: suminf.    5.43966 (38) obj. 4750.54 iterations 29
Cbc0038I Pass  27: suminf.    2.69009 (28) obj. 4750.54 iterations 80
Cbc0038I Pass  28: suminf.    2.68155 (19) obj. 4750.54 iterations 17
Cbc0038I Pass  29: suminf.    6.05263 (19) obj. 4718.74 iterations 112
Cbc0038I Pass  30: suminf.    2.68155 (19) obj. 4750.54 iterations 121
Cbc0038I Pass  31: suminf.   10.21189 (44) obj. 4750.54 iterations 119
Cbc0038I Pass  32: suminf.    3.49627 (43) obj. 4750.54 iterations 80
Cbc0038I Pass  33: suminf.    2.47099 (21) obj. 4750.54 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1791 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 1988 columns, reduced to 72 rows 193 columns
Cbc0038I Mini branch and bound improved solution from 4762 to 4734 (1.72 seconds)
Cbc0038I Round again with cutoff of 4717.67
Cbc0038I Reduced cost fixing fixed 1118 variables on major pass 3
Cbc0038I Pass  33: suminf.    9.38258 (50) obj. 4702.15 iterations 64
Cbc0038I Pass  34: suminf.    8.62606 (45) obj. 4709.56 iterations 21
Cbc0038I Pass  35: suminf.    8.29186 (47) obj. 4717.67 iterations 28
Cbc0038I Pass  36: suminf.    8.96764 (36) obj. 4717.67 iterations 95
Cbc0038I Pass  37: suminf.    7.99824 (36) obj. 4717.67 iterations 71
Cbc0038I Pass  38: suminf.    8.11545 (36) obj. 4717.67 iterations 107
Cbc0038I Pass  39: suminf.    7.22806 (34) obj. 4717.67 iterations 56
Cbc0038I Pass  40: suminf.    7.20143 (43) obj. 4717.67 iterations 53
Cbc0038I Pass  41: suminf.    7.88987 (31) obj. 4717.67 iterations 62
Cbc0038I Pass  42: suminf.    7.18804 (34) obj. 4717.67 iterations 40
Cbc0038I Pass  43: suminf.    5.53459 (26) obj. 4717.67 iterations 98
Cbc0038I Pass  44: suminf.    4.14877 (22) obj. 4717.67 iterations 49
Cbc0038I Pass  45: suminf.    6.95025 (40) obj. 4717.67 iterations 129
Cbc0038I Pass  46: suminf.    6.15005 (27) obj. 4717.67 iterations 26
Cbc0038I Pass  47: suminf.    6.15005 (27) obj. 4717.67 iterations 13
Cbc0038I Pass  48: suminf.    7.34710 (24) obj. 4717.67 iterations 86
Cbc0038I Pass  49: suminf.    6.51663 (26) obj. 4717.67 iterations 73
Cbc0038I Pass  50: suminf.    6.14905 (24) obj. 4717.67 iterations 21
Cbc0038I Pass  51: suminf.    5.67674 (16) obj. 4717.67 iterations 144
Cbc0038I Pass  52: suminf.    5.65561 (16) obj. 4717.67 iterations 56
Cbc0038I Pass  53: suminf.    6.02903 (18) obj. 4717.67 iterations 107
Cbc0038I Pass  54: suminf.    7.22235 (41) obj. 4717.67 iterations 145
Cbc0038I Pass  55: suminf.    5.86964 (27) obj. 4717.67 iterations 82
Cbc0038I Pass  56: suminf.    5.98710 (23) obj. 4717.67 iterations 96
Cbc0038I Pass  57: suminf.    5.76565 (20) obj. 4717.67 iterations 116
Cbc0038I Pass  58: suminf.    5.76565 (20) obj. 4717.67 iterations 24
Cbc0038I Pass  59: suminf.    5.92592 (20) obj. 4717.67 iterations 89
Cbc0038I Pass  60: suminf.    6.61584 (44) obj. 4717.67 iterations 86
Cbc0038I Pass  61: suminf.    5.88833 (23) obj. 4717.67 iterations 97
Cbc0038I Pass  62: suminf.    5.88833 (23) obj. 4717.67 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1821 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 1988 columns, reduced to 69 rows 157 columns
Cbc0038I Mini branch and bound did not improve solution (2.39 seconds)
Cbc0038I After 2.39 seconds - Feasibility pump exiting with objective of 4734 - took 1.62 seconds
Cbc0012I Integer solution of 4734 found by feasibility pump after 0 iterations and 0 nodes (2.39 seconds)
Cbc0038I Full problem 97 rows 1988 columns, reduced to 29 rows 29 columns
Cbc0031I 2 added rows had average density of 18.5
Cbc0013I At root node, 2 cuts changed objective from 4656.3636 to 4656.5051 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 92 column cuts (92 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 4734 best solution, best possible 4656.5051 (3.03 seconds)
Cbc0038I Full problem 99 rows 1988 columns, reduced to 93 rows 930 columns
Cbc0044I Reduced cost fixing - 93 rows, 930 columns - restarting search
Cbc0012I Integer solution of 4734 found by Previous solution after 0 iterations and 0 nodes (3.69 seconds)
Cbc0038I Full problem 93 rows 930 columns, reduced to 29 rows 29 columns
Cbc0031I 2 added rows had average density of 13.5
Cbc0013I At root node, 2 cuts changed objective from 4656.3636 to 4656.5051 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 21 column cuts (21 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 2 row cuts average 13.5 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 4734 best solution, best possible 4656.5051 (4.25 seconds)
Cbc0010I After 27 nodes, 6 on tree, 4734 best solution, best possible 4656.5051 (4.95 seconds)
Cbc0010I After 61 nodes, 6 on tree, 4734 best solution, best possible 4663.9429 (5.65 seconds)
Cbc0012I Integer solution of 4732 found by rounding after 2600 iterations and 94 nodes (6.15 seconds)
Cbc0010I After 102 nodes, 5 on tree, 4732 best solution, best possible 4665.5109 (6.37 seconds)
Cbc0010I After 149 nodes, 4 on tree, 4732 best solution, best possible 4673 (7.08 seconds)
Cbc0012I Integer solution of 4722 found by rounding after 4423 iterations and 164 nodes (7.26 seconds)
Cbc0001I Search completed - best objective 4722, took 4466 iterations and 166 nodes (7.26 seconds)
Cbc0032I Strong branching done 826 times (15109 iterations), fathomed 41 nodes and fixed 127 variables
Cbc0035I Maximum depth 12, 11468 variables fixed on reduced cost
Cbc0038I Probing was tried 128 times and created 63 cuts of which 0 were active after adding rounds of cuts (0.241 seconds)
Cbc0038I Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Cbc0038I Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I Clique was tried 128 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
Cbc0038I OddWheel was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I ZeroHalf was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Cbc0038I Stored from first was tried 128 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of 4722 found by Reduced search after 5681 iterations and 216 nodes (7.28 seconds)
Cbc0001I Search completed - best objective 4722, took 5681 iterations and 216 nodes (7.28 seconds)
Cbc0032I Strong branching done 320 times (3630 iterations), fathomed 6 nodes and fixed 2 variables
Cbc0035I Maximum depth 14, 3703 variables fixed on reduced cost
Cuts at root node changed objective from 4656.36 to 4656.51
Probing was tried 17 times and created 95 cuts of which 0 were active after adding rounds of cuts (0.134514 seconds)
Gomory was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016244 seconds)
Knapsack was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015689 seconds)
Clique was tried 17 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.01364 seconds)
OddWheel was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005725 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00065 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00044 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008273 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007133 seconds)

Result - Optimal solution found
Objective value:                4722
Enumerated nodes:               216
Total iterations:               5681
Time (CPU seconds):             7.2081
Time (Wallclock seconds):       7.2972
Total time (CPU seconds):       7.22193   (Wallclock seconds):       7.33841
