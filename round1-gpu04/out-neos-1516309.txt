Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/neos-1516309.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 1 NAME          neos-1516309
At line 2 ROWS
At line 493 COLUMNS
At line 35396 RHS
At line 35886 BOUNDS
At line 40387 ENDATA
Problem neos-1516309 has 489 rows, 4500 columns and 30400 elements
Coin0008I neos-1516309 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 33432.3 - 0.059035 seconds
Cgl0004I processed model has 480 rows, 4200 columns (4200 integer (4200 of which binary)) and 28900 elements
Coin3009W Conflict graph built in 0.078 seconds, density: 0.382%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 22 integers unsatisfied sum - 9.83333
Cbc0038I Pass   1: suminf.    8.00000 (20) obj. 34761.5 iterations 60
Cbc0038I Pass   2: suminf.    3.50000 (7) obj. 37054 iterations 17
Cbc0038I Pass   3: suminf.    3.50000 (7) obj. 37054 iterations 7
Cbc0038I Pass   4: suminf.    0.00000 (0) obj. 38784 iterations 16
Cbc0038I Solution found of 38784
Cbc0038I Rounding solution of 37984 is better than previous of 38784
Cbc0038I Before mini branch and bound, 4159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 480 rows 4200 columns, reduced to 49 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 37984 to 36384 (0.82 seconds)
Cbc0038I Round again with cutoff of 36087.9
Cbc0038I Reduced cost fixing fixed 100 variables on major pass 2
Cbc0038I Pass   5: suminf.    8.00000 (20) obj. 34761.5 iterations 0
Cbc0038I Pass   6: suminf.    4.00728 (9) obj. 36087.9 iterations 25
Cbc0038I Pass   7: suminf.    4.00728 (9) obj. 36087.9 iterations 23
Cbc0038I Pass   8: suminf.    1.61606 (4) obj. 36087.9 iterations 38
Cbc0038I Pass   9: suminf.    1.57666 (4) obj. 36087.9 iterations 21
Cbc0038I Pass  10: suminf.    1.48883 (5) obj. 36087.9 iterations 27
Cbc0038I Pass  11: suminf.    1.57666 (4) obj. 36087.9 iterations 11
Cbc0038I Pass  12: suminf.    6.61956 (22) obj. 36087.9 iterations 113
Cbc0038I Pass  13: suminf.    4.05945 (11) obj. 36087.9 iterations 67
Cbc0038I Pass  14: suminf.    4.05945 (11) obj. 36087.9 iterations 4
Cbc0038I Pass  15: suminf.    4.53054 (10) obj. 36087.9 iterations 15
Cbc0038I Pass  16: suminf.    4.50000 (10) obj. 36087.9 iterations 12
Cbc0038I Pass  17: suminf.    4.48179 (9) obj. 36087.9 iterations 13
Cbc0038I Pass  18: suminf.    4.48179 (9) obj. 36087.9 iterations 3
Cbc0038I Pass  19: suminf.    2.87926 (6) obj. 36087.9 iterations 14
Cbc0038I Pass  20: suminf.    2.50000 (5) obj. 35849 iterations 24
Cbc0038I Pass  21: suminf.    2.22848 (5) obj. 36087.9 iterations 9
Cbc0038I Pass  22: suminf.    2.22848 (5) obj. 36087.9 iterations 6
Cbc0038I Pass  23: suminf.    2.50000 (5) obj. 35849 iterations 14
Cbc0038I Pass  24: suminf.    2.50000 (5) obj. 35849 iterations 1
Cbc0038I Pass  25: suminf.    2.12800 (7) obj. 36087.9 iterations 16
Cbc0038I Pass  26: suminf.    2.12800 (7) obj. 36087.9 iterations 2
Cbc0038I Pass  27: suminf.    3.55654 (10) obj. 36087.9 iterations 7
Cbc0038I Pass  28: suminf.    2.77778 (8) obj. 35649 iterations 13
Cbc0038I Pass  29: suminf.    2.50000 (5) obj. 35849 iterations 1
Cbc0038I Pass  30: suminf.    2.50000 (5) obj. 35849 iterations 1
Cbc0038I Pass  31: suminf.    2.22848 (5) obj. 36087.9 iterations 12
Cbc0038I Pass  32: suminf.    2.22848 (5) obj. 36087.9 iterations 6
Cbc0038I Pass  33: suminf.    6.28622 (21) obj. 36087.9 iterations 101
Cbc0038I Pass  34: suminf.    4.66828 (14) obj. 36087.9 iterations 56
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4070 integers at bound fixed and 0 continuous
Cbc0038I Full problem 480 rows 4200 columns, reduced to 91 rows 71 columns
Cbc0038I Mini branch and bound improved solution from 36384 to 35954 (1.43 seconds)
Cbc0038I Round again with cutoff of 35448.9
Cbc0038I Reduced cost fixing fixed 100 variables on major pass 3
Cbc0038I Pass  34: suminf.    8.00000 (20) obj. 34761.5 iterations 0
Cbc0038I Pass  35: suminf.    3.68850 (9) obj. 35448.9 iterations 25
Cbc0038I Pass  36: suminf.    3.50000 (8) obj. 35448.9 iterations 16
Cbc0038I Pass  37: suminf.    2.70656 (7) obj. 35448.9 iterations 23
Cbc0038I Pass  38: suminf.    2.70656 (7) obj. 35448.9 iterations 4
Cbc0038I Pass  39: suminf.    2.78032 (7) obj. 35448.9 iterations 28
Cbc0038I Pass  40: suminf.    2.28891 (11) obj. 35448.9 iterations 16
Cbc0038I Pass  41: suminf.    4.44307 (11) obj. 35448.9 iterations 17
Cbc0038I Pass  42: suminf.    4.36438 (12) obj. 35448.9 iterations 7
Cbc0038I Pass  43: suminf.    4.36438 (12) obj. 35448.9 iterations 0
Cbc0038I Pass  44: suminf.    2.93919 (8) obj. 35448.9 iterations 13
Cbc0038I Pass  45: suminf.    2.86448 (11) obj. 35448.9 iterations 6
Cbc0038I Pass  46: suminf.    4.37282 (12) obj. 35448.9 iterations 21
Cbc0038I Pass  47: suminf.    4.36438 (12) obj. 35448.9 iterations 7
Cbc0038I Pass  48: suminf.    4.36438 (12) obj. 35448.9 iterations 0
Cbc0038I Pass  49: suminf.    2.93919 (8) obj. 35448.9 iterations 13
Cbc0038I Pass  50: suminf.    2.86448 (11) obj. 35448.9 iterations 7
Cbc0038I Pass  51: suminf.    4.37282 (12) obj. 35448.9 iterations 22
Cbc0038I Pass  52: suminf.    4.36438 (12) obj. 35448.9 iterations 6
Cbc0038I Pass  53: suminf.    2.65067 (8) obj. 35448.9 iterations 20
Cbc0038I Pass  54: suminf.    2.07655 (7) obj. 35448.9 iterations 9
Cbc0038I Pass  55: suminf.    2.07655 (7) obj. 35448.9 iterations 14
Cbc0038I Pass  56: suminf.    3.44619 (8) obj. 35448.9 iterations 21
Cbc0038I Pass  57: suminf.    2.33333 (7) obj. 35012.3 iterations 25
Cbc0038I Pass  58: suminf.    5.10283 (16) obj. 35448.9 iterations 108
Cbc0038I Pass  59: suminf.    4.93645 (16) obj. 35448.9 iterations 63
Cbc0038I Pass  60: suminf.    4.93645 (16) obj. 35448.9 iterations 1
Cbc0038I Pass  61: suminf.    4.31133 (12) obj. 35448.9 iterations 28
Cbc0038I Pass  62: suminf.    4.20022 (12) obj. 35448.9 iterations 6
Cbc0038I Pass  63: suminf.    3.96689 (13) obj. 35448.9 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4108 integers at bound fixed and 0 continuous
Cbc0038I Full problem 480 rows 4200 columns, reduced to 82 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (2.03 seconds)
Cbc0038I After 2.03 seconds - Feasibility pump exiting with objective of 35954 - took 1.34 seconds
Cbc0012I Integer solution of 35954 found by feasibility pump after 0 iterations and 0 nodes (2.04 seconds)
Cbc0038I Full problem 480 rows 4200 columns, reduced to 41 rows 26 columns
Cbc0031I 7 added rows had average density of 392.85714
Cbc0013I At root node, 7 cuts changed objective from 33432.333 to 35539 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.570 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 412.5 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 15 row cuts average 373.3 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 35954 best solution, best possible 35539 (4.51 seconds)
Cbc0010I After 1 nodes, 2 on tree, 35954 best solution, best possible 35539 (5.23 seconds)
Cbc0010I After 3 nodes, 4 on tree, 35954 best solution, best possible 35539 (5.99 seconds)
Cbc0010I After 6 nodes, 7 on tree, 35954 best solution, best possible 35539 (6.73 seconds)
Cbc0010I After 9 nodes, 10 on tree, 35954 best solution, best possible 35539 (7.45 seconds)
Cbc0010I After 20 nodes, 5 on tree, 35954 best solution, best possible 35539 (8.36 seconds)
Cbc0010I After 24 nodes, 7 on tree, 35954 best solution, best possible 35539 (9.12 seconds)
Cbc0010I After 36 nodes, 1 on tree, 35954 best solution, best possible 35539 (11.01 seconds)
Cbc0010I After 44 nodes, 8 on tree, 35954 best solution, best possible 35539 (11.81 seconds)
Cbc0010I After 49 nodes, 11 on tree, 35954 best solution, best possible 35539 (12.63 seconds)
Cbc0038I Full problem 487 rows 4200 columns, reduced to 444 rows 2900 columns
Cbc0044I Reduced cost fixing - 444 rows, 2900 columns - restarting search
Cbc0038I Unable to insert previous solution - using cutoff of 35954
Cbc0038I Initial state - 22 integers unsatisfied sum - 9.83333
Cbc0038I Pass   1: suminf.    6.28743 (14) obj. 35954 iterations 43
Cbc0038I Pass   2: suminf.    3.36859 (9) obj. 35954 iterations 15
Cbc0038I Pass   3: suminf.    3.36859 (9) obj. 35954 iterations 1
Cbc0038I Pass   4: suminf.    1.67761 (4) obj. 35954 iterations 34
Cbc0038I Pass   5: suminf.    1.67761 (4) obj. 35954 iterations 15
Cbc0038I Pass   6: suminf.    1.39999 (4) obj. 35954 iterations 19
Cbc0038I Pass   7: suminf.    1.28863 (7) obj. 35954 iterations 24
Cbc0038I Pass   8: suminf.    2.65682 (8) obj. 35954 iterations 26
Cbc0038I Pass   9: suminf.    2.65682 (8) obj. 35954 iterations 8
Cbc0038I Pass  10: suminf.    3.23163 (7) obj. 35954 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2866 integers at bound fixed and 0 continuous
Cbc0038I Full problem 444 rows 2900 columns, reduced to 48 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (13.14 seconds)
Cbc0038I Full problem 445 rows 2900 columns, reduced to 445 rows 2900 columns - too large
Cbc0038I After 13.24 seconds - Feasibility pump exiting - took 0.31 seconds
Cbc0031I 10 added rows had average density of 334.9
Cbc0013I At root node, 18 cuts changed objective from 33432.333 to 36154 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.287 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 450.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 19 row cuts average 418.4 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 374.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 7 row cuts average 335.7 elements, 0 column cuts (0 active)
Cbc0001I Search completed - best objective 1e+50, took 25 iterations and 0 nodes (14.20 seconds)
Cbc0035I Maximum depth 0, 300 variables fixed on reduced cost
Cbc0038I Probing was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.287 seconds)
Cbc0038I Gomory was tried 3 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Cbc0038I Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Cbc0038I Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I OddWheel was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Cbc0038I FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 3 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
Cbc0038I ZeroHalf was tried 3 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Cbc0038I Stored from first was tried 3 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective 35954, took 1326 iterations and 50 nodes (14.20 seconds)
Cbc0032I Strong branching done 244 times (464 iterations), fathomed 2 nodes and fixed 57 variables
Cbc0035I Maximum depth 12, 2100 variables fixed on reduced cost
Cuts at root node changed objective from 33432.3 to 35539
Probing was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.57039 seconds)
Gomory was tried 5 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.059745 seconds)
Knapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022141 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001458 seconds)
OddWheel was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002643 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043082 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004185 seconds)
TwoMirCuts was tried 5 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.088946 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003827 seconds)

Result - Optimal solution found
Objective value:                35954
Enumerated nodes:               50
Total iterations:               1326
Time (CPU seconds):             14.2048
Time (Wallclock seconds):       14.2534
Total time (CPU seconds):       14.2407   (Wallclock seconds):       14.3176
