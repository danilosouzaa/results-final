Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/minuteddispatchstrategy.mps.gz -timeM elapsed -seconds 10800 -solve -quit
At line 2 NAME          minutedispatchstrategy.sav
At line 3 ROWS
At line 80199 COLUMNS
At line 321128 RHS
At line 339825 RANGES
At line 339826 BOUNDS
At line 362876 ENDATA
Problem minutedispatchstrategy.sav has 80194 rows, 41761 columns and 239480 elements
Coin0008I minutedispatchstrategy.sav read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 1897.14 - 87.3726 seconds
Cgl0011I 4 variables made integer
Cgl0003I 0 fixed, 0 tightened bounds, 4239 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 819 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 434 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 242 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 124 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 78 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 76962 rows, 38626 columns (18667 integer (18663 of which binary)) and 235362 elements
Coin3009W Conflict graph built in 0.045 seconds, density: 0.001%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6092 integers unsatisfied sum - 664.866
Cbc0038I Pass   1: (552.80 seconds) suminf.  422.98080 (5607) obj. 1916.96 iterations 16145
Cbc0038I Pass   2: (565.30 seconds) suminf.  418.69015 (4454) obj. 1922.14 iterations 1888
Cbc0038I Pass   3: (566.03 seconds) suminf.  415.27409 (4266) obj. 1923.24 iterations 93
Cbc0038I Pass   4: (585.19 seconds) suminf.  403.74454 (4358) obj. 1935.06 iterations 3339
Cbc0038I Pass   5: (587.95 seconds) suminf.  402.38665 (4039) obj. 1936.86 iterations 338
Cbc0038I Pass   6: (590.45 seconds) suminf.  401.00952 (4056) obj. 1934.35 iterations 327
Cbc0038I Pass   7: (597.52 seconds) suminf.  401.01515 (4129) obj. 1939.28 iterations 1114
Cbc0038I Pass   8: (604.47 seconds) suminf.  401.06661 (3978) obj. 1941.29 iterations 1220
Cbc0038I Pass   9: (607.77 seconds) suminf.  400.66492 (3987) obj. 1939.36 iterations 451
Cbc0038I Pass  10: (615.95 seconds) suminf.  401.82733 (3968) obj. 1943.29 iterations 1479
Cbc0038I Pass  11: (637.53 seconds) suminf.  367.75768 (3006) obj. 2060.56 iterations 4291
Cbc0038I Pass  12: (660.43 seconds) suminf.  346.84733 (3536) obj. 2051.96 iterations 5122
Cbc0038I Pass  13: (660.74 seconds) suminf.  346.61432 (3340) obj. 2051.98 iterations 7
Cbc0038I Pass  14: (664.38 seconds) suminf.  335.35233 (3091) obj. 2103.51 iterations 623
Cbc0038I Pass  15: (678.61 seconds) suminf.  330.04451 (2907) obj. 2136.78 iterations 2301
Cbc0038I Pass  16: (683.04 seconds) suminf.  330.39578 (2897) obj. 2140.52 iterations 531
Cbc0038I Pass  17: (691.84 seconds) suminf.  315.45035 (2562) obj. 2228.29 iterations 1636
Cbc0038I Pass  18: (701.38 seconds) suminf.  262.14975 (2723) obj. 2328.31 iterations 1693
Cbc0038I Pass  19: (703.09 seconds) suminf.  262.06533 (2725) obj. 2330.02 iterations 243
Cbc0038I Pass  20: (704.05 seconds) suminf.  262.11037 (2727) obj. 2328.71 iterations 106
Cbc0038I Pass  21: (708.39 seconds) suminf.  260.83145 (1970) obj. 2336.26 iterations 693
Cbc0038I Pass  22: (711.90 seconds) suminf.  259.88275 (2709) obj. 2336.15 iterations 698
Cbc0038I Pass  23: (713.43 seconds) suminf.  259.98883 (2707) obj. 2334.28 iterations 189
Cbc0038I Pass  24: (717.66 seconds) suminf.  261.99844 (1958) obj. 2343.52 iterations 868
Cbc0038I Pass  25: (722.66 seconds) suminf.  258.63634 (2689) obj. 2336.41 iterations 783
Cbc0038I Pass  26: (723.44 seconds) suminf.  258.65321 (2688) obj. 2335.66 iterations 76
Cbc0038I Pass  27: (726.82 seconds) suminf.  258.28282 (2104) obj. 2339.54 iterations 584
Cbc0038I Pass  28: (731.03 seconds) suminf.  257.54124 (2667) obj. 2336.79 iterations 597
Cbc0038I Pass  29: (732.34 seconds) suminf.  257.59369 (2670) obj. 2335.39 iterations 126
Cbc0038I Pass  30: (736.13 seconds) suminf.  258.05446 (2439) obj. 2342.18 iterations 689
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6627 integers at bound fixed and 6630 continuous
Cbc0038I Full problem 76962 rows 38626 columns, reduced to 44375 rows 21508 columns - too large
Cbc0038I Mini branch and bound did not improve solution (741.93 seconds)
Cbc0038I After 741.93 seconds - Feasibility pump exiting - took 269.96 seconds
Cbc0031I 7122 added rows had average density of 5.829121
Cbc0013I At root node, 7122 cuts changed objective from 1910.7096 to 2173.35 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 31213 row cuts average 2.4 elements, 0 column cuts (5264 active)  in 5.160 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1030 row cuts average 14.2 elements, 0 column cuts (0 active)  in 351.707 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1460 row cuts average 5.0 elements, 0 column cuts (0 active)  in 3.946 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 96.689 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 370.283 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12177 row cuts average 7.3 elements, 0 column cuts (0 active)  in 13.546 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.327 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 844 row cuts average 14.5 elements, 0 column cuts (0 active)  in 257.393 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 760 row cuts average 2.0 elements, 0 column cuts (0 active)  in 831.646 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 2173.35 (3951.08 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 2173.35 (4764.09 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 2173.35 (5013.23 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 2173.35 (5384.13 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 2173.35 (5765.73 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 2173.35 (6012.75 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 2173.35 (6222.73 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 2173.35 (6408.60 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 2173.35 (6565.67 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 2173.35 (6724.29 seconds)
Cbc0010I After 10 nodes, 11 on tree, 1e+50 best solution, best possible 2173.35 (6895.51 seconds)
Cbc0010I After 11 nodes, 12 on tree, 1e+50 best solution, best possible 2173.35 (7035.83 seconds)
Cbc0010I After 12 nodes, 13 on tree, 1e+50 best solution, best possible 2173.35 (7197.98 seconds)
Cbc0010I After 13 nodes, 13 on tree, 1e+50 best solution, best possible 2173.35 (7592.82 seconds)
Cbc0010I After 14 nodes, 13 on tree, 1e+50 best solution, best possible 2173.35 (7987.72 seconds)
Cbc0010I After 15 nodes, 13 on tree, 1e+50 best solution, best possible 2173.35 (8425.09 seconds)
Cbc0010I After 16 nodes, 14 on tree, 1e+50 best solution, best possible 2173.35 (8745.33 seconds)
Cbc0010I After 17 nodes, 14 on tree, 1e+50 best solution, best possible 2173.35 (9110.30 seconds)
Cbc0010I After 18 nodes, 15 on tree, 1e+50 best solution, best possible 2173.35 (9420.95 seconds)
Cbc0010I After 19 nodes, 15 on tree, 1e+50 best solution, best possible 2173.35 (10226.68 seconds)
Cbc0010I After 20 nodes, 16 on tree, 1e+50 best solution, best possible 2173.35 (10664.16 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 2173.35), took 296992 iterations and 21 nodes (11101.84 seconds)
Cbc0032I Strong branching done 466 times (43246 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 13, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1910.71 to 2173.35
Probing was tried 44 times and created 31679 cuts of which 5264 were active after adding rounds of cuts (6.45266 seconds)
Gomory was tried 44 times and created 1053 cuts of which 0 were active after adding rounds of cuts (749.501 seconds)
Knapsack was tried 44 times and created 1460 cuts of which 0 were active after adding rounds of cuts (13.6723 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (96.6894 seconds)
OddWheel was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (370.283 seconds)
MixedIntegerRounding2 was tried 44 times and created 19977 cuts of which 0 were active after adding rounds of cuts (36.356 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.32705 seconds)
TwoMirCuts was tried 44 times and created 844 cuts of which 0 were active after adding rounds of cuts (417.465 seconds)
ZeroHalf was tried 44 times and created 1873 cuts of which 0 were active after adding rounds of cuts (3729.11 seconds)

Result - Stopped on time limit
No feasible solution found
Lower bound:                    2173.35
Enumerated nodes:               21
Total iterations:               296992
Time (CPU seconds):             11072
Time (Wallclock seconds):       11101.9
Total time (CPU seconds):       11072.4   (Wallclock seconds):       11102.4
