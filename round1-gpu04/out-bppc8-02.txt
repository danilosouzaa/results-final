Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/bppc8-02.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 2 NAME          bppc8-02
At line 3 ROWS
At line 64 COLUMNS
At line 4456 RHS
At line 4477 BOUNDS
At line 4709 ENDATA
Problem bppc8-02 has 59 rows, 232 columns and 4387 elements
Coin0008I bppc8-02 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 486.5 - 0.007991 seconds
Cgl0011I 1 variables made integer
Cgl0003I 0 fixed, 1 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 229 columns (229 integer (228 of which binary)) and 4274 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 1.869%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.09663
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 529 iterations 39
Cbc0038I Solution found of 529
Cbc0038I Before mini branch and bound, 212 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 229 columns, reduced to 22 rows 12 columns
Cbc0038I Mini branch and bound improved solution from 529 to 519 (0.11 seconds)
Cbc0038I Round again with cutoff of 514.85
Cbc0038I Reduced cost fixing fixed 54 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.36011 (4) obj. 514.85 iterations 7
Cbc0038I Pass   3: suminf.    0.45999 (4) obj. 514.85 iterations 17
Cbc0038I Pass   4: suminf.    0.45999 (4) obj. 514.85 iterations 2
Cbc0038I Pass   5: suminf.    0.46807 (6) obj. 514.85 iterations 16
Cbc0038I Pass   6: suminf.    0.44535 (5) obj. 514.85 iterations 1
Cbc0038I Pass   7: suminf.    0.74669 (5) obj. 514.85 iterations 16
Cbc0038I Pass   8: suminf.    0.74669 (4) obj. 514.85 iterations 9
Cbc0038I Pass   9: suminf.    1.01418 (6) obj. 514.85 iterations 11
Cbc0038I Pass  10: suminf.    2.81194 (15) obj. 514.85 iterations 36
Cbc0038I Pass  11: suminf.    1.58843 (11) obj. 514.85 iterations 18
Cbc0038I Pass  12: suminf.    1.58843 (11) obj. 514.85 iterations 1
Cbc0038I Pass  13: suminf.    0.46153 (5) obj. 514.85 iterations 22
Cbc0038I Pass  14: suminf.    0.35058 (4) obj. 514.85 iterations 14
Cbc0038I Pass  15: suminf.    1.05419 (7) obj. 514.85 iterations 27
Cbc0038I Pass  16: suminf.    1.02945 (8) obj. 514.85 iterations 9
Cbc0038I Pass  17: suminf.    1.30396 (7) obj. 514.85 iterations 20
Cbc0038I Pass  18: suminf.    1.23595 (7) obj. 514.85 iterations 11
Cbc0038I Pass  19: suminf.    2.30178 (8) obj. 514.85 iterations 15
Cbc0038I Pass  20: suminf.    1.94775 (7) obj. 514.85 iterations 9
Cbc0038I Pass  21: suminf.    1.76519 (7) obj. 514.85 iterations 10
Cbc0038I Pass  22: suminf.    1.30396 (7) obj. 514.85 iterations 18
Cbc0038I Pass  23: suminf.    1.23595 (7) obj. 514.85 iterations 9
Cbc0038I Pass  24: suminf.    2.30178 (8) obj. 514.85 iterations 16
Cbc0038I Pass  25: suminf.    1.94775 (7) obj. 514.85 iterations 6
Cbc0038I Pass  26: suminf.    1.76519 (7) obj. 514.85 iterations 8
Cbc0038I Pass  27: suminf.    1.30396 (7) obj. 514.85 iterations 15
Cbc0038I Pass  28: suminf.    1.23595 (7) obj. 514.85 iterations 9
Cbc0038I Pass  29: suminf.    2.30178 (8) obj. 514.85 iterations 13
Cbc0038I Pass  30: suminf.    1.94775 (7) obj. 514.85 iterations 6
Cbc0038I Pass  31: suminf.    1.76519 (7) obj. 514.85 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 174 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 229 columns, reduced to 42 rows 50 columns
Cbc0038I Mini branch and bound improved solution from 519 to 512 (0.48 seconds)
Cbc0038I Round again with cutoff of 506.1
Cbc0038I Reduced cost fixing fixed 54 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.85109 (5) obj. 506.1 iterations 8
Cbc0038I Pass  32: suminf.    0.89604 (5) obj. 506.1 iterations 27
Cbc0038I Pass  33: suminf.    0.87855 (4) obj. 506.1 iterations 4
Cbc0038I Pass  34: suminf.    0.59471 (6) obj. 506.1 iterations 14
Cbc0038I Pass  35: suminf.    0.57198 (4) obj. 506.1 iterations 3
Cbc0038I Pass  36: suminf.    1.55783 (6) obj. 506.1 iterations 16
Cbc0038I Pass  37: suminf.    0.89347 (4) obj. 506.1 iterations 13
Cbc0038I Pass  38: suminf.    0.78836 (7) obj. 506.1 iterations 13
Cbc0038I Pass  39: suminf.    0.56678 (4) obj. 506.1 iterations 2
Cbc0038I Pass  40: suminf.    0.97955 (2) obj. 506.1 iterations 18
Cbc0038I Pass  41: suminf.    0.58863 (3) obj. 506.1 iterations 9
Cbc0038I Pass  42: suminf.    1.00000 (3) obj. 506.1 iterations 8
Cbc0038I Pass  43: suminf.    0.58863 (3) obj. 506.1 iterations 7
Cbc0038I Pass  44: suminf.    2.30930 (10) obj. 506.1 iterations 19
Cbc0038I Pass  45: suminf.    1.00127 (9) obj. 506.1 iterations 24
Cbc0038I Pass  46: suminf.    1.93241 (9) obj. 506.1 iterations 25
Cbc0038I Pass  47: suminf.    1.78271 (8) obj. 506.1 iterations 5
Cbc0038I Pass  48: suminf.    2.61136 (8) obj. 506.1 iterations 24
Cbc0038I Pass  49: suminf.    2.58345 (7) obj. 506.1 iterations 7
Cbc0038I Pass  50: suminf.    2.58345 (7) obj. 506.1 iterations 0
Cbc0038I Pass  51: suminf.    0.72690 (4) obj. 506.1 iterations 16
Cbc0038I Pass  52: suminf.    0.72690 (4) obj. 506.1 iterations 1
Cbc0038I Pass  53: suminf.    1.50128 (6) obj. 506.1 iterations 9
Cbc0038I Pass  54: suminf.    3.10558 (13) obj. 506.1 iterations 24
Cbc0038I Pass  55: suminf.    2.47679 (9) obj. 506.1 iterations 21
Cbc0038I Pass  56: suminf.    1.80471 (8) obj. 506.1 iterations 27
Cbc0038I Pass  57: suminf.    1.47045 (5) obj. 506.1 iterations 13
Cbc0038I Pass  58: suminf.    0.79580 (5) obj. 506.1 iterations 12
Cbc0038I Pass  59: suminf.    0.79580 (5) obj. 506.1 iterations 1
Cbc0038I Pass  60: suminf.    2.29734 (6) obj. 506.1 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 229 columns, reduced to 46 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 512 to 507 (0.87 seconds)
Cbc0038I Round again with cutoff of 500.15
Cbc0038I Reduced cost fixing fixed 54 variables on major pass 4
Cbc0038I Pass  60: suminf.    1.24902 (6) obj. 500.15 iterations 1
Cbc0038I Pass  61: suminf.    2.10423 (8) obj. 500.15 iterations 24
Cbc0038I Pass  62: suminf.    1.03112 (4) obj. 500.15 iterations 15
Cbc0038I Pass  63: suminf.    0.74727 (6) obj. 500.15 iterations 16
Cbc0038I Pass  64: suminf.    0.72455 (4) obj. 500.15 iterations 1
Cbc0038I Pass  65: suminf.    1.70411 (6) obj. 500.15 iterations 19
Cbc0038I Pass  66: suminf.    1.06107 (4) obj. 500.15 iterations 19
Cbc0038I Pass  67: suminf.    0.94092 (7) obj. 500.15 iterations 13
Cbc0038I Pass  68: suminf.    0.71935 (4) obj. 500.15 iterations 2
Cbc0038I Pass  69: suminf.    0.84432 (2) obj. 500.15 iterations 18
Cbc0038I Pass  70: suminf.    0.72386 (3) obj. 500.15 iterations 10
Cbc0038I Pass  71: suminf.    1.00000 (3) obj. 500.15 iterations 7
Cbc0038I Pass  72: suminf.    0.72386 (3) obj. 500.15 iterations 6
Cbc0038I Pass  73: suminf.    3.38253 (14) obj. 500.15 iterations 27
Cbc0038I Pass  74: suminf.    1.73187 (9) obj. 500.15 iterations 15
Cbc0038I Pass  75: suminf.    0.88368 (5) obj. 500.15 iterations 10
Cbc0038I Pass  76: suminf.    0.84350 (4) obj. 500.15 iterations 14
Cbc0038I Pass  77: suminf.    0.84350 (4) obj. 500.15 iterations 0
Cbc0038I Pass  78: suminf.    1.64942 (8) obj. 500.15 iterations 11
Cbc0038I Pass  79: suminf.    3.70281 (15) obj. 500.15 iterations 36
Cbc0038I Pass  80: suminf.    2.12496 (14) obj. 500.15 iterations 27
Cbc0038I Pass  81: suminf.    1.42361 (7) obj. 500.15 iterations 27
Cbc0038I Pass  82: suminf.    1.42361 (7) obj. 500.15 iterations 9
Cbc0038I Pass  83: suminf.    1.19303 (6) obj. 500.15 iterations 24
Cbc0038I Pass  84: suminf.    1.00000 (4) obj. 500.15 iterations 8
Cbc0038I Pass  85: suminf.    0.95113 (4) obj. 500.15 iterations 11
Cbc0038I Pass  86: suminf.    0.93637 (5) obj. 500.15 iterations 3
Cbc0038I Pass  87: suminf.    1.45056 (5) obj. 500.15 iterations 8
Cbc0038I Pass  88: suminf.    3.96197 (12) obj. 500.15 iterations 20
Cbc0038I Pass  89: suminf.    0.91576 (5) obj. 500.15 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 164 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 229 columns, reduced to 47 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (1.32 seconds)
Cbc0038I After 1.32 seconds - Feasibility pump exiting with objective of 507 - took 1.20 seconds
Cbc0012I Integer solution of 507 found by feasibility pump after 0 iterations and 0 nodes (1.32 seconds)
Cbc0038I Full problem 57 rows 229 columns, reduced to 26 rows 20 columns
Cbc0031I 3 added rows had average density of 39.666667
Cbc0013I At root node, 46 cuts changed objective from 486.5 to 507 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 89.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 162 row cuts average 87.1 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 118.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective 507, took 171 iterations and 0 nodes (1.52 seconds)
Cbc0035I Maximum depth 0, 85 variables fixed on reduced cost
Cuts at root node changed objective from 486.5 to 507
Probing was tried 5 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.013266 seconds)
Gomory was tried 5 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.008164 seconds)
Knapsack was tried 5 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.006395 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000726 seconds)
OddWheel was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000925 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003959 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00272 seconds)
TwoMirCuts was tried 5 times and created 162 cuts of which 0 were active after adding rounds of cuts (0.041421 seconds)
ZeroHalf was tried 5 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.004429 seconds)

Result - Optimal solution found
Objective value:                507
Enumerated nodes:               0
Total iterations:               171
Time (CPU seconds):             1.47405
Time (Wallclock seconds):       1.52523
Total time (CPU seconds):       1.47918   (Wallclock seconds):       1.55594
