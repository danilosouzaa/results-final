Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Feb  6 2022
command line - -import /home/danilo/cbc-test-set/mzzv11.mps.gz -timeM elapsed -seconds 10800 -solve -quit (default strategy 1)
At line 1 NAME           mzzv11
At line 2 ROWS
At line 9503 COLUMNS
At line 80338 RHS
At line 83244 BOUNDS
At line 93493 ENDATA
Problem mzzv11 has 9499 rows, 10240 columns and 134603 elements
Coin0008I mzzv11 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -22945.2 - 39.5291 seconds
Cgl0003I 390 fixed, 6 tightened bounds, 1881 strengthened rows, 34 substitutions
Cgl0003I 15 fixed, 0 tightened bounds, 118 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 167 strengthened rows, 0 substitutions
Cgl0003I 13 fixed, 2 tightened bounds, 1889 strengthened rows, 20 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 51 strengthened rows, 0 substitutions
Cgl0003I 4 fixed, 0 tightened bounds, 1628 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 5 tightened bounds, 1404 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 96 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 2 tightened bounds, 1202 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 7 tightened bounds, 960 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 12 tightened bounds, 785 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 20 fixed, 5 tightened bounds, 737 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 12 tightened bounds, 533 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 8559 rows, 9019 columns (9019 integer (8784 of which binary)) and 133658 elements
Coin3009W Conflict graph built in 0.184 seconds, density: 0.144%
Cgl0015I Clique Strengthening extended 321 cliques, 531 were dominated
After applying Clique Strengthening continuous objective value is -22094.5
Cbc0045I Cutoff increment increased from 0.0001 to 1.9999
Cbc0038I Initial state - 695 integers unsatisfied sum - 168.443
Cbc0038I Pass   1: (239.76 seconds) suminf.   29.00000 (80) obj. -17047.7 iterations 11565
Cbc0038I Pass   2: (240.81 seconds) suminf.    4.96667 (23) obj. -16981.6 iterations 564
Cbc0038I Pass   3: (241.26 seconds) suminf.    4.96667 (23) obj. -16981.6 iterations 185
Cbc0038I Pass   4: (241.42 seconds) suminf.    1.50000 (4) obj. -16956 iterations 87
Cbc0038I Pass   5: (241.58 seconds) suminf.    0.50000 (4) obj. -16956 iterations 51
Cbc0038I Pass   6: (246.00 seconds) suminf.    1.00000 (4) obj. -16946 iterations 1694
Cbc0038I Pass   7: (250.00 seconds) suminf.    1.00000 (4) obj. -16946 iterations 1463
Cbc0038I Pass   8: (250.15 seconds) suminf.    1.00000 (4) obj. -16946 iterations 32
Cbc0038I Pass   9: (255.75 seconds) suminf.    1.00000 (4) obj. -16946 iterations 1941
Cbc0038I Pass  10: (261.08 seconds) suminf.    1.00000 (4) obj. -16946 iterations 1796
Cbc0038I Pass  11: (261.53 seconds) suminf.    1.00000 (4) obj. -16946 iterations 115
Cbc0038I Pass  12: (268.62 seconds) suminf.    1.00000 (4) obj. -16946 iterations 2108
Cbc0038I Pass  13: (274.49 seconds) suminf.    1.00000 (4) obj. -16946 iterations 1796
Cbc0038I Pass  14: (274.62 seconds) suminf.    1.00000 (4) obj. -16946 iterations 25
Cbc0038I Pass  15: (282.67 seconds) suminf.    3.00000 (8) obj. -16826 iterations 2371
Cbc0038I Pass  16: (289.28 seconds) suminf.    3.00000 (8) obj. -16826 iterations 1984
Cbc0038I Pass  17: (296.28 seconds) suminf.    3.00000 (8) obj. -16826 iterations 2257
Cbc0038I Pass  18: (302.07 seconds) suminf.    3.00000 (8) obj. -16826 iterations 1858
Cbc0038I Pass  19: (302.31 seconds) suminf.    1.00000 (4) obj. -16946 iterations 68
Cbc0038I Pass  20: (302.40 seconds) suminf.    1.00000 (4) obj. -16946 iterations 14
Cbc0038I Pass  21: (302.62 seconds) suminf.    1.00000 (4) obj. -16946 iterations 54
Cbc0038I Pass  22: (310.78 seconds) suminf.    1.00000 (4) obj. -17336 iterations 2559
Cbc0038I Pass  23: (318.41 seconds) suminf.    1.00000 (4) obj. -17336 iterations 2173
Cbc0038I Pass  24: (318.52 seconds) suminf.    1.00000 (4) obj. -17336 iterations 15
Cbc0038I Pass  25: (326.75 seconds) suminf.    1.00000 (4) obj. -17296 iterations 2365
Cbc0038I Pass  26: (334.24 seconds) suminf.    1.00000 (4) obj. -17296 iterations 2227
Cbc0038I Pass  27: (334.36 seconds) suminf.    1.00000 (4) obj. -17296 iterations 19
Cbc0038I Pass  28: (342.40 seconds) suminf.    1.33333 (4) obj. -17236 iterations 2323
Cbc0038I Pass  29: (348.63 seconds) suminf.    1.00000 (4) obj. -17236 iterations 1821
Cbc0038I Pass  30: (348.72 seconds) suminf.    1.00000 (4) obj. -17236 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8209 integers at bound fixed and 0 continuous of which 31 were internal integer and 0 internal continuous
Cbc0038I Full problem 8349 rows 9019 columns, reduced to 399 rows 215 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to -17866 (349.09 seconds)
Cbc0038I Round again with cutoff of -18290.7
Cbc0038I Pass  30: (350.90 seconds) suminf.   21.47738 (84) obj. -18290.7 iterations 749
Cbc0038I Pass  31: (361.10 seconds) suminf.   12.18265 (67) obj. -18290.7 iterations 3573
Cbc0038I Pass  32: (364.73 seconds) suminf.    7.12813 (45) obj. -18290.7 iterations 1332
Cbc0038I Pass  33: (365.70 seconds) suminf.    6.69477 (41) obj. -18290.7 iterations 379
Cbc0038I Pass  34: (366.81 seconds) suminf.    9.89319 (35) obj. -18290.7 iterations 446
Cbc0038I Pass  35: (367.98 seconds) suminf.    6.12334 (41) obj. -18290.7 iterations 478
Cbc0038I Pass  36: (370.07 seconds) suminf.   13.01693 (38) obj. -18290.7 iterations 756
Cbc0038I Pass  37: (371.07 seconds) suminf.    8.99667 (60) obj. -18290.7 iterations 374
Cbc0038I Pass  38: (371.96 seconds) suminf.    7.04367 (46) obj. -18290.7 iterations 366
Cbc0038I Pass  39: (374.01 seconds) suminf.    4.33939 (39) obj. -18290.7 iterations 720
Cbc0038I Pass  40: (375.58 seconds) suminf.    9.93776 (47) obj. -18290.7 iterations 596
Cbc0038I Pass  41: (376.78 seconds) suminf.    8.47224 (46) obj. -18290.7 iterations 431
Cbc0038I Pass  42: (378.78 seconds) suminf.    5.76796 (39) obj. -18290.7 iterations 710
Cbc0038I Pass  43: (379.67 seconds) suminf.    5.51385 (46) obj. -18290.7 iterations 358
Cbc0038I Pass  44: (380.69 seconds) suminf.    4.33939 (39) obj. -18290.7 iterations 390
Cbc0038I Pass  45: (382.41 seconds) suminf.    6.35517 (42) obj. -18290.7 iterations 592
Cbc0038I Pass  46: (387.51 seconds) suminf.    4.44340 (44) obj. -18290.7 iterations 1877
Cbc0038I Pass  47: (391.89 seconds) suminf.    3.76796 (39) obj. -18290.7 iterations 1608
Cbc0038I Pass  48: (393.93 seconds) suminf.   10.91021 (43) obj. -18290.7 iterations 723
Cbc0038I Pass  49: (396.34 seconds) suminf.    9.04367 (46) obj. -18290.7 iterations 755
Cbc0038I Pass  50: (398.10 seconds) suminf.    6.33939 (39) obj. -18290.7 iterations 558
Cbc0038I Pass  51: (399.49 seconds) suminf.    8.20450 (47) obj. -18290.7 iterations 487
Cbc0038I Pass  52: (401.00 seconds) suminf.    6.47224 (46) obj. -18290.7 iterations 421
Cbc0038I Pass  53: (403.05 seconds) suminf.    3.76796 (39) obj. -18290.7 iterations 622
Cbc0038I Pass  54: (404.89 seconds) suminf.    6.92660 (42) obj. -18290.7 iterations 602
Cbc0038I Pass  55: (406.57 seconds) suminf.    6.33939 (39) obj. -18290.7 iterations 528
Cbc0038I Pass  56: (408.03 seconds) suminf.    8.20450 (47) obj. -18290.7 iterations 483
Cbc0038I Pass  57: (409.02 seconds) suminf.    6.47224 (46) obj. -18290.7 iterations 277
Cbc0038I Pass  58: (411.33 seconds) suminf.    3.76796 (39) obj. -18290.7 iterations 696
Cbc0038I Pass  59: (413.64 seconds) suminf.    7.45926 (41) obj. -18290.7 iterations 651
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8184 integers at bound fixed and 0 continuous of which 34 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (413.84 seconds)
Cbc0038I After 413.84 seconds - Feasibility pump exiting with objective of -17866 - took 196.25 seconds
Cbc0012I Integer solution of -17866 found by feasibility pump after 0 iterations and 0 nodes (413.86 seconds)
Cbc0038I Full problem 8349 rows 9019 columns, reduced to 135 rows 77 columns
Cbc0031I 47 added rows had average density of 214.23404
Cbc0013I At root node, 47 cuts changed objective from -22094.53 to -21760.386 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 147 row cuts average 5.5 elements, 0 column cuts (0 active)  in 12.565 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 225 row cuts average 846.3 elements, 0 column cuts (0 active)  in 7.506 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 11.0 elements, 0 column cuts (0 active)  in 1.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.635 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.521 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 238.1 elements, 0 column cuts (0 active)  in 3.986 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 17.6 elements, 0 column cuts (0 active)  in 4.286 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17866 best solution, best possible -21760.386 (465.83 seconds)
Cbc0010I After 1 nodes, 2 on tree, -17866 best solution, best possible -21760.386 (470.75 seconds)
Cbc0010I After 2 nodes, 3 on tree, -17866 best solution, best possible -21760.386 (472.66 seconds)
Cbc0010I After 3 nodes, 4 on tree, -17866 best solution, best possible -21760.386 (474.33 seconds)
Cbc0010I After 4 nodes, 5 on tree, -17866 best solution, best possible -21760.386 (475.15 seconds)
Cbc0010I After 5 nodes, 6 on tree, -17866 best solution, best possible -21760.386 (478.32 seconds)
Cbc0010I After 6 nodes, 7 on tree, -17866 best solution, best possible -21760.386 (479.99 seconds)
Cbc0010I After 8 nodes, 8 on tree, -17866 best solution, best possible -21760.386 (481.18 seconds)
Cbc0010I After 9 nodes, 9 on tree, -17866 best solution, best possible -21760.386 (481.96 seconds)
Cbc0010I After 11 nodes, 10 on tree, -17866 best solution, best possible -21760.386 (482.69 seconds)
Cbc0010I After 13 nodes, 12 on tree, -17866 best solution, best possible -21760.386 (483.75 seconds)
Cbc0004I Integer solution of -21668 found after 9022 iterations and 14 nodes (484.29 seconds)
Cbc0004I Integer solution of -21698 found after 9026 iterations and 15 nodes (484.41 seconds)
Cbc0010I After 16 nodes, 9 on tree, -21698 best solution, best possible -21760.386 (484.89 seconds)
Cbc0010I After 18 nodes, 9 on tree, -21698 best solution, best possible -21760.386 (485.83 seconds)
Cbc0010I After 19 nodes, 8 on tree, -21698 best solution, best possible -21760.386 (486.69 seconds)
Cbc0010I After 21 nodes, 10 on tree, -21698 best solution, best possible -21760.386 (487.91 seconds)
Cbc0010I After 23 nodes, 11 on tree, -21698 best solution, best possible -21760.386 (488.96 seconds)
Cbc0010I After 27 nodes, 14 on tree, -21698 best solution, best possible -21760.386 (490.02 seconds)
Cbc0010I After 30 nodes, 15 on tree, -21698 best solution, best possible -21760.386 (492.00 seconds)
Cbc0010I After 32 nodes, 16 on tree, -21698 best solution, best possible -21760.386 (492.92 seconds)
Cbc0010I After 35 nodes, 16 on tree, -21698 best solution, best possible -21760.386 (493.67 seconds)
Cbc0010I After 37 nodes, 16 on tree, -21698 best solution, best possible -21760.386 (494.50 seconds)
Cbc0010I After 38 nodes, 16 on tree, -21698 best solution, best possible -21760.386 (495.36 seconds)
Cbc0010I After 43 nodes, 19 on tree, -21698 best solution, best possible -21760.386 (496.21 seconds)
Cbc0010I After 49 nodes, 17 on tree, -21698 best solution, best possible -21760.386 (497.16 seconds)
Cbc0038I Full problem 8396 rows 9019 columns, reduced to 5406 rows 5382 columns
Cbc0044I Reduced cost fixing - 5406 rows, 5382 columns - restarting search
Cbc0012I Integer solution of -21698 found by Previous solution after 0 iterations and 0 nodes (503.52 seconds)
Cbc0038I Full problem 5406 rows 5382 columns, reduced to 276 rows 128 columns
Cbc0031I 47 added rows had average density of 57.361702
Cbc0013I At root node, 47 cuts changed objective from -22037.5 to -21748 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 204 row cuts average 4.4 elements, 513 column cuts (513 active)  in 3.156 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 70.8 elements, 0 column cuts (0 active)  in 1.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 12.9 elements, 0 column cuts (0 active)  in 0.313 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.707 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 496 row cuts average 113.7 elements, 0 column cuts (0 active)  in 1.302 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 16.3 elements, 0 column cuts (0 active)  in 1.217 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 37 row cuts average 115.1 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -21698 best solution, best possible -21748 (518.28 seconds)
Cbc0010I After 1 nodes, 2 on tree, -21698 best solution, best possible -21748 (519.50 seconds)
Cbc0010I After 2 nodes, 3 on tree, -21698 best solution, best possible -21748 (520.28 seconds)
Cbc0010I After 4 nodes, 5 on tree, -21698 best solution, best possible -21748 (521.51 seconds)
Cbc0010I After 6 nodes, 7 on tree, -21698 best solution, best possible -21748 (523.13 seconds)
Cbc0010I After 8 nodes, 9 on tree, -21698 best solution, best possible -21748 (524.41 seconds)
Cbc0010I After 9 nodes, 9 on tree, -21698 best solution, best possible -21748 (525.32 seconds)
Cbc0010I After 10 nodes, 10 on tree, -21698 best solution, best possible -21748 (526.06 seconds)
Cbc0010I After 12 nodes, 12 on tree, -21698 best solution, best possible -21748 (527.44 seconds)
Cbc0010I After 14 nodes, 13 on tree, -21698 best solution, best possible -21748 (529.09 seconds)
Cbc0010I After 16 nodes, 13 on tree, -21698 best solution, best possible -21748 (529.84 seconds)
Cbc0010I After 17 nodes, 13 on tree, -21698 best solution, best possible -21748 (530.66 seconds)
Cbc0016I Integer solution of -21718 found by strong branching after 5471 iterations and 19 nodes (532.05 seconds)
Cbc0010I After 19 nodes, 10 on tree, -21718 best solution, best possible -21748 (532.07 seconds)
Cbc0010I After 25 nodes, 8 on tree, -21718 best solution, best possible -21748 (533.89 seconds)
Cbc0010I After 26 nodes, 8 on tree, -21718 best solution, best possible -21748 (534.66 seconds)
Cbc0010I After 28 nodes, 7 on tree, -21718 best solution, best possible -21748 (535.67 seconds)
Cbc0010I After 31 nodes, 5 on tree, -21718 best solution, best possible -21748 (536.82 seconds)
Cbc0010I After 36 nodes, 1 on tree, -21718 best solution, best possible -21737.017 (538.86 seconds)
Cbc0010I After 37 nodes, 2 on tree, -21718 best solution, best possible -21737.017 (539.69 seconds)
Cbc0010I After 39 nodes, 1 on tree, -21718 best solution, best possible -21737.017 (540.59 seconds)
Cbc0001I Search completed - best objective -21718, took 9512 iterations and 40 nodes (540.78 seconds)
Cbc0032I Strong branching done 218 times (12014 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 13, 2327 variables fixed on reduced cost
Cbc0038I Probing was tried 34 times and created 859 cuts of which 0 were active after adding rounds of cuts (3.515 seconds)
Cbc0038I Gomory was tried 32 times and created 11 cuts of which 0 were active after adding rounds of cuts (1.772 seconds)
Cbc0038I Knapsack was tried 32 times and created 14 cuts of which 0 were active after adding rounds of cuts (1.174 seconds)
Cbc0038I Clique was tried 7 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
Cbc0038I OddWheel was tried 7 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.707 seconds)
Cbc0038I MixedIntegerRounding2 was tried 7 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.119 seconds)
Cbc0038I FlowCover was tried 7 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Cbc0038I TwoMirCuts was tried 32 times and created 500 cuts of which 0 were active after adding rounds of cuts (1.719 seconds)
Cbc0038I ZeroHalf was tried 32 times and created 51 cuts of which 0 were active after adding rounds of cuts (4.766 seconds)
Cbc0038I Stored from first was tried 32 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -21718 found by Reduced search after 24063 iterations and 90 nodes (540.97 seconds)
Cbc0001I Search completed - best objective -21718, took 24063 iterations and 90 nodes (540.97 seconds)
Cbc0032I Strong branching done 292 times (4702 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 18, 6151 variables fixed on reduced cost
Cuts at root node changed objective from -22094.5 to -21760.4
Probing was tried 28 times and created 170 cuts of which 0 were active after adding rounds of cuts (13.2205 seconds)
Gomory was tried 28 times and created 226 cuts of which 0 were active after adding rounds of cuts (8.07512 seconds)
Knapsack was tried 28 times and created 7 cuts of which 0 were active after adding rounds of cuts (2.33727 seconds)
Clique was tried 11 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.083597 seconds)
OddWheel was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.6346 seconds)
MixedIntegerRounding2 was tried 11 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.521008 seconds)
FlowCover was tried 11 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.097765 seconds)
TwoMirCuts was tried 28 times and created 291 cuts of which 0 were active after adding rounds of cuts (4.65973 seconds)
ZeroHalf was tried 28 times and created 43 cuts of which 0 were active after adding rounds of cuts (9.86472 seconds)

Result - Optimal solution found
Objective value:                -21718
Enumerated nodes:               90
Total iterations:               24063
Time (CPU seconds):             541.511
Time (Wallclock seconds):       542.05
Total time (CPU seconds):       541.653   (Wallclock seconds):       542.2
