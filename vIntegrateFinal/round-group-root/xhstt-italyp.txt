Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/xhstt-italyp.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/xhstt-italyp.txt -quit (default strategy 1)
At line 2 NAME          ItalyInstance4P.lp
At line 3 ROWS
At line 23564 COLUMNS
At line 187852 RHS
At line 199952 BOUNDS
At line 227201 ENDATA
Problem ItalyInstance4P.lp has 23559 rows, 27248 columns and 161409 elements
Coin0008I ItalyInstance4P.lp read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 27 - 165.837 seconds
Cgl0003I 0 fixed, 7 tightened bounds, 12990 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3398 strengthened rows, 0 substitutions
Cgl0003I 5 fixed, 0 tightened bounds, 3020 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 9 fixed, 0 tightened bounds, 3081 strengthened rows, 0 substitutions
Cgl0003I 6 fixed, 0 tightened bounds, 2910 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 2746 strengthened rows, 0 substitutions
Cgl0003I 6 fixed, 0 tightened bounds, 2709 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 2514 strengthened rows, 0 substitutions
Cgl0003I 7 fixed, 0 tightened bounds, 2132 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 23178 rows, 27219 columns (27219 integer (26910 of which binary)) and 193961 elements
Coin3009W Conflict graph built in 0.578 seconds, density: 0.057%
Cgl0015I Clique Strengthening extended 150 cliques, 269 were dominated
After applying Clique Strengthening continuous objective value is 27
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 3117 integers unsatisfied sum - 730.351
Cbc0038I Pass   1: (2315.70 seconds) suminf.  426.55779 (2074) obj. 528.56 iterations 45948
Cbc0038I Pass   2: (2578.39 seconds) suminf.  252.42070 (1615) obj. 953.462 iterations 52804
Cbc0038I Pass   3: (3439.42 seconds) suminf.  144.98909 (929) obj. 1401.26 iterations 120435
Cbc0038I Pass   4: (4470.91 seconds) suminf.   88.38253 (264) obj. 1826.09 iterations 155309
Cbc0038I Pass   5: (4718.14 seconds) suminf.   44.91667 (126) obj. 1903.42 iterations 22936
Cbc0038I Pass   6: (4787.41 seconds) suminf.   29.54444 (103) obj. 2049.44 iterations 6086
Cbc0038I Pass   7: (4837.40 seconds) suminf.   17.25000 (45) obj. 2140 iterations 4336
Cbc0038I Pass   8: (4858.05 seconds) suminf.   12.00000 (24) obj. 2113 iterations 1557
Cbc0038I Pass   9: (4869.54 seconds) suminf.   12.00000 (24) obj. 2113 iterations 1055
Cbc0038I Pass  10: (4881.09 seconds) suminf.   12.00000 (24) obj. 2113 iterations 889
Cbc0038I Pass  11: (4894.18 seconds) suminf.   12.00000 (27) obj. 2113.75 iterations 971
Cbc0038I Pass  12: (4905.04 seconds) suminf.   12.00000 (27) obj. 2113.75 iterations 755
Cbc0038I Pass  13: (4925.26 seconds) suminf.   12.00000 (27) obj. 2113.75 iterations 1473
Cbc0038I Pass  14: (4939.20 seconds) suminf.   12.00000 (27) obj. 2113.75 iterations 1098
Cbc0038I Pass  15: (4947.68 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 651
Cbc0038I Pass  16: (4957.50 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 657
Cbc0038I Pass  17: (4967.37 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 848
Cbc0038I Pass  18: (4976.73 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 651
Cbc0038I Pass  19: (4991.75 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 1041
Cbc0038I Pass  20: (5000.32 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 730
Cbc0038I Pass  21: (5010.78 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 790
Cbc0038I Pass  22: (5015.92 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 275
Cbc0038I Pass  23: (5025.92 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 648
Cbc0038I Pass  24: (5031.85 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 456
Cbc0038I Pass  25: (5040.89 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 565
Cbc0038I Pass  26: (5046.00 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 311
Cbc0038I Pass  27: (5055.60 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 723
Cbc0038I Pass  28: (5065.73 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 660
Cbc0038I Pass  29: (5079.64 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 1026
Cbc0038I Pass  30: (5094.48 seconds) suminf.   12.00000 (31) obj. 2114.5 iterations 1055
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22104 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Full problem 23059 rows 27219 columns, reduced to 5445 rows 4549 columns
Cbc0038I Mini branch and bound did not improve solution (5275.23 seconds)
Cbc0038I After 5275.23 seconds - Feasibility pump exiting - took 3621.86 seconds
Cbc0031I 96 added rows had average density of 13.520833
Cbc0013I At root node, 96 cuts changed objective from 27 to 27 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 7.8 elements, 0 column cuts (0 active)  in 14.165 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 73 row cuts average 349.8 elements, 0 column cuts (0 active)  in 44.691 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 84.243 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 301 row cuts average 11.9 elements, 0 column cuts (0 active)  in 13.615 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 35 row cuts average 5.4 elements, 0 column cuts (0 active)  in 89.150 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 1.582 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 129 row cuts average 97.0 elements, 0 column cuts (0 active)  in 76.861 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 233 row cuts average 7.6 elements, 0 column cuts (0 active)  in 80.957 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 27 (6704.72 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 27 (6819.06 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 27 (6925.11 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 27 (7020.45 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 27 (7115.14 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 27 (7202.00 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 27 (7261.76 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 27 (7280.92 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 27 (7298.22 seconds)
Cbc0010I After 9 nodes, 10 on tree, 1e+50 best solution, best possible 27 (7325.53 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible 27 (7353.71 seconds)
Cbc0010I After 11 nodes, 11 on tree, 1e+50 best solution, best possible 27 (7372.35 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible 27 (7419.29 seconds)
Cbc0010I After 13 nodes, 12 on tree, 1e+50 best solution, best possible 27 (7483.39 seconds)
Cbc0010I After 14 nodes, 12 on tree, 1e+50 best solution, best possible 27 (7510.05 seconds)
Cbc0010I After 15 nodes, 13 on tree, 1e+50 best solution, best possible 27 (7552.42 seconds)
Cbc0010I After 16 nodes, 13 on tree, 1e+50 best solution, best possible 27 (7626.14 seconds)
Cbc0010I After 17 nodes, 14 on tree, 1e+50 best solution, best possible 27 (7629.89 seconds)
Cbc0010I After 18 nodes, 14 on tree, 1e+50 best solution, best possible 27 (7691.78 seconds)
Cbc0010I After 19 nodes, 15 on tree, 1e+50 best solution, best possible 27 (7723.36 seconds)
Cbc0010I After 20 nodes, 16 on tree, 1e+50 best solution, best possible 27 (7744.59 seconds)
Cbc0010I After 21 nodes, 17 on tree, 1e+50 best solution, best possible 27 (7787.11 seconds)
Cbc0010I After 22 nodes, 17 on tree, 1e+50 best solution, best possible 27 (7803.43 seconds)
Cbc0010I After 23 nodes, 18 on tree, 1e+50 best solution, best possible 27 (7863.99 seconds)
Cbc0010I After 24 nodes, 18 on tree, 1e+50 best solution, best possible 27 (7926.41 seconds)
Cbc0010I After 25 nodes, 18 on tree, 1e+50 best solution, best possible 27 (7955.60 seconds)
Cbc0010I After 26 nodes, 19 on tree, 1e+50 best solution, best possible 27 (7980.63 seconds)
Cbc0010I After 27 nodes, 20 on tree, 1e+50 best solution, best possible 27 (8041.43 seconds)
Cbc0010I After 28 nodes, 20 on tree, 1e+50 best solution, best possible 27 (8107.78 seconds)
Cbc0010I After 29 nodes, 20 on tree, 1e+50 best solution, best possible 27 (8131.26 seconds)
Cbc0010I After 30 nodes, 21 on tree, 1e+50 best solution, best possible 27 (8186.69 seconds)
Cbc0010I After 31 nodes, 21 on tree, 1e+50 best solution, best possible 27 (8242.14 seconds)
Cbc0010I After 32 nodes, 21 on tree, 1e+50 best solution, best possible 27 (8264.54 seconds)
Cbc0010I After 33 nodes, 22 on tree, 1e+50 best solution, best possible 27 (8292.61 seconds)
Cbc0010I After 34 nodes, 22 on tree, 1e+50 best solution, best possible 27 (8319.59 seconds)
Cbc0010I After 35 nodes, 23 on tree, 1e+50 best solution, best possible 27 (8334.47 seconds)
Cbc0010I After 36 nodes, 24 on tree, 1e+50 best solution, best possible 27 (8387.71 seconds)
Cbc0010I After 37 nodes, 24 on tree, 1e+50 best solution, best possible 27 (8457.59 seconds)
Cbc0010I After 38 nodes, 24 on tree, 1e+50 best solution, best possible 27 (8492.00 seconds)
Cbc0010I After 39 nodes, 25 on tree, 1e+50 best solution, best possible 27 (8546.26 seconds)
Cbc0010I After 40 nodes, 25 on tree, 1e+50 best solution, best possible 27 (8622.74 seconds)
Cbc0010I After 41 nodes, 26 on tree, 1e+50 best solution, best possible 27 (8631.99 seconds)
Cbc0010I After 42 nodes, 27 on tree, 1e+50 best solution, best possible 27 (8684.22 seconds)
Cbc0010I After 43 nodes, 27 on tree, 1e+50 best solution, best possible 27 (8744.86 seconds)
Cbc0010I After 44 nodes, 28 on tree, 1e+50 best solution, best possible 27 (8766.69 seconds)
Cbc0010I After 45 nodes, 29 on tree, 1e+50 best solution, best possible 27 (8798.62 seconds)
Cbc0010I After 46 nodes, 29 on tree, 1e+50 best solution, best possible 27 (8826.59 seconds)
Cbc0010I After 47 nodes, 30 on tree, 1e+50 best solution, best possible 27 (8852.03 seconds)
Cbc0010I After 48 nodes, 31 on tree, 1e+50 best solution, best possible 27 (8887.64 seconds)
Cbc0010I After 49 nodes, 31 on tree, 1e+50 best solution, best possible 27 (8916.62 seconds)
Cbc0010I After 50 nodes, 32 on tree, 1e+50 best solution, best possible 27 (8989.20 seconds)
Cbc0010I After 51 nodes, 32 on tree, 1e+50 best solution, best possible 27 (9050.35 seconds)
Cbc0010I After 52 nodes, 32 on tree, 1e+50 best solution, best possible 27 (9078.05 seconds)
Cbc0010I After 53 nodes, 33 on tree, 1e+50 best solution, best possible 27 (9088.28 seconds)
Cbc0010I After 54 nodes, 34 on tree, 1e+50 best solution, best possible 27 (9146.28 seconds)
Cbc0010I After 55 nodes, 34 on tree, 1e+50 best solution, best possible 27 (9207.28 seconds)
Cbc0010I After 56 nodes, 34 on tree, 1e+50 best solution, best possible 27 (9233.07 seconds)
Cbc0010I After 57 nodes, 35 on tree, 1e+50 best solution, best possible 27 (9291.41 seconds)
Cbc0010I After 58 nodes, 35 on tree, 1e+50 best solution, best possible 27 (9351.12 seconds)
Cbc0010I After 59 nodes, 36 on tree, 1e+50 best solution, best possible 27 (9371.97 seconds)
Cbc0010I After 60 nodes, 37 on tree, 1e+50 best solution, best possible 27 (9397.45 seconds)
Cbc0010I After 61 nodes, 38 on tree, 1e+50 best solution, best possible 27 (9455.56 seconds)
Cbc0010I After 62 nodes, 38 on tree, 1e+50 best solution, best possible 27 (9517.42 seconds)
Cbc0010I After 63 nodes, 38 on tree, 1e+50 best solution, best possible 27 (9557.06 seconds)
Cbc0010I After 64 nodes, 39 on tree, 1e+50 best solution, best possible 27 (9617.28 seconds)
Cbc0010I After 65 nodes, 39 on tree, 1e+50 best solution, best possible 27 (9678.70 seconds)
Cbc0010I After 66 nodes, 39 on tree, 1e+50 best solution, best possible 27 (9723.20 seconds)
Cbc0010I After 67 nodes, 39 on tree, 1e+50 best solution, best possible 27 (9749.35 seconds)
Cbc0010I After 68 nodes, 40 on tree, 1e+50 best solution, best possible 27 (9768.31 seconds)
Cbc0010I After 69 nodes, 41 on tree, 1e+50 best solution, best possible 27 (9815.96 seconds)
Cbc0010I After 70 nodes, 41 on tree, 1e+50 best solution, best possible 27 (9833.59 seconds)
Cbc0010I After 71 nodes, 42 on tree, 1e+50 best solution, best possible 27 (9842.28 seconds)
Cbc0010I After 72 nodes, 43 on tree, 1e+50 best solution, best possible 27 (9880.52 seconds)
Cbc0010I After 73 nodes, 43 on tree, 1e+50 best solution, best possible 27 (9939.49 seconds)
Cbc0010I After 74 nodes, 43 on tree, 1e+50 best solution, best possible 27 (9960.91 seconds)
Cbc0010I After 75 nodes, 44 on tree, 1e+50 best solution, best possible 27 (10011.64 seconds)
Cbc0010I After 76 nodes, 44 on tree, 1e+50 best solution, best possible 27 (10084.22 seconds)
Cbc0010I After 77 nodes, 45 on tree, 1e+50 best solution, best possible 27 (10103.15 seconds)
Cbc0010I After 78 nodes, 46 on tree, 1e+50 best solution, best possible 27 (10170.97 seconds)
Cbc0010I After 79 nodes, 46 on tree, 1e+50 best solution, best possible 27 (10229.75 seconds)
Cbc0010I After 80 nodes, 46 on tree, 1e+50 best solution, best possible 27 (10244.93 seconds)
Cbc0010I After 81 nodes, 47 on tree, 1e+50 best solution, best possible 27 (10312.18 seconds)
Cbc0010I After 82 nodes, 47 on tree, 1e+50 best solution, best possible 27 (10364.98 seconds)
Cbc0010I After 83 nodes, 47 on tree, 1e+50 best solution, best possible 27 (10390.99 seconds)
Cbc0010I After 84 nodes, 48 on tree, 1e+50 best solution, best possible 27 (10433.70 seconds)
Cbc0010I After 85 nodes, 48 on tree, 1e+50 best solution, best possible 27 (10456.63 seconds)
Cbc0010I After 86 nodes, 49 on tree, 1e+50 best solution, best possible 27 (10476.08 seconds)
Cbc0010I After 87 nodes, 50 on tree, 1e+50 best solution, best possible 27 (10515.77 seconds)
Cbc0010I After 88 nodes, 50 on tree, 1e+50 best solution, best possible 27 (10577.45 seconds)
Cbc0010I After 89 nodes, 50 on tree, 1e+50 best solution, best possible 27 (10593.01 seconds)
Cbc0010I After 90 nodes, 51 on tree, 1e+50 best solution, best possible 27 (10644.95 seconds)
Cbc0010I After 91 nodes, 51 on tree, 1e+50 best solution, best possible 27 (10706.21 seconds)
Cbc0010I After 92 nodes, 52 on tree, 1e+50 best solution, best possible 27 (10717.48 seconds)
Cbc0010I After 93 nodes, 53 on tree, 1e+50 best solution, best possible 27 (10763.43 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 27), took 398928 iterations and 94 nodes (10815.81 seconds)
Cbc0032I Strong branching done 766 times (9636 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 21, 0 variables fixed on reduced cost
Cuts at root node changed objective from 27 to 27
Probing was tried 61 times and created 79 cuts of which 0 were active after adding rounds of cuts (16.9519 seconds)
Gomory was tried 61 times and created 83 cuts of which 0 were active after adding rounds of cuts (170.317 seconds)
liftKnapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (84.2434 seconds)
Clique was tried 61 times and created 2027 cuts of which 0 were active after adding rounds of cuts (70.1323 seconds)
OddWheel was tried 61 times and created 394 cuts of which 0 were active after adding rounds of cuts (500.509 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (1.58169 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.095383 seconds)
TwoMirCuts was tried 10 times and created 129 cuts of which 0 were active after adding rounds of cuts (76.8614 seconds)
ZeroHalf was tried 10 times and created 233 cuts of which 0 were active after adding rounds of cuts (80.9566 seconds)

Result - Stopped on time limit
No feasible solution found
Lower bound:                    27
Enumerated nodes:               94
Total iterations:               398928
Time (CPU seconds):             14998.6
Time (Wallclock seconds):       10815.8
Total time (CPU seconds):       14999.4   (Wallclock seconds):       10816.5
