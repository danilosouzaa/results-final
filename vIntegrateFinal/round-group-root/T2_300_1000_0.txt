Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/T2_300_1000_0.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/T2_300_1000_0.txt -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 311 COLUMNS
At line 1686 RHS
At line 1837 BOUNDS
At line 2138 ENDATA
Problem no_name has 300 rows, 300 columns and 2300 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 721 - 0.036203 seconds
Cgl0004I processed model has 300 rows, 300 columns (300 integer (300 of which binary)) and 2300 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 0.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 77 integers unsatisfied sum - 25.6667
Cbc0038I Pass   1: suminf.    5.00000 (10) obj. 935 iterations 209
Cbc0038I Pass   2: suminf.    5.00000 (10) obj. 935 iterations 28
Cbc0038I Solution found of 1125
Cbc0038I Rounding solution of 898 is better than previous of 1125
Cbc0038I Before mini branch and bound, 217 integers at bound fixed and 0 continuous
Cbc0038I Full problem 300 rows 300 columns, reduced to 146 rows 83 columns
Cbc0038I Mini branch and bound improved solution from 898 to 742 (0.42 seconds)
Cbc0038I Round again with cutoff of 739
Cbc0038I Reduced cost fixing fixed 102 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.16668 (1) obj. 739 iterations 154
Cbc0038I Solution found of 738
Cbc0038I Before mini branch and bound, 222 integers at bound fixed and 0 continuous
Cbc0038I Full problem 300 rows 300 columns, reduced to 144 rows 78 columns
Cbc0038I Mini branch and bound improved solution from 738 to 737 (0.75 seconds)
Cbc0038I Round again with cutoff of 733
Cbc0038I Reduced cost fixing fixed 134 variables on major pass 3
Cbc0038I Pass   4: suminf.   10.38232 (57) obj. 733 iterations 45
Cbc0038I Pass   5: suminf.    8.14279 (40) obj. 733 iterations 50
Cbc0038I Pass   6: suminf.    7.98764 (56) obj. 733 iterations 9
Cbc0038I Pass   7: suminf.   14.45442 (37) obj. 733 iterations 38
Cbc0038I Pass   8: suminf.   10.20949 (66) obj. 733 iterations 26
Cbc0038I Pass   9: suminf.    9.69007 (68) obj. 733 iterations 6
Cbc0038I Pass  10: suminf.   13.18179 (60) obj. 733 iterations 7
Cbc0038I Pass  11: suminf.    9.75881 (62) obj. 733 iterations 14
Cbc0038I Pass  12: suminf.    8.24984 (52) obj. 733 iterations 24
Cbc0038I Pass  13: suminf.    6.06162 (78) obj. 733 iterations 18
Cbc0038I Pass  14: suminf.    7.89576 (48) obj. 733 iterations 25
Cbc0038I Pass  15: suminf.    7.45704 (65) obj. 733 iterations 10
Cbc0038I Pass  16: suminf.    6.96754 (77) obj. 733 iterations 15
Cbc0038I Pass  17: suminf.    6.76460 (64) obj. 733 iterations 6
Cbc0038I Pass  18: suminf.   10.39339 (56) obj. 733 iterations 35
Cbc0038I Pass  19: suminf.    8.99992 (49) obj. 733 iterations 27
Cbc0038I Pass  20: suminf.   10.61105 (34) obj. 733 iterations 21
Cbc0038I Pass  21: suminf.   10.43326 (34) obj. 733 iterations 6
Cbc0038I Pass  22: suminf.    8.59250 (29) obj. 733 iterations 20
Cbc0038I Pass  23: suminf.    8.49991 (35) obj. 733 iterations 22
Cbc0038I Pass  24: suminf.    8.74988 (31) obj. 733 iterations 33
Cbc0038I Pass  25: suminf.    8.74988 (31) obj. 733 iterations 11
Cbc0038I Pass  26: suminf.   10.18740 (24) obj. 733 iterations 34
Cbc0038I Pass  27: suminf.    8.80760 (32) obj. 733 iterations 19
Cbc0038I Pass  28: suminf.   11.09997 (24) obj. 733 iterations 28
Cbc0038I Pass  29: suminf.   10.33324 (24) obj. 733 iterations 21
Cbc0038I Pass  30: suminf.    9.28563 (32) obj. 733 iterations 15
Cbc0038I Pass  31: suminf.    8.22211 (29) obj. 733 iterations 21
Cbc0038I Pass  32: suminf.    8.22211 (29) obj. 733 iterations 19
Cbc0038I Pass  33: suminf.    7.77765 (28) obj. 733 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 200 integers at bound fixed and 0 continuous
Cbc0038I Full problem 300 rows 300 columns, reduced to 167 rows 100 columns
Cbc0038I Mini branch and bound improved solution from 737 to 736 (1.10 seconds)
Cbc0038I Round again with cutoff of 729.4
Cbc0038I Reduced cost fixing fixed 145 variables on major pass 4
Cbc0038I Pass  33: suminf.   14.08842 (61) obj. 729.4 iterations 25
Cbc0038I Pass  34: suminf.   11.31419 (59) obj. 729.4 iterations 29
Cbc0038I Pass  35: suminf.   10.75708 (55) obj. 729.4 iterations 14
Cbc0038I Pass  36: suminf.   10.75708 (55) obj. 729.4 iterations 3
Cbc0038I Pass  37: suminf.   11.99656 (58) obj. 729.4 iterations 23
Cbc0038I Pass  38: suminf.   15.45997 (71) obj. 729.4 iterations 34
Cbc0038I Pass  39: suminf.   10.75708 (55) obj. 729.4 iterations 33
Cbc0038I Pass  40: suminf.   17.93890 (67) obj. 729.4 iterations 43
Cbc0038I Pass  41: suminf.   14.19998 (59) obj. 729.4 iterations 49
Cbc0038I Pass  42: suminf.   13.48722 (58) obj. 729.4 iterations 11
Cbc0038I Pass  43: suminf.   13.45904 (57) obj. 729.4 iterations 5
Cbc0038I Pass  44: suminf.   13.87384 (49) obj. 729.4 iterations 15
Cbc0038I Pass  45: suminf.   13.66851 (59) obj. 729.4 iterations 5
Cbc0038I Pass  46: suminf.   13.52388 (59) obj. 729.4 iterations 5
Cbc0038I Pass  47: suminf.   13.25704 (29) obj. 729.4 iterations 24
Cbc0038I Pass  48: suminf.   12.20943 (59) obj. 729.4 iterations 26
Cbc0038I Pass  49: suminf.   13.91104 (56) obj. 729.4 iterations 26
Cbc0038I Pass  50: suminf.   13.60411 (63) obj. 729.4 iterations 11
Cbc0038I Pass  51: suminf.   13.59994 (43) obj. 729.4 iterations 5
Cbc0038I Pass  52: suminf.   13.23883 (58) obj. 729.4 iterations 5
Cbc0038I Pass  53: suminf.   12.84466 (58) obj. 729.4 iterations 5
Cbc0038I Pass  54: suminf.   12.75852 (68) obj. 729.4 iterations 2
Cbc0038I Pass  55: suminf.   12.73642 (66) obj. 729.4 iterations 1
Cbc0038I Pass  56: suminf.   13.49104 (65) obj. 729.4 iterations 4
Cbc0038I Pass  57: suminf.   12.80490 (68) obj. 729.4 iterations 5
Cbc0038I Pass  58: suminf.   13.46214 (61) obj. 729.4 iterations 17
Cbc0038I Pass  59: suminf.   12.85874 (56) obj. 729.4 iterations 14
Cbc0038I Pass  60: suminf.   13.66149 (30) obj. 729.4 iterations 44
Cbc0038I Pass  61: suminf.   13.66149 (30) obj. 729.4 iterations 17
Cbc0038I Pass  62: suminf.   13.66149 (30) obj. 729.4 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 199 integers at bound fixed and 0 continuous
Cbc0038I Full problem 300 rows 300 columns, reduced to 179 rows 101 columns - 30 fixed gives 58, 67 - ok now
Cbc0038I Full problem 300 rows 300 columns, reduced to 44 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (1.80 seconds)
Cbc0038I After 1.80 seconds - Feasibility pump exiting with objective of 736 - took 1.96 seconds
Cbc0012I Integer solution of 736 found by feasibility pump after 0 iterations and 0 nodes (1.80 seconds)
Cbc0038I Full problem 300 rows 300 columns, reduced to 144 rows 79 columns
Cbc0031I 9 added rows had average density of 126.22222
Cbc0013I At root node, 9 cuts changed objective from 721 to 725.13411 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 204 row cuts average 124.2 elements, 0 column cuts (0 active)  in 0.321 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 736 best solution, best possible 725.13411 (4.32 seconds)
Cbc0010I After 6 nodes, 1 on tree, 736 best solution, best possible 729.0113 (5.61 seconds)
Cbc0001I Search completed - best objective 736, took 1273 iterations and 12 nodes (6.01 seconds)
Cbc0032I Strong branching done 420 times (13212 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 247 variables fixed on reduced cost
Cuts at root node changed objective from 721 to 725.134
Probing was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009201 seconds)
Gomory was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.057233 seconds)
liftKnapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.220994 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000163 seconds)
OddWheel was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00016 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031247 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001362 seconds)
TwoMirCuts was tried 24 times and created 400 cuts of which 0 were active after adding rounds of cuts (0.617062 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.00484 seconds)

Result - Optimal solution found
Objective value:                736
Enumerated nodes:               12
Total iterations:               1273
Time (CPU seconds):             5.08453
Time (Wallclock seconds):       6.02146
Total time (CPU seconds):       5.10153   (Wallclock seconds):       6.06307
