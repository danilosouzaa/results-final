Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/trdHard5600-6.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/trdHard5600-6.txt -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 5034 COLUMNS
At line 17004 RHS
At line 17207 BOUNDS
At line 21970 ENDATA
Problem no_name has 5023 rows, 4762 columns and 22895 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is -24854.9 - 5.68129 seconds
Cgl0003I 15 fixed, 0 tightened bounds, 227 strengthened rows, 18 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 111 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 93 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 70 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0004I processed model has 4772 rows, 4323 columns (4323 integer (4282 of which binary)) and 22401 elements
Coin3009W Conflict graph built in 0.077 seconds, density: 0.146%
Cgl0015I Clique Strengthening extended 7 cliques, 11 were dominated
After applying Clique Strengthening continuous objective value is -23853.1
Cbc0038I Initial state - 322 integers unsatisfied sum - 130.532
Cbc0038I Pass   1: (15.84 seconds) suminf.   26.76573 (115) obj. -13972.3 iterations 1261
Cbc0038I Pass   2: (17.03 seconds) suminf.   25.31773 (111) obj. -13999.5 iterations 1757
Cbc0038I Pass   3: (17.72 seconds) suminf.   24.34783 (114) obj. -13693.2 iterations 933
Cbc0038I Pass   4: (18.50 seconds) suminf.   23.28525 (109) obj. -13589.9 iterations 1073
Cbc0038I Pass   5: (18.55 seconds) suminf.   17.17647 (115) obj. -11650.4 iterations 75
Cbc0038I Pass   6: (18.74 seconds) suminf.   12.91594 (98) obj. -11232.8 iterations 266
Cbc0038I Pass   7: (18.78 seconds) suminf.   12.91594 (98) obj. -11232.8 iterations 49
Cbc0038I Pass   8: (19.69 seconds) suminf.   30.22917 (155) obj. -12054.5 iterations 1271
Cbc0038I Pass   9: (20.52 seconds) suminf.   19.22222 (104) obj. -11936.2 iterations 1323
Cbc0038I Pass  10: (20.76 seconds) suminf.   19.22222 (104) obj. -11936.2 iterations 351
Cbc0038I Pass  11: (21.42 seconds) suminf.   37.46914 (145) obj. -12800.1 iterations 1063
Cbc0038I Pass  12: (22.36 seconds) suminf.   29.40476 (114) obj. -13182.8 iterations 1433
Cbc0038I Pass  13: (22.43 seconds) suminf.   13.32323 (130) obj. -9290.04 iterations 96
Cbc0038I Pass  14: (22.63 seconds) suminf.    8.95868 (94) obj. -8895.04 iterations 291
Cbc0038I Pass  15: (22.69 seconds) suminf.    3.22727 (100) obj. -7593.45 iterations 94
Cbc0038I Pass  16: (22.82 seconds) suminf.    3.00000 (86) obj. -7590.78 iterations 155
Cbc0038I Pass  17: (23.40 seconds) suminf.    3.00000 (86) obj. -7590.78 iterations 855
Cbc0038I Pass  18: (24.32 seconds) suminf.    3.90566 (140) obj. -7148.88 iterations 1422
Cbc0038I Pass  19: (25.16 seconds) suminf.    3.02439 (87) obj. -7166.6 iterations 1467
Cbc0038I Pass  20: (25.32 seconds) suminf.    3.00000 (86) obj. -6910.97 iterations 204
Cbc0038I Pass  21: (25.41 seconds) suminf.    3.00000 (86) obj. -6910.97 iterations 100
Cbc0038I Pass  22: (25.59 seconds) suminf.    3.00000 (86) obj. -6910.97 iterations 187
Cbc0038I Pass  23: (26.58 seconds) suminf.    9.56098 (116) obj. 2129.17 iterations 1493
Cbc0038I Pass  24: (27.21 seconds) suminf.    6.79070 (90) obj. 2151.8 iterations 1157
Cbc0038I Pass  25: (27.86 seconds) suminf.    6.79070 (90) obj. 2151.8 iterations 940
Cbc0038I Pass  26: (28.74 seconds) suminf.   25.16245 (135) obj. -9716.7 iterations 1441
Cbc0038I Pass  27: (29.61 seconds) suminf.   19.10084 (104) obj. -10376.1 iterations 1391
Cbc0038I Pass  28: (30.10 seconds) suminf.   19.10084 (104) obj. -10376.1 iterations 724
Cbc0038I Pass  29: (30.61 seconds) suminf.   26.95054 (140) obj. -5406.95 iterations 850
Cbc0038I Pass  30: (31.46 seconds) suminf.   21.40000 (107) obj. -5511.16 iterations 1292
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3480 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 1002 rows 732 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to -9666.62 (32.17 seconds)
Cbc0038I Round again with cutoff of -11085.3
Cbc0038I Pass  30: (32.20 seconds) suminf.   26.76573 (115) obj. -13972.3 iterations 0
Cbc0038I Pass  31: (33.51 seconds) suminf.   25.31773 (111) obj. -13999.5 iterations 2173
Cbc0038I Pass  32: (34.14 seconds) suminf.   18.48104 (119) obj. -12303.7 iterations 990
Cbc0038I Pass  33: (35.02 seconds) suminf.   15.17021 (99) obj. -12004.3 iterations 1243
Cbc0038I Pass  34: (35.65 seconds) suminf.   13.55072 (104) obj. -11665 iterations 920
Cbc0038I Pass  35: (36.33 seconds) suminf.   13.04638 (99) obj. -11613.7 iterations 979
Cbc0038I Pass  36: (36.44 seconds) suminf.   13.47508 (102) obj. -11085.3 iterations 143
Cbc0038I Pass  37: (36.52 seconds) suminf.   11.01473 (101) obj. -11085.3 iterations 98
Cbc0038I Pass  38: (36.54 seconds) suminf.   10.94806 (101) obj. -11085.3 iterations 11
Cbc0038I Pass  39: (36.57 seconds) suminf.   10.94806 (101) obj. -11085.3 iterations 6
Cbc0038I Pass  40: (36.60 seconds) suminf.   10.94806 (101) obj. -11085.3 iterations 8
Cbc0038I Pass  41: (37.70 seconds) suminf.   26.49828 (148) obj. -11085.3 iterations 1502
Cbc0038I Pass  42: (38.71 seconds) suminf.   17.20115 (102) obj. -11334.1 iterations 1557
Cbc0038I Pass  43: (38.98 seconds) suminf.   17.43260 (106) obj. -11085.3 iterations 371
Cbc0038I Pass  44: (39.31 seconds) suminf.   15.34483 (106) obj. -11085.3 iterations 431
Cbc0038I Pass  45: (39.71 seconds) suminf.   15.34483 (106) obj. -11085.3 iterations 554
Cbc0038I Pass  46: (40.92 seconds) suminf.   36.93389 (160) obj. -11085.3 iterations 1760
Cbc0038I Pass  47: (41.70 seconds) suminf.   25.77752 (118) obj. -11347.3 iterations 1347
Cbc0038I Pass  48: (42.05 seconds) suminf.   25.39845 (122) obj. -11085.3 iterations 482
Cbc0038I Pass  49: (42.39 seconds) suminf.   23.94526 (122) obj. -11085.3 iterations 443
Cbc0038I Pass  50: (42.46 seconds) suminf.   24.05275 (121) obj. -11085.3 iterations 94
Cbc0038I Pass  51: (42.53 seconds) suminf.   24.05275 (121) obj. -11085.3 iterations 86
Cbc0038I Pass  52: (43.11 seconds) suminf.   24.05275 (121) obj. -11085.3 iterations 829
Cbc0038I Pass  53: (43.42 seconds) suminf.   35.35714 (138) obj. -11783.9 iterations 548
Cbc0038I Pass  54: (44.25 seconds) suminf.   27.36009 (112) obj. -11708 iterations 1244
Cbc0038I Pass  55: (44.97 seconds) suminf.   26.09171 (119) obj. -11085.3 iterations 926
Cbc0038I Pass  56: (45.66 seconds) suminf.   23.54120 (116) obj. -11085.3 iterations 941
Cbc0038I Pass  57: (46.20 seconds) suminf.   23.54120 (116) obj. -11085.3 iterations 747
Cbc0038I Pass  58: (46.55 seconds) suminf.   45.07485 (144) obj. -13505.8 iterations 597
Cbc0038I Pass  59: (47.53 seconds) suminf.   37.90168 (123) obj. -13731.2 iterations 1536
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3603 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 866 rows 619 columns
Cbc0038I Mini branch and bound improved solution from -9666.62 to -9784.59 (48.06 seconds)
Cbc0038I Round again with cutoff of -13638.8
Cbc0038I Pass  59: (48.08 seconds) suminf.   26.76573 (115) obj. -13972.3 iterations 0
Cbc0038I Pass  60: (49.61 seconds) suminf.   25.31773 (111) obj. -13999.5 iterations 2545
Cbc0038I Pass  61: (50.38 seconds) suminf.   24.47903 (117) obj. -13638.8 iterations 1022
Cbc0038I Pass  62: (51.22 seconds) suminf.   23.26187 (115) obj. -13638.8 iterations 1098
Cbc0038I Pass  63: (51.88 seconds) suminf.   23.26187 (115) obj. -13638.8 iterations 894
Cbc0038I Pass  64: (52.92 seconds) suminf.   26.57575 (138) obj. -13638.8 iterations 1408
Cbc0038I Pass  65: (54.00 seconds) suminf.   20.87142 (112) obj. -13638.8 iterations 1550
Cbc0038I Pass  66: (54.21 seconds) suminf.   11.31602 (113) obj. -14424.4 iterations 318
Cbc0038I Pass  67: (54.32 seconds) suminf.    8.76335 (95) obj. -14234.4 iterations 169
Cbc0038I Pass  68: (54.93 seconds) suminf.    8.13932 (101) obj. -13638.8 iterations 872
Cbc0038I Pass  69: (55.81 seconds) suminf.    6.59121 (122) obj. -13638.8 iterations 1249
Cbc0038I Pass  70: (56.45 seconds) suminf.    7.79963 (99) obj. -13638.8 iterations 875
Cbc0038I Pass  71: (56.89 seconds) suminf.    7.04272 (94) obj. -13638.8 iterations 633
Cbc0038I Pass  72: (57.65 seconds) suminf.    6.93667 (94) obj. -13865.1 iterations 1071
Cbc0038I Pass  73: (58.17 seconds) suminf.    6.86691 (93) obj. -13844.2 iterations 765
Cbc0038I Pass  74: (58.25 seconds) suminf.    8.24076 (97) obj. -13638.8 iterations 107
Cbc0038I Pass  75: (58.35 seconds) suminf.    8.24076 (97) obj. -13638.8 iterations 101
Cbc0038I Pass  76: (59.07 seconds) suminf.    8.21837 (97) obj. -13638.8 iterations 840
Cbc0038I Pass  77: (59.96 seconds) suminf.    7.02831 (128) obj. -13638.8 iterations 1118
Cbc0038I Pass  78: (60.45 seconds) suminf.    7.55807 (121) obj. -13638.8 iterations 634
Cbc0038I Pass  79: (61.87 seconds) suminf.   21.53787 (127) obj. -13638.8 iterations 1958
Cbc0038I Pass  80: (62.91 seconds) suminf.   16.17870 (104) obj. -13638.8 iterations 1616
Cbc0038I Pass  81: (63.08 seconds) suminf.   16.17870 (104) obj. -13638.8 iterations 209
Cbc0038I Pass  82: (63.88 seconds) suminf.   13.63870 (100) obj. -13638.8 iterations 1118
Cbc0038I Pass  83: (64.72 seconds) suminf.   13.24638 (99) obj. -13678.3 iterations 1249
Cbc0038I Pass  84: (65.13 seconds) suminf.   13.38801 (100) obj. -13638.8 iterations 590
Cbc0038I Pass  85: (65.60 seconds) suminf.   12.99569 (99) obj. -13678.3 iterations 710
Cbc0038I Pass  86: (66.24 seconds) suminf.   13.13029 (103) obj. -13638.8 iterations 866
Cbc0038I Pass  87: (66.86 seconds) suminf.   33.50050 (151) obj. -13638.8 iterations 944
Cbc0038I Pass  88: (67.90 seconds) suminf.   23.30254 (109) obj. -15592.8 iterations 1693
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3789 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 668 rows 438 columns
Cbc0038I Mini branch and bound improved solution from -9784.59 to -11520.6 (68.06 seconds)
Cbc0038I Round again with cutoff of -16703.1
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  88: (68.09 seconds) suminf.   27.85318 (121) obj. -16703.1 iterations 2
Cbc0038I Pass  89: (69.20 seconds) suminf.   25.31773 (111) obj. -17334.8 iterations 1773
Cbc0038I Pass  90: (69.98 seconds) suminf.   23.26018 (117) obj. -16703.1 iterations 1069
Cbc0038I Pass  91: (71.15 seconds) suminf.   22.43745 (117) obj. -16703.1 iterations 1607
Cbc0038I Pass  92: (71.97 seconds) suminf.   22.43343 (114) obj. -16703.1 iterations 1192
Cbc0038I Pass  93: (72.85 seconds) suminf.   41.50000 (163) obj. -16787.3 iterations 1309
Cbc0038I Pass  94: (73.95 seconds) suminf.   27.50640 (113) obj. -16869.4 iterations 1962
Cbc0038I Pass  95: (74.56 seconds) suminf.   27.50640 (113) obj. -16869.4 iterations 944
Cbc0038I Pass  96: (75.09 seconds) suminf.   37.02379 (138) obj. -17955.7 iterations 935
Cbc0038I Pass  97: (76.02 seconds) suminf.   31.29125 (117) obj. -17755.5 iterations 1489
Cbc0038I Pass  98: (76.08 seconds) suminf.   28.75908 (127) obj. -16703.1 iterations 116
Cbc0038I Pass  99: (76.30 seconds) suminf.   27.04005 (117) obj. -16703.1 iterations 355
Cbc0038I Pass 100: (76.33 seconds) suminf.   27.04005 (117) obj. -16703.1 iterations 5
Cbc0038I Pass 101: (76.91 seconds) suminf.   27.04005 (117) obj. -16703.1 iterations 756
Cbc0038I Pass 102: (77.62 seconds) suminf.   35.99511 (148) obj. -16703.1 iterations 1125
Cbc0038I Pass 103: (78.63 seconds) suminf.   30.14362 (126) obj. -16703.1 iterations 1589
Cbc0038I Pass 104: (78.66 seconds) suminf.   30.14362 (126) obj. -16703.1 iterations 9
Cbc0038I Pass 105: (79.32 seconds) suminf.   30.14621 (123) obj. -16703.1 iterations 943
Cbc0038I Pass 106: (80.05 seconds) suminf.   39.11180 (148) obj. -16703.1 iterations 1176
Cbc0038I Pass 107: (80.94 seconds) suminf.   29.91418 (116) obj. -16703.1 iterations 1447
Cbc0038I Pass 108: (81.64 seconds) suminf.   30.39670 (120) obj. -16703.1 iterations 1114
Cbc0038I Pass 109: (82.52 seconds) suminf.   29.85685 (119) obj. -16703.1 iterations 1103
Cbc0038I Pass 110: (82.91 seconds) suminf.   29.61094 (115) obj. -16756.6 iterations 557
Cbc0038I Pass 111: (83.60 seconds) suminf.   29.85685 (119) obj. -16703.1 iterations 929
Cbc0038I Pass 112: (84.10 seconds) suminf.   35.93401 (139) obj. -16703.1 iterations 756
Cbc0038I Pass 113: (85.03 seconds) suminf.   29.61094 (115) obj. -16864.3 iterations 1426
Cbc0038I Pass 114: (85.69 seconds) suminf.   30.73222 (120) obj. -16703.1 iterations 955
Cbc0038I Pass 115: (86.49 seconds) suminf.   30.73222 (120) obj. -16703.1 iterations 987
Cbc0038I Pass 116: (87.15 seconds) suminf.   30.10570 (119) obj. -16703.1 iterations 859
Cbc0038I Pass 117: (87.85 seconds) suminf.   29.62091 (122) obj. -16703.1 iterations 878
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3715 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 745 rows 496 columns
Cbc0038I Mini branch and bound did not improve solution (87.97 seconds)
Cbc0038I After 87.97 seconds - Feasibility pump exiting with objective of -11520.6 - took 72.25 seconds
Cbc0012I Integer solution of -11520.595 found by feasibility pump after 0 iterations and 0 nodes (87.97 seconds)
Cbc0038I Full problem 4768 rows 4323 columns, reduced to 0 rows 0 columns
Cbc0031I 284 added rows had average density of 5.6830986
Cbc0013I At root node, 284 cuts changed objective from -23853.071 to -14681.478 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 1125 row cuts average 2.8 elements, 1 column cuts (183 active)  in 3.853 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 322 row cuts average 354.1 elements, 0 column cuts (0 active)  in 0.883 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 112 row cuts average 102.2 elements, 0 column cuts (0 active)  in 1.073 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 87 row cuts average 7.9 elements, 0 column cuts (0 active)  in 1.018 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 256.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.621 seconds - new frequency is 1
Cbc0016I Integer solution of -13270.333 found by strong branching after 5912 iterations and 0 nodes (101.29 seconds)
Cbc0010I After 0 nodes, 1 on tree, -13270.333 best solution, best possible -14668.894 (102.12 seconds)
Cbc0010I After 1 nodes, 2 on tree, -13270.333 best solution, best possible -14668.894 (103.42 seconds)
Cbc0010I After 2 nodes, 3 on tree, -13270.333 best solution, best possible -14668.894 (104.67 seconds)
Cbc0010I After 3 nodes, 4 on tree, -13270.333 best solution, best possible -14668.894 (105.61 seconds)
Cbc0010I After 5 nodes, 6 on tree, -13270.333 best solution, best possible -14668.894 (107.56 seconds)
Cbc0010I After 6 nodes, 7 on tree, -13270.333 best solution, best possible -14668.894 (108.35 seconds)
Cbc0010I After 7 nodes, 8 on tree, -13270.333 best solution, best possible -14668.894 (109.09 seconds)
Cbc0010I After 9 nodes, 8 on tree, -13270.333 best solution, best possible -14668.894 (109.96 seconds)
Cbc0010I After 11 nodes, 8 on tree, -13270.333 best solution, best possible -14668.894 (110.84 seconds)
Cbc0010I After 13 nodes, 10 on tree, -13270.333 best solution, best possible -14668.894 (112.42 seconds)
Cbc0010I After 14 nodes, 10 on tree, -13270.333 best solution, best possible -14668.894 (113.21 seconds)
Cbc0004I Integer solution of -13296.595 found after 7985 iterations and 16 nodes (113.61 seconds)
Cbc0010I After 19 nodes, 9 on tree, -13296.595 best solution, best possible -14668.894 (114.65 seconds)
Cbc0010I After 23 nodes, 10 on tree, -13296.595 best solution, best possible -14668.894 (115.63 seconds)
Cbc0010I After 27 nodes, 10 on tree, -13296.595 best solution, best possible -14668.894 (116.46 seconds)
Cbc0010I After 30 nodes, 10 on tree, -13296.595 best solution, best possible -14668.894 (117.46 seconds)
Cbc0010I After 35 nodes, 10 on tree, -13296.595 best solution, best possible -14668.894 (118.33 seconds)
Cbc0004I Integer solution of -13320.333 found after 10334 iterations and 36 nodes (118.42 seconds)
Cbc0010I After 39 nodes, 10 on tree, -13320.333 best solution, best possible -14668.894 (119.24 seconds)
Cbc0010I After 43 nodes, 10 on tree, -13320.333 best solution, best possible -14668.894 (120.04 seconds)
Cbc0010I After 46 nodes, 11 on tree, -13320.333 best solution, best possible -14668.894 (120.80 seconds)
Cbc0010I After 51 nodes, 11 on tree, -13320.333 best solution, best possible -14668.894 (121.60 seconds)
Cbc0010I After 61 nodes, 9 on tree, -13320.333 best solution, best possible -14668.894 (122.52 seconds)
Cbc0010I After 66 nodes, 10 on tree, -13320.333 best solution, best possible -14668.894 (123.23 seconds)
Cbc0010I After 77 nodes, 11 on tree, -13320.333 best solution, best possible -14668.894 (123.94 seconds)
Cbc0010I After 91 nodes, 11 on tree, -13320.333 best solution, best possible -14668.894 (124.72 seconds)
Cbc0010I After 104 nodes, 8 on tree, -13320.333 best solution, best possible -14668.894 (125.45 seconds)
Cbc0010I After 113 nodes, 9 on tree, -13320.333 best solution, best possible -14668.894 (126.21 seconds)
Cbc0010I After 120 nodes, 10 on tree, -13320.333 best solution, best possible -14668.894 (126.93 seconds)
Cbc0010I After 125 nodes, 14 on tree, -13320.333 best solution, best possible -14668.894 (127.70 seconds)
Cbc0010I After 133 nodes, 17 on tree, -13320.333 best solution, best possible -14668.894 (128.43 seconds)
Cbc0010I After 141 nodes, 21 on tree, -13320.333 best solution, best possible -14668.894 (129.19 seconds)
Cbc0010I After 149 nodes, 25 on tree, -13320.333 best solution, best possible -14668.894 (129.89 seconds)
Cbc0010I After 157 nodes, 29 on tree, -13320.333 best solution, best possible -14668.894 (130.61 seconds)
Cbc0010I After 166 nodes, 33 on tree, -13320.333 best solution, best possible -14668.894 (131.36 seconds)
Cbc0010I After 173 nodes, 37 on tree, -13320.333 best solution, best possible -14668.894 (132.07 seconds)
Cbc0010I After 182 nodes, 41 on tree, -13320.333 best solution, best possible -14668.894 (132.81 seconds)
Cbc0010I After 191 nodes, 46 on tree, -13320.333 best solution, best possible -14668.894 (133.58 seconds)
Cbc0010I After 205 nodes, 48 on tree, -13320.333 best solution, best possible -14668.894 (134.34 seconds)
Cbc0010I After 220 nodes, 48 on tree, -13320.333 best solution, best possible -14668.894 (135.06 seconds)
Cbc0010I After 233 nodes, 54 on tree, -13320.333 best solution, best possible -14668.894 (135.80 seconds)
Cbc0010I After 246 nodes, 58 on tree, -13320.333 best solution, best possible -14668.894 (136.56 seconds)
Cbc0010I After 260 nodes, 62 on tree, -13320.333 best solution, best possible -14668.894 (137.32 seconds)
Cbc0010I After 273 nodes, 75 on tree, -13320.333 best solution, best possible -14668.894 (138.03 seconds)
Cbc0010I After 301 nodes, 74 on tree, -13320.333 best solution, best possible -14668.894 (138.79 seconds)
Cbc0010I After 331 nodes, 71 on tree, -13320.333 best solution, best possible -14668.894 (139.52 seconds)
Cbc0010I After 359 nodes, 71 on tree, -13320.333 best solution, best possible -14668.894 (140.25 seconds)
Cbc0010I After 390 nodes, 67 on tree, -13320.333 best solution, best possible -14668.894 (140.98 seconds)
Cbc0010I After 420 nodes, 62 on tree, -13320.333 best solution, best possible -14668.894 (141.70 seconds)
Cbc0010I After 438 nodes, 64 on tree, -13320.333 best solution, best possible -14668.894 (142.41 seconds)
Cbc0010I After 459 nodes, 66 on tree, -13320.333 best solution, best possible -14668.894 (143.13 seconds)
Cbc0010I After 482 nodes, 67 on tree, -13320.333 best solution, best possible -14668.894 (143.83 seconds)
Cbc0010I After 508 nodes, 62 on tree, -13320.333 best solution, best possible -14668.894 (144.56 seconds)
Cbc0010I After 528 nodes, 62 on tree, -13320.333 best solution, best possible -14668.894 (145.31 seconds)
Cbc0010I After 545 nodes, 62 on tree, -13320.333 best solution, best possible -14668.894 (146.02 seconds)
Cbc0010I After 557 nodes, 59 on tree, -13320.333 best solution, best possible -14668.894 (146.73 seconds)
Cbc0010I After 569 nodes, 60 on tree, -13320.333 best solution, best possible -14668.894 (147.53 seconds)
Cbc0010I After 588 nodes, 51 on tree, -13320.333 best solution, best possible -14668.894 (148.27 seconds)
Cbc0010I After 596 nodes, 53 on tree, -13320.333 best solution, best possible -14668.894 (148.97 seconds)
Cbc0010I After 612 nodes, 53 on tree, -13320.333 best solution, best possible -14668.894 (149.70 seconds)
Cbc0010I After 637 nodes, 52 on tree, -13320.333 best solution, best possible -14668.894 (150.48 seconds)
Cbc0010I After 656 nodes, 49 on tree, -13320.333 best solution, best possible -14668.894 (151.21 seconds)
Cbc0010I After 673 nodes, 47 on tree, -13320.333 best solution, best possible -14668.894 (151.95 seconds)
Cbc0010I After 692 nodes, 40 on tree, -13320.333 best solution, best possible -14668.894 (152.70 seconds)
Cbc0010I After 715 nodes, 37 on tree, -13320.333 best solution, best possible -14668.894 (153.46 seconds)
Cbc0010I After 739 nodes, 33 on tree, -13320.333 best solution, best possible -14668.894 (154.16 seconds)
Cbc0010I After 757 nodes, 35 on tree, -13320.333 best solution, best possible -14668.894 (154.88 seconds)
Cbc0010I After 788 nodes, 27 on tree, -13320.333 best solution, best possible -14668.894 (155.70 seconds)
Cbc0010I After 811 nodes, 24 on tree, -13320.333 best solution, best possible -14668.894 (156.43 seconds)
Cbc0010I After 826 nodes, 24 on tree, -13320.333 best solution, best possible -14668.894 (157.19 seconds)
Cbc0010I After 840 nodes, 21 on tree, -13320.333 best solution, best possible -14668.894 (157.90 seconds)
Cbc0010I After 857 nodes, 21 on tree, -13320.333 best solution, best possible -14668.894 (158.62 seconds)
Cbc0010I After 870 nodes, 21 on tree, -13320.333 best solution, best possible -14668.894 (159.34 seconds)
Cbc0010I After 885 nodes, 18 on tree, -13320.333 best solution, best possible -14668.894 (160.11 seconds)
Cbc0010I After 897 nodes, 16 on tree, -13320.333 best solution, best possible -14668.894 (160.83 seconds)
Cbc0010I After 909 nodes, 15 on tree, -13320.333 best solution, best possible -14668.894 (161.57 seconds)
Cbc0010I After 916 nodes, 20 on tree, -13320.333 best solution, best possible -14668.894 (162.33 seconds)
Cbc0010I After 923 nodes, 17 on tree, -13320.333 best solution, best possible -14668.894 (163.16 seconds)
Cbc0010I After 931 nodes, 18 on tree, -13320.333 best solution, best possible -14668.894 (164.33 seconds)
Cbc0010I After 940 nodes, 18 on tree, -13320.333 best solution, best possible -14668.894 (165.08 seconds)
Cbc0010I After 949 nodes, 17 on tree, -13320.333 best solution, best possible -14668.894 (165.88 seconds)
Cbc0010I After 959 nodes, 18 on tree, -13320.333 best solution, best possible -14668.894 (166.70 seconds)
Cbc0010I After 967 nodes, 16 on tree, -13320.333 best solution, best possible -14668.894 (167.61 seconds)
Cbc0010I After 971 nodes, 17 on tree, -13320.333 best solution, best possible -14668.894 (168.31 seconds)
Cbc0010I After 981 nodes, 11 on tree, -13320.333 best solution, best possible -14668.894 (169.01 seconds)
Cbc0010I After 991 nodes, 5 on tree, -13320.333 best solution, best possible -14668.894 (169.91 seconds)
Cbc0010I After 995 nodes, 6 on tree, -13320.333 best solution, best possible -14668.894 (170.92 seconds)
Cbc0010I After 998 nodes, 6 on tree, -13320.333 best solution, best possible -14668.894 (171.85 seconds)
Cbc0010I After 1000 nodes, 7 on tree, -13320.333 best solution, best possible -14668.894 (172.63 seconds)
Cbc0010I After 1003 nodes, 8 on tree, -13320.333 best solution, best possible -14668.894 (173.42 seconds)
Cbc0010I After 1012 nodes, 9 on tree, -13320.333 best solution, best possible -14668.894 (174.18 seconds)
Cbc0010I After 1019 nodes, 10 on tree, -13320.333 best solution, best possible -14668.894 (175.01 seconds)
Cbc0010I After 1034 nodes, 11 on tree, -13320.333 best solution, best possible -14668.894 (175.78 seconds)
Cbc0010I After 1039 nodes, 16 on tree, -13320.333 best solution, best possible -14668.894 (176.56 seconds)
Cbc0010I After 1049 nodes, 16 on tree, -13320.333 best solution, best possible -14668.894 (177.27 seconds)
Cbc0010I After 1069 nodes, 13 on tree, -13320.333 best solution, best possible -14668.894 (178.05 seconds)
Cbc0010I After 1082 nodes, 10 on tree, -13320.333 best solution, best possible -14668.894 (178.88 seconds)
Cbc0010I After 1088 nodes, 14 on tree, -13320.333 best solution, best possible -14668.894 (179.61 seconds)
Cbc0010I After 1097 nodes, 11 on tree, -13320.333 best solution, best possible -14668.894 (180.47 seconds)
Cbc0010I After 1100 nodes, 14 on tree, -13320.333 best solution, best possible -14668.894 (181.40 seconds)
Cbc0010I After 1104 nodes, 18 on tree, -13320.333 best solution, best possible -14668.894 (182.41 seconds)
Cbc0010I After 1111 nodes, 17 on tree, -13320.333 best solution, best possible -14668.894 (183.50 seconds)
Cbc0010I After 1127 nodes, 6 on tree, -13320.333 best solution, best possible -14668.894 (184.66 seconds)
Cbc0010I After 1133 nodes, 7 on tree, -13320.333 best solution, best possible -14668.894 (185.41 seconds)
Cbc0010I After 1134 nodes, 7 on tree, -13320.333 best solution, best possible -14668.894 (186.23 seconds)
Cbc0010I After 1135 nodes, 8 on tree, -13320.333 best solution, best possible -14668.894 (187.35 seconds)
Cbc0010I After 1139 nodes, 10 on tree, -13320.333 best solution, best possible -14668.894 (188.19 seconds)
Cbc0010I After 1145 nodes, 12 on tree, -13320.333 best solution, best possible -14668.894 (188.92 seconds)
Cbc0010I After 1151 nodes, 18 on tree, -13320.333 best solution, best possible -14668.894 (189.63 seconds)
Cbc0010I After 1153 nodes, 20 on tree, -13320.333 best solution, best possible -14668.894 (190.82 seconds)
Cbc0010I After 1161 nodes, 19 on tree, -13320.333 best solution, best possible -14668.894 (191.66 seconds)
Cbc0010I After 1167 nodes, 16 on tree, -13320.333 best solution, best possible -14668.894 (192.48 seconds)
Cbc0010I After 1173 nodes, 22 on tree, -13320.333 best solution, best possible -14668.894 (193.24 seconds)
Cbc0010I After 1180 nodes, 29 on tree, -13320.333 best solution, best possible -14668.894 (193.98 seconds)
Cbc0010I After 1189 nodes, 26 on tree, -13320.333 best solution, best possible -14668.894 (195.05 seconds)
Cbc0010I After 1202 nodes, 23 on tree, -13320.333 best solution, best possible -14668.894 (195.78 seconds)
Cbc0010I After 1215 nodes, 21 on tree, -13320.333 best solution, best possible -14668.894 (196.48 seconds)
Cbc0010I After 1224 nodes, 17 on tree, -13320.333 best solution, best possible -14668.894 (197.21 seconds)
Cbc0010I After 1242 nodes, 2 on tree, -13320.333 best solution, best possible -14668.894 (197.96 seconds)
Cbc0010I After 1244 nodes, 2 on tree, -13320.333 best solution, best possible -14668.894 (199.14 seconds)
Cbc0010I After 1245 nodes, 1 on tree, -13320.333 best solution, best possible -14668.894 (200.15 seconds)
Cbc0001I Search completed - best objective -13320.3333333, took 60004 iterations and 1246 nodes (200.39 seconds)
Cbc0032I Strong branching done 2058 times (57151 iterations), fathomed 44 nodes and fixed 75 variables
Cbc0035I Maximum depth 80, 22427 variables fixed on reduced cost
Cuts at root node changed objective from -23853.1 to -14668.9
Probing was tried 720 times and created 1689 cuts of which 182 were active after adding rounds of cuts (4.53778 seconds)
Gomory was tried 718 times and created 485 cuts of which 0 were active after adding rounds of cuts (7.22879 seconds)
liftKnapsack was tried 718 times and created 892 cuts of which 0 were active after adding rounds of cuts (26.3645 seconds)
Clique was tried 11 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.057766 seconds)
OddWheel was tried 718 times and created 289 cuts of which 0 were active after adding rounds of cuts (13.8864 seconds)
MixedIntegerRounding2 was tried 11 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.088671 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013277 seconds)
TwoMirCuts was tried 718 times and created 176 cuts of which 0 were active after adding rounds of cuts (2.36207 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.115116 seconds)

Result - Optimal solution found
Objective value:                -13320.3333333
Enumerated nodes:               1246
Total iterations:               60004
Time (CPU seconds):             199.905
Time (Wallclock seconds):       201.044
Total time (CPU seconds):       200.044   (Wallclock seconds):       201.124
