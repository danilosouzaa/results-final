Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/neos-957389.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/neos-957389.txt -quit (default strategy 1)
At line 1 NAME          file
At line 2 ROWS
At line 5119 COLUMNS
At line 360500 RHS
At line 361021 BOUNDS
At line 367058 ENDATA
Problem file has 5115 rows, 6036 columns and 355372 elements
Coin0008I file read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 1.5 - 14.1876 seconds
Cgl0003I 49 fixed, 0 tightened bounds, 1450 strengthened rows, 0 substitutions
Cgl0003I 9 fixed, 0 tightened bounds, 983 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2064 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 5009 rows, 5978 columns (5978 integer (5978 of which binary)) and 346505 elements
Coin3009W Conflict graph built in 0.234 seconds, density: 0.498%
Cgl0015I Clique Strengthening extended 1 cliques, 1 were dominated
After applying Clique Strengthening continuous objective value is 1.5
Cbc0045I Cutoff increment increased from 0.0001 to 0.4999
Cbc0045I 6 integer variables out of 5978 objects (5978 integer) have cost of 0.5 - high priority
Cbc0045I branch on satisfied N create fake objective Y random cost Y
Cbc0038I Initial state - 250 integers unsatisfied sum - 49.1371
Cbc0038I Pass   1: (36.62 seconds) suminf.   21.46839 (297) obj. 1.51316 iterations 847
Cbc0038I Pass   2: (36.77 seconds) suminf.   17.16719 (240) obj. 1.51667 iterations 109
Cbc0038I Pass   3: (36.85 seconds) suminf.   16.43386 (223) obj. 1.53333 iterations 35
Cbc0038I Pass   4: (37.04 seconds) suminf.    9.62292 (132) obj. 1.53846 iterations 173
Cbc0038I Pass   5: (37.14 seconds) suminf.    6.62130 (99) obj. 1.55556 iterations 80
Cbc0038I Pass   6: (37.24 seconds) suminf.    9.74615 (93) obj. 1.75 iterations 86
Cbc0038I Pass   7: (37.33 seconds) suminf.    6.62130 (100) obj. 1.55556 iterations 57
Cbc0038I Pass   8: (37.45 seconds) suminf.    9.77949 (89) obj. 1.75 iterations 85
Cbc0038I Pass   9: (37.53 seconds) suminf.    6.62130 (99) obj. 1.55556 iterations 66
Cbc0038I Pass  10: (37.59 seconds) suminf.    6.62130 (99) obj. 1.55556 iterations 3
Cbc0038I Pass  11: (37.71 seconds) suminf.    8.29722 (82) obj. 2 iterations 124
Cbc0038I Pass  12: (37.79 seconds) suminf.    7.04787 (90) obj. 2 iterations 64
Cbc0038I Pass  13: (37.92 seconds) suminf.    7.42222 (48) obj. 2 iterations 149
Cbc0038I Pass  14: (38.00 seconds) suminf.    3.85238 (61) obj. 2 iterations 74
Cbc0038I Pass  15: (38.07 seconds) suminf.    2.96452 (51) obj. 2 iterations 22
Cbc0038I Pass  16: (38.18 seconds) suminf.    4.58333 (26) obj. 2 iterations 126
Cbc0038I Pass  17: (38.25 seconds) suminf.    4.39785 (47) obj. 2 iterations 37
Cbc0038I Pass  18: (38.31 seconds) suminf.    4.25341 (45) obj. 2 iterations 14
Cbc0038I Pass  19: (38.38 seconds) suminf.    3.63118 (48) obj. 2 iterations 41
Cbc0038I Pass  20: (38.46 seconds) suminf.    4.39785 (47) obj. 2 iterations 47
Cbc0038I Pass  21: (38.87 seconds) suminf.   19.01560 (134) obj. 3 iterations 426
Cbc0038I Pass  22: (39.16 seconds) suminf.    6.45556 (57) obj. 3 iterations 317
Cbc0038I Pass  23: (39.23 seconds) suminf.    6.23333 (48) obj. 3 iterations 10
Cbc0038I Pass  24: (39.31 seconds) suminf.    6.83974 (55) obj. 3 iterations 52
Cbc0038I Pass  25: (39.39 seconds) suminf.    6.83974 (55) obj. 3 iterations 60
Cbc0038I Pass  26: (39.47 seconds) suminf.    6.76667 (50) obj. 3 iterations 66
Cbc0038I Pass  27: (39.55 seconds) suminf.    6.73974 (54) obj. 3 iterations 66
Cbc0038I Pass  28: (39.65 seconds) suminf.    9.53333 (36) obj. 3 iterations 112
Cbc0038I Pass  29: (39.79 seconds) suminf.    8.14615 (54) obj. 3 iterations 120
Cbc0038I Pass  30: (39.86 seconds) suminf.    7.48889 (52) obj. 3 iterations 26
Cbc0038I Pass  31: (39.98 seconds) suminf.    7.90000 (38) obj. 3 iterations 147
Cbc0038I Pass  32: (40.12 seconds) suminf.    6.32105 (51) obj. 3 iterations 112
Cbc0038I Pass  33: (40.23 seconds) suminf.    6.93333 (39) obj. 3 iterations 94
Cbc0038I Pass  34: (40.36 seconds) suminf.    6.13333 (24) obj. 3 iterations 130
Cbc0038I Pass  35: (40.46 seconds) suminf.    5.90000 (26) obj. 3 iterations 81
Cbc0038I Pass  36: (40.59 seconds) suminf.    5.56667 (25) obj. 3 iterations 103
Cbc0038I Pass  37: (40.70 seconds) suminf.    6.33333 (25) obj. 3 iterations 62
Cbc0038I Pass  38: (40.80 seconds) suminf.    6.33333 (25) obj. 3 iterations 53
Cbc0038I Pass  39: (40.90 seconds) suminf.    6.00000 (26) obj. 3 iterations 86
Cbc0038I Pass  40: (41.02 seconds) suminf.    6.00000 (26) obj. 3 iterations 90
Cbc0038I Pass  41: (41.14 seconds) suminf.    5.90000 (25) obj. 3 iterations 64
Cbc0038I Pass  42: (41.28 seconds) suminf.    5.90000 (25) obj. 3 iterations 77
Cbc0038I Pass  43: (41.39 seconds) suminf.    6.13333 (25) obj. 3 iterations 63
Cbc0038I Pass  44: (41.51 seconds) suminf.    6.13333 (24) obj. 3 iterations 77
Cbc0038I Pass  45: (41.63 seconds) suminf.    6.00000 (26) obj. 3 iterations 75
Cbc0038I Pass  46: (41.77 seconds) suminf.    6.00000 (26) obj. 3 iterations 92
Cbc0038I Pass  47: (41.90 seconds) suminf.    5.90000 (26) obj. 3 iterations 91
Cbc0038I Pass  48: (42.03 seconds) suminf.    5.56667 (25) obj. 3 iterations 86
Cbc0038I Pass  49: (42.14 seconds) suminf.    6.00000 (26) obj. 3 iterations 70
Cbc0038I Pass  50: (42.62 seconds) suminf.   32.11213 (150) obj. 3 iterations 384
Cbc0038I Pass  51: (43.03 seconds) suminf.    6.70000 (23) obj. 3 iterations 480
Cbc0038I Pass  52: (43.10 seconds) suminf.    5.36667 (24) obj. 3 iterations 23
Cbc0038I Pass  53: (43.16 seconds) suminf.    5.36667 (24) obj. 3 iterations 4
Cbc0038I Pass  54: (43.38 seconds) suminf.    5.80000 (22) obj. 3 iterations 107
Cbc0038I Pass  55: (43.58 seconds) suminf.    5.80000 (23) obj. 3 iterations 89
Cbc0038I Pass  56: (43.80 seconds) suminf.    5.46667 (24) obj. 3 iterations 95
Cbc0038I Pass  57: (43.99 seconds) suminf.    5.46667 (24) obj. 3 iterations 78
Cbc0038I Pass  58: (44.19 seconds) suminf.    5.80000 (24) obj. 3 iterations 84
Cbc0038I Pass  59: (44.93 seconds) suminf.   20.65066 (100) obj. 3 iterations 435
Cbc0038I Pass  60: (45.25 seconds) suminf.    6.36667 (28) obj. 3 iterations 410
Cbc0038I Pass  61: (45.31 seconds) suminf.    5.71667 (23) obj. 3 iterations 12
Cbc0038I Pass  62: (45.39 seconds) suminf.    4.96667 (18) obj. 3 iterations 101
Cbc0038I Pass  63: (45.45 seconds) suminf.    4.96667 (18) obj. 3 iterations 9
Cbc0038I Pass  64: (45.56 seconds) suminf.    5.66667 (19) obj. 3 iterations 96
Cbc0038I Pass  65: (45.69 seconds) suminf.    5.66667 (21) obj. 3 iterations 95
Cbc0038I Pass  66: (45.78 seconds) suminf.    5.16667 (19) obj. 3 iterations 78
Cbc0038I Pass  67: (45.89 seconds) suminf.    5.16667 (20) obj. 3 iterations 96
Cbc0038I Pass  68: (45.98 seconds) suminf.    5.66667 (19) obj. 3 iterations 68
Cbc0038I Pass  69: (46.44 seconds) suminf.   30.28741 (107) obj. 3 iterations 430
Cbc0038I Pass  70: (46.76 seconds) suminf.    6.33333 (28) obj. 3 iterations 363
Cbc0038I Pass  71: (46.85 seconds) suminf.    5.50000 (23) obj. 3 iterations 67
Cbc0038I Pass  72: (46.92 seconds) suminf.    5.50000 (23) obj. 3 iterations 6
Cbc0038I Pass  73: (47.12 seconds) suminf.    6.00000 (23) obj. 3 iterations 197
Cbc0038I Pass  74: (47.24 seconds) suminf.    5.30000 (24) obj. 3 iterations 83
Cbc0038I Pass  75: (47.31 seconds) suminf.    5.00000 (23) obj. 3 iterations 11
Cbc0038I Pass  76: (47.45 seconds) suminf.    5.00000 (23) obj. 3 iterations 105
Cbc0038I Pass  77: (47.59 seconds) suminf.    5.00000 (23) obj. 3 iterations 89
Cbc0038I Pass  78: (47.71 seconds) suminf.    5.00000 (23) obj. 3 iterations 48
Cbc0038I Pass  79: (48.30 seconds) suminf.   15.62593 (71) obj. 3 iterations 440
Cbc0038I Pass  80: (48.78 seconds) suminf.    5.20000 (20) obj. 3 iterations 480
Cbc0038I Pass  81: (48.89 seconds) suminf.    3.73333 (16) obj. 3 iterations 55
Cbc0038I Pass  82: (48.91 seconds) suminf.    3.73333 (16) obj. 3 iterations 0
Cbc0038I Pass  83: (49.10 seconds) suminf.    4.03333 (17) obj. 3 iterations 106
Cbc0038I Pass  84: (49.19 seconds) suminf.    4.03333 (17) obj. 3 iterations 30
Cbc0038I Pass  85: (49.38 seconds) suminf.    4.03333 (17) obj. 3 iterations 124
Cbc0038I Pass  86: (49.57 seconds) suminf.    4.03333 (17) obj. 3 iterations 125
Cbc0038I Pass  87: (49.76 seconds) suminf.    4.03333 (17) obj. 3 iterations 134
Cbc0038I Pass  88: (50.31 seconds) suminf.   18.11083 (76) obj. 3 iterations 405
Cbc0038I Pass  89: (50.87 seconds) suminf.    4.66667 (18) obj. 3 iterations 472
Cbc0038I Pass  90: (51.03 seconds) suminf.    4.66667 (18) obj. 3 iterations 106
Cbc0038I Pass  91: (51.14 seconds) suminf.    4.33333 (18) obj. 3 iterations 65
Cbc0038I Pass  92: (51.30 seconds) suminf.    4.33333 (18) obj. 3 iterations 94
Cbc0038I Pass  93: (51.40 seconds) suminf.    4.33333 (18) obj. 3 iterations 80
Cbc0038I Pass  94: (51.52 seconds) suminf.    4.33333 (18) obj. 3 iterations 83
Cbc0038I Pass  95: (52.18 seconds) suminf.   31.30921 (170) obj. 2.5 iterations 488
Cbc0038I Pass  96: (52.63 seconds) suminf.    6.00000 (25) obj. 2.5 iterations 421
Cbc0038I Pass  97: (52.72 seconds) suminf.    5.20000 (23) obj. 2.5 iterations 50
Cbc0038I Pass  98: (52.85 seconds) suminf.    5.60000 (24) obj. 2.5 iterations 109
Cbc0038I Pass  99: (52.98 seconds) suminf.    4.66667 (21) obj. 2.5 iterations 102
Cbc0038I Pass 100: (53.86 seconds) suminf.   46.86780 (178) obj. 3 iterations 527
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4740 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5009 rows 5978 columns, reduced to 1293 rows 1211 columns
Cbc0038I Mini branch and bound did not improve solution (58.77 seconds)
Cbc0038I Full problem 5010 rows 5978 columns, reduced to 5009 rows 5978 columns - too large
Cbc0038I After 61.85 seconds - Feasibility pump exiting - took 26.61 seconds
Cbc0031I 39 added rows had average density of 132.58974
Cbc0013I At root node, 39 cuts changed objective from 1.5 to 1.5 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 31 row cuts average 26.9 elements, 6 column cuts (6 active)  in 7.609 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 180 row cuts average 512.6 elements, 0 column cuts (0 active)  in 6.442 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 384 row cuts average 213.5 elements, 0 column cuts (0 active)  in 18.200 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 4 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 24 row cuts average 449.2 elements, 0 column cuts (0 active)  in 2.774 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 208 row cuts average 213.7 elements, 0 column cuts (0 active)  in 3.820 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 79 row cuts average 91.4 elements, 0 column cuts (0 active)  in 1.541 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1.5 (112.63 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 1.5 (116.40 seconds)
Cbc0010I After 3 nodes, 2 on tree, 1e+50 best solution, best possible 1.5 (123.55 seconds)
Cbc0010I After 4 nodes, 3 on tree, 1e+50 best solution, best possible 1.5 (126.97 seconds)
Cbc0010I After 5 nodes, 4 on tree, 1e+50 best solution, best possible 1.5 (130.76 seconds)
Cbc0010I After 6 nodes, 5 on tree, 1e+50 best solution, best possible 1.5 (133.98 seconds)
Cbc0010I After 7 nodes, 6 on tree, 1e+50 best solution, best possible 1.5 (135.21 seconds)
Cbc0010I After 10 nodes, 6 on tree, 1e+50 best solution, best possible 1.5 (136.14 seconds)
Cbc0010I After 12 nodes, 5 on tree, 1e+50 best solution, best possible 1.5 (138.03 seconds)
Cbc0010I After 15 nodes, 8 on tree, 1e+50 best solution, best possible 1.5 (138.75 seconds)
Cbc0010I After 17 nodes, 10 on tree, 1e+50 best solution, best possible 1.5 (140.25 seconds)
Cbc0010I After 18 nodes, 10 on tree, 1e+50 best solution, best possible 1.5 (141.50 seconds)
Cbc0010I After 21 nodes, 10 on tree, 1e+50 best solution, best possible 1.5 (142.33 seconds)
Cbc0010I After 22 nodes, 11 on tree, 1e+50 best solution, best possible 1.5 (143.48 seconds)
Cbc0010I After 23 nodes, 11 on tree, 1e+50 best solution, best possible 1.5 (144.60 seconds)
Cbc0010I After 25 nodes, 12 on tree, 1e+50 best solution, best possible 1.5 (146.30 seconds)
Cbc0010I After 29 nodes, 13 on tree, 1e+50 best solution, best possible 1.5 (147.05 seconds)
Cbc0010I After 33 nodes, 15 on tree, 1e+50 best solution, best possible 1.5 (148.39 seconds)
Cbc0010I After 34 nodes, 15 on tree, 1e+50 best solution, best possible 1.5 (149.46 seconds)
Cbc0010I After 40 nodes, 16 on tree, 1e+50 best solution, best possible 1.5 (150.16 seconds)
Cbc0010I After 45 nodes, 19 on tree, 1e+50 best solution, best possible 1.5 (151.78 seconds)
Cbc0010I After 51 nodes, 21 on tree, 1e+50 best solution, best possible 1.5 (152.61 seconds)
Cbc0010I After 53 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (153.75 seconds)
Cbc0010I After 55 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (154.75 seconds)
Cbc0010I After 56 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (155.69 seconds)
Cbc0010I After 61 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (156.48 seconds)
Cbc0010I After 67 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (157.29 seconds)
Cbc0010I After 68 nodes, 23 on tree, 1e+50 best solution, best possible 1.5 (158.18 seconds)
Cbc0010I After 74 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (158.97 seconds)
Cbc0010I After 80 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (160.40 seconds)
Cbc0010I After 81 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (161.31 seconds)
Cbc0010I After 89 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (162.18 seconds)
Cbc0010I After 91 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (162.99 seconds)
Cbc0010I After 97 nodes, 23 on tree, 1e+50 best solution, best possible 1.5 (164.57 seconds)
Cbc0010I After 98 nodes, 23 on tree, 1e+50 best solution, best possible 1.5 (165.58 seconds)
Cbc0010I After 103 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (166.89 seconds)
Cbc0010I After 110 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (167.78 seconds)
Cbc0010I After 113 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (168.96 seconds)
Cbc0010I After 122 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (170.57 seconds)
Cbc0010I After 127 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (171.88 seconds)
Cbc0010I After 135 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (172.68 seconds)
Cbc0010I After 136 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (173.67 seconds)
Cbc0010I After 144 nodes, 32 on tree, 1e+50 best solution, best possible 1.5 (175.12 seconds)
Cbc0010I After 152 nodes, 32 on tree, 1e+50 best solution, best possible 1.5 (176.06 seconds)
Cbc0010I After 155 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (177.09 seconds)
Cbc0010I After 156 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (177.95 seconds)
Cbc0010I After 163 nodes, 32 on tree, 1e+50 best solution, best possible 1.5 (178.70 seconds)
Cbc0010I After 164 nodes, 33 on tree, 1e+50 best solution, best possible 1.5 (179.72 seconds)
Cbc0010I After 172 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (180.51 seconds)
Cbc0010I After 179 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (181.35 seconds)
Cbc0010I After 183 nodes, 32 on tree, 1e+50 best solution, best possible 1.5 (182.69 seconds)
Cbc0010I After 189 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (183.42 seconds)
Cbc0010I After 195 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (184.18 seconds)
Cbc0010I After 200 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (184.92 seconds)
Cbc0010I After 207 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (185.67 seconds)
Cbc0010I After 209 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (187.12 seconds)
Cbc0010I After 216 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (188.73 seconds)
Cbc0010I After 222 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (189.44 seconds)
Cbc0010I After 223 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (190.45 seconds)
Cbc0010I After 230 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (191.18 seconds)
Cbc0010I After 237 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (192.91 seconds)
Cbc0010I After 242 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (194.72 seconds)
Cbc0010I After 246 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (195.96 seconds)
Cbc0010I After 253 nodes, 33 on tree, 1e+50 best solution, best possible 1.5 (197.66 seconds)
Cbc0010I After 254 nodes, 33 on tree, 1e+50 best solution, best possible 1.5 (198.65 seconds)
Cbc0010I After 257 nodes, 35 on tree, 1e+50 best solution, best possible 1.5 (199.84 seconds)
Cbc0010I After 258 nodes, 35 on tree, 1e+50 best solution, best possible 1.5 (200.83 seconds)
Cbc0010I After 260 nodes, 36 on tree, 1e+50 best solution, best possible 1.5 (201.93 seconds)
Cbc0010I After 263 nodes, 34 on tree, 1e+50 best solution, best possible 1.5 (203.24 seconds)
Cbc0010I After 271 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (203.96 seconds)
Cbc0010I After 278 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (204.73 seconds)
Cbc0010I After 286 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (205.50 seconds)
Cbc0010I After 288 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (206.90 seconds)
Cbc0010I After 294 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (207.61 seconds)
Cbc0010I After 297 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (209.30 seconds)
Cbc0010I After 302 nodes, 33 on tree, 1e+50 best solution, best possible 1.5 (210.17 seconds)
Cbc0010I After 305 nodes, 32 on tree, 1e+50 best solution, best possible 1.5 (211.42 seconds)
Cbc0010I After 313 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (212.19 seconds)
Cbc0010I After 316 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (213.45 seconds)
Cbc0010I After 323 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (214.24 seconds)
Cbc0010I After 328 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (214.96 seconds)
Cbc0010I After 333 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (216.74 seconds)
Cbc0010I After 340 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (217.47 seconds)
Cbc0010I After 347 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (218.29 seconds)
Cbc0010I After 354 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (219.06 seconds)
Cbc0010I After 356 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (220.20 seconds)
Cbc0010I After 363 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (220.93 seconds)
Cbc0010I After 372 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (221.70 seconds)
Cbc0010I After 378 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (222.46 seconds)
Cbc0010I After 382 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (223.17 seconds)
Cbc0010I After 387 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (224.74 seconds)
Cbc0010I After 390 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (226.21 seconds)
Cbc0010I After 395 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (228.08 seconds)
Cbc0010I After 402 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (229.26 seconds)
Cbc0010I After 407 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (230.88 seconds)
Cbc0010I After 410 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (232.10 seconds)
Cbc0010I After 415 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (232.82 seconds)
Cbc0010I After 418 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (234.22 seconds)
Cbc0010I After 424 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (234.99 seconds)
Cbc0010I After 428 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (236.34 seconds)
Cbc0010I After 435 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (237.11 seconds)
Cbc0010I After 440 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (237.87 seconds)
Cbc0010I After 444 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (239.06 seconds)
Cbc0010I After 450 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (240.61 seconds)
Cbc0010I After 457 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (241.37 seconds)
Cbc0010I After 462 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (242.90 seconds)
Cbc0010I After 468 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (243.79 seconds)
Cbc0010I After 471 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (244.50 seconds)
Cbc0010I After 472 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (245.48 seconds)
Cbc0010I After 478 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (246.34 seconds)
Cbc0010I After 483 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (247.90 seconds)
Cbc0010I After 489 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (248.66 seconds)
Cbc0010I After 492 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (249.83 seconds)
Cbc0010I After 500 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (250.76 seconds)
Cbc0010I After 506 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (251.50 seconds)
Cbc0010I After 510 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (252.20 seconds)
Cbc0010I After 511 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (253.22 seconds)
Cbc0010I After 516 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (254.09 seconds)
Cbc0010I After 520 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (255.41 seconds)
Cbc0010I After 527 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (256.21 seconds)
Cbc0010I After 530 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (257.29 seconds)
Cbc0010I After 538 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (258.83 seconds)
Cbc0010I After 545 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (259.60 seconds)
Cbc0010I After 550 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (261.10 seconds)
Cbc0010I After 556 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (262.14 seconds)
Cbc0010I After 559 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (263.36 seconds)
Cbc0010I After 566 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (264.07 seconds)
Cbc0010I After 567 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (265.22 seconds)
Cbc0010I After 575 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (266.15 seconds)
Cbc0010I After 578 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (267.38 seconds)
Cbc0010I After 584 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (269.23 seconds)
Cbc0010I After 590 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (269.93 seconds)
Cbc0010I After 596 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (270.67 seconds)
Cbc0010I After 600 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (271.72 seconds)
Cbc0010I After 602 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (272.87 seconds)
Cbc0010I After 610 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (273.68 seconds)
Cbc0010I After 611 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (275.00 seconds)
Cbc0010I After 616 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (275.71 seconds)
Cbc0010I After 618 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (276.80 seconds)
Cbc0010I After 624 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (277.62 seconds)
Cbc0010I After 629 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (279.11 seconds)
Cbc0010I After 634 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (279.84 seconds)
Cbc0010I After 638 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (281.00 seconds)
Cbc0010I After 640 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (282.40 seconds)
Cbc0010I After 644 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (283.19 seconds)
Cbc0010I After 646 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (284.43 seconds)
Cbc0010I After 653 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (285.21 seconds)
Cbc0010I After 655 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (286.55 seconds)
Cbc0010I After 662 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (287.45 seconds)
Cbc0010I After 666 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (288.91 seconds)
Cbc0010I After 674 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (289.63 seconds)
Cbc0010I After 675 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (290.63 seconds)
Cbc0010I After 682 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (291.39 seconds)
Cbc0010I After 688 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (292.12 seconds)
Cbc0010I After 693 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (293.64 seconds)
Cbc0010I After 696 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (294.35 seconds)
Cbc0010I After 703 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (295.30 seconds)
Cbc0010I After 706 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (296.52 seconds)
Cbc0010I After 712 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (297.23 seconds)
Cbc0010I After 719 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (298.07 seconds)
Cbc0010I After 723 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (299.56 seconds)
Cbc0010I After 729 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (301.16 seconds)
Cbc0010I After 730 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (302.32 seconds)
Cbc0010I After 735 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (303.02 seconds)
Cbc0010I After 736 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (303.95 seconds)
Cbc0010I After 744 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (304.72 seconds)
Cbc0010I After 749 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (306.20 seconds)
Cbc0010I After 750 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (307.26 seconds)
Cbc0010I After 756 nodes, 32 on tree, 1e+50 best solution, best possible 1.5 (308.79 seconds)
Cbc0010I After 764 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (309.53 seconds)
Cbc0010I After 768 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (310.94 seconds)
Cbc0010I After 775 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (311.66 seconds)
Cbc0010I After 777 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (312.89 seconds)
Cbc0010I After 783 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (314.37 seconds)
Cbc0010I After 789 nodes, 26 on tree, 1e+50 best solution, best possible 1.5 (315.33 seconds)
Cbc0010I After 797 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (316.12 seconds)
Cbc0010I After 801 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (317.62 seconds)
Cbc0010I After 807 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (318.57 seconds)
Cbc0010I After 812 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (320.64 seconds)
Cbc0010I After 817 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (321.43 seconds)
Cbc0010I After 820 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (322.84 seconds)
Cbc0010I After 826 nodes, 20 on tree, 1e+50 best solution, best possible 1.5 (323.67 seconds)
Cbc0010I After 830 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (325.61 seconds)
Cbc0010I After 831 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (326.80 seconds)
Cbc0010I After 835 nodes, 22 on tree, 1e+50 best solution, best possible 1.5 (327.58 seconds)
Cbc0010I After 840 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (328.43 seconds)
Cbc0010I After 842 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (329.60 seconds)
Cbc0010I After 843 nodes, 24 on tree, 1e+50 best solution, best possible 1.5 (330.36 seconds)
Cbc0010I After 847 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (331.93 seconds)
Cbc0010I After 854 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (332.64 seconds)
Cbc0010I After 855 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (333.83 seconds)
Cbc0010I After 862 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (334.53 seconds)
Cbc0010I After 866 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (336.16 seconds)
Cbc0010I After 872 nodes, 25 on tree, 1e+50 best solution, best possible 1.5 (336.91 seconds)
Cbc0010I After 878 nodes, 27 on tree, 1e+50 best solution, best possible 1.5 (337.65 seconds)
Cbc0010I After 879 nodes, 28 on tree, 1e+50 best solution, best possible 1.5 (338.94 seconds)
Cbc0010I After 886 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (339.67 seconds)
Cbc0010I After 887 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (341.00 seconds)
Cbc0010I After 894 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (341.79 seconds)
Cbc0010I After 897 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (342.56 seconds)
Cbc0010I After 902 nodes, 29 on tree, 1e+50 best solution, best possible 1.5 (344.30 seconds)
Cbc0010I After 905 nodes, 30 on tree, 1e+50 best solution, best possible 1.5 (346.02 seconds)
Cbc0010I After 911 nodes, 31 on tree, 1e+50 best solution, best possible 1.5 (346.73 seconds)
Cbc0010I After 914 nodes, 34 on tree, 1e+50 best solution, best possible 1.5 (348.08 seconds)
Cbc0010I After 922 nodes, 34 on tree, 1e+50 best solution, best possible 1.5 (348.84 seconds)
Cbc0010I After 923 nodes, 35 on tree, 1e+50 best solution, best possible 1.5 (349.73 seconds)
Cbc0010I After 931 nodes, 37 on tree, 1e+50 best solution, best possible 1.5 (351.27 seconds)
Cbc0010I After 934 nodes, 37 on tree, 1e+50 best solution, best possible 1.5 (352.29 seconds)
Cbc0010I After 938 nodes, 38 on tree, 1e+50 best solution, best possible 1.5 (353.70 seconds)
Cbc0010I After 943 nodes, 39 on tree, 1e+50 best solution, best possible 1.5 (354.44 seconds)
Cbc0010I After 946 nodes, 40 on tree, 1e+50 best solution, best possible 1.5 (355.32 seconds)
Cbc0010I After 953 nodes, 41 on tree, 1e+50 best solution, best possible 1.5 (356.10 seconds)
Cbc0010I After 954 nodes, 42 on tree, 1e+50 best solution, best possible 1.5 (356.80 seconds)
Cbc0010I After 961 nodes, 42 on tree, 1e+50 best solution, best possible 1.5 (358.11 seconds)
Cbc0010I After 969 nodes, 42 on tree, 1e+50 best solution, best possible 1.5 (358.95 seconds)
Cbc0004I Integer solution of 1.5 found after 36399 iterations and 976 nodes (360.12 seconds)
Cbc0001I Search completed - best objective 1.5, took 36399 iterations and 976 nodes (360.13 seconds)
Cbc0032I Strong branching done 2858 times (20431 iterations), fathomed 22 nodes and fixed 107 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.5 to 1.5
Probing was tried 133 times and created 75 cuts of which 0 were active after adding rounds of cuts (9.10348 seconds)
Gomory was tried 133 times and created 181 cuts of which 0 were active after adding rounds of cuts (9.81476 seconds)
liftKnapsack was tried 133 times and created 4124 cuts of which 0 were active after adding rounds of cuts (111.663 seconds)
Clique was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.03474 seconds)
OddWheel was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.205252 seconds)
MixedIntegerRounding2 was tried 10 times and created 24 cuts of which 0 were active after adding rounds of cuts (2.77397 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.099861 seconds)
TwoMirCuts was tried 10 times and created 208 cuts of which 0 were active after adding rounds of cuts (3.82033 seconds)
ZeroHalf was tried 10 times and created 79 cuts of which 0 were active after adding rounds of cuts (1.54112 seconds)

Result - Optimal solution found
Objective value:                1.5
Enumerated nodes:               976
Total iterations:               36399
Time (CPU seconds):             360.485
Time (Wallclock seconds):       360.952
Total time (CPU seconds):       360.848   (Wallclock seconds):       361.27
