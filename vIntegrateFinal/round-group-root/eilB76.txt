Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/eilB76.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/eilB76.txt -quit (default strategy 1)
At line 1 NAME
At line 2 ROWS
At line 79 COLUMNS
At line 4017 RHS
At line 4056 ENDATA
Problem no_name has 75 rows, 1060 columns and 6296 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 1021.19 - 0.100034 seconds
Cgl0004I processed model has 75 rows, 1060 columns (1060 integer (1060 of which binary)) and 6296 elements
Coin3009W Conflict graph built in 0.128 seconds, density: 8.142%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 62 integers unsatisfied sum - 13.0628
Cbc0038I Pass   1: suminf.    7.61892 (51) obj. 1074.38 iterations 149
Cbc0038I Pass   2: suminf.    7.80622 (52) obj. 1075.6 iterations 77
Cbc0038I Pass   3: suminf.   15.95410 (73) obj. 1324.08 iterations 142
Cbc0038I Pass   4: suminf.   10.54370 (54) obj. 1309.4 iterations 159
Cbc0038I Pass   5: suminf.    8.73801 (57) obj. 1308.91 iterations 67
Cbc0038I Pass   6: suminf.    6.80928 (35) obj. 1318.38 iterations 91
Cbc0038I Pass   7: suminf.    4.50000 (17) obj. 1310.15 iterations 71
Cbc0038I Pass   8: suminf.    2.16667 (9) obj. 1362.25 iterations 55
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. 1425.09 iterations 57
Cbc0038I Solution found of 1425.09
Cbc0038I Before mini branch and bound, 825 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 1060 columns, reduced to 74 rows 235 columns
Cbc0038I Mini branch and bound improved solution from 1425.09 to 1376.59 (0.56 seconds)
Cbc0038I Round again with cutoff of 1341.05
Cbc0038I Pass  10: suminf.    7.61892 (51) obj. 1074.38 iterations 0
Cbc0038I Pass  11: suminf.    7.46383 (52) obj. 1072.43 iterations 103
Cbc0038I Pass  12: suminf.    7.30196 (58) obj. 1089.36 iterations 103
Cbc0038I Pass  13: suminf.    8.27624 (57) obj. 1074.61 iterations 131
Cbc0038I Pass  14: suminf.    7.38061 (54) obj. 1079.24 iterations 90
Cbc0038I Pass  15: suminf.    9.05655 (46) obj. 1084.87 iterations 112
Cbc0038I Pass  16: suminf.   17.77185 (73) obj. 1341.05 iterations 192
Cbc0038I Pass  17: suminf.   11.03573 (64) obj. 1254.42 iterations 163
Cbc0038I Pass  18: suminf.    9.66674 (59) obj. 1244.7 iterations 57
Cbc0038I Pass  19: suminf.   10.06445 (54) obj. 1248.75 iterations 83
Cbc0038I Pass  20: suminf.    9.57607 (63) obj. 1250.8 iterations 63
Cbc0038I Pass  21: suminf.    8.16114 (62) obj. 1255.14 iterations 45
Cbc0038I Pass  22: suminf.    6.86447 (42) obj. 1260.13 iterations 91
Cbc0038I Pass  23: suminf.    5.68792 (41) obj. 1253.24 iterations 33
Cbc0038I Pass  24: suminf.    5.30413 (45) obj. 1258.09 iterations 31
Cbc0038I Pass  25: suminf.    5.59621 (57) obj. 1258.61 iterations 59
Cbc0038I Pass  26: suminf.   14.85641 (67) obj. 1341.05 iterations 144
Cbc0038I Pass  27: suminf.    9.20497 (64) obj. 1341.05 iterations 123
Cbc0038I Pass  28: suminf.    8.70284 (66) obj. 1341.05 iterations 51
Cbc0038I Pass  29: suminf.    8.31756 (72) obj. 1341.05 iterations 40
Cbc0038I Pass  30: suminf.    8.86705 (71) obj. 1341.05 iterations 74
Cbc0038I Pass  31: suminf.    7.75760 (67) obj. 1341.05 iterations 64
Cbc0038I Pass  32: suminf.    8.68409 (48) obj. 1297.34 iterations 101
Cbc0038I Pass  33: suminf.    7.81020 (54) obj. 1317.18 iterations 80
Cbc0038I Pass  34: suminf.    7.73153 (49) obj. 1301.35 iterations 93
Cbc0038I Pass  35: suminf.    5.57285 (32) obj. 1329.8 iterations 75
Cbc0038I Pass  36: suminf.    5.57285 (32) obj. 1329.8 iterations 4
Cbc0038I Pass  37: suminf.    6.66209 (34) obj. 1341.05 iterations 184
Cbc0038I Pass  38: suminf.    5.37535 (37) obj. 1287.92 iterations 124
Cbc0038I Pass  39: suminf.    5.49924 (32) obj. 1322.7 iterations 73
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 580 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 1060 columns, reduced to 75 rows 480 columns
Cbc0038I Mini branch and bound improved solution from 1376.59 to 1168.18 (2.68 seconds)
Cbc0038I Round again with cutoff of 1138.78
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  39: suminf.    7.61892 (51) obj. 1074.38 iterations 0
Cbc0038I Pass  40: suminf.    7.72443 (55) obj. 1077.2 iterations 91
Cbc0038I Pass  41: suminf.    7.30196 (58) obj. 1089.36 iterations 89
Cbc0038I Pass  42: suminf.    8.01301 (55) obj. 1076.97 iterations 147
Cbc0038I Pass  43: suminf.   14.74682 (73) obj. 1138.78 iterations 177
Cbc0038I Pass  44: suminf.    6.89090 (52) obj. 1112.29 iterations 158
Cbc0038I Pass  45: suminf.    5.82341 (38) obj. 1115.59 iterations 89
Cbc0038I Pass  46: suminf.    5.71329 (39) obj. 1119.02 iterations 100
Cbc0038I Pass  47: suminf.    5.84804 (38) obj. 1120.96 iterations 86
Cbc0038I Pass  48: suminf.   13.63266 (71) obj. 1138.78 iterations 131
Cbc0038I Pass  49: suminf.    8.14484 (52) obj. 1138.78 iterations 139
Cbc0038I Pass  50: suminf.    7.56134 (58) obj. 1138.78 iterations 66
Cbc0038I Pass  51: suminf.    7.28746 (50) obj. 1138.78 iterations 58
Cbc0038I Pass  52: suminf.    8.20109 (61) obj. 1138.78 iterations 112
Cbc0038I Pass  53: suminf.    7.05200 (57) obj. 1138.78 iterations 72
Cbc0038I Pass  54: suminf.    9.44977 (50) obj. 1130.18 iterations 115
Cbc0038I Pass  55: suminf.    7.74326 (63) obj. 1138.78 iterations 97
Cbc0038I Pass  56: suminf.    8.05983 (65) obj. 1138.78 iterations 66
Cbc0038I Pass  57: suminf.    6.82598 (53) obj. 1133.12 iterations 75
Cbc0038I Pass  58: suminf.    6.32951 (49) obj. 1117.92 iterations 36
Cbc0038I Pass  59: suminf.    6.01878 (52) obj. 1118.57 iterations 38
Cbc0038I Pass  60: suminf.    7.34082 (57) obj. 1129.47 iterations 96
Cbc0038I Pass  61: suminf.    6.22119 (52) obj. 1122.83 iterations 97
Cbc0038I Pass  62: suminf.    6.60123 (64) obj. 1122.52 iterations 69
Cbc0038I Pass  63: suminf.    6.14465 (46) obj. 1120.33 iterations 64
Cbc0038I Pass  64: suminf.    7.05403 (62) obj. 1138.78 iterations 79
Cbc0038I Pass  65: suminf.    6.30844 (48) obj. 1129.44 iterations 112
Cbc0038I Pass  66: suminf.    4.80357 (52) obj. 1138.78 iterations 41
Cbc0038I Pass  67: suminf.    4.00072 (30) obj. 1138.78 iterations 104
Cbc0038I Pass  68: suminf.    4.33984 (32) obj. 1138.78 iterations 54
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 611 integers at bound fixed and 0 continuous
Cbc0038I Full problem 75 rows 1060 columns, reduced to 75 rows 449 columns
Cbc0038I Mini branch and bound did not improve solution (4.30 seconds)
Cbc0038I After 4.30 seconds - Feasibility pump exiting with objective of 1168.18 - took 3.96 seconds
Cbc0012I Integer solution of 1168.1799 found by feasibility pump after 0 iterations and 0 nodes (4.30 seconds)
Cbc0038I Full problem 75 rows 1060 columns, reduced to 45 rows 226 columns
Cbc0038I Full problem 75 rows 1060 columns, reduced to 65 rows 74 columns
Cbc0031I 66 added rows had average density of 80.606061
Cbc0013I At root node, 66 cuts changed objective from 1021.1852 to 1048.1014 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.624 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 868.4 elements, 0 column cuts (0 active)  in 0.334 seconds - new frequency is -100
Cbc0014I Cut generator 2 (liftKnapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 3.839 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 189 row cuts average 59.9 elements, 0 column cuts (0 active)  in 0.257 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 198.3 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1168.1799 best solution, best possible 1048.1014 (13.61 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1168.1799 best solution, best possible 1048.1014 (14.38 seconds)
Cbc0010I After 14 nodes, 12 on tree, 1168.1799 best solution, best possible 1048.1014 (15.15 seconds)
Cbc0010I After 30 nodes, 17 on tree, 1168.1799 best solution, best possible 1048.1014 (15.87 seconds)
Cbc0004I Integer solution of 1165.0914 found after 5633 iterations and 41 nodes (16.00 seconds)
Cbc0004I Integer solution of 1139.4526 found after 5676 iterations and 42 nodes (16.01 seconds)
Cbc0004I Integer solution of 1133.1215 found after 5811 iterations and 47 nodes (16.04 seconds)
Cbc0004I Integer solution of 1094.8021 found after 6398 iterations and 56 nodes (16.21 seconds)
Cbc0004I Integer solution of 1077.2379 found after 7255 iterations and 71 nodes (16.57 seconds)
Cbc0010I After 71 nodes, 18 on tree, 1077.2379 best solution, best possible 1048.1014 (16.57 seconds)
Cbc0004I Integer solution of 1072.8661 found after 7551 iterations and 77 nodes (16.65 seconds)
Cbc0016I Integer solution of 1066.1854 found by strong branching after 7971 iterations and 95 nodes (16.73 seconds)
Cbc0010I After 131 nodes, 11 on tree, 1066.1854 best solution, best possible 1048.1014 (17.37 seconds)
Cbc0010I After 166 nodes, 9 on tree, 1066.1854 best solution, best possible 1048.1014 (18.09 seconds)
Cbc0010I After 194 nodes, 8 on tree, 1066.1854 best solution, best possible 1048.1014 (18.80 seconds)
Cbc0010I After 209 nodes, 2 on tree, 1066.1854 best solution, best possible 1048.1014 (19.66 seconds)
Cbc0001I Search completed - best objective 1066.185428, took 16929 iterations and 212 nodes (19.77 seconds)
Cbc0032I Strong branching done 848 times (12940 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 25, 10526 variables fixed on reduced cost
Cuts at root node changed objective from 1021.19 to 1048.1
Probing was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.62369 seconds)
Gomory was tried 15 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.333939 seconds)
liftKnapsack was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (3.83947 seconds)
Clique was tried 118 times and created 1238 cuts of which 0 were active after adding rounds of cuts (1.70201 seconds)
OddWheel was tried 15 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.107868 seconds)
MixedIntegerRounding2 was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020846 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003224 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005985 seconds)
ZeroHalf was tried 15 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.145528 seconds)

Result - Optimal solution found
Objective value:                1066.185428
Enumerated nodes:               212
Total iterations:               16929
Time (CPU seconds):             18.5434
Time (Wallclock seconds):       19.7865
Total time (CPU seconds):       18.5924   (Wallclock seconds):       19.8209
