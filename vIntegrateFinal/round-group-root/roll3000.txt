Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/roll3000.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/roll3000.txt -quit (default strategy 1)
At line 1 NAME           roll3000
At line 2 ROWS
At line 2299 COLUMNS
At line 17379 RHS
At line 18129 BOUNDS
At line 19296 ENDATA
Problem roll3000 has 2295 rows, 1166 columns and 29386 elements
Coin0008I roll3000 read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 11097.1 - 0.380953 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 374 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 312 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 212 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 181 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 123 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 107 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 1587 rows, 877 columns (738 integer (624 of which binary)) and 27305 elements
Coin3009W Conflict graph built in 0.004 seconds, density: 0.246%
Cgl0015I Clique Strengthening extended 1 cliques, 2 were dominated
After applying Clique Strengthening continuous objective value is 11098.5
Cbc0038I Initial state - 214 integers unsatisfied sum - 53.1954
Cbc0038I Pass   1: suminf.   15.20139 (67) obj. 16237.2 iterations 659
Cbc0038I Pass   2: suminf.    7.85794 (36) obj. 15874.9 iterations 108
Cbc0038I Pass   3: suminf.    6.96720 (33) obj. 16248.1 iterations 144
Cbc0038I Pass   4: suminf.    5.22222 (18) obj. 17686 iterations 85
Cbc0038I Pass   5: suminf.    2.20833 (7) obj. 18272 iterations 66
Cbc0038I Pass   6: suminf.    2.20833 (7) obj. 18272 iterations 18
Cbc0038I Pass   7: suminf.    0.75000 (3) obj. 18257 iterations 14
Cbc0038I Pass   8: suminf.    0.75000 (3) obj. 18257 iterations 8
Cbc0038I Pass   9: suminf.    1.08333 (3) obj. 18257 iterations 7
Cbc0038I Pass  10: suminf.   15.00000 (54) obj. 15494.3 iterations 438
Cbc0038I Pass  11: suminf.   10.44444 (29) obj. 16268.5 iterations 147
Cbc0038I Pass  12: suminf.    9.83333 (27) obj. 16271.2 iterations 31
Cbc0038I Pass  13: suminf.    9.00000 (23) obj. 16265.2 iterations 56
Cbc0038I Pass  14: suminf.    3.50000 (12) obj. 16441.8 iterations 20
Cbc0038I Pass  15: suminf.    3.50000 (12) obj. 16441.8 iterations 1
Cbc0038I Pass  16: suminf.    3.41667 (12) obj. 16446 iterations 36
Cbc0038I Pass  17: suminf.    4.33333 (12) obj. 16451 iterations 6
Cbc0038I Pass  18: suminf.    3.50000 (12) obj. 16441.8 iterations 24
Cbc0038I Pass  19: suminf.   27.56910 (111) obj. 16753 iterations 389
Cbc0038I Pass  20: suminf.   15.22917 (51) obj. 16834 iterations 181
Cbc0038I Pass  21: suminf.   15.22917 (51) obj. 16834 iterations 2
Cbc0038I Pass  22: suminf.   18.69124 (67) obj. 17674 iterations 307
Cbc0038I Pass  23: suminf.   11.33333 (32) obj. 18661 iterations 196
Cbc0038I Pass  24: suminf.    8.85000 (35) obj. 18914.9 iterations 69
Cbc0038I Pass  25: suminf.    5.25000 (16) obj. 18643 iterations 46
Cbc0038I Pass  26: suminf.    6.02083 (27) obj. 18604.9 iterations 32
Cbc0038I Pass  27: suminf.    5.70833 (27) obj. 18901.4 iterations 33
Cbc0038I Pass  28: suminf.    7.31250 (25) obj. 18167.7 iterations 86
Cbc0038I Pass  29: suminf.    4.83333 (18) obj. 18286.5 iterations 47
Cbc0038I Pass  30: suminf.    4.83333 (17) obj. 18286.7 iterations 41
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 353 integers at bound fixed and 69 continuous
Cbc0038I Full problem 1586 rows 877 columns, reduced to 1159 rows 405 columns - too large
Cbc0038I Mini branch and bound did not improve solution (5.76 seconds)
Cbc0038I After 5.76 seconds - Feasibility pump exiting - took 1.31 seconds
Cbc0031I 116 added rows had average density of 85.698276
Cbc0013I At root node, 116 cuts changed objective from 11098.472 to 12512.635 in 39 passes
Cbc0014I Cut generator 0 (Probing) - 419 row cuts average 2.3 elements, 0 column cuts (80 active)  in 2.266 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1207 row cuts average 427.7 elements, 0 column cuts (0 active)  in 6.582 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 40 row cuts average 3.4 elements, 0 column cuts (0 active)  in 5.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 54 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.771 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 189 row cuts average 24.5 elements, 0 column cuts (0 active)  in 1.943 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 9 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.402 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 511 row cuts average 160.4 elements, 0 column cuts (0 active)  in 1.461 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 130 row cuts average 21.9 elements, 0 column cuts (0 active)  in 1.310 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 12512.635 (37.08 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 12512.635 (40.20 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 12512.635 (41.73 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 12512.635 (43.12 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 12512.635 (44.40 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 12512.635 (45.68 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 12512.635 (47.36 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 12512.635 (48.88 seconds)
Cbc0010I After 8 nodes, 9 on tree, 1e+50 best solution, best possible 12512.635 (50.12 seconds)
