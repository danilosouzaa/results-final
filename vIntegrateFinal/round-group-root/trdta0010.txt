Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/trdta0010.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/trdta0010.txt -quit (default strategy 1)
At line 8 NAME
At line 9 ROWS
At line 6378 COLUMNS
At line 26059 RHS
At line 26396 BOUNDS
At line 32156 ENDATA
Problem no_name has 6367 rows, 5759 columns and 29756 elements
Coin0008I no_name read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 465793 - 8.19761 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 6075 strengthened rows, 4 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5265 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4932 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4623 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4334 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4115 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3841 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3625 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3502 strengthened rows, 0 substitutions
Cgl0004I processed model has 4476 rows, 5613 columns (5613 integer (5613 of which binary)) and 64199 elements
Coin3009W Conflict graph built in 0.083 seconds, density: 0.310%
Cgl0015I Clique Strengthening extended 408 cliques, 2630 were dominated
After applying Clique Strengthening continuous objective value is 721096
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 60 integers unsatisfied sum - 30
Cbc0038I Pass   1: suminf.    2.00000 (4) obj. 731496 iterations 615
Cbc0038I Pass   2: suminf.    2.00000 (4) obj. 731496 iterations 255
Cbc0038I Pass   3: suminf.    2.00000 (4) obj. 731496 iterations 265
Cbc0038I Pass   4: suminf.    2.00000 (4) obj. 731496 iterations 125
Cbc0038I Pass   5: suminf.    2.00000 (4) obj. 731496 iterations 212
Cbc0038I Pass   6: suminf.    2.00000 (4) obj. 731496 iterations 83
Cbc0038I Pass   7: suminf.   18.51455 (119) obj. 803173 iterations 653
Cbc0038I Pass   8: suminf.    3.75000 (13) obj. 786798 iterations 581
Cbc0038I Pass   9: suminf.    3.75000 (13) obj. 786798 iterations 61
Cbc0038I Pass  10: suminf.    5.00000 (10) obj. 810512 iterations 340
Cbc0038I Pass  11: suminf.    3.00000 (6) obj. 815827 iterations 286
Cbc0038I Pass  12: suminf.    3.00000 (6) obj. 815827 iterations 2
Cbc0038I Pass  13: suminf.    3.00000 (6) obj. 815827 iterations 135
Cbc0038I Pass  14: suminf.   19.30000 (61) obj. 867937 iterations 576
Cbc0038I Pass  15: suminf.    3.70833 (16) obj. 851448 iterations 679
Cbc0038I Pass  16: suminf.    2.92857 (23) obj. 855094 iterations 149
Cbc0038I Pass  17: suminf.    4.83333 (15) obj. 905798 iterations 266
Cbc0038I Pass  18: suminf.    2.50000 (7) obj. 903365 iterations 126
Cbc0038I Pass  19: suminf.    2.50000 (7) obj. 903365 iterations 2
Cbc0038I Pass  20: suminf.    2.00000 (4) obj. 901865 iterations 166
Cbc0038I Pass  21: suminf.    1.00000 (2) obj. 901865 iterations 96
Cbc0038I Pass  22: suminf.    1.00000 (2) obj. 901865 iterations 7
Cbc0038I Pass  23: suminf.    1.00000 (2) obj. 901865 iterations 9
Cbc0038I Pass  24: suminf.   10.42857 (32) obj. 954337 iterations 516
Cbc0038I Pass  25: suminf.    5.50000 (14) obj. 971565 iterations 396
Cbc0038I Pass  26: suminf.    5.50000 (15) obj. 971565 iterations 99
Cbc0038I Pass  27: suminf.    5.50000 (15) obj. 971565 iterations 89
Cbc0038I Pass  28: suminf.    5.50000 (15) obj. 971565 iterations 30
Cbc0038I Pass  29: suminf.    6.00000 (12) obj. 971465 iterations 262
Cbc0038I Pass  30: suminf.    6.00000 (12) obj. 969865 iterations 238
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2254 rows 5613 columns, reduced to 297 rows 335 columns
Cbc0038I Mini branch and bound improved solution from 1.79769e+308 to 721096 (23.85 seconds)
Cbc0038I After 23.85 seconds - Feasibility pump exiting with objective of 721096 - took 2.68 seconds
Cbc0012I Integer solution of 721096 found by feasibility pump after 0 iterations and 0 nodes (23.86 seconds)
Cbc0001I Search completed - best objective 721096, took 0 iterations and 0 nodes (23.87 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 721096 to 721096
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
liftKnapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
OddWheel was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0 seconds)

Result - Optimal solution found
Objective value:                721096
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             23.9554
Time (Wallclock seconds):       24.0386
Total time (CPU seconds):       24.0956   (Wallclock seconds):       24.1591
