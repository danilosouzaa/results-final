Welcome to the CBC MILP Solver
Version: Devel (unstable)
Build Date: Mar 30 2022
command line - -import /home/danilo/cbc-test-set/long05_j.mps.gz -timeM elapsed -seconds 10800 -knapsack off -solve -solu sol-group-root/long05_j.txt -quit (default strategy 1)
At line 2 NAME          long05_j.lp
At line 3 ROWS
At line 17246 COLUMNS
At line 1062237 RHS
At line 1074922 BOUNDS
At line 1126716 ENDATA
Problem long05_j.lp has 17241 rows, 51793 columns and 1011556 elements
Coin0008I long05_j.lp read with 0 errors
seconds was changed from 1e+08 to 10800
Continuous objective value is 268.167 - 7.30036 seconds
Cgl0002I 49 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2401 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1223 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1111 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 876 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 827 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 827 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 827 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 827 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 827 strengthened rows, 0 substitutions
Cgl0004I processed model has 16706 rows, 51597 columns (51597 integer (51499 of which binary)) and 1018266 elements
Coin3009W Conflict graph built in 17.601 seconds, density: 0.235%
Cgl0015I Clique Strengthening extended 6143 cliques, 6143 were dominated
After applying Clique Strengthening continuous objective value is 273.167
Cbc0045I Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 595 integers unsatisfied sum - 218.833
Cbc0038I Pass   1: (615.29 seconds) suminf.   45.00000 (90) obj. 307 iterations 19906
Cbc0038I Pass   2: (629.12 seconds) suminf.   45.00000 (90) obj. 307 iterations 1643
Cbc0038I Pass   3: (632.10 seconds) suminf.   39.00000 (78) obj. 307.5 iterations 472
Cbc0038I Pass   4: (635.70 seconds) suminf.   39.00000 (78) obj. 307.5 iterations 430
Cbc0038I Pass   5: (639.35 seconds) suminf.   39.00000 (78) obj. 307.5 iterations 426
Cbc0038I Pass   6: (755.00 seconds) suminf.   30.00000 (60) obj. 375.5 iterations 6735
Cbc0038I Pass   7: (834.44 seconds) suminf.   29.00000 (58) obj. 375.5 iterations 5614
Cbc0038I Pass   8: (835.00 seconds) suminf.   29.00000 (58) obj. 375.5 iterations 37
Cbc0038I Pass   9: (837.68 seconds) suminf.   29.00000 (58) obj. 375.5 iterations 462
Cbc0038I Pass  10: (943.85 seconds) suminf.   21.00000 (42) obj. 463 iterations 6504
Cbc0038I Pass  11: (989.13 seconds) suminf.   21.00000 (42) obj. 463 iterations 5212
Cbc0038I Pass  12: (991.65 seconds) suminf.   21.00000 (42) obj. 463 iterations 434
Cbc0038I Pass  13: (1060.79 seconds) suminf.   21.00000 (42) obj. 542 iterations 6509
Cbc0038I Pass  14: (1104.44 seconds) suminf.   21.00000 (42) obj. 542 iterations 5213
Cbc0038I Pass  15: (1107.58 seconds) suminf.   21.00000 (42) obj. 542 iterations 664
Cbc0038I Pass  16: (1179.35 seconds) suminf.   14.00000 (28) obj. 590.5 iterations 6782
Cbc0038I Pass  17: (1222.55 seconds) suminf.   14.00000 (28) obj. 590.5 iterations 5012
Cbc0038I Pass  18: (1223.74 seconds) suminf.   14.00000 (28) obj. 590.5 iterations 322
Cbc0038I Pass  19: (1296.48 seconds) suminf.   15.00000 (30) obj. 662.5 iterations 6706
Cbc0038I Pass  20: (1337.33 seconds) suminf.   15.00000 (30) obj. 662.5 iterations 5057
Cbc0038I Pass  21: (1339.07 seconds) suminf.    8.00000 (16) obj. 663 iterations 398
Cbc0038I Pass  22: (1339.93 seconds) suminf.    8.00000 (16) obj. 663 iterations 154
Cbc0038I Pass  23: (1342.14 seconds) suminf.    8.00000 (16) obj. 663 iterations 410
Cbc0038I Pass  24: (1408.65 seconds) suminf.    6.00000 (12) obj. 728 iterations 6259
Cbc0038I Pass  25: (1450.27 seconds) suminf.    6.00000 (12) obj. 728 iterations 4897
Cbc0038I Pass  26: (1452.04 seconds) suminf.    6.00000 (12) obj. 728 iterations 379
Cbc0038I Pass  27: (1516.68 seconds) suminf.    6.00000 (12) obj. 786 iterations 6151
Cbc0038I Pass  28: (1561.34 seconds) suminf.    6.00000 (12) obj. 786 iterations 5046
Cbc0038I Pass  29: (1562.83 seconds) suminf.    6.00000 (12) obj. 786 iterations 329
Cbc0038I Pass  30: (1633.59 seconds) suminf.    6.00000 (12) obj. 857 iterations 6556
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50234 integers at bound fixed and 0 continuous of which 22 were internal integer and 0 internal continuous
Cbc0038I Full problem 16706 rows 51597 columns, reduced to 131 rows 74 columns
Cbc0038I Mini branch and bound did not improve solution (1634.67 seconds)
Cbc0038I After 1634.68 seconds - Feasibility pump exiting - took 1292.40 seconds
Cbc0031I 58 added rows had average density of 174.24138
Cbc0013I At root node, 58 cuts changed objective from 273.16667 to 284 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 22.9 elements, 0 column cuts (0 active)  in 84.520 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 400.5 elements, 0 column cuts (0 active)  in 24.168 seconds - new frequency is 1
Cbc0014I Cut generator 2 (liftKnapsack) - 2 row cuts average 48.5 elements, 0 column cuts (0 active)  in 448.478 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 5.569 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 118.5 elements, 0 column cuts (0 active)  in 3.323 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.361 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 374 row cuts average 261.2 elements, 0 column cuts (0 active)  in 40.567 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 176 row cuts average 415.3 elements, 0 column cuts (0 active)  in 14.275 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 284 (2330.79 seconds)
Cbc0010I After 1 nodes, 2 on tree, 1e+50 best solution, best possible 284 (2366.96 seconds)
Cbc0010I After 2 nodes, 3 on tree, 1e+50 best solution, best possible 284 (2382.06 seconds)
Cbc0010I After 3 nodes, 4 on tree, 1e+50 best solution, best possible 284 (2391.39 seconds)
Cbc0010I After 4 nodes, 5 on tree, 1e+50 best solution, best possible 284 (2399.58 seconds)
Cbc0010I After 5 nodes, 6 on tree, 1e+50 best solution, best possible 284 (2411.67 seconds)
Cbc0010I After 6 nodes, 7 on tree, 1e+50 best solution, best possible 284 (2419.12 seconds)
Cbc0010I After 7 nodes, 8 on tree, 1e+50 best solution, best possible 284 (2421.82 seconds)
Cbc0010I After 8 nodes, 8 on tree, 1e+50 best solution, best possible 284 (2423.53 seconds)
Cbc0010I After 9 nodes, 9 on tree, 1e+50 best solution, best possible 284 (2426.76 seconds)
Cbc0010I After 10 nodes, 10 on tree, 1e+50 best solution, best possible 284 (2427.71 seconds)
Cbc0010I After 11 nodes, 11 on tree, 1e+50 best solution, best possible 284 (2429.69 seconds)
Cbc0010I After 12 nodes, 12 on tree, 1e+50 best solution, best possible 284 (2433.71 seconds)
Cbc0004I Integer solution of 285 found after 18665 iterations and 13 nodes (2435.95 seconds)
Cbc0010I After 13 nodes, 11 on tree, 285 best solution, best possible 284 (2435.97 seconds)
Cbc0010I After 14 nodes, 12 on tree, 285 best solution, best possible 284 (2436.92 seconds)
Cbc0010I After 15 nodes, 13 on tree, 285 best solution, best possible 284 (2438.73 seconds)
Cbc0010I After 16 nodes, 12 on tree, 285 best solution, best possible 284 (2439.53 seconds)
Cbc0010I After 17 nodes, 12 on tree, 285 best solution, best possible 284 (2440.71 seconds)
Cbc0010I After 18 nodes, 13 on tree, 285 best solution, best possible 284 (2442.49 seconds)
Cbc0010I After 20 nodes, 12 on tree, 285 best solution, best possible 284 (2444.28 seconds)
Cbc0010I After 21 nodes, 11 on tree, 285 best solution, best possible 284 (2445.23 seconds)
Cbc0010I After 22 nodes, 12 on tree, 285 best solution, best possible 284 (2445.93 seconds)
Cbc0010I After 23 nodes, 13 on tree, 285 best solution, best possible 284 (2448.36 seconds)
Cbc0004I Integer solution of 284 found after 21843 iterations and 24 nodes (2448.85 seconds)
Cbc0001I Search completed - best objective 284, took 21843 iterations and 24 nodes (2448.88 seconds)
Cbc0032I Strong branching done 178 times (3714 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 13, 103126 variables fixed on reduced cost
Cuts at root node changed objective from 273.167 to 284
Probing was tried 10 times and created 8 cuts of which 0 were active after adding rounds of cuts (84.52 seconds)
Gomory was tried 24 times and created 202 cuts of which 0 were active after adding rounds of cuts (26.4508 seconds)
liftKnapsack was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (448.478 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.216759 seconds)
OddWheel was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (5.56881 seconds)
MixedIntegerRounding2 was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (3.32315 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.360604 seconds)
TwoMirCuts was tried 24 times and created 374 cuts of which 0 were active after adding rounds of cuts (53.2381 seconds)
ZeroHalf was tried 24 times and created 223 cuts of which 0 were active after adding rounds of cuts (28.5756 seconds)

Result - Optimal solution found
Objective value:                284
Enumerated nodes:               24
Total iterations:               21843
Time (CPU seconds):             2453.27
Time (Wallclock seconds):       2454.7
Total time (CPU seconds):       2455.67   (Wallclock seconds):       2457.02
